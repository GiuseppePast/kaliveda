//
// File generated by rootcint at Thu Feb 25 11:19:10 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__MicroStatweights
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__MicroStatweights.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace MicroStat {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void MicroStat_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("MicroStat", 0 /*version*/, "/home/bonnet/softwares/kaliveda/MicroStat/weights/mcweight.h", 9,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &MicroStat_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void MicroStat_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void MicroStatcLcLStatWeight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MicroStatcLcLStatWeight(void *p);
   static void deleteArray_MicroStatcLcLStatWeight(void *p);
   static void destruct_MicroStatcLcLStatWeight(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MicroStat::StatWeight*)
   {
      ::MicroStat::StatWeight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MicroStat::StatWeight >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MicroStat::StatWeight", ::MicroStat::StatWeight::Class_Version(), "/home/bonnet/softwares/kaliveda/MicroStat/weights/StatWeight.h", 11,
                  typeid(::MicroStat::StatWeight), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MicroStat::StatWeight::Dictionary, isa_proxy, 4,
                  sizeof(::MicroStat::StatWeight) );
      instance.SetDelete(&delete_MicroStatcLcLStatWeight);
      instance.SetDeleteArray(&deleteArray_MicroStatcLcLStatWeight);
      instance.SetDestructor(&destruct_MicroStatcLcLStatWeight);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MicroStat::StatWeight*)
   {
      return GenerateInitInstanceLocal((::MicroStat::StatWeight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MicroStat::StatWeight*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MicroStatcLcLmdweight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MicroStatcLcLmdweight(void *p = 0);
   static void *newArray_MicroStatcLcLmdweight(Long_t size, void *p);
   static void delete_MicroStatcLcLmdweight(void *p);
   static void deleteArray_MicroStatcLcLmdweight(void *p);
   static void destruct_MicroStatcLcLmdweight(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MicroStat::mdweight*)
   {
      ::MicroStat::mdweight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MicroStat::mdweight >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MicroStat::mdweight", ::MicroStat::mdweight::Class_Version(), "/home/bonnet/softwares/kaliveda/MicroStat/weights/mdweight.h", 13,
                  typeid(::MicroStat::mdweight), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MicroStat::mdweight::Dictionary, isa_proxy, 4,
                  sizeof(::MicroStat::mdweight) );
      instance.SetNew(&new_MicroStatcLcLmdweight);
      instance.SetNewArray(&newArray_MicroStatcLcLmdweight);
      instance.SetDelete(&delete_MicroStatcLcLmdweight);
      instance.SetDeleteArray(&deleteArray_MicroStatcLcLmdweight);
      instance.SetDestructor(&destruct_MicroStatcLcLmdweight);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MicroStat::mdweight*)
   {
      return GenerateInitInstanceLocal((::MicroStat::mdweight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MicroStat::mdweight*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MicroStatcLcLmcweight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MicroStatcLcLmcweight(void *p = 0);
   static void *newArray_MicroStatcLcLmcweight(Long_t size, void *p);
   static void delete_MicroStatcLcLmcweight(void *p);
   static void deleteArray_MicroStatcLcLmcweight(void *p);
   static void destruct_MicroStatcLcLmcweight(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MicroStat::mcweight*)
   {
      ::MicroStat::mcweight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MicroStat::mcweight >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MicroStat::mcweight", ::MicroStat::mcweight::Class_Version(), "/home/bonnet/softwares/kaliveda/MicroStat/weights/mcweight.h", 11,
                  typeid(::MicroStat::mcweight), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MicroStat::mcweight::Dictionary, isa_proxy, 4,
                  sizeof(::MicroStat::mcweight) );
      instance.SetNew(&new_MicroStatcLcLmcweight);
      instance.SetNewArray(&newArray_MicroStatcLcLmcweight);
      instance.SetDelete(&delete_MicroStatcLcLmcweight);
      instance.SetDeleteArray(&deleteArray_MicroStatcLcLmcweight);
      instance.SetDestructor(&destruct_MicroStatcLcLmcweight);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MicroStat::mcweight*)
   {
      return GenerateInitInstanceLocal((::MicroStat::mcweight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MicroStat::mcweight*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace MicroStat {
//______________________________________________________________________________
atomic_TClass_ptr StatWeight::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StatWeight::Class_Name()
{
   return "MicroStat::StatWeight";
}

//______________________________________________________________________________
const char *StatWeight::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::StatWeight*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StatWeight::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::StatWeight*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StatWeight::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::StatWeight*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StatWeight::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::StatWeight*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace MicroStat
      namespace MicroStat {
//______________________________________________________________________________
atomic_TClass_ptr mdweight::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *mdweight::Class_Name()
{
   return "MicroStat::mdweight";
}

//______________________________________________________________________________
const char *mdweight::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::mdweight*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int mdweight::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::mdweight*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void mdweight::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::mdweight*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *mdweight::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::mdweight*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace MicroStat
      namespace MicroStat {
//______________________________________________________________________________
atomic_TClass_ptr mcweight::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *mcweight::Class_Name()
{
   return "MicroStat::mcweight";
}

//______________________________________________________________________________
const char *mcweight::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::mcweight*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int mcweight::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::mcweight*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void mcweight::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::mcweight*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *mcweight::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MicroStat::mcweight*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace MicroStat
      namespace MicroStat {
//______________________________________________________________________________
void StatWeight::Streamer(TBuffer &R__b)
{
   // Stream an object of class MicroStat::StatWeight.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MicroStat::StatWeight::Class(),this);
   } else {
      R__b.WriteClassBuffer(MicroStat::StatWeight::Class(),this);
   }
}

} // namespace MicroStat
//______________________________________________________________________________
      namespace MicroStat {
void StatWeight::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MicroStat::StatWeight.
      TClass *R__cl = ::MicroStat::StatWeight::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWeight", &fWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEDisp", &fEDisp);
      TObject::ShowMembers(R__insp);
}

} // namespace MicroStat
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MicroStatcLcLStatWeight(void *p) {
      delete ((::MicroStat::StatWeight*)p);
   }
   static void deleteArray_MicroStatcLcLStatWeight(void *p) {
      delete [] ((::MicroStat::StatWeight*)p);
   }
   static void destruct_MicroStatcLcLStatWeight(void *p) {
      typedef ::MicroStat::StatWeight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MicroStat::StatWeight

      namespace MicroStat {
//______________________________________________________________________________
void mdweight::Streamer(TBuffer &R__b)
{
   // Stream an object of class MicroStat::mdweight.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MicroStat::mdweight::Class(),this);
   } else {
      R__b.WriteClassBuffer(MicroStat::mdweight::Class(),this);
   }
}

} // namespace MicroStat
//______________________________________________________________________________
      namespace MicroStat {
void mdweight::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MicroStat::mdweight.
      TClass *R__cl = ::MicroStat::mdweight::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "log2pi", &log2pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "log10twelve", &log10twelve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDisp", &eDisp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "massTot", &massTot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "massTot0", &massTot0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKEDist", &fKEDist);
      R__insp.InspectMember(fKEDist, "fKEDist.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "A", &A);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "B", &B);
      //This works around a msvc bug and should be harmless on other platforms
      typedef MicroStat::StatWeight baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace MicroStat
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MicroStatcLcLmdweight(void *p) {
      return  p ? new(p) ::MicroStat::mdweight : new ::MicroStat::mdweight;
   }
   static void *newArray_MicroStatcLcLmdweight(Long_t nElements, void *p) {
      return p ? new(p) ::MicroStat::mdweight[nElements] : new ::MicroStat::mdweight[nElements];
   }
   // Wrapper around operator delete
   static void delete_MicroStatcLcLmdweight(void *p) {
      delete ((::MicroStat::mdweight*)p);
   }
   static void deleteArray_MicroStatcLcLmdweight(void *p) {
      delete [] ((::MicroStat::mdweight*)p);
   }
   static void destruct_MicroStatcLcLmdweight(void *p) {
      typedef ::MicroStat::mdweight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MicroStat::mdweight

      namespace MicroStat {
//______________________________________________________________________________
void mcweight::Streamer(TBuffer &R__b)
{
   // Stream an object of class MicroStat::mcweight.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MicroStat::mcweight::Class(),this);
   } else {
      R__b.WriteClassBuffer(MicroStat::mcweight::Class(),this);
   }
}

} // namespace MicroStat
//______________________________________________________________________________
      namespace MicroStat {
void mcweight::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MicroStat::mcweight.
      TClass *R__cl = ::MicroStat::mcweight::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef MicroStat::StatWeight baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace MicroStat
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MicroStatcLcLmcweight(void *p) {
      return  p ? new(p) ::MicroStat::mcweight : new ::MicroStat::mcweight;
   }
   static void *newArray_MicroStatcLcLmcweight(Long_t nElements, void *p) {
      return p ? new(p) ::MicroStat::mcweight[nElements] : new ::MicroStat::mcweight[nElements];
   }
   // Wrapper around operator delete
   static void delete_MicroStatcLcLmcweight(void *p) {
      delete ((::MicroStat::mcweight*)p);
   }
   static void deleteArray_MicroStatcLcLmcweight(void *p) {
      delete [] ((::MicroStat::mcweight*)p);
   }
   static void destruct_MicroStatcLcLmcweight(void *p) {
      typedef ::MicroStat::mcweight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MicroStat::mcweight

/********************************************************
* G__MicroStatweights.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__MicroStatweights();

extern "C" void G__set_cpp_environmentG__MicroStatweights() {
  G__cpp_reset_tagtableG__MicroStatweights();
}
#include <new>
extern "C" int G__cpp_dllrevG__MicroStatweights() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MicroStat */

/* MicroStat::StatWeight */
static int G__G__MicroStatweights_603_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MicroStat::StatWeight*) G__getstructoffset())->SetWeight((KVEvent*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MicroStat::StatWeight*) G__getstructoffset())->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MicroStat::StatWeight*) G__getstructoffset())->GetAvailableEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MicroStat::StatWeight*) G__getstructoffset())->SetIndex((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const MicroStat::StatWeight*) G__getstructoffset())->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MicroStat::StatWeight*) G__getstructoffset())->GenerateEvent((KVEvent*) G__int(libp->para[0]), (KVEvent*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MicroStat::StatWeight*) G__getstructoffset())->initGenerateEvent((KVEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MicroStat::StatWeight*) G__getstructoffset())->resetGenerateEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MicroStat::StatWeight*) G__getstructoffset())->nextparticleGenerateEvent((Int_t) G__int(libp->para[0]), (KVNucleus*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MicroStat::StatWeight::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MicroStat::StatWeight::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MicroStat::StatWeight::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MicroStat::StatWeight::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MicroStat::StatWeight*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MicroStat::StatWeight::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MicroStat::StatWeight::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MicroStat::StatWeight::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_603_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MicroStat::StatWeight::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MicroStat::StatWeight G__TMicroStatcLcLStatWeight;
static int G__G__MicroStatweights_603_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MicroStat::StatWeight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MicroStat::StatWeight*) (soff+(sizeof(MicroStat::StatWeight)*i)))->~G__TMicroStatcLcLStatWeight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MicroStat::StatWeight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MicroStat::StatWeight*) (soff))->~G__TMicroStatcLcLStatWeight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MicroStatweights_603_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MicroStat::StatWeight* dest = (MicroStat::StatWeight*) G__getstructoffset();
   *dest = *(MicroStat::StatWeight*) libp->para[0].ref;
   const MicroStat::StatWeight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MicroStat::mdweight */
static int G__G__MicroStatweights_619_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MicroStat::mdweight* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MicroStat::mdweight[n];
     } else {
       p = new((void*) gvp) MicroStat::mdweight[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MicroStat::mdweight;
     } else {
       p = new((void*) gvp) MicroStat::mdweight;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmdweight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MicroStat::mdweight*) G__getstructoffset())->printKElist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MicroStat::mdweight::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MicroStat::mdweight::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MicroStat::mdweight::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MicroStat::mdweight::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MicroStat::mdweight*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MicroStat::mdweight::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MicroStat::mdweight::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MicroStat::mdweight::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_619_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MicroStat::mdweight::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MicroStat::mdweight G__TMicroStatcLcLmdweight;
static int G__G__MicroStatweights_619_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MicroStat::mdweight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MicroStat::mdweight*) (soff+(sizeof(MicroStat::mdweight)*i)))->~G__TMicroStatcLcLmdweight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MicroStat::mdweight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MicroStat::mdweight*) (soff))->~G__TMicroStatcLcLmdweight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MicroStat::mcweight */
static int G__G__MicroStatweights_620_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MicroStat::mcweight* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MicroStat::mcweight[n];
     } else {
       p = new((void*) gvp) MicroStat::mcweight[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MicroStat::mcweight;
     } else {
       p = new((void*) gvp) MicroStat::mcweight;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_620_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MicroStat::mcweight::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_620_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MicroStat::mcweight::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_620_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MicroStat::mcweight::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_620_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MicroStat::mcweight::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_620_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MicroStat::mcweight*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_620_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MicroStat::mcweight::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_620_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MicroStat::mcweight::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_620_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MicroStat::mcweight::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MicroStatweights_620_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MicroStat::mcweight::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MicroStatweights_620_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MicroStat::mcweight* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MicroStat::mcweight(*(MicroStat::mcweight*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MicroStat::mcweight G__TMicroStatcLcLmcweight;
static int G__G__MicroStatweights_620_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MicroStat::mcweight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MicroStat::mcweight*) (soff+(sizeof(MicroStat::mcweight)*i)))->~G__TMicroStatcLcLmcweight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MicroStat::mcweight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MicroStat::mcweight*) (soff))->~G__TMicroStatcLcLmcweight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MicroStatweights_620_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MicroStat::mcweight* dest = (MicroStat::mcweight*) G__getstructoffset();
   *dest = *(MicroStat::mcweight*) libp->para[0].ref;
   const MicroStat::mcweight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MicroStat */

/* MicroStat::StatWeight */

/* MicroStat::mdweight */

/* MicroStat::mcweight */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__MicroStatweights {
 public:
  G__Sizep2memfuncG__MicroStatweights(): p(&G__Sizep2memfuncG__MicroStatweights::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__MicroStatweights::*p)();
};

size_t G__get_sizep2memfuncG__MicroStatweights()
{
  G__Sizep2memfuncG__MicroStatweights a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__MicroStatweights() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLStatWeight))) {
     MicroStat::StatWeight *G__Lderived;
     G__Lderived=(MicroStat::StatWeight*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLStatWeight),G__get_linked_tagnum(&G__G__MicroStatweightsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmdweight))) {
     MicroStat::mdweight *G__Lderived;
     G__Lderived=(MicroStat::mdweight*)0x1000;
     {
       MicroStat::StatWeight *G__Lpbase=(MicroStat::StatWeight*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmdweight),G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLStatWeight),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmdweight),G__get_linked_tagnum(&G__G__MicroStatweightsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight))) {
     MicroStat::mcweight *G__Lderived;
     G__Lderived=(MicroStat::mcweight*)0x1000;
     {
       MicroStat::StatWeight *G__Lpbase=(MicroStat::StatWeight*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight),G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLStatWeight),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight),G__get_linked_tagnum(&G__G__MicroStatweightsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__MicroStatweights() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::input_iterator_tag,KVNucleus>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEinput_iterator_tagcOKVNucleuscOlongcOKVNucleusmUcOKVNucleusaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<input_iterator_tag,KVNucleus>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEinput_iterator_tagcOKVNucleuscOlongcOKVNucleusmUcOKVNucleusaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<input_iterator_tag,KVNucleus>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEinput_iterator_tagcOKVNucleuscOlongcOKVNucleusmUcOKVNucleusaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<input_iterator_tag,KVNucleus,long>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEinput_iterator_tagcOKVNucleuscOlongcOKVNucleusmUcOKVNucleusaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<input_iterator_tag,KVNucleus,long,KVNucleus*>",117,G__get_linked_tagnum(&G__G__MicroStatweightsLN_iteratorlEinput_iterator_tagcOKVNucleuscOlongcOKVNucleusmUcOKVNucleusaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MicroStat */
static void G__setup_memvarMicroStat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStat));
   {
   }
   G__tag_memvar_reset();
}


   /* MicroStat::StatWeight */
static void G__setup_memvarMicroStatcLcLStatWeight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLStatWeight));
   { MicroStat::StatWeight *p; p=(MicroStat::StatWeight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fWeight=",0,"calculated weight");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fIndex=",0,"index of corresponding partition");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEDisp=",0,"available kinetic energy - set by SetWeight(KVEvent*, Double_t)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MicroStat::mdweight */
static void G__setup_memvarMicroStatcLcLmdweight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmdweight));
   { MicroStat::mdweight *p; p=(MicroStat::mdweight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"log2pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"log10twelve=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eDisp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"massTot=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"massTot0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_KVHashList),-1,-1,4,"fKEDist=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"A=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"B=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MicroStat::mcweight */
static void G__setup_memvarMicroStatcLcLmcweight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight));
   { MicroStat::mcweight *p; p=(MicroStat::mcweight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MicroStatweightsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__MicroStatweights() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMicroStat(void) {
   /* MicroStat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStat));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMicroStatcLcLStatWeight(void) {
   /* MicroStat::StatWeight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLStatWeight));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWeight",948,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAvailableEnergy",1847,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWeight",916,G__G__MicroStatweights_603_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVEvent' - 0 - e d - 'Double_t' 0 - E", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetWeight",904,G__G__MicroStatweights_603_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAvailableEnergy",1803,G__G__MicroStatweights_603_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIndex",804,G__G__MicroStatweights_603_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__G__MicroStatweights_603_0_9, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateEvent",1325,G__G__MicroStatweights_603_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVEvent' - 0 - partition U 'KVEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initGenerateEvent",1761,G__G__MicroStatweights_603_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVEvent' - 0 - partition", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("resetGenerateEvent",1872,G__G__MicroStatweights_603_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("nextparticleGenerateEvent",2624,G__G__MicroStatweights_603_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'KVNucleus' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__G__MicroStatweights_603_0_17, 85, G__get_linked_tagnum(&G__G__MicroStatweightsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MicroStat::StatWeight::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MicroStatweights_603_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MicroStat::StatWeight::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MicroStatweights_603_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MicroStat::StatWeight::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MicroStatweights_603_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MicroStat::StatWeight::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MicroStatweightsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MicroStatweights_603_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MicroStatweights_603_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MicroStat::StatWeight::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MicroStatweights_603_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MicroStat::StatWeight::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MicroStatweights_603_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MicroStat::StatWeight::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MicroStatweights_603_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MicroStat::StatWeight::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StatWeight", 1154, G__G__MicroStatweights_603_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MicroStatweights_603_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLStatWeight), -1, 1, 1, 1, 1, 0, "u 'MicroStat::StatWeight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMicroStatcLcLmdweight(void) {
   /* MicroStat::mdweight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmdweight));
   G__memfunc_setup("edist",537,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 4, 0, 
"D - 'Double_t' 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getKEdist",900,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__MicroStatweightsLN_TF1), -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mdweight",857,G__G__MicroStatweights_619_0_3, 105, G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmdweight), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWeight",916,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVEvent' - 0 - e d - 'Double_t' 0 - E", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initGenerateEvent",1761,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVEvent' - 0 - partition", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("resetGenerateEvent",1872,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("nextparticleGenerateEvent",2624,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'KVNucleus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printKElist",1145,G__G__MicroStatweights_619_0_8, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MicroStatweights_619_0_9, 85, G__get_linked_tagnum(&G__G__MicroStatweightsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MicroStat::mdweight::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MicroStatweights_619_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MicroStat::mdweight::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MicroStatweights_619_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MicroStat::mdweight::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MicroStatweights_619_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MicroStat::mdweight::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MicroStatweightsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MicroStatweights_619_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MicroStatweights_619_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MicroStat::mdweight::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MicroStatweights_619_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MicroStat::mdweight::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MicroStatweights_619_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MicroStat::mdweight::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MicroStatweights_619_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MicroStat::mdweight::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~mdweight", 983, G__G__MicroStatweights_619_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMicroStatcLcLmcweight(void) {
   /* MicroStat::mcweight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight));
   G__memfunc_setup("mcweight",856,G__G__MicroStatweights_620_0_1, 105, G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWeight",916,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVEvent' - 0 - e d - 'Double_t' 0 - E", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initGenerateEvent",1761,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVEvent' - 0 - partition", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("resetGenerateEvent",1872,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("nextparticleGenerateEvent",2624,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'KVNucleus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__MicroStatweights_620_0_6, 85, G__get_linked_tagnum(&G__G__MicroStatweightsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MicroStat::mcweight::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MicroStatweights_620_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MicroStat::mcweight::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MicroStatweights_620_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MicroStat::mcweight::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MicroStatweights_620_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MicroStat::mcweight::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MicroStatweightsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MicroStatweights_620_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MicroStatweights_620_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MicroStat::mcweight::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MicroStatweights_620_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MicroStat::mcweight::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MicroStatweights_620_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MicroStat::mcweight::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MicroStatweights_620_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MicroStat::mcweight::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("mcweight", 856, G__G__MicroStatweights_620_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight), -1, 0, 1, 1, 1, 0, "u 'MicroStat::mcweight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~mcweight", 982, G__G__MicroStatweights_620_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MicroStatweights_620_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight), -1, 1, 1, 1, 1, 0, "u 'MicroStat::mcweight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__MicroStatweights() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__MicroStatweights() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__MicroStatweights() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MicroStatweightsLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_KVHashList = { "KVHashList" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_KVNucleus = { "KVNucleus" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_KVEvent = { "KVEvent" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_iteratorlEinput_iterator_tagcOKVNucleuscOlongcOKVNucleusmUcOKVNucleusaNgR = { "iterator<input_iterator_tag,KVNucleus,long,KVNucleus*,KVNucleus&>" , 115 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_MicroStat = { "MicroStat" , 110 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_MicroStatcLcLStatWeight = { "MicroStat::StatWeight" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_MicroStatcLcLmdweight = { "MicroStat::mdweight" , 99 , -1 };
G__linked_taginfo G__G__MicroStatweightsLN_MicroStatcLcLmcweight = { "MicroStat::mcweight" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__MicroStatweights() {
  G__G__MicroStatweightsLN_TClass.tagnum = -1 ;
  G__G__MicroStatweightsLN_TBuffer.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMemberInspector.tagnum = -1 ;
  G__G__MicroStatweightsLN_TObject.tagnum = -1 ;
  G__G__MicroStatweightsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_KVHashList.tagnum = -1 ;
  G__G__MicroStatweightsLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_KVNucleus.tagnum = -1 ;
  G__G__MicroStatweightsLN_KVEvent.tagnum = -1 ;
  G__G__MicroStatweightsLN_iteratorlEinput_iterator_tagcOKVNucleuscOlongcOKVNucleusmUcOKVNucleusaNgR.tagnum = -1 ;
  G__G__MicroStatweightsLN_MicroStat.tagnum = -1 ;
  G__G__MicroStatweightsLN_MicroStatcLcLStatWeight.tagnum = -1 ;
  G__G__MicroStatweightsLN_TF1.tagnum = -1 ;
  G__G__MicroStatweightsLN_MicroStatcLcLmdweight.tagnum = -1 ;
  G__G__MicroStatweightsLN_MicroStatcLcLmcweight.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__MicroStatweights() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_KVHashList);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_KVNucleus);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_KVEvent);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_iteratorlEinput_iterator_tagcOKVNucleuscOlongcOKVNucleusmUcOKVNucleusaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_MicroStat),0,-1,0,(char*)NULL,G__setup_memvarMicroStat,G__setup_memfuncMicroStat);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_MicroStatcLcLStatWeight),sizeof(MicroStat::StatWeight),-1,292100,"Abstract base class for calculating statistical weights for events",G__setup_memvarMicroStatcLcLStatWeight,G__setup_memfuncMicroStatcLcLStatWeight);
   G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_TF1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_MicroStatcLcLmdweight),sizeof(MicroStat::mdweight),-1,292096,"Calculate molecular dynamics ensemble weights for events",G__setup_memvarMicroStatcLcLmdweight,G__setup_memfuncMicroStatcLcLmdweight);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MicroStatweightsLN_MicroStatcLcLmcweight),sizeof(MicroStat::mcweight),-1,292096,"Calculate microcanonical statistical weights for events",G__setup_memvarMicroStatcLcLmcweight,G__setup_memfuncMicroStatcLcLmcweight);
}
extern "C" void G__cpp_setupG__MicroStatweights(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__MicroStatweights()");
  G__set_cpp_environmentG__MicroStatweights();
  G__cpp_setup_tagtableG__MicroStatweights();

  G__cpp_setup_inheritanceG__MicroStatweights();

  G__cpp_setup_typetableG__MicroStatweights();

  G__cpp_setup_memvarG__MicroStatweights();

  G__cpp_setup_memfuncG__MicroStatweights();
  G__cpp_setup_globalG__MicroStatweights();
  G__cpp_setup_funcG__MicroStatweights();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__MicroStatweights();
  return;
}
class G__cpp_setup_initG__MicroStatweights {
  public:
    G__cpp_setup_initG__MicroStatweights() { G__add_setup_func("G__MicroStatweights",(G__incsetup)(&G__cpp_setupG__MicroStatweights)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__MicroStatweights() { G__remove_setup_func("G__MicroStatweights"); }
};
G__cpp_setup_initG__MicroStatweights G__cpp_setup_initializerG__MicroStatweights;

