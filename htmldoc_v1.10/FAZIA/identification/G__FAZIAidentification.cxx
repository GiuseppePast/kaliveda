//
// File generated by rootcint at Fri Jul 17 15:51:40 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__FAZIAidentification
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__FAZIAidentification.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVFAZIAIDTelescope_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIAIDTelescope(void *p = 0);
   static void *newArray_KVFAZIAIDTelescope(Long_t size, void *p);
   static void delete_KVFAZIAIDTelescope(void *p);
   static void deleteArray_KVFAZIAIDTelescope(void *p);
   static void destruct_KVFAZIAIDTelescope(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIAIDTelescope*)
   {
      ::KVFAZIAIDTelescope *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIAIDTelescope >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIAIDTelescope", ::KVFAZIAIDTelescope::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/identification/KVFAZIAIDTelescope.h", 10,
                  typeid(::KVFAZIAIDTelescope), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIAIDTelescope::Dictionary, isa_proxy, 4,
                  sizeof(::KVFAZIAIDTelescope) );
      instance.SetNew(&new_KVFAZIAIDTelescope);
      instance.SetNewArray(&newArray_KVFAZIAIDTelescope);
      instance.SetDelete(&delete_KVFAZIAIDTelescope);
      instance.SetDeleteArray(&deleteArray_KVFAZIAIDTelescope);
      instance.SetDestructor(&destruct_KVFAZIAIDTelescope);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIAIDTelescope*)
   {
      return GenerateInitInstanceLocal((::KVFAZIAIDTelescope*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIAIDTelescope*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVFAZIAIDSiSi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIAIDSiSi(void *p = 0);
   static void *newArray_KVFAZIAIDSiSi(Long_t size, void *p);
   static void delete_KVFAZIAIDSiSi(void *p);
   static void deleteArray_KVFAZIAIDSiSi(void *p);
   static void destruct_KVFAZIAIDSiSi(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIAIDSiSi*)
   {
      ::KVFAZIAIDSiSi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIAIDSiSi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIAIDSiSi", ::KVFAZIAIDSiSi::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/identification/KVFAZIAIDSiSi.h", 13,
                  typeid(::KVFAZIAIDSiSi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIAIDSiSi::Dictionary, isa_proxy, 4,
                  sizeof(::KVFAZIAIDSiSi) );
      instance.SetNew(&new_KVFAZIAIDSiSi);
      instance.SetNewArray(&newArray_KVFAZIAIDSiSi);
      instance.SetDelete(&delete_KVFAZIAIDSiSi);
      instance.SetDeleteArray(&deleteArray_KVFAZIAIDSiSi);
      instance.SetDestructor(&destruct_KVFAZIAIDSiSi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIAIDSiSi*)
   {
      return GenerateInitInstanceLocal((::KVFAZIAIDSiSi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIAIDSiSi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVFAZIAIDSiPSA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIAIDSiPSA(void *p = 0);
   static void *newArray_KVFAZIAIDSiPSA(Long_t size, void *p);
   static void delete_KVFAZIAIDSiPSA(void *p);
   static void deleteArray_KVFAZIAIDSiPSA(void *p);
   static void destruct_KVFAZIAIDSiPSA(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIAIDSiPSA*)
   {
      ::KVFAZIAIDSiPSA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIAIDSiPSA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIAIDSiPSA", ::KVFAZIAIDSiPSA::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/identification/KVFAZIAIDSiPSA.h", 11,
                  typeid(::KVFAZIAIDSiPSA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIAIDSiPSA::Dictionary, isa_proxy, 4,
                  sizeof(::KVFAZIAIDSiPSA) );
      instance.SetNew(&new_KVFAZIAIDSiPSA);
      instance.SetNewArray(&newArray_KVFAZIAIDSiPSA);
      instance.SetDelete(&delete_KVFAZIAIDSiPSA);
      instance.SetDeleteArray(&deleteArray_KVFAZIAIDSiPSA);
      instance.SetDestructor(&destruct_KVFAZIAIDSiPSA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIAIDSiPSA*)
   {
      return GenerateInitInstanceLocal((::KVFAZIAIDSiPSA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIAIDSiPSA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIAIDTelescope::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIAIDTelescope::Class_Name()
{
   return "KVFAZIAIDTelescope";
}

//______________________________________________________________________________
const char *KVFAZIAIDTelescope::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDTelescope*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIAIDTelescope::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDTelescope*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIAIDTelescope::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDTelescope*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIAIDTelescope::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDTelescope*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIAIDSiSi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIAIDSiSi::Class_Name()
{
   return "KVFAZIAIDSiSi";
}

//______________________________________________________________________________
const char *KVFAZIAIDSiSi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDSiSi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIAIDSiSi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDSiSi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIAIDSiSi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDSiSi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIAIDSiSi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDSiSi*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIAIDSiPSA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIAIDSiPSA::Class_Name()
{
   return "KVFAZIAIDSiPSA";
}

//______________________________________________________________________________
const char *KVFAZIAIDSiPSA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDSiPSA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIAIDSiPSA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDSiPSA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIAIDSiPSA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDSiPSA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIAIDSiPSA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIAIDSiPSA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVFAZIAIDTelescope::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIAIDTelescope.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVFAZIAIDTelescope::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVFAZIAIDTelescope::Class(),this);
   }
}

//______________________________________________________________________________
void KVFAZIAIDTelescope::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIAIDTelescope.
      TClass *R__cl = ::KVFAZIAIDTelescope::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIAIDTelescope(void *p) {
      return  p ? new(p) ::KVFAZIAIDTelescope : new ::KVFAZIAIDTelescope;
   }
   static void *newArray_KVFAZIAIDTelescope(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIAIDTelescope[nElements] : new ::KVFAZIAIDTelescope[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIAIDTelescope(void *p) {
      delete ((::KVFAZIAIDTelescope*)p);
   }
   static void deleteArray_KVFAZIAIDTelescope(void *p) {
      delete [] ((::KVFAZIAIDTelescope*)p);
   }
   static void destruct_KVFAZIAIDTelescope(void *p) {
      typedef ::KVFAZIAIDTelescope current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVFAZIAIDTelescope

//______________________________________________________________________________
void KVFAZIAIDSiPSA::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIAIDSiPSA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVFAZIAIDSiPSA::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVFAZIAIDSiPSA::Class(),this);
   }
}

//______________________________________________________________________________
void KVFAZIAIDSiPSA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIAIDSiPSA.
      TClass *R__cl = ::KVFAZIAIDSiPSA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRearThreshold", &fRearThreshold);
      KVFAZIAIDTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIAIDSiPSA(void *p) {
      return  p ? new(p) ::KVFAZIAIDSiPSA : new ::KVFAZIAIDSiPSA;
   }
   static void *newArray_KVFAZIAIDSiPSA(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIAIDSiPSA[nElements] : new ::KVFAZIAIDSiPSA[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIAIDSiPSA(void *p) {
      delete ((::KVFAZIAIDSiPSA*)p);
   }
   static void deleteArray_KVFAZIAIDSiPSA(void *p) {
      delete [] ((::KVFAZIAIDSiPSA*)p);
   }
   static void destruct_KVFAZIAIDSiPSA(void *p) {
      typedef ::KVFAZIAIDSiPSA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVFAZIAIDSiPSA

//______________________________________________________________________________
void KVFAZIAIDSiSi::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIAIDSiSi.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVFAZIAIDSiSi::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVFAZIAIDSiSi::Class(),this);
   }
}

//______________________________________________________________________________
void KVFAZIAIDSiSi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIAIDSiSi.
      TClass *R__cl = ::KVFAZIAIDSiSi::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGrid", &fGrid);
      KVFAZIAIDTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIAIDSiSi(void *p) {
      return  p ? new(p) ::KVFAZIAIDSiSi : new ::KVFAZIAIDSiSi;
   }
   static void *newArray_KVFAZIAIDSiSi(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIAIDSiSi[nElements] : new ::KVFAZIAIDSiSi[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIAIDSiSi(void *p) {
      delete ((::KVFAZIAIDSiSi*)p);
   }
   static void deleteArray_KVFAZIAIDSiSi(void *p) {
      delete [] ((::KVFAZIAIDSiSi*)p);
   }
   static void destruct_KVFAZIAIDSiSi(void *p) {
      typedef ::KVFAZIAIDSiSi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVFAZIAIDSiSi

/********************************************************
* G__FAZIAidentification.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__FAZIAidentification();

extern "C" void G__set_cpp_environmentG__FAZIAidentification() {
  G__cpp_reset_tagtableG__FAZIAidentification();
}
#include <new>
extern "C" int G__cpp_dllrevG__FAZIAidentification() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVFAZIAIDTelescope */
static int G__G__FAZIAidentification_377_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIAIDTelescope* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIAIDTelescope[n];
     } else {
       p = new((void*) gvp) KVFAZIAIDTelescope[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIAIDTelescope;
     } else {
       p = new((void*) gvp) KVFAZIAIDTelescope;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_377_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIAIDTelescope::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_377_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIAIDTelescope::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_377_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIAIDTelescope::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_377_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIAIDTelescope::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_377_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIAIDTelescope*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_377_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIAIDTelescope::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_377_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIAIDTelescope::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_377_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIAIDTelescope::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_377_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIAIDTelescope::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FAZIAidentification_377_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVFAZIAIDTelescope* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVFAZIAIDTelescope(*(KVFAZIAIDTelescope*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIAIDTelescope G__TKVFAZIAIDTelescope;
static int G__G__FAZIAidentification_377_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIAIDTelescope*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIAIDTelescope*) (soff+(sizeof(KVFAZIAIDTelescope)*i)))->~G__TKVFAZIAIDTelescope();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIAIDTelescope*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIAIDTelescope*) (soff))->~G__TKVFAZIAIDTelescope();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FAZIAidentification_377_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIAIDTelescope* dest = (KVFAZIAIDTelescope*) G__getstructoffset();
   *dest = *(KVFAZIAIDTelescope*) libp->para[0].ref;
   const KVFAZIAIDTelescope& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVFAZIAIDSiSi */
static int G__G__FAZIAidentification_380_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIAIDSiSi* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIAIDSiSi[n];
     } else {
       p = new((void*) gvp) KVFAZIAIDSiSi[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIAIDSiSi;
     } else {
       p = new((void*) gvp) KVFAZIAIDSiSi;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_380_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIAIDSiSi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_380_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIAIDSiSi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_380_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIAIDSiSi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_380_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIAIDSiSi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_380_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIAIDSiSi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_380_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIAIDSiSi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_380_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIAIDSiSi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_380_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIAIDSiSi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_380_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIAIDSiSi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FAZIAidentification_380_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVFAZIAIDSiSi* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVFAZIAIDSiSi(*(KVFAZIAIDSiSi*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIAIDSiSi G__TKVFAZIAIDSiSi;
static int G__G__FAZIAidentification_380_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIAIDSiSi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIAIDSiSi*) (soff+(sizeof(KVFAZIAIDSiSi)*i)))->~G__TKVFAZIAIDSiSi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIAIDSiSi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIAIDSiSi*) (soff))->~G__TKVFAZIAIDSiSi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FAZIAidentification_380_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIAIDSiSi* dest = (KVFAZIAIDSiSi*) G__getstructoffset();
   *dest = *(KVFAZIAIDSiSi*) libp->para[0].ref;
   const KVFAZIAIDSiSi& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVFAZIAIDSiPSA */
static int G__G__FAZIAidentification_381_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIAIDSiPSA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIAIDSiPSA[n];
     } else {
       p = new((void*) gvp) KVFAZIAIDSiPSA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIAIDSiPSA;
     } else {
       p = new((void*) gvp) KVFAZIAIDSiPSA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_381_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIAIDSiPSA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_381_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIAIDSiPSA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_381_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIAIDSiPSA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_381_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIAIDSiPSA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_381_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIAIDSiPSA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_381_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIAIDSiPSA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_381_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIAIDSiPSA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_381_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIAIDSiPSA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAidentification_381_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIAIDSiPSA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FAZIAidentification_381_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVFAZIAIDSiPSA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVFAZIAIDSiPSA(*(KVFAZIAIDSiPSA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIAIDSiPSA G__TKVFAZIAIDSiPSA;
static int G__G__FAZIAidentification_381_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIAIDSiPSA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIAIDSiPSA*) (soff+(sizeof(KVFAZIAIDSiPSA)*i)))->~G__TKVFAZIAIDSiPSA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIAIDSiPSA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIAIDSiPSA*) (soff))->~G__TKVFAZIAIDSiPSA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FAZIAidentification_381_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIAIDSiPSA* dest = (KVFAZIAIDSiPSA*) G__getstructoffset();
   *dest = *(KVFAZIAIDSiPSA*) libp->para[0].ref;
   const KVFAZIAIDSiPSA& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVFAZIAIDTelescope */

/* KVFAZIAIDSiSi */

/* KVFAZIAIDSiPSA */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__FAZIAidentification {
 public:
  G__Sizep2memfuncG__FAZIAidentification(): p(&G__Sizep2memfuncG__FAZIAidentification::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__FAZIAidentification::*p)();
};

size_t G__get_sizep2memfuncG__FAZIAidentification()
{
  G__Sizep2memfuncG__FAZIAidentification a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__FAZIAidentification() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope))) {
     KVFAZIAIDTelescope *G__Lderived;
     G__Lderived=(KVFAZIAIDTelescope*)0x1000;
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi))) {
     KVFAZIAIDSiSi *G__Lderived;
     G__Lderived=(KVFAZIAIDSiSi*)0x1000;
     {
       KVFAZIAIDTelescope *G__Lpbase=(KVFAZIAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA))) {
     KVFAZIAIDSiPSA *G__Lderived;
     G__Lderived=(KVFAZIAIDSiPSA*)0x1000;
     {
       KVFAZIAIDTelescope *G__Lpbase=(KVFAZIAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA),G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__FAZIAidentification() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVFAZIAIDTelescope */
static void G__setup_memvarKVFAZIAIDTelescope(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope));
   { KVFAZIAIDTelescope *p; p=(KVFAZIAIDTelescope*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVFAZIAIDSiSi */
static void G__setup_memvarKVFAZIAIDSiSi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi));
   { KVFAZIAIDSiSi *p; p=(KVFAZIAIDSiSi*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVIDZAGrid),-1,-1,4,"fGrid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVFAZIAIDSiPSA */
static void G__setup_memvarKVFAZIAIDSiPSA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA));
   { KVFAZIAIDSiPSA *p; p=(KVFAZIAIDSiPSA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TGraph),-1,-1,4,"fRearThreshold=",0,"! Z-dependent threshold extracted from published article");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__FAZIAidentification() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVFAZIAIDTelescope(void) {
   /* KVFAZIAIDTelescope */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope));
   G__memfunc_setup("KVFAZIAIDTelescope",1597,G__G__FAZIAidentification_377_0_1, 105, G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FAZIAidentification_377_0_3, 85, G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIAIDTelescope::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAidentification_377_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIAIDTelescope::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAidentification_377_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIAIDTelescope::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAidentification_377_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIAIDTelescope::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAidentification_377_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAidentification_377_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIAIDTelescope::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAidentification_377_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIAIDTelescope::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAidentification_377_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIAIDTelescope::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAidentification_377_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIAIDTelescope::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVFAZIAIDTelescope", 1597, G__G__FAZIAidentification_377_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope), -1, 0, 1, 1, 1, 0, "u 'KVFAZIAIDTelescope' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIAIDTelescope", 1723, G__G__FAZIAidentification_377_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FAZIAidentification_377_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope), -1, 1, 1, 1, 1, 0, "u 'KVFAZIAIDTelescope' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVFAZIAIDSiSi(void) {
   /* KVFAZIAIDSiSi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi));
   G__memfunc_setup("KVFAZIAIDSiSi",1041,G__G__FAZIAidentification_380_0_1, 105, G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FAZIAidentification_380_0_5, 85, G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIAIDSiSi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAidentification_380_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIAIDSiSi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAidentification_380_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIAIDSiSi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAidentification_380_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIAIDSiSi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAidentification_380_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAidentification_380_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIAIDSiSi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAidentification_380_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIAIDSiSi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAidentification_380_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIAIDSiSi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAidentification_380_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIAIDSiSi::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVFAZIAIDSiSi", 1041, G__G__FAZIAidentification_380_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi), -1, 0, 1, 1, 1, 0, "u 'KVFAZIAIDSiSi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIAIDSiSi", 1167, G__G__FAZIAidentification_380_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FAZIAidentification_380_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi), -1, 1, 1, 1, 1, 0, "u 'KVFAZIAIDSiSi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVFAZIAIDSiPSA(void) {
   /* KVFAZIAIDSiPSA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA));
   G__memfunc_setup("KVFAZIAIDSiPSA",1081,G__G__FAZIAidentification_381_0_1, 105, G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTheoreticalIdentificationThreshold",4009,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'KVNucleus' - 0 - - d - 'Double_t' 0 '0.' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FAZIAidentification_381_0_3, 85, G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIAIDSiPSA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAidentification_381_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIAIDSiPSA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAidentification_381_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIAIDSiPSA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAidentification_381_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIAIDSiPSA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAidentification_381_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAidentification_381_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIAIDSiPSA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAidentification_381_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIAIDSiPSA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAidentification_381_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIAIDSiPSA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAidentification_381_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIAIDSiPSA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVFAZIAIDSiPSA", 1081, G__G__FAZIAidentification_381_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA), -1, 0, 1, 1, 1, 0, "u 'KVFAZIAIDSiPSA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIAIDSiPSA", 1207, G__G__FAZIAidentification_381_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FAZIAidentification_381_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA), -1, 1, 1, 1, 1, 0, "u 'KVFAZIAIDSiPSA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__FAZIAidentification() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__FAZIAidentification() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__FAZIAidentification() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__FAZIAidentificationLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_KVNucleus = { "KVNucleus" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_KVIdentificationResult = { "KVIdentificationResult" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_KVIDTelescope = { "KVIDTelescope" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_KVFAZIAIDTelescope = { "KVFAZIAIDTelescope" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_KVIDZAGrid = { "KVIDZAGrid" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_KVFAZIAIDSiSi = { "KVFAZIAIDSiSi" , 99 , -1 };
G__linked_taginfo G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA = { "KVFAZIAIDSiPSA" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__FAZIAidentification() {
  G__G__FAZIAidentificationLN_TClass.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TBuffer.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMemberInspector.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TObject.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TNamed.tagnum = -1 ;
  G__G__FAZIAidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_KVBase.tagnum = -1 ;
  G__G__FAZIAidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_KVNucleus.tagnum = -1 ;
  G__G__FAZIAidentificationLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__FAZIAidentificationLN_TGraph.tagnum = -1 ;
  G__G__FAZIAidentificationLN_KVIdentificationResult.tagnum = -1 ;
  G__G__FAZIAidentificationLN_KVIDTelescope.tagnum = -1 ;
  G__G__FAZIAidentificationLN_KVFAZIAIDTelescope.tagnum = -1 ;
  G__G__FAZIAidentificationLN_KVIDZAGrid.tagnum = -1 ;
  G__G__FAZIAidentificationLN_KVFAZIAIDSiSi.tagnum = -1 ;
  G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__FAZIAidentification() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_KVNucleus);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_TGraph);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_KVIdentificationResult);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_KVIDTelescope);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_KVFAZIAIDTelescope),sizeof(KVFAZIAIDTelescope),-1,324864,"Identification for FAZIA array",G__setup_memvarKVFAZIAIDTelescope,G__setup_memfuncKVFAZIAIDTelescope);
   G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_KVIDZAGrid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_KVFAZIAIDSiSi),sizeof(KVFAZIAIDSiSi),-1,324864,"identification telescope for FAZIA Si-Si idcards",G__setup_memvarKVFAZIAIDSiSi,G__setup_memfuncKVFAZIAIDSiSi);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAidentificationLN_KVFAZIAIDSiPSA),sizeof(KVFAZIAIDSiPSA),-1,324864,"PSA identification in first silicon of FAZIA telescopes",G__setup_memvarKVFAZIAIDSiPSA,G__setup_memfuncKVFAZIAIDSiPSA);
}
extern "C" void G__cpp_setupG__FAZIAidentification(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__FAZIAidentification()");
  G__set_cpp_environmentG__FAZIAidentification();
  G__cpp_setup_tagtableG__FAZIAidentification();

  G__cpp_setup_inheritanceG__FAZIAidentification();

  G__cpp_setup_typetableG__FAZIAidentification();

  G__cpp_setup_memvarG__FAZIAidentification();

  G__cpp_setup_memfuncG__FAZIAidentification();
  G__cpp_setup_globalG__FAZIAidentification();
  G__cpp_setup_funcG__FAZIAidentification();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__FAZIAidentification();
  return;
}
class G__cpp_setup_initG__FAZIAidentification {
  public:
    G__cpp_setup_initG__FAZIAidentification() { G__add_setup_func("G__FAZIAidentification",(G__incsetup)(&G__cpp_setupG__FAZIAidentification)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__FAZIAidentification() { G__remove_setup_func("G__FAZIAidentification"); }
};
G__cpp_setup_initG__FAZIAidentification G__cpp_setup_initializerG__FAZIAidentification;

