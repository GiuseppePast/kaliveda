//
// File generated by rootcint at Fri Jul 17 15:53:19 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__FAZIAgeometry
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__FAZIAgeometry.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVFAZIA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIA(void *p = 0);
   static void *newArray_KVFAZIA(Long_t size, void *p);
   static void delete_KVFAZIA(void *p);
   static void deleteArray_KVFAZIA(void *p);
   static void destruct_KVFAZIA(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIA*)
   {
      ::KVFAZIA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIA", ::KVFAZIA::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVFAZIA.h", 12,
                  typeid(::KVFAZIA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIA::Dictionary, isa_proxy, 4,
                  sizeof(::KVFAZIA) );
      instance.SetNew(&new_KVFAZIA);
      instance.SetNewArray(&newArray_KVFAZIA);
      instance.SetDelete(&delete_KVFAZIA);
      instance.SetDeleteArray(&deleteArray_KVFAZIA);
      instance.SetDestructor(&destruct_KVFAZIA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIA*)
   {
      return GenerateInitInstanceLocal((::KVFAZIA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVISOFAZIA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVISOFAZIA(void *p = 0);
   static void *newArray_KVISOFAZIA(Long_t size, void *p);
   static void delete_KVISOFAZIA(void *p);
   static void deleteArray_KVISOFAZIA(void *p);
   static void destruct_KVISOFAZIA(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVISOFAZIA*)
   {
      ::KVISOFAZIA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVISOFAZIA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVISOFAZIA", ::KVISOFAZIA::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVISOFAZIA.h", 10,
                  typeid(::KVISOFAZIA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVISOFAZIA::Dictionary, isa_proxy, 4,
                  sizeof(::KVISOFAZIA) );
      instance.SetNew(&new_KVISOFAZIA);
      instance.SetNewArray(&newArray_KVISOFAZIA);
      instance.SetDelete(&delete_KVISOFAZIA);
      instance.SetDeleteArray(&deleteArray_KVISOFAZIA);
      instance.SetDestructor(&destruct_KVISOFAZIA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVISOFAZIA*)
   {
      return GenerateInitInstanceLocal((::KVISOFAZIA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVISOFAZIA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVPSAResult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVPSAResult(void *p = 0);
   static void *newArray_KVPSAResult(Long_t size, void *p);
   static void delete_KVPSAResult(void *p);
   static void deleteArray_KVPSAResult(void *p);
   static void destruct_KVPSAResult(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVPSAResult*)
   {
      ::KVPSAResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVPSAResult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVPSAResult", ::KVPSAResult::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVPSAResult.h", 10,
                  typeid(::KVPSAResult), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVPSAResult::Dictionary, isa_proxy, 4,
                  sizeof(::KVPSAResult) );
      instance.SetNew(&new_KVPSAResult);
      instance.SetNewArray(&newArray_KVPSAResult);
      instance.SetDelete(&delete_KVPSAResult);
      instance.SetDeleteArray(&deleteArray_KVPSAResult);
      instance.SetDestructor(&destruct_KVPSAResult);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVPSAResult*)
   {
      return GenerateInitInstanceLocal((::KVPSAResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVPSAResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSignal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSignal(void *p = 0);
   static void *newArray_KVSignal(Long_t size, void *p);
   static void delete_KVSignal(void *p);
   static void deleteArray_KVSignal(void *p);
   static void destruct_KVSignal(void *p);
   static Long64_t merge_KVSignal(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSignal*)
   {
      ::KVSignal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSignal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSignal", ::KVSignal::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVSignal.h", 14,
                  typeid(::KVSignal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSignal::Dictionary, isa_proxy, 4,
                  sizeof(::KVSignal) );
      instance.SetNew(&new_KVSignal);
      instance.SetNewArray(&newArray_KVSignal);
      instance.SetDelete(&delete_KVSignal);
      instance.SetDeleteArray(&deleteArray_KVSignal);
      instance.SetDestructor(&destruct_KVSignal);
      instance.SetMerge(&merge_KVSignal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSignal*)
   {
      return GenerateInitInstanceLocal((::KVSignal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVFAZIABlock_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIABlock(void *p = 0);
   static void *newArray_KVFAZIABlock(Long_t size, void *p);
   static void delete_KVFAZIABlock(void *p);
   static void deleteArray_KVFAZIABlock(void *p);
   static void destruct_KVFAZIABlock(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIABlock*)
   {
      ::KVFAZIABlock *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIABlock >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIABlock", ::KVFAZIABlock::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVFAZIABlock.h", 9,
                  typeid(::KVFAZIABlock), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIABlock::Dictionary, isa_proxy, 4,
                  sizeof(::KVFAZIABlock) );
      instance.SetNew(&new_KVFAZIABlock);
      instance.SetNewArray(&newArray_KVFAZIABlock);
      instance.SetDelete(&delete_KVFAZIABlock);
      instance.SetDeleteArray(&deleteArray_KVFAZIABlock);
      instance.SetDestructor(&destruct_KVFAZIABlock);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIABlock*)
   {
      return GenerateInitInstanceLocal((::KVFAZIABlock*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIABlock*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVCurrentSignal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVCurrentSignal(void *p = 0);
   static void *newArray_KVCurrentSignal(Long_t size, void *p);
   static void delete_KVCurrentSignal(void *p);
   static void deleteArray_KVCurrentSignal(void *p);
   static void destruct_KVCurrentSignal(void *p);
   static Long64_t merge_KVCurrentSignal(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVCurrentSignal*)
   {
      ::KVCurrentSignal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVCurrentSignal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVCurrentSignal", ::KVCurrentSignal::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVCurrentSignal.h", 11,
                  typeid(::KVCurrentSignal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVCurrentSignal::Dictionary, isa_proxy, 4,
                  sizeof(::KVCurrentSignal) );
      instance.SetNew(&new_KVCurrentSignal);
      instance.SetNewArray(&newArray_KVCurrentSignal);
      instance.SetDelete(&delete_KVCurrentSignal);
      instance.SetDeleteArray(&deleteArray_KVCurrentSignal);
      instance.SetDestructor(&destruct_KVCurrentSignal);
      instance.SetMerge(&merge_KVCurrentSignal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVCurrentSignal*)
   {
      return GenerateInitInstanceLocal((::KVCurrentSignal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVCurrentSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDigitalFilter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDigitalFilter(void *p = 0);
   static void *newArray_KVDigitalFilter(Long_t size, void *p);
   static void delete_KVDigitalFilter(void *p);
   static void deleteArray_KVDigitalFilter(void *p);
   static void destruct_KVDigitalFilter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDigitalFilter*)
   {
      ::KVDigitalFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDigitalFilter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDigitalFilter", ::KVDigitalFilter::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVDigitalFilter.h", 15,
                  typeid(::KVDigitalFilter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDigitalFilter::Dictionary, isa_proxy, 4,
                  sizeof(::KVDigitalFilter) );
      instance.SetNew(&new_KVDigitalFilter);
      instance.SetNewArray(&newArray_KVDigitalFilter);
      instance.SetDelete(&delete_KVDigitalFilter);
      instance.SetDeleteArray(&deleteArray_KVDigitalFilter);
      instance.SetDestructor(&destruct_KVDigitalFilter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDigitalFilter*)
   {
      return GenerateInitInstanceLocal((::KVDigitalFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDigitalFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVChargeSignal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVChargeSignal(void *p = 0);
   static void *newArray_KVChargeSignal(Long_t size, void *p);
   static void delete_KVChargeSignal(void *p);
   static void deleteArray_KVChargeSignal(void *p);
   static void destruct_KVChargeSignal(void *p);
   static Long64_t merge_KVChargeSignal(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVChargeSignal*)
   {
      ::KVChargeSignal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVChargeSignal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVChargeSignal", ::KVChargeSignal::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVChargeSignal.h", 13,
                  typeid(::KVChargeSignal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVChargeSignal::Dictionary, isa_proxy, 4,
                  sizeof(::KVChargeSignal) );
      instance.SetNew(&new_KVChargeSignal);
      instance.SetNewArray(&newArray_KVChargeSignal);
      instance.SetDelete(&delete_KVChargeSignal);
      instance.SetDeleteArray(&deleteArray_KVChargeSignal);
      instance.SetDestructor(&destruct_KVChargeSignal);
      instance.SetMerge(&merge_KVChargeSignal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVChargeSignal*)
   {
      return GenerateInitInstanceLocal((::KVChargeSignal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVChargeSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVFAZIARawEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIARawEvent(void *p = 0);
   static void *newArray_KVFAZIARawEvent(Long_t size, void *p);
   static void delete_KVFAZIARawEvent(void *p);
   static void deleteArray_KVFAZIARawEvent(void *p);
   static void destruct_KVFAZIARawEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIARawEvent*)
   {
      ::KVFAZIARawEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIARawEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIARawEvent", ::KVFAZIARawEvent::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVFAZIARawEvent.h", 15,
                  typeid(::KVFAZIARawEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIARawEvent::Dictionary, isa_proxy, 4,
                  sizeof(::KVFAZIARawEvent) );
      instance.SetNew(&new_KVFAZIARawEvent);
      instance.SetNewArray(&newArray_KVFAZIARawEvent);
      instance.SetDelete(&delete_KVFAZIARawEvent);
      instance.SetDeleteArray(&deleteArray_KVFAZIARawEvent);
      instance.SetDestructor(&destruct_KVFAZIARawEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIARawEvent*)
   {
      return GenerateInitInstanceLocal((::KVFAZIARawEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIARawEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAFAZIA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAFAZIA(void *p = 0);
   static void *newArray_KVINDRAFAZIA(Long_t size, void *p);
   static void delete_KVINDRAFAZIA(void *p);
   static void deleteArray_KVINDRAFAZIA(void *p);
   static void destruct_KVINDRAFAZIA(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAFAZIA*)
   {
      ::KVINDRAFAZIA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAFAZIA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAFAZIA", ::KVINDRAFAZIA::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVINDRAFAZIA.h", 9,
                  typeid(::KVINDRAFAZIA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAFAZIA::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAFAZIA) );
      instance.SetNew(&new_KVINDRAFAZIA);
      instance.SetNewArray(&newArray_KVINDRAFAZIA);
      instance.SetDelete(&delete_KVINDRAFAZIA);
      instance.SetDeleteArray(&deleteArray_KVINDRAFAZIA);
      instance.SetDestructor(&destruct_KVINDRAFAZIA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAFAZIA*)
   {
      return GenerateInitInstanceLocal((::KVINDRAFAZIA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAFAZIA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVFAZIADetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIADetector(void *p = 0);
   static void *newArray_KVFAZIADetector(Long_t size, void *p);
   static void delete_KVFAZIADetector(void *p);
   static void deleteArray_KVFAZIADetector(void *p);
   static void destruct_KVFAZIADetector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIADetector*)
   {
      ::KVFAZIADetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIADetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIADetector", ::KVFAZIADetector::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVFAZIADetector.h", 12,
                  typeid(::KVFAZIADetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIADetector::Dictionary, isa_proxy, 4,
                  sizeof(::KVFAZIADetector) );
      instance.SetNew(&new_KVFAZIADetector);
      instance.SetNewArray(&newArray_KVFAZIADetector);
      instance.SetDelete(&delete_KVFAZIADetector);
      instance.SetDeleteArray(&deleteArray_KVFAZIADetector);
      instance.SetDestructor(&destruct_KVFAZIADetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIADetector*)
   {
      return GenerateInitInstanceLocal((::KVFAZIADetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIADetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVFAZIA_2B_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIA_2B(void *p = 0);
   static void *newArray_KVFAZIA_2B(Long_t size, void *p);
   static void delete_KVFAZIA_2B(void *p);
   static void deleteArray_KVFAZIA_2B(void *p);
   static void destruct_KVFAZIA_2B(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIA_2B*)
   {
      ::KVFAZIA_2B *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIA_2B >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIA_2B", ::KVFAZIA_2B::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVFAZIA_2B.h", 10,
                  typeid(::KVFAZIA_2B), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIA_2B::Dictionary, isa_proxy, 4,
                  sizeof(::KVFAZIA_2B) );
      instance.SetNew(&new_KVFAZIA_2B);
      instance.SetNewArray(&newArray_KVFAZIA_2B);
      instance.SetDelete(&delete_KVFAZIA_2B);
      instance.SetDeleteArray(&deleteArray_KVFAZIA_2B);
      instance.SetDestructor(&destruct_KVFAZIA_2B);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIA_2B*)
   {
      return GenerateInitInstanceLocal((::KVFAZIA_2B*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIA_2B*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVFAZIASYM_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIASYM(void *p = 0);
   static void *newArray_KVFAZIASYM(Long_t size, void *p);
   static void delete_KVFAZIASYM(void *p);
   static void deleteArray_KVFAZIASYM(void *p);
   static void destruct_KVFAZIASYM(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIASYM*)
   {
      ::KVFAZIASYM *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIASYM >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIASYM", ::KVFAZIASYM::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/geometry/KVFAZIASYM.h", 10,
                  typeid(::KVFAZIASYM), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIASYM::Dictionary, isa_proxy, 4,
                  sizeof(::KVFAZIASYM) );
      instance.SetNew(&new_KVFAZIASYM);
      instance.SetNewArray(&newArray_KVFAZIASYM);
      instance.SetDelete(&delete_KVFAZIASYM);
      instance.SetDeleteArray(&deleteArray_KVFAZIASYM);
      instance.SetDestructor(&destruct_KVFAZIASYM);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIASYM*)
   {
      return GenerateInitInstanceLocal((::KVFAZIASYM*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIASYM*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIA::Class_Name()
{
   return "KVFAZIA";
}

//______________________________________________________________________________
const char *KVFAZIA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVISOFAZIA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVISOFAZIA::Class_Name()
{
   return "KVISOFAZIA";
}

//______________________________________________________________________________
const char *KVISOFAZIA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVISOFAZIA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVISOFAZIA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVISOFAZIA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVISOFAZIA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVISOFAZIA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVISOFAZIA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVISOFAZIA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVPSAResult::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVPSAResult::Class_Name()
{
   return "KVPSAResult";
}

//______________________________________________________________________________
const char *KVPSAResult::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVPSAResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVPSAResult::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVPSAResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVPSAResult::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVPSAResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVPSAResult::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVPSAResult*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSignal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSignal::Class_Name()
{
   return "KVSignal";
}

//______________________________________________________________________________
const char *KVSignal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSignal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSignal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSignal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSignal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIABlock::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIABlock::Class_Name()
{
   return "KVFAZIABlock";
}

//______________________________________________________________________________
const char *KVFAZIABlock::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIABlock*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIABlock::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIABlock*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIABlock::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIABlock*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIABlock::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIABlock*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVCurrentSignal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVCurrentSignal::Class_Name()
{
   return "KVCurrentSignal";
}

//______________________________________________________________________________
const char *KVCurrentSignal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVCurrentSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVCurrentSignal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVCurrentSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVCurrentSignal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVCurrentSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVCurrentSignal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVCurrentSignal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDigitalFilter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDigitalFilter::Class_Name()
{
   return "KVDigitalFilter";
}

//______________________________________________________________________________
const char *KVDigitalFilter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDigitalFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDigitalFilter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDigitalFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDigitalFilter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDigitalFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDigitalFilter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDigitalFilter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVChargeSignal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVChargeSignal::Class_Name()
{
   return "KVChargeSignal";
}

//______________________________________________________________________________
const char *KVChargeSignal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVChargeSignal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVChargeSignal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVChargeSignal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeSignal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIARawEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIARawEvent::Class_Name()
{
   return "KVFAZIARawEvent";
}

//______________________________________________________________________________
const char *KVFAZIARawEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIARawEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIARawEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIARawEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIARawEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIARawEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIARawEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIARawEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAFAZIA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAFAZIA::Class_Name()
{
   return "KVINDRAFAZIA";
}

//______________________________________________________________________________
const char *KVINDRAFAZIA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAFAZIA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAFAZIA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAFAZIA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAFAZIA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAFAZIA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAFAZIA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAFAZIA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIADetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIADetector::Class_Name()
{
   return "KVFAZIADetector";
}

//______________________________________________________________________________
const char *KVFAZIADetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIADetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIADetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIADetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIA_2B::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIA_2B::Class_Name()
{
   return "KVFAZIA_2B";
}

//______________________________________________________________________________
const char *KVFAZIA_2B::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIA_2B*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIA_2B::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIA_2B*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIA_2B::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIA_2B*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIA_2B::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIA_2B*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIASYM::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIASYM::Class_Name()
{
   return "KVFAZIASYM";
}

//______________________________________________________________________________
const char *KVFAZIASYM::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIASYM*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIASYM::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIASYM*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIASYM::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIASYM*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIASYM::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIASYM*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVFAZIABlock::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIABlock.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVFAZIABlock::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVFAZIABlock::Class(),this);
   }
}

//______________________________________________________________________________
void KVFAZIABlock::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIABlock.
      TClass *R__cl = ::KVFAZIABlock::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotSidWBlind", &fTotSidWBlind);
      TGeoVolumeAssembly::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIABlock(void *p) {
      return  p ? new(p) ::KVFAZIABlock : new ::KVFAZIABlock;
   }
   static void *newArray_KVFAZIABlock(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIABlock[nElements] : new ::KVFAZIABlock[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIABlock(void *p) {
      delete ((::KVFAZIABlock*)p);
   }
   static void deleteArray_KVFAZIABlock(void *p) {
      delete [] ((::KVFAZIABlock*)p);
   }
   static void destruct_KVFAZIABlock(void *p) {
      typedef ::KVFAZIABlock current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVFAZIABlock

//______________________________________________________________________________
void KVINDRAFAZIA::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAFAZIA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAFAZIA::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAFAZIA::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAFAZIA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAFAZIA.
      TClass *R__cl = ::KVINDRAFAZIA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGeoType", &fFGeoType);
      R__insp.InspectMember(fFGeoType, "fFGeoType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFDist", &fFDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFThetaMin", &fFThetaMin);
      KVINDRA::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAFAZIA(void *p) {
      return  p ? new(p) ::KVINDRAFAZIA : new ::KVINDRAFAZIA;
   }
   static void *newArray_KVINDRAFAZIA(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAFAZIA[nElements] : new ::KVINDRAFAZIA[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAFAZIA(void *p) {
      delete ((::KVINDRAFAZIA*)p);
   }
   static void deleteArray_KVINDRAFAZIA(void *p) {
      delete [] ((::KVINDRAFAZIA*)p);
   }
   static void destruct_KVINDRAFAZIA(void *p) {
      typedef ::KVINDRAFAZIA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAFAZIA

//______________________________________________________________________________
void KVFAZIA_2B::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIA_2B.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVFAZIA_2B::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVFAZIA_2B::Class(),this);
   }
}

//______________________________________________________________________________
void KVFAZIA_2B::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIA_2B.
      TClass *R__cl = ::KVFAZIA_2B::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVFAZIA::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIA_2B(void *p) {
      return  p ? new(p) ::KVFAZIA_2B : new ::KVFAZIA_2B;
   }
   static void *newArray_KVFAZIA_2B(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIA_2B[nElements] : new ::KVFAZIA_2B[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIA_2B(void *p) {
      delete ((::KVFAZIA_2B*)p);
   }
   static void deleteArray_KVFAZIA_2B(void *p) {
      delete [] ((::KVFAZIA_2B*)p);
   }
   static void destruct_KVFAZIA_2B(void *p) {
      typedef ::KVFAZIA_2B current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVFAZIA_2B

//______________________________________________________________________________
void KVFAZIA::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVFAZIA::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVFAZIA::Class(),this);
   }
}

//______________________________________________________________________________
void KVFAZIA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIA.
      TClass *R__cl = ::KVFAZIA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGeoType", &fFGeoType);
      R__insp.InspectMember(fFGeoType, "fFGeoType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFDist", &fFDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFThetaMin", &fFThetaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNblocks", &fNblocks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartingBlockNumber", &fStartingBlockNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBuildTarget", &fBuildTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorrespondanceFile", &fCorrespondanceFile);
      R__insp.InspectMember(fCorrespondanceFile, "fCorrespondanceFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectorLabels", &fDetectorLabels);
      R__insp.InspectMember(fDetectorLabels, "fDetectorLabels.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignalTypes", &fSignalTypes);
      R__insp.InspectMember(fSignalTypes, "fSignalTypes.");
      KVMultiDetArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIA(void *p) {
      return  p ? new(p) ::KVFAZIA : new ::KVFAZIA;
   }
   static void *newArray_KVFAZIA(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIA[nElements] : new ::KVFAZIA[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIA(void *p) {
      delete ((::KVFAZIA*)p);
   }
   static void deleteArray_KVFAZIA(void *p) {
      delete [] ((::KVFAZIA*)p);
   }
   static void destruct_KVFAZIA(void *p) {
      typedef ::KVFAZIA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVFAZIA

//______________________________________________________________________________
void KVFAZIASYM::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIASYM.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVFAZIASYM::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVFAZIASYM::Class(),this);
   }
}

//______________________________________________________________________________
void KVFAZIASYM::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIASYM.
      TClass *R__cl = ::KVFAZIASYM::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVFAZIA::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIASYM(void *p) {
      return  p ? new(p) ::KVFAZIASYM : new ::KVFAZIASYM;
   }
   static void *newArray_KVFAZIASYM(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIASYM[nElements] : new ::KVFAZIASYM[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIASYM(void *p) {
      delete ((::KVFAZIASYM*)p);
   }
   static void deleteArray_KVFAZIASYM(void *p) {
      delete [] ((::KVFAZIASYM*)p);
   }
   static void destruct_KVFAZIASYM(void *p) {
      typedef ::KVFAZIASYM current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVFAZIASYM

//______________________________________________________________________________
void KVISOFAZIA::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVISOFAZIA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVISOFAZIA::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVISOFAZIA::Class(),this);
   }
}

//______________________________________________________________________________
void KVISOFAZIA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVISOFAZIA.
      TClass *R__cl = ::KVISOFAZIA::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVFAZIA::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVISOFAZIA(void *p) {
      return  p ? new(p) ::KVISOFAZIA : new ::KVISOFAZIA;
   }
   static void *newArray_KVISOFAZIA(Long_t nElements, void *p) {
      return p ? new(p) ::KVISOFAZIA[nElements] : new ::KVISOFAZIA[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVISOFAZIA(void *p) {
      delete ((::KVISOFAZIA*)p);
   }
   static void deleteArray_KVISOFAZIA(void *p) {
      delete [] ((::KVISOFAZIA*)p);
   }
   static void destruct_KVISOFAZIA(void *p) {
      typedef ::KVISOFAZIA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVISOFAZIA

//______________________________________________________________________________
void KVFAZIADetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIADetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVFAZIADetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVFAZIADetector::Class(),this);
   }
}

//______________________________________________________________________________
void KVFAZIADetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIADetector.
      TClass *R__cl = ::KVFAZIADetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSignals", &fSignals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBlock", &fBlock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQuartet", &fQuartet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTelescope", &fTelescope);
      KVDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIADetector(void *p) {
      return  p ? new(p) ::KVFAZIADetector : new ::KVFAZIADetector;
   }
   static void *newArray_KVFAZIADetector(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIADetector[nElements] : new ::KVFAZIADetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIADetector(void *p) {
      delete ((::KVFAZIADetector*)p);
   }
   static void deleteArray_KVFAZIADetector(void *p) {
      delete [] ((::KVFAZIADetector*)p);
   }
   static void destruct_KVFAZIADetector(void *p) {
      typedef ::KVFAZIADetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVFAZIADetector

//______________________________________________________________________________
void KVSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSignal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVSignal::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVSignal::Class(),this);
   }
}

//______________________________________________________________________________
void KVSignal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSignal.
      TClass *R__cl = ::KVSignal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBlock", &fBlock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQuartet", &fQuartet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQuartetName", &fQuartetName);
      R__insp.InspectMember(fQuartetName, "fQuartetName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTelescope", &fTelescope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTelName", &fTelName);
      R__insp.InspectMember(fTelName, "fTelName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetName", &fDetName);
      R__insp.InspectMember(fDetName, "fDetName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.InspectMember(fType, "fType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDet", &fDet);
      R__insp.InspectMember(fDet, "fDet.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAdc", &fAdc);
      R__insp.InspectMember(fAdc, "fAdc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAmplitude", &fAmplitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRiseTime", &fRiseTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIMax", &fIMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMax", &fTMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaseLine", &fBaseLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaBase", &fSigmaBase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChannelWidth", &fChannelWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChannelWidthInt", &fChannelWidthInt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirstBL", &fFirstBL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastBL", &fLastBL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTauRC", &fTauRC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrapRiseTime", &fTrapRiseTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrapFlatTop", &fTrapFlatTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGaussSigma", &fGaussSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWithPoleZeroCorrection", &fWithPoleZeroCorrection);
      TGraph::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSignal(void *p) {
      return  p ? new(p) ::KVSignal : new ::KVSignal;
   }
   static void *newArray_KVSignal(Long_t nElements, void *p) {
      return p ? new(p) ::KVSignal[nElements] : new ::KVSignal[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSignal(void *p) {
      delete ((::KVSignal*)p);
   }
   static void deleteArray_KVSignal(void *p) {
      delete [] ((::KVSignal*)p);
   }
   static void destruct_KVSignal(void *p) {
      typedef ::KVSignal current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_KVSignal(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::KVSignal*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::KVSignal

//______________________________________________________________________________
void KVChargeSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVChargeSignal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVChargeSignal::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVChargeSignal::Class(),this);
   }
}

//______________________________________________________________________________
void KVChargeSignal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVChargeSignal.
      TClass *R__cl = ::KVChargeSignal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFunc1", &fFunc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFunc2", &fFunc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*bidim", &bidim);
      KVSignal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVChargeSignal(void *p) {
      return  p ? new(p) ::KVChargeSignal : new ::KVChargeSignal;
   }
   static void *newArray_KVChargeSignal(Long_t nElements, void *p) {
      return p ? new(p) ::KVChargeSignal[nElements] : new ::KVChargeSignal[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVChargeSignal(void *p) {
      delete ((::KVChargeSignal*)p);
   }
   static void deleteArray_KVChargeSignal(void *p) {
      delete [] ((::KVChargeSignal*)p);
   }
   static void destruct_KVChargeSignal(void *p) {
      typedef ::KVChargeSignal current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_KVChargeSignal(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::KVChargeSignal*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::KVChargeSignal

//______________________________________________________________________________
void KVCurrentSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVCurrentSignal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVCurrentSignal::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVCurrentSignal::Class(),this);
   }
}

//______________________________________________________________________________
void KVCurrentSignal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVCurrentSignal.
      TClass *R__cl = ::KVCurrentSignal::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVSignal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVCurrentSignal(void *p) {
      return  p ? new(p) ::KVCurrentSignal : new ::KVCurrentSignal;
   }
   static void *newArray_KVCurrentSignal(Long_t nElements, void *p) {
      return p ? new(p) ::KVCurrentSignal[nElements] : new ::KVCurrentSignal[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVCurrentSignal(void *p) {
      delete ((::KVCurrentSignal*)p);
   }
   static void deleteArray_KVCurrentSignal(void *p) {
      delete [] ((::KVCurrentSignal*)p);
   }
   static void destruct_KVCurrentSignal(void *p) {
      typedef ::KVCurrentSignal current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_KVCurrentSignal(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::KVCurrentSignal*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::KVCurrentSignal

//______________________________________________________________________________
void KVPSAResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVPSAResult.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVPSAResult::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVPSAResult::Class(),this);
   }
}

//______________________________________________________________________________
void KVPSAResult::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVPSAResult.
      TClass *R__cl = ::KVPSAResult::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVNameValueList::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVPSAResult(void *p) {
      return  p ? new(p) ::KVPSAResult : new ::KVPSAResult;
   }
   static void *newArray_KVPSAResult(Long_t nElements, void *p) {
      return p ? new(p) ::KVPSAResult[nElements] : new ::KVPSAResult[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVPSAResult(void *p) {
      delete ((::KVPSAResult*)p);
   }
   static void deleteArray_KVPSAResult(void *p) {
      delete [] ((::KVPSAResult*)p);
   }
   static void destruct_KVPSAResult(void *p) {
      typedef ::KVPSAResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVPSAResult

//______________________________________________________________________________
void KVDigitalFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDigitalFilter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDigitalFilter::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDigitalFilter::Class(),this);
   }
}

//______________________________________________________________________________
void KVDigitalFilter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDigitalFilter.
      TClass *R__cl = ::KVDigitalFilter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*a", &a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b", &b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ncoeff", &Ncoeff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tau_clk", &tau_clk);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDigitalFilter(void *p) {
      return  p ? new(p) ::KVDigitalFilter : new ::KVDigitalFilter;
   }
   static void *newArray_KVDigitalFilter(Long_t nElements, void *p) {
      return p ? new(p) ::KVDigitalFilter[nElements] : new ::KVDigitalFilter[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDigitalFilter(void *p) {
      delete ((::KVDigitalFilter*)p);
   }
   static void deleteArray_KVDigitalFilter(void *p) {
      delete [] ((::KVDigitalFilter*)p);
   }
   static void destruct_KVDigitalFilter(void *p) {
      typedef ::KVDigitalFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDigitalFilter

//______________________________________________________________________________
void KVFAZIARawEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIARawEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVFAZIARawEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVFAZIARawEvent::Class(),this);
   }
}

//______________________________________________________________________________
void KVFAZIARawEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIARawEvent.
      TClass *R__cl = ::KVFAZIARawEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSignals", &fSignals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fValues", &fValues);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumber", &fNumber);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIARawEvent(void *p) {
      return  p ? new(p) ::KVFAZIARawEvent : new ::KVFAZIARawEvent;
   }
   static void *newArray_KVFAZIARawEvent(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIARawEvent[nElements] : new ::KVFAZIARawEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIARawEvent(void *p) {
      delete ((::KVFAZIARawEvent*)p);
   }
   static void deleteArray_KVFAZIARawEvent(void *p) {
      delete [] ((::KVFAZIARawEvent*)p);
   }
   static void destruct_KVFAZIARawEvent(void *p) {
      typedef ::KVFAZIARawEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVFAZIARawEvent

/********************************************************
* G__FAZIAgeometry.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__FAZIAgeometry();

extern "C" void G__set_cpp_environmentG__FAZIAgeometry() {
  G__cpp_reset_tagtableG__FAZIAgeometry();
}
#include <new>
extern "C" int G__cpp_dllrevG__FAZIAgeometry() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVFAZIA */
static int G__G__FAZIAgeometry_680_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIA[n];
     } else {
       p = new((void*) gvp) KVFAZIA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIA;
     } else {
       p = new((void*) gvp) KVFAZIA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIA*) G__getstructoffset())->AddDetectorLabel((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVFAZIA*) G__getstructoffset())->GetNumberOfBlocks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVFAZIA*) G__getstructoffset())->IncludeTargetInGeometry((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVFAZIA*) G__getstructoffset())->IncludeTargetInGeometry();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVString* pobj;
         const KVString xobj = ((const KVFAZIA*) G__getstructoffset())->GetDetectorLabels();
         pobj = new KVString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVFAZIA*) G__getstructoffset())->GetSignalTypes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_680_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIA G__TKVFAZIA;
static int G__G__FAZIAgeometry_680_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIA*) (soff+(sizeof(KVFAZIA)*i)))->~G__TKVFAZIA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIA*) (soff))->~G__TKVFAZIA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVISOFAZIA */
static int G__G__FAZIAgeometry_681_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVISOFAZIA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVISOFAZIA[n];
     } else {
       p = new((void*) gvp) KVISOFAZIA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVISOFAZIA;
     } else {
       p = new((void*) gvp) KVISOFAZIA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_681_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVISOFAZIA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_681_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVISOFAZIA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_681_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVISOFAZIA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_681_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVISOFAZIA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_681_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVISOFAZIA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_681_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVISOFAZIA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_681_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVISOFAZIA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_681_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVISOFAZIA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_681_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVISOFAZIA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVISOFAZIA G__TKVISOFAZIA;
static int G__G__FAZIAgeometry_681_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVISOFAZIA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVISOFAZIA*) (soff+(sizeof(KVISOFAZIA)*i)))->~G__TKVISOFAZIA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVISOFAZIA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVISOFAZIA*) (soff))->~G__TKVISOFAZIA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVPSAResult */
static int G__G__FAZIAgeometry_696_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVPSAResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVPSAResult[n];
     } else {
       p = new((void*) gvp) KVPSAResult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVPSAResult;
     } else {
       p = new((void*) gvp) KVPSAResult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVPSAResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVPSAResult((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVPSAResult((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVPSAResult((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVPSAResult((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVPSAResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVPSAResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVPSAResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVPSAResult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVPSAResult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVPSAResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVPSAResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVPSAResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_696_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVPSAResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVPSAResult G__TKVPSAResult;
static int G__G__FAZIAgeometry_696_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVPSAResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVPSAResult*) (soff+(sizeof(KVPSAResult)*i)))->~G__TKVPSAResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVPSAResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVPSAResult*) (soff))->~G__TKVPSAResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSignal */
static int G__G__FAZIAgeometry_697_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSignal[n];
     } else {
       p = new((void*) gvp) KVSignal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSignal;
     } else {
       p = new((void*) gvp) KVSignal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSignal((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) KVSignal((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSignal(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) KVSignal(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetDetectorName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->DeduceFromName();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetType((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetData((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetADCData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSignal*) G__getstructoffset())->TreateSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->ComputeGlobals();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVSignal*) G__getstructoffset())->GetRawAmplitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->LoadPSAParameters((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetDefaultValues();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->ComputeBaseLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->ComputeAmplitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->ComputeRiseTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVSignal*) G__getstructoffset())->GetBlockNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVSignal*) G__getstructoffset())->GetQuartetNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSignal*) G__getstructoffset())->GetQuartetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVSignal*) G__getstructoffset())->GetTelescopeNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSignal*) G__getstructoffset())->GetTelescopeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSignal*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSignal*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSignal*) G__getstructoffset())->GetDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetChannelWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetMaxT((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetNSamples((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVSignal*) G__getstructoffset())->SetBaseLineLength((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVSignal*) G__getstructoffset())->SetBaseLineLength((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetTauRC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetTrapShaperParameters((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->SetSemiGaussParameter((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVSignal*) G__getstructoffset())->SetPoleZeroCorrection((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVSignal*) G__getstructoffset())->SetPoleZeroCorrection();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSignal*) G__getstructoffset())->GetArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetChannelWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVSignal*) G__getstructoffset())->GetNSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetTauRC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetBLFirst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetBLLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetTrapRiseTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetTrapFlatTop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetGaussSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVSignal*) G__getstructoffset())->GetYmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVSignal*) G__getstructoffset())->GetYmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetAmplitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetRiseTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetBaseLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetSigmaBaseLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->FindMedia((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->FindMedia((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->FindSigma2((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->FindSigma2((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->Multiply((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->Add((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->FindTzeroCFDCubic((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->FindTzeroCFDCubic_rev((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->CubicInterpolation((float*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVSignal*) G__getstructoffset())->BuildCubicSignal((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVSignal*) G__getstructoffset())->BuildCubicSignal();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetDataInter((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSignal*) G__getstructoffset())->GetDataInterCubic((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->FIR_ApplyTrapezoidal((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->FIR_ApplySemigaus((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVSignal*) G__getstructoffset())->FIR_ApplyRCLowPass((double) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVSignal*) G__getstructoffset())->FIR_ApplyRCLowPass((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVSignal*) G__getstructoffset())->FIR_ApplyRCHighPass((double) G__double(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVSignal*) G__getstructoffset())->FIR_ApplyRCHighPass((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->FIR_ApplyRecursiveFilter((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->PoleZeroSuppression((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVSignal*) G__getstructoffset())->ApplyWindowing((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVSignal*) G__getstructoffset())->ApplyWindowing();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSignal::FFT((unsigned int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVSignal*) G__getstructoffset())->FFT((bool) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((KVSignal*) G__getstructoffset())->FFT2Histo((int) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVSignal*) G__getstructoffset())->FFT2Histo((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVSignal*) G__getstructoffset())->ApplyModifications((TGraph*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVSignal*) G__getstructoffset())->ApplyModifications((TGraph*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVSignal*) G__getstructoffset())->ApplyModifications();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSignal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSignal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_697_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FAZIAgeometry_697_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVSignal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVSignal(*(KVSignal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSignal G__TKVSignal;
static int G__G__FAZIAgeometry_697_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSignal*) (soff+(sizeof(KVSignal)*i)))->~G__TKVSignal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSignal*) (soff))->~G__TKVSignal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FAZIAgeometry_697_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSignal* dest = (KVSignal*) G__getstructoffset();
   *dest = *(KVSignal*) libp->para[0].ref;
   const KVSignal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVFAZIABlock */
static int G__G__FAZIAgeometry_698_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIABlock* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIABlock[n];
     } else {
       p = new((void*) gvp) KVFAZIABlock[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIABlock;
     } else {
       p = new((void*) gvp) KVFAZIABlock;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVFAZIABlock*) G__getstructoffset())->GetTotalSideWithBlindage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIABlock::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIABlock::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIABlock::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIABlock::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIABlock*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIABlock::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIABlock::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIABlock::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_698_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIABlock::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FAZIAgeometry_698_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVFAZIABlock* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVFAZIABlock(*(KVFAZIABlock*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIABlock G__TKVFAZIABlock;
static int G__G__FAZIAgeometry_698_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIABlock*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIABlock*) (soff+(sizeof(KVFAZIABlock)*i)))->~G__TKVFAZIABlock();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIABlock*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIABlock*) (soff))->~G__TKVFAZIABlock();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVCurrentSignal */
static int G__G__FAZIAgeometry_699_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVCurrentSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCurrentSignal[n];
     } else {
       p = new((void*) gvp) KVCurrentSignal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCurrentSignal;
     } else {
       p = new((void*) gvp) KVCurrentSignal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVCurrentSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVCurrentSignal((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVCurrentSignal((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVCurrentSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCurrentSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVCurrentSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVCurrentSignal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCurrentSignal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCurrentSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVCurrentSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCurrentSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_699_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVCurrentSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FAZIAgeometry_699_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVCurrentSignal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVCurrentSignal(*(KVCurrentSignal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVCurrentSignal G__TKVCurrentSignal;
static int G__G__FAZIAgeometry_699_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVCurrentSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVCurrentSignal*) (soff+(sizeof(KVCurrentSignal)*i)))->~G__TKVCurrentSignal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVCurrentSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVCurrentSignal*) (soff))->~G__TKVCurrentSignal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FAZIAgeometry_699_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVCurrentSignal* dest = (KVCurrentSignal*) G__getstructoffset();
   *dest = *(KVCurrentSignal*) libp->para[0].ref;
   const KVCurrentSignal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDigitalFilter */
static int G__G__FAZIAgeometry_700_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDigitalFilter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDigitalFilter(*(double*) G__Doubleref(&libp->para[0]));
     } else {
       p = new((void*) gvp) KVDigitalFilter(*(double*) G__Doubleref(&libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVDigitalFilter[n];
       } else {
         p = new((void*) gvp) KVDigitalFilter[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVDigitalFilter;
       } else {
         p = new((void*) gvp) KVDigitalFilter;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDigitalFilter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDigitalFilter(
*(double*) G__Doubleref(&libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) KVDigitalFilter(
*(double*) G__Doubleref(&libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDigitalFilter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDigitalFilter(*(KVDigitalFilter*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVDigitalFilter(*(KVDigitalFilter*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = ((KVDigitalFilter*) G__getstructoffset())->operator=(*(KVDigitalFilter*) libp->para[0].ref);
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDigitalFilter*) G__getstructoffset())->PrintCoeffs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDigitalFilter*) G__getstructoffset())->PrintCoeffsDSP();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDigitalFilter*) G__getstructoffset())->PrintCoeffs_AsC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((KVDigitalFilter*) G__getstructoffset())->Quantize(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int*) G__int(libp->para[3])
, (int*) G__int(libp->para[4]), (int*) G__int(libp->para[5])
, (int*) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((KVDigitalFilter*) G__getstructoffset())->Quantize((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int*) G__int(libp->para[3])
, (int*) G__int(libp->para[4]), (int*) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((KVDigitalFilter*) G__getstructoffset())->Quantize((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int*) G__int(libp->para[3])
, (int*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((KVDigitalFilter*) G__getstructoffset())->Quantize((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVDigitalFilter*) G__getstructoffset())->Quantize((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVDigitalFilter*) G__getstructoffset())->Quantize((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDigitalFilter*) G__getstructoffset())->Quantize((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::BuildRCLowPassDeconv(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::BuildRCLowPass(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::BuildRCHighPass(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::BuildRCHighPassWithPZ(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::BuildChebyshev(*(double*) G__Doubleref(&libp->para[0]), (int) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (int) G__int(libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::BuildUnity(*(double*) G__Doubleref(&libp->para[0]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::BuildIntegrator(*(double*) G__Doubleref(&libp->para[0]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::BuildInverse((KVDigitalFilter*) G__int(libp->para[0]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDigitalFilter::Double2DSP(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVDigitalFilter::DSP2Double((const int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDigitalFilter*) G__getstructoffset())->Compress();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStages(*(KVDigitalFilter*) libp->para[0].ref, *(KVDigitalFilter*) libp->para[1].ref
, (int) G__int(libp->para[2]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStages(*(KVDigitalFilter*) libp->para[0].ref, *(KVDigitalFilter*) libp->para[1].ref);
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStages((KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStages((KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStagesMany(
(KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1])
, (KVDigitalFilter*) G__int(libp->para[2]), (KVDigitalFilter*) G__int(libp->para[3])
, (KVDigitalFilter*) G__int(libp->para[4]), (KVDigitalFilter*) G__int(libp->para[5])
, (KVDigitalFilter*) G__int(libp->para[6]), (KVDigitalFilter*) G__int(libp->para[7])
, (KVDigitalFilter*) G__int(libp->para[8]), (KVDigitalFilter*) G__int(libp->para[9]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 9:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStagesMany(
(KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1])
, (KVDigitalFilter*) G__int(libp->para[2]), (KVDigitalFilter*) G__int(libp->para[3])
, (KVDigitalFilter*) G__int(libp->para[4]), (KVDigitalFilter*) G__int(libp->para[5])
, (KVDigitalFilter*) G__int(libp->para[6]), (KVDigitalFilter*) G__int(libp->para[7])
, (KVDigitalFilter*) G__int(libp->para[8]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 8:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStagesMany(
(KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1])
, (KVDigitalFilter*) G__int(libp->para[2]), (KVDigitalFilter*) G__int(libp->para[3])
, (KVDigitalFilter*) G__int(libp->para[4]), (KVDigitalFilter*) G__int(libp->para[5])
, (KVDigitalFilter*) G__int(libp->para[6]), (KVDigitalFilter*) G__int(libp->para[7]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 7:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStagesMany(
(KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1])
, (KVDigitalFilter*) G__int(libp->para[2]), (KVDigitalFilter*) G__int(libp->para[3])
, (KVDigitalFilter*) G__int(libp->para[4]), (KVDigitalFilter*) G__int(libp->para[5])
, (KVDigitalFilter*) G__int(libp->para[6]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 6:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStagesMany((KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1])
, (KVDigitalFilter*) G__int(libp->para[2]), (KVDigitalFilter*) G__int(libp->para[3])
, (KVDigitalFilter*) G__int(libp->para[4]), (KVDigitalFilter*) G__int(libp->para[5]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 5:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStagesMany((KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1])
, (KVDigitalFilter*) G__int(libp->para[2]), (KVDigitalFilter*) G__int(libp->para[3])
, (KVDigitalFilter*) G__int(libp->para[4]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStagesMany((KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1])
, (KVDigitalFilter*) G__int(libp->para[2]), (KVDigitalFilter*) G__int(libp->para[3]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStagesMany((KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1])
, (KVDigitalFilter*) G__int(libp->para[2]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         KVDigitalFilter* pobj;
         KVDigitalFilter xobj = KVDigitalFilter::CombineStagesMany((KVDigitalFilter*) G__int(libp->para[0]), (KVDigitalFilter*) G__int(libp->para[1]));
         pobj = new KVDigitalFilter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVDigitalFilter*) G__getstructoffset())->ComputeGainDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVDigitalFilter*) G__getstructoffset())->ComputeGainNy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDigitalFilter*) G__getstructoffset())->Multiply((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const KVDigitalFilter*) G__getstructoffset())->GetXcoeff((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const KVDigitalFilter*) G__getstructoffset())->GetYcoeff((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDigitalFilter*) G__getstructoffset())->SetXcoeff((int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDigitalFilter*) G__getstructoffset())->SetYcoeff((int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((KVDigitalFilter*) G__getstructoffset())->GetXarray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((KVDigitalFilter*) G__getstructoffset())->GetYarray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((KVDigitalFilter*) G__getstructoffset())->GetTauClk();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVDigitalFilter*) G__getstructoffset())->GetNCoeff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const KVDigitalFilter*) G__getstructoffset())->ApplyTo((double*) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const KVDigitalFilter*) G__getstructoffset())->ApplyTo((double*) G__int(libp->para[0]), (const int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const KVDigitalFilter*) G__getstructoffset())->ApplyTo((float*) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const KVDigitalFilter*) G__getstructoffset())->ApplyTo((float*) G__int(libp->para[0]), (const int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const KVDigitalFilter*) G__getstructoffset())->ApplyTo((int*) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const KVDigitalFilter*) G__getstructoffset())->ApplyTo((int*) G__int(libp->para[0]), (const int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDigitalFilter*) G__getstructoffset())->FIRApplyTo((double*) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDigitalFilter*) G__getstructoffset())->FIRApplyTo((float*) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const KVDigitalFilter*) G__getstructoffset())->ApplyTo((KVSignal*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const KVDigitalFilter*) G__getstructoffset())->ApplyTo((KVSignal*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const KVDigitalFilter*) G__getstructoffset())->FIRApplyTo((KVSignal*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const KVDigitalFilter*) G__getstructoffset())->FIRApplyTo((KVSignal*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDigitalFilter*) G__getstructoffset())->Alloc((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDigitalFilter*) G__getstructoffset())->Azzera();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVDigitalFilter*) G__getstructoffset())->ReadMatlabFIR((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVDigitalFilter*) G__getstructoffset())->WriteMatlabFIR((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDigitalFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDigitalFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDigitalFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDigitalFilter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDigitalFilter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDigitalFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDigitalFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDigitalFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_700_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDigitalFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDigitalFilter G__TKVDigitalFilter;
static int G__G__FAZIAgeometry_700_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDigitalFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDigitalFilter*) (soff+(sizeof(KVDigitalFilter)*i)))->~G__TKVDigitalFilter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDigitalFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDigitalFilter*) (soff))->~G__TKVDigitalFilter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVChargeSignal */
static int G__G__FAZIAgeometry_701_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVChargeSignal*) G__getstructoffset())->GetFitFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChargeSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChargeSignal[n];
     } else {
       p = new((void*) gvp) KVChargeSignal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChargeSignal;
     } else {
       p = new((void*) gvp) KVChargeSignal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChargeSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVChargeSignal((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVChargeSignal((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVChargeSignal*) G__getstructoffset())->TreateSignal((TF1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((KVChargeSignal*) G__getstructoffset())->GetMaxFluctuationsWindow((Double_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((KVChargeSignal*) G__getstructoffset())->GetMaxFluctuationsWindow((Double_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVChargeSignal*) G__getstructoffset())->GetCorre());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVChargeSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChargeSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVChargeSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVChargeSignal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChargeSignal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChargeSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChargeSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChargeSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_701_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChargeSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FAZIAgeometry_701_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVChargeSignal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVChargeSignal(*(KVChargeSignal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVChargeSignal G__TKVChargeSignal;
static int G__G__FAZIAgeometry_701_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVChargeSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVChargeSignal*) (soff+(sizeof(KVChargeSignal)*i)))->~G__TKVChargeSignal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVChargeSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVChargeSignal*) (soff))->~G__TKVChargeSignal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FAZIAgeometry_701_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChargeSignal* dest = (KVChargeSignal*) G__getstructoffset();
   *dest = *(KVChargeSignal*) libp->para[0].ref;
   const KVChargeSignal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVFAZIARawEvent */
static int G__G__FAZIAgeometry_703_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIARawEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVFAZIARawEvent((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVFAZIARawEvent((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIARawEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIARawEvent[n];
     } else {
       p = new((void*) gvp) KVFAZIARawEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIARawEvent;
     } else {
       p = new((void*) gvp) KVFAZIARawEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVFAZIARawEvent*) G__getstructoffset())->AddNewSignal(*((KVString*) G__int(libp->para[0])), *((KVString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVFAZIARawEvent*) G__getstructoffset())->GetSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIARawEvent*) G__getstructoffset())->SetNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVFAZIARawEvent*) G__getstructoffset())->GetNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVFAZIARawEvent*) G__getstructoffset())->GetValues());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIARawEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIARawEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIARawEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIARawEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIARawEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIARawEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIARawEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIARawEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_703_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIARawEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__FAZIAgeometry_703_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVFAZIARawEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVFAZIARawEvent(*(KVFAZIARawEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIARawEvent G__TKVFAZIARawEvent;
static int G__G__FAZIAgeometry_703_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIARawEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIARawEvent*) (soff+(sizeof(KVFAZIARawEvent)*i)))->~G__TKVFAZIARawEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIARawEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIARawEvent*) (soff))->~G__TKVFAZIARawEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FAZIAgeometry_703_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIARawEvent* dest = (KVFAZIARawEvent*) G__getstructoffset();
   *dest = *(KVFAZIARawEvent*) libp->para[0].ref;
   const KVFAZIARawEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAFAZIA */
static int G__G__FAZIAgeometry_776_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAFAZIA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAFAZIA[n];
     } else {
       p = new((void*) gvp) KVINDRAFAZIA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAFAZIA;
     } else {
       p = new((void*) gvp) KVINDRAFAZIA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_776_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAFAZIA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_776_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAFAZIA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_776_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAFAZIA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_776_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAFAZIA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_776_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAFAZIA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_776_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAFAZIA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_776_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAFAZIA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_776_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAFAZIA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_776_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAFAZIA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAFAZIA G__TKVINDRAFAZIA;
static int G__G__FAZIAgeometry_776_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAFAZIA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAFAZIA*) (soff+(sizeof(KVINDRAFAZIA)*i)))->~G__TKVINDRAFAZIA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAFAZIA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAFAZIA*) (soff))->~G__TKVINDRAFAZIA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVFAZIADetector */
static int G__G__FAZIAgeometry_777_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIADetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIADetector[n];
     } else {
       p = new((void*) gvp) KVFAZIADetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIADetector;
     } else {
       p = new((void*) gvp) KVFAZIADetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIADetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIADetector((const Char_t*) G__int(libp->para[0]), (const Float_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) KVFAZIADetector((const Char_t*) G__int(libp->para[0]), (const Float_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIADetector((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVFAZIADetector((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIADetector*) G__getstructoffset())->SetSignal((KVSignal*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVFAZIADetector*) G__getstructoffset())->HasSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVFAZIADetector*) G__getstructoffset())->GetSignal((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVFAZIADetector*) G__getstructoffset())->GetSignal((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVFAZIADetector*) G__getstructoffset())->GetNumberOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVFAZIADetector*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVFAZIADetector*) G__getstructoffset())->GetBlockNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVFAZIADetector*) G__getstructoffset())->GetQuartetNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVFAZIADetector*) G__getstructoffset())->GetTelescopeNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIADetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIADetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIADetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIADetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIADetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIADetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIADetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIADetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_777_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIADetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIADetector G__TKVFAZIADetector;
static int G__G__FAZIAgeometry_777_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIADetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIADetector*) (soff+(sizeof(KVFAZIADetector)*i)))->~G__TKVFAZIADetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIADetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIADetector*) (soff))->~G__TKVFAZIADetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVFAZIA_2B */
static int G__G__FAZIAgeometry_778_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIA_2B* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIA_2B[n];
     } else {
       p = new((void*) gvp) KVFAZIA_2B[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIA_2B;
     } else {
       p = new((void*) gvp) KVFAZIA_2B;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_778_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIA_2B::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_778_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIA_2B::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_778_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIA_2B::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_778_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIA_2B::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_778_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIA_2B*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_778_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIA_2B::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_778_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIA_2B::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_778_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIA_2B::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_778_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIA_2B::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIA_2B G__TKVFAZIA_2B;
static int G__G__FAZIAgeometry_778_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIA_2B*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIA_2B*) (soff+(sizeof(KVFAZIA_2B)*i)))->~G__TKVFAZIA_2B();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIA_2B*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIA_2B*) (soff))->~G__TKVFAZIA_2B();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVFAZIASYM */
static int G__G__FAZIAgeometry_779_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIASYM* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIASYM[n];
     } else {
       p = new((void*) gvp) KVFAZIASYM[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIASYM;
     } else {
       p = new((void*) gvp) KVFAZIASYM;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_779_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIASYM::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_779_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIASYM::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_779_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIASYM::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_779_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIASYM::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_779_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIASYM*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_779_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIASYM::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_779_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIASYM::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_779_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIASYM::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAgeometry_779_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIASYM::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIASYM G__TKVFAZIASYM;
static int G__G__FAZIAgeometry_779_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIASYM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIASYM*) (soff+(sizeof(KVFAZIASYM)*i)))->~G__TKVFAZIASYM();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIASYM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIASYM*) (soff))->~G__TKVFAZIASYM();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVFAZIA */

/* KVISOFAZIA */

/* KVPSAResult */

/* KVSignal */

/* KVFAZIABlock */

/* KVCurrentSignal */

/* KVDigitalFilter */

/* KVChargeSignal */

/* KVFAZIARawEvent */

/* KVINDRAFAZIA */

/* KVFAZIADetector */

/* KVFAZIA_2B */

/* KVFAZIASYM */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__FAZIAgeometry {
 public:
  G__Sizep2memfuncG__FAZIAgeometry(): p(&G__Sizep2memfuncG__FAZIAgeometry::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__FAZIAgeometry::*p)();
};

size_t G__get_sizep2memfuncG__FAZIAgeometry()
{
  G__Sizep2memfuncG__FAZIAgeometry a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__FAZIAgeometry() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA))) {
     KVFAZIA *G__Lderived;
     G__Lderived=(KVFAZIA*)0x1000;
     {
       KVMultiDetArray *G__Lpbase=(KVMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA))) {
     KVISOFAZIA *G__Lderived;
     G__Lderived=(KVISOFAZIA*)0x1000;
     {
       KVFAZIA *G__Lpbase=(KVFAZIA*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVMultiDetArray *G__Lpbase=(KVMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult))) {
     KVPSAResult *G__Lderived;
     G__Lderived=(KVPSAResult*)0x1000;
     {
       KVNameValueList *G__Lpbase=(KVNameValueList*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVNameValueList),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal))) {
     KVSignal *G__Lderived;
     G__Lderived=(KVSignal*)0x1000;
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock))) {
     KVFAZIABlock *G__Lderived;
     G__Lderived=(KVFAZIABlock*)0x1000;
     {
       TGeoVolumeAssembly *G__Lpbase=(TGeoVolumeAssembly*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TGeoVolumeAssembly),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoVolume *G__Lpbase=(TGeoVolume*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TGeoVolume),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal))) {
     KVCurrentSignal *G__Lderived;
     G__Lderived=(KVCurrentSignal*)0x1000;
     {
       KVSignal *G__Lpbase=(KVSignal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter))) {
     KVDigitalFilter *G__Lderived;
     G__Lderived=(KVDigitalFilter*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal))) {
     KVChargeSignal *G__Lderived;
     G__Lderived=(KVChargeSignal*)0x1000;
     {
       KVSignal *G__Lpbase=(KVSignal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent))) {
     KVFAZIARawEvent *G__Lderived;
     G__Lderived=(KVFAZIARawEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA))) {
     KVINDRAFAZIA *G__Lderived;
     G__Lderived=(KVINDRAFAZIA*)0x1000;
     {
       KVINDRA *G__Lpbase=(KVINDRA*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRA),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVASMultiDetArray *G__Lpbase=(KVASMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVASMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMultiDetArray *G__Lpbase=(KVMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector))) {
     KVFAZIADetector *G__Lderived;
     G__Lderived=(KVFAZIADetector*)0x1000;
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B))) {
     KVFAZIA_2B *G__Lderived;
     G__Lderived=(KVFAZIA_2B*)0x1000;
     {
       KVFAZIA *G__Lpbase=(KVFAZIA*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVMultiDetArray *G__Lpbase=(KVMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM))) {
     KVFAZIASYM *G__Lderived;
     G__Lderived=(KVFAZIASYM*)0x1000;
     {
       KVFAZIA *G__Lpbase=(KVFAZIA*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVMultiDetArray *G__Lpbase=(KVMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM),G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__FAZIAgeometry() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*,less<long> >",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,Int_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVFAZIA */
static void G__setup_memvarKVFAZIA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA));
   { KVFAZIA *p; p=(KVFAZIA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TString),-1,-1,2,"fFGeoType=",0,"type of FAZIA geometry (=\"compact\",...)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFDist=",0,"distance of FAZIA detectors from target (in cm)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFThetaMin=",0,"minimum polar angle for compact geometry (in degrees)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNblocks=",0,"number of blocks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStartingBlockNumber=",0,"starting number of block incrementation");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBuildTarget=",0,"kTRUE to include target frame in the geometry");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TString),-1,-1,2,"fCorrespondanceFile=",0,"name of the file where are listed links between geometry and detector names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVString),-1,-1,2,"fDetectorLabels=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVString),-1,-1,2,"fSignalTypes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVISOFAZIA */
static void G__setup_memvarKVISOFAZIA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA));
   { KVISOFAZIA *p; p=(KVISOFAZIA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVPSAResult */
static void G__setup_memvarKVPSAResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult));
   { KVPSAResult *p; p=(KVPSAResult*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSignal */
static void G__setup_memvarKVSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal));
   { KVSignal *p; p=(KVSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBlock=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fQuartet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TString),-1,-1,2,"fQuartetName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTelescope=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TString),-1,-1,2,"fTelName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TString),-1,-1,2,"fDetName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TString),-1,-1,2,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TString),-1,-1,2,"fDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TArrayF),-1,-1,2,"fAdc=",0,"! needed to use the psa methods copied from FClasses of Firenze");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAmplitude=",0,"amplitude of the signal");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRiseTime=",0,"rise time of the signal");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fIMax=",0,"position of the maximum in channel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTMax=",0,"position of the maximum in ns");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYmax=",0,"raw min/max of the signal");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBaseLine=",0,"base line mean value");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaBase=",0,"base line rms");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fChannelWidth=",0,"channel width in ns");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fChannelWidthInt=",0,"channel width of interpolated signal in ns");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFirstBL=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLastBL=",0,"first and last channel number to compute the base line");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTauRC=",0,"tau_rc of the electronics. Used for pole zero cancellation.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrapRiseTime=",0,"rise time of the trapezoidal shaper");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrapFlatTop=",0,"flat top of the trapezoidal shaper");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGaussSigma=",0,"sigma of the semi-gaussian shaper");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fWithPoleZeroCorrection=",0,"use or nor pole zero correction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVFAZIABlock */
static void G__setup_memvarKVFAZIABlock(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock));
   { KVFAZIABlock *p; p=(KVFAZIABlock*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTotSidWBlind=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVCurrentSignal */
static void G__setup_memvarKVCurrentSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal));
   { KVCurrentSignal *p; p=(KVCurrentSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDigitalFilter */
static void G__setup_memvarKVDigitalFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter));
   { KVDigitalFilter *p; p=(KVDigitalFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"a=",0,"coefficients.");
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"b=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"Ncoeff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"tau_clk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVChargeSignal */
static void G__setup_memvarKVChargeSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal));
   { KVChargeSignal *p; p=(KVChargeSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TF1),-1,-1,2,"fFunc1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TF1),-1,-1,2,"fFunc2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TGraph),-1,-1,2,"bidim=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVFAZIARawEvent */
static void G__setup_memvarKVFAZIARawEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent));
   { KVFAZIARawEvent *p; p=(KVFAZIARawEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClonesArray),-1,-1,2,"fSignals=",0,"-> array where signals are storred");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVNameValueList),-1,-1,2,"fValues=",0,"-> list of values");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumber=",0,"event number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAFAZIA */
static void G__setup_memvarKVINDRAFAZIA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA));
   { KVINDRAFAZIA *p; p=(KVINDRAFAZIA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TString),-1,-1,2,"fFGeoType=",0,"type of FAZIA geometry (=\"compact\",...)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFDist=",0,"distance of FAZIA detectors from target (in cm)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFThetaMin=",0,"minimum polar angle for compact geometry (in degrees)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVFAZIADetector */
static void G__setup_memvarKVFAZIADetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector));
   { KVFAZIADetector *p; p=(KVFAZIADetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVList),-1,-1,2,"fSignals=",0,"list of electronics signal (current, charge, etc... )");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBlock=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fQuartet=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTelescope=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVFAZIA_2B */
static void G__setup_memvarKVFAZIA_2B(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B));
   { KVFAZIA_2B *p; p=(KVFAZIA_2B*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVFAZIASYM */
static void G__setup_memvarKVFAZIASYM(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM));
   { KVFAZIASYM *p; p=(KVFAZIASYM*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__FAZIAgeometry() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVFAZIA(void) {
   /* KVFAZIA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA));
   G__memfunc_setup("BuildFAZIA",859,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeometryParameters",2176,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildTarget",1111,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateCorrespondanceFile",2657,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVFAZIA",524,G__G__FAZIAgeometry_680_0_5, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDetectorLabel",1571,G__G__FAZIAgeometry_680_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - label", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetectorEvent",1628,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVDetectorEvent' - 0 - detev U 'TSeqCollection' - 0 - fired_params", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDTelescopes",1476,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'KVDetector' - 0 - - U 'KVDetector' - 0 - - "
"U 'TCollection' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfBlocks",1692,G__G__FAZIAgeometry_680_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncludeTargetInGeometry",2350,G__G__FAZIAgeometry_680_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' include", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorLabels",1709,G__G__FAZIAgeometry_680_0_12, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignalTypes",1427,G__G__FAZIAgeometry_680_0_13, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_680_0_14, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_680_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_680_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_680_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_680_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_680_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_680_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_680_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_680_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIA::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIA", 650, G__G__FAZIAgeometry_680_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVISOFAZIA(void) {
   /* KVISOFAZIA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA));
   G__memfunc_setup("BuildFAZIA",859,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeometryParameters",2176,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVISOFAZIA",759,G__G__FAZIAgeometry_681_0_3, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVISOFAZIA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_681_0_4, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVISOFAZIA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_681_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVISOFAZIA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_681_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVISOFAZIA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_681_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVISOFAZIA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_681_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_681_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVISOFAZIA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_681_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVISOFAZIA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_681_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVISOFAZIA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_681_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVISOFAZIA::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVISOFAZIA", 885, G__G__FAZIAgeometry_681_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVPSAResult(void) {
   /* KVPSAResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult));
   G__memfunc_setup("KVPSAResult",1028,G__G__FAZIAgeometry_696_0_1, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVPSAResult",1028,G__G__FAZIAgeometry_696_0_2, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_696_0_4, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVPSAResult::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_696_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVPSAResult::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_696_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVPSAResult::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_696_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVPSAResult::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_696_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_696_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVPSAResult::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_696_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVPSAResult::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_696_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVPSAResult::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_696_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVPSAResult::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVPSAResult", 1154, G__G__FAZIAgeometry_696_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSignal(void) {
   /* KVSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSignal",767,G__G__FAZIAgeometry_697_0_2, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSignal",767,G__G__FAZIAgeometry_697_0_3, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSignal",767,G__G__FAZIAgeometry_697_0_4, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - name u 'TString' - 11 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetectorName",1511,G__G__FAZIAgeometry_697_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - detname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeduceFromName",1375,G__G__FAZIAgeometry_697_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__G__FAZIAgeometry_697_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' chopt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetData",678,G__G__FAZIAgeometry_697_0_10, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - nn D - 'Double_t' 0 - xx "
"D - 'Double_t' 0 - yy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetADCData",878,G__G__FAZIAgeometry_697_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TreateSignal",1219,G__G__FAZIAgeometry_697_0_13, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeGlobals",1441,G__G__FAZIAgeometry_697_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawAmplitude",1519,G__G__FAZIAgeometry_697_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadPSAParameters",1656,G__G__FAZIAgeometry_697_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDefaultValues",1633,G__G__FAZIAgeometry_697_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeBaseLine",1504,G__G__FAZIAgeometry_697_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeAmplitude",1666,G__G__FAZIAgeometry_697_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeRiseTime",1535,G__G__FAZIAgeometry_697_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlockNumber",1396,G__G__FAZIAgeometry_697_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQuartetNumber",1647,G__G__FAZIAgeometry_697_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQuartetName",1415,G__G__FAZIAgeometry_697_0_23, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTelescopeNumber",1837,G__G__FAZIAgeometry_697_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTelescopeName",1605,G__G__FAZIAgeometry_697_0_25, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__G__FAZIAgeometry_697_0_26, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__G__FAZIAgeometry_697_0_27, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__G__FAZIAgeometry_697_0_28, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelWidth",1509,G__G__FAZIAgeometry_697_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tau", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxT",678,G__G__FAZIAgeometry_697_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNSamples",1103,G__G__FAZIAgeometry_697_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBaseLineLength",1681,G__G__FAZIAgeometry_697_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - length i - 'Int_t' 0 '0' first", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTauRC",747,G__G__FAZIAgeometry_697_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - taurc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrapShaperParameters",2362,G__G__FAZIAgeometry_697_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - rise d - 'Double_t' 0 - flat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSemiGaussParameter",2142,G__G__FAZIAgeometry_697_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - sig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPoleZeroCorrection",2164,G__G__FAZIAgeometry_697_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' with", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArray",799,G__G__FAZIAgeometry_697_0_37, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TArrayF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelWidth",1497,G__G__FAZIAgeometry_697_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSamples",1091,G__G__FAZIAgeometry_697_0_39, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTauRC",735,G__G__FAZIAgeometry_697_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBLFirst",950,G__G__FAZIAgeometry_697_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBLLength",1040,G__G__FAZIAgeometry_697_0_42, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrapRiseTime",1497,G__G__FAZIAgeometry_697_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrapFlatTop",1393,G__G__FAZIAgeometry_697_0_44, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussSigma",1300,G__G__FAZIAgeometry_697_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmin",701,G__G__FAZIAgeometry_697_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmax",703,G__G__FAZIAgeometry_697_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAmplitude",1221,G__G__FAZIAgeometry_697_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRiseTime",1090,G__G__FAZIAgeometry_697_0_49, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseLine",1059,G__G__FAZIAgeometry_697_0_50, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaBaseLine",1556,G__G__FAZIAgeometry_697_0_51, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindMedia",865,G__G__FAZIAgeometry_697_0_52, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - tsta d - - 0 - tsto", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindMedia",865,G__G__FAZIAgeometry_697_0_53, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tsta i - - 0 - tsto", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSigma2",932,G__G__FAZIAgeometry_697_0_54, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - tsta d - - 0 - tsto", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSigma2",932,G__G__FAZIAgeometry_697_0_55, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tsta i - - 0 - tsto", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiply",864,G__G__FAZIAgeometry_697_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - fact", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__FAZIAgeometry_697_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - fact", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTzeroCFDCubic",1608,G__G__FAZIAgeometry_697_0_58, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - - 0 - level i - - 0 - Nrecurr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTzeroCFDCubic_rev",2036,G__G__FAZIAgeometry_697_0_59, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - level d - - 0 - tend "
"i - - 0 - Nrecurr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CubicInterpolation",1870,G__G__FAZIAgeometry_697_0_60, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"F - - 0 - data i - - 0 - x2 "
"d - - 0 - fmax i - - 0 - Nrecurr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildCubicSignal",1588,G__G__FAZIAgeometry_697_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '1' taufinal", "Interpolazione mediante cubic", (void*) NULL, 1);
   G__memfunc_setup("GetDataInter",1180,G__G__FAZIAgeometry_697_0_62, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataInterCubic",1666,G__G__FAZIAgeometry_697_0_63, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FIR_ApplyTrapezoidal",1989,G__G__FAZIAgeometry_697_0_64, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - trise d - - 0 - tflat", "trise=sqrt(12)*tausha di CR-RC^4 se tflat=trise/2", (void*) NULL, 0);
   G__memfunc_setup("FIR_ApplySemigaus",1668,G__G__FAZIAgeometry_697_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tau_usec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FIR_ApplyRCLowPass",1700,G__G__FAZIAgeometry_697_0_66, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - time_usec i - - 0 '0' reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FIR_ApplyRCHighPass",1778,G__G__FAZIAgeometry_697_0_67, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - time_usec i - - 0 '0' reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FIR_ApplyRecursiveFilter",2404,G__G__FAZIAgeometry_697_0_68, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - a0 i - - 0 - N "
"D - - 0 - a D - - 0 - b "
"i - - 0 - reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PoleZeroSuppression",2011,G__G__FAZIAgeometry_697_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - tauRC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyWindowing",1468,G__G__FAZIAgeometry_697_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '3' window_type", "0: barlett, 1:hanning, 2:hamming, 3: blackman", (void*) NULL, 0);
   G__memfunc_setup("FFT",224,G__G__FAZIAgeometry_697_0_71, 105, -1, -1, 0, 6, 3, 1, 0, 
"h - - 0 - p_nSamples g - - 0 - p_bInverseTransform "
"D - - 0 - p_lpRealIn D - - 0 - p_lpImagIn "
"D - - 0 - p_lpRealOut D - - 0 - p_lpImagOut", "nsamples: power of 2", (void*) G__func2void( (int (*)(unsigned int, bool, double*, double*, double*, double*))(&KVSignal::FFT) ), 0);
   G__memfunc_setup("FFT",224,G__G__FAZIAgeometry_697_0_72, 105, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 - p_bInverseTransform D - - 0 - p_lpRealOut "
"D - - 0 - p_lpImagOut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FFT2Histo",793,G__G__FAZIAgeometry_697_0_73, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TH1), -1, 0, 2, 1, 1, 0, 
"i - - 0 - output U 'TH1' - 0 '0' hh", "0 modulo, 1 modulo db (normalized), 2, re, 3 im", (void*) NULL, 0);
   G__memfunc_setup("ApplyModifications",1871,G__G__FAZIAgeometry_697_0_74, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 '0' newSignal i - 'Int_t' 0 '-1' nsa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_697_0_75, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSignal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_697_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSignal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_697_0_77, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSignal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_697_0_78, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSignal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_697_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_697_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSignal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_697_0_84, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSignal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_697_0_85, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSignal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_697_0_86, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSignal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVSignal", 767, G__G__FAZIAgeometry_697_0_87, (int) ('i'), G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal), -1, 0, 1, 1, 1, 0, "u 'KVSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVSignal", 893, G__G__FAZIAgeometry_697_0_88, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FAZIAgeometry_697_0_89, (int) ('u'), G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal), -1, 1, 1, 1, 1, 0, "u 'KVSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVFAZIABlock(void) {
   /* KVFAZIABlock */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock));
   G__memfunc_setup("KVFAZIABlock",1015,G__G__FAZIAgeometry_698_0_1, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalSideWithBlindage",2395,G__G__FAZIAgeometry_698_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_698_0_3, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIABlock::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_698_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIABlock::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_698_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIABlock::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_698_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIABlock::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_698_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_698_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIABlock::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_698_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIABlock::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_698_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIABlock::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_698_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIABlock::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVFAZIABlock", 1015, G__G__FAZIAgeometry_698_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIABlock), -1, 0, 1, 1, 1, 0, "u 'KVFAZIABlock' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIABlock", 1141, G__G__FAZIAgeometry_698_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVCurrentSignal(void) {
   /* KVCurrentSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVCurrentSignal",1506,G__G__FAZIAgeometry_699_0_2, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVCurrentSignal",1506,G__G__FAZIAgeometry_699_0_3, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDefaultValues",1633,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadPSAParameters",1656,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - dettype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TreateSignal",1219,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_699_0_8, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVCurrentSignal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_699_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCurrentSignal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_699_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVCurrentSignal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_699_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVCurrentSignal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_699_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_699_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCurrentSignal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_699_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVCurrentSignal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_699_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCurrentSignal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_699_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVCurrentSignal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVCurrentSignal", 1506, G__G__FAZIAgeometry_699_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal), -1, 0, 1, 1, 1, 0, "u 'KVCurrentSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVCurrentSignal", 1632, G__G__FAZIAgeometry_699_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FAZIAgeometry_699_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVCurrentSignal), -1, 1, 1, 1, 1, 0, "u 'KVCurrentSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDigitalFilter(void) {
   /* KVDigitalFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter));
   G__memfunc_setup("KVDigitalFilter",1477,G__G__FAZIAgeometry_700_0_1, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 1, 1, 1, 0, "d - - 11 '10' tau", "sconsigliato. usa Build*", (void*) NULL, 0);
   G__memfunc_setup("KVDigitalFilter",1477,G__G__FAZIAgeometry_700_0_2, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 4, 1, 1, 0, 
"d - - 11 - tau i - - 0 - N "
"D - - 10 - Xcoeffs D - - 10 - Ycoeffs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDigitalFilter",1477,G__G__FAZIAgeometry_700_0_3, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 1, 1, 1, 0, "u 'KVDigitalFilter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__FAZIAgeometry_700_0_4, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 1, 1, 1, 0, "u 'KVDigitalFilter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCoeffs",1123,G__G__FAZIAgeometry_700_0_5, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCoeffsDSP",1354,G__G__FAZIAgeometry_700_0_6, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCoeffs_AsC",1465,G__G__FAZIAgeometry_700_0_7, 121, -1, -1, 0, 0, 1, 1, 8, "", "printed like a C array;", (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", "DRAW modulo!", (void*) NULL, 1);
   G__memfunc_setup("Quantize",849,G__G__FAZIAgeometry_700_0_9, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - - 0 - nbits i - - 0 '0' use_pow2 "
"D - - 0 '0' xgain I - - 0 '0' x_out "
"I - - 0 '0' y_out I - - 0 '0' x_scale "
"I - - 0 '0' y_scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildRCLowPassDeconv",1965,G__G__FAZIAgeometry_700_0_10, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 2, 3, 1, 0, 
"d - - 11 - tau_usec d - - 11 - tau_clk", (char*)NULL, (void*) G__func2void( (KVDigitalFilter (*)(const double&, const double&))(&KVDigitalFilter::BuildRCLowPassDeconv) ), 0);
   G__memfunc_setup("BuildRCLowPass",1358,G__G__FAZIAgeometry_700_0_11, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 2, 3, 1, 0, 
"d - - 11 - tau_usec d - - 11 - tau_clk", (char*)NULL, (void*) G__func2void( (KVDigitalFilter (*)(const double&, const double&))(&KVDigitalFilter::BuildRCLowPass) ), 0);
   G__memfunc_setup("BuildRCHighPass",1436,G__G__FAZIAgeometry_700_0_12, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 2, 3, 1, 0, 
"d - - 11 - tau_usec d - - 11 - tau_clk", (char*)NULL, (void*) G__func2void( (KVDigitalFilter (*)(const double&, const double&))(&KVDigitalFilter::BuildRCHighPass) ), 0);
   G__memfunc_setup("BuildRCHighPassWithPZ",2018,G__G__FAZIAgeometry_700_0_13, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 3, 3, 1, 0, 
"d - - 11 - tau_usec d - - 11 - preamp_decay_usec "
"d - - 11 - tau_clk", (char*)NULL, (void*) G__func2void( (KVDigitalFilter (*)(const double&, const double&, const double&))(&KVDigitalFilter::BuildRCHighPassWithPZ) ), 0);
   G__memfunc_setup("BuildChebyshev",1425,G__G__FAZIAgeometry_700_0_14, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 5, 3, 1, 0, 
"d - - 11 - freq_cutoff_mhz i - - 0 - is_highpass "
"d - - 11 - percent_ripple i - - 0 - npoles "
"d - - 11 - tau_clk", (char*)NULL, (void*) G__func2void( (KVDigitalFilter (*)(const double&, int, const double&, int, const double&))(&KVDigitalFilter::BuildChebyshev) ), 0);
   G__memfunc_setup("BuildUnity",1033,G__G__FAZIAgeometry_700_0_15, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 1, 3, 1, 0, "d - - 11 - tau_clk", (char*)NULL, (void*) G__func2void( (KVDigitalFilter (*)(const double&))(&KVDigitalFilter::BuildUnity) ), 0);
   G__memfunc_setup("BuildIntegrator",1551,G__G__FAZIAgeometry_700_0_16, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 1, 3, 1, 0, "d - - 11 - tau_clk", (char*)NULL, (void*) G__func2void( (KVDigitalFilter (*)(const double&))(&KVDigitalFilter::BuildIntegrator) ), 0);
   G__memfunc_setup("BuildInverse",1228,G__G__FAZIAgeometry_700_0_17, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 1, 3, 1, 0, "U 'KVDigitalFilter' - 0 - filter", (char*)NULL, (void*) G__func2void( (KVDigitalFilter (*)(KVDigitalFilter*))(&KVDigitalFilter::BuildInverse) ), 0);
   G__memfunc_setup("Double2DSP",884,G__G__FAZIAgeometry_700_0_18, 105, -1, -1, 0, 1, 3, 1, 0, "d - - 11 - val", (char*)NULL, (void*) G__func2void( (int (*)(const double&))(&KVDigitalFilter::Double2DSP) ), 0);
   G__memfunc_setup("DSP2Double",884,G__G__FAZIAgeometry_700_0_19, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 10 - val", (char*)NULL, (void*) G__func2void( (double (*)(const int))(&KVDigitalFilter::DSP2Double) ), 0);
   G__memfunc_setup("Compress",844,G__G__FAZIAgeometry_700_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", "shorten removing unused coeffs;", (void*) NULL, 0);
   G__memfunc_setup("CombineStages",1316,G__G__FAZIAgeometry_700_0_21, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 3, 3, 1, 0, 
"u 'KVDigitalFilter' - 11 - f1 u 'KVDigitalFilter' - 11 - f2 "
"i - - 0 '0' parallel", "default is cascade", (void*) G__func2void( (KVDigitalFilter (*)(const KVDigitalFilter&, const KVDigitalFilter&, int))(&KVDigitalFilter::CombineStages) ), 0);
   G__memfunc_setup("CombineStages",1316,G__G__FAZIAgeometry_700_0_22, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 3, 3, 1, 0, 
"U 'KVDigitalFilter' - 10 - f1 U 'KVDigitalFilter' - 10 - f2 "
"i - - 0 '0' parallel", "default is cascade", (void*) G__func2void( (KVDigitalFilter (*)(const KVDigitalFilter*, const KVDigitalFilter*, int))(&KVDigitalFilter::CombineStages) ), 0);
   G__memfunc_setup("CombineStagesMany",1721,G__G__FAZIAgeometry_700_0_23, 117, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVDigitalFilter), -1, 0, 10, 3, 1, 0, 
"U 'KVDigitalFilter' - 10 - f1 U 'KVDigitalFilter' - 10 - f2 "
"U 'KVDigitalFilter' - 10 '0' f3 U 'KVDigitalFilter' - 10 '0' f4 "
"U 'KVDigitalFilter' - 10 '0' f5 U 'KVDigitalFilter' - 10 '0' f6 "
"U 'KVDigitalFilter' - 10 '0' f7 U 'KVDigitalFilter' - 10 '0' f8 "
"U 'KVDigitalFilter' - 10 '0' f9 U 'KVDigitalFilter' - 10 '0' f10", (char*)NULL, (void*) G__func2void( (KVDigitalFilter (*)(const KVDigitalFilter*, const KVDigitalFilter*, const KVDigitalFilter*, const KVDigitalFilter*, const KVDigitalFilter*, const KVDigitalFilter*, const KVDigitalFilter*, const KVDigitalFilter*, const KVDigitalFilter*, const KVDigitalFilter*))(&KVDigitalFilter::CombineStagesMany) ), 0);
   G__memfunc_setup("ComputeGainDC",1251,G__G__FAZIAgeometry_700_0_24, 100, -1, -1, 0, 0, 1, 1, 0, "", "gain at 0 frequency", (void*) NULL, 0);
   G__memfunc_setup("ComputeGainNy",1315,G__G__FAZIAgeometry_700_0_25, 100, -1, -1, 0, 0, 1, 1, 0, "", "gain at Nyquist frequency (0.5)", (void*) NULL, 0);
   G__memfunc_setup("Multiply",864,G__G__FAZIAgeometry_700_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXcoeff",891,G__G__FAZIAgeometry_700_0_27, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYcoeff",892,G__G__FAZIAgeometry_700_0_28, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXcoeff",903,G__G__FAZIAgeometry_700_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYcoeff",904,G__G__FAZIAgeometry_700_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXarray",919,G__G__FAZIAgeometry_700_0_31, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYarray",920,G__G__FAZIAgeometry_700_0_32, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTauClk",868,G__G__FAZIAgeometry_700_0_33, 100, -1, -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNCoeff",849,G__G__FAZIAgeometry_700_0_34, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyTo",713,G__G__FAZIAgeometry_700_0_35, 121, -1, -1, 0, 3, 1, 1, 8, 
"D - - 0 - data i - - 10 - N "
"i - - 0 '0' reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyTo",713,G__G__FAZIAgeometry_700_0_36, 121, -1, -1, 0, 3, 1, 1, 8, 
"F - - 0 - data i - - 10 - N "
"i - - 0 '0' reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyTo",713,G__G__FAZIAgeometry_700_0_37, 121, -1, -1, 0, 3, 1, 1, 8, 
"I - - 0 - data i - - 10 - N "
"i - - 0 '0' reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FIRApplyTo",938,G__G__FAZIAgeometry_700_0_38, 121, -1, -1, 0, 3, 1, 1, 8, 
"D - - 0 - datax i - - 10 - NSamples "
"i - - 0 - reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FIRApplyTo",938,G__G__FAZIAgeometry_700_0_39, 121, -1, -1, 0, 3, 1, 1, 8, 
"F - - 0 - datax i - - 10 - NSamples "
"i - - 0 - reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyTo",713,G__G__FAZIAgeometry_700_0_40, 121, -1, -1, 0, 2, 1, 1, 8, 
"U 'KVSignal' - 0 - s i - - 0 '0' reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FIRApplyTo",938,G__G__FAZIAgeometry_700_0_41, 121, -1, -1, 0, 2, 1, 1, 8, 
"U 'KVSignal' - 0 - s i - - 0 '0' reverse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Alloc",491,G__G__FAZIAgeometry_700_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - Ncoeff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Azzera",621,G__G__FAZIAgeometry_700_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadMatlabFIR",1198,G__G__FAZIAgeometry_700_0_44, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - filecoeff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteMatlabFIR",1341,G__G__FAZIAgeometry_700_0_45, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - filecoeff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeChebyshevCoeffs_serv",2803,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 10, 3, 2, 0, 
"d - - 11 - fc d - - 11 - lh "
"d - - 11 - pr d - - 11 - np "
"i - - 0 - p D - - 0 - a0 "
"D - - 0 - a1 D - - 0 - a2 "
"D - - 0 - b1 D - - 0 - b2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeChebyshevCoeffs",2260,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 3, 2, 0, 
"d - - 11 - freq_cutoff i - - 0 - is_highpass "
"d - - 11 - percent_ripple i - - 0 - npoles "
"D - - 0 - a D - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_700_0_48, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDigitalFilter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_700_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDigitalFilter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_700_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDigitalFilter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_700_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDigitalFilter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_700_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_700_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDigitalFilter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_700_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDigitalFilter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_700_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDigitalFilter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_700_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDigitalFilter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDigitalFilter", 1603, G__G__FAZIAgeometry_700_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVChargeSignal(void) {
   /* KVChargeSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitFunction",1417,G__G__FAZIAgeometry_701_0_2, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVChargeSignal",1353,G__G__FAZIAgeometry_701_0_3, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVChargeSignal",1353,G__G__FAZIAgeometry_701_0_4, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefaultValues",1633,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadPSAParameters",1656,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - dettype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TreateSignal",1219,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TreateSignal",1219,G__G__FAZIAgeometry_701_0_9, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVPSAResult), -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - filter", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxFluctuationsWindow",2495,G__G__FAZIAgeometry_701_0_10, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - window i - 'Int_t' 0 '10' width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorre",795,G__G__FAZIAgeometry_701_0_11, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TGraph), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_701_0_12, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVChargeSignal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_701_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChargeSignal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_701_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVChargeSignal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_701_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVChargeSignal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_701_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_701_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChargeSignal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_701_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChargeSignal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_701_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChargeSignal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_701_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChargeSignal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVChargeSignal", 1353, G__G__FAZIAgeometry_701_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal), -1, 0, 1, 1, 1, 0, "u 'KVChargeSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVChargeSignal", 1479, G__G__FAZIAgeometry_701_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FAZIAgeometry_701_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVChargeSignal), -1, 1, 1, 1, 1, 0, "u 'KVChargeSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVFAZIARawEvent(void) {
   /* KVFAZIARawEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent));
   G__memfunc_setup("KVFAZIARawEvent",1336,G__G__FAZIAgeometry_703_0_1, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ntot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVFAZIARawEvent",1336,G__G__FAZIAgeometry_703_0_2, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewSignal",1169,G__G__FAZIAgeometry_703_0_5, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal), -1, 0, 2, 1, 1, 0, 
"u 'KVString' - 0 - name u 'KVString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignals",1009,G__G__FAZIAgeometry_703_0_6, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumber",917,G__G__FAZIAgeometry_703_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumber",905,G__G__FAZIAgeometry_703_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValues",912,G__G__FAZIAgeometry_703_0_9, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVNameValueList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_703_0_10, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIARawEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_703_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIARawEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_703_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIARawEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_703_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIARawEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_703_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_703_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIARawEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_703_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIARawEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_703_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIARawEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_703_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIARawEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVFAZIARawEvent", 1336, G__G__FAZIAgeometry_703_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent), -1, 0, 1, 1, 1, 0, "u 'KVFAZIARawEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIARawEvent", 1462, G__G__FAZIAgeometry_703_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FAZIAgeometry_703_0_24, (int) ('u'), G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIARawEvent), -1, 1, 1, 1, 1, 0, "u 'KVFAZIARawEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAFAZIA(void) {
   /* KVINDRAFAZIA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA));
   G__memfunc_setup("BuildFAZIACompact",1570,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRAFAZIA",890,G__G__FAZIAgeometry_776_0_2, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVINDRAFAZIA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDTelescopes",1476,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'KVDetector' - 0 - - U 'KVDetector' - 0 - - "
"U 'TCollection' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_776_0_5, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAFAZIA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_776_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAFAZIA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_776_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAFAZIA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_776_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAFAZIA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_776_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_776_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAFAZIA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_776_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAFAZIA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_776_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAFAZIA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_776_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAFAZIA::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAFAZIA", 1016, G__G__FAZIAgeometry_776_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVFAZIADetector(void) {
   /* KVFAZIADetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "initialisatino method called by the constructors", (void*) NULL, 0);
   G__memfunc_setup("SetProperties",1369,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVFAZIADetector",1350,G__G__FAZIAgeometry_777_0_3, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVFAZIADetector",1350,G__G__FAZIAgeometry_777_0_4, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIADetector), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - type f - 'Float_t' 10 '0.0' thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fired",490,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"any\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSignal",906,G__G__FAZIAgeometry_777_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVSignal' - 0 - signal C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasSignal",890,G__G__FAZIAgeometry_777_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignal",894,G__G__FAZIAgeometry_777_0_11, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignal",894,G__G__FAZIAgeometry_777_0_12, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVSignal), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSignals",1807,G__G__FAZIAgeometry_777_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfSignals",1602,G__G__FAZIAgeometry_777_0_14, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlockNumber",1396,G__G__FAZIAgeometry_777_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQuartetNumber",1647,G__G__FAZIAgeometry_777_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTelescopeNumber",1837,G__G__FAZIAgeometry_777_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_777_0_18, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIADetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_777_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIADetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_777_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIADetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_777_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIADetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_777_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_777_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIADetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_777_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIADetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_777_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIADetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_777_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIADetector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIADetector", 1476, G__G__FAZIAgeometry_777_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVFAZIA_2B(void) {
   /* KVFAZIA_2B */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B));
   G__memfunc_setup("BuildFAZIA",859,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeometryParameters",2176,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVFAZIA_2B",735,G__G__FAZIAgeometry_778_0_3, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA_2B), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_778_0_4, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIA_2B::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_778_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIA_2B::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_778_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIA_2B::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_778_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIA_2B::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_778_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_778_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIA_2B::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_778_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIA_2B::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_778_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIA_2B::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_778_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIA_2B::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIA_2B", 861, G__G__FAZIAgeometry_778_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVFAZIASYM(void) {
   /* KVFAZIASYM */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM));
   G__memfunc_setup("BuildFAZIA",859,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeometryParameters",2176,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVFAZIASYM",773,G__G__FAZIAgeometry_779_0_3, 105, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIASYM), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAgeometry_779_0_4, 85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIASYM::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAgeometry_779_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIASYM::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAgeometry_779_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIASYM::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAgeometry_779_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIASYM::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAgeometry_779_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAgeometry_779_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIASYM::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAgeometry_779_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIASYM::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAgeometry_779_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIASYM::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAgeometry_779_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIASYM::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIASYM", 899, G__G__FAZIAgeometry_779_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__FAZIAgeometry() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gFazia),85,0,0,G__get_linked_tagnum(&G__G__FAZIAgeometryLN_KVFAZIA),-1,-1,1,"gFazia=",0,(char*)NULL);
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__FAZIAgeometry() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__FAZIAgeometry() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__FAZIAgeometryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVString = { "KVString" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVList = { "KVList" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVMaterial = { "KVMaterial" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVPosition = { "KVPosition" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVNameValueList = { "KVNameValueList" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVDetector = { "KVDetector" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVGeoStrucElement = { "KVGeoStrucElement" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TGeoAtt = { "TGeoAtt" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR = { "map<long,int,less<long>,allocator<pair<const long,int> > >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TGeoVolumeAssembly = { "TGeoVolumeAssembly" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR = { "map<long,TGeoNavigatorArray*,less<long>,allocator<pair<const long,TGeoNavigatorArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVDetectorEvent = { "KVDetectorEvent" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVMultiDetArray = { "KVMultiDetArray" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVFAZIA = { "KVFAZIA" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVISOFAZIA = { "KVISOFAZIA" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVPSAResult = { "KVPSAResult" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVSignal = { "KVSignal" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVFAZIABlock = { "KVFAZIABlock" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVCurrentSignal = { "KVCurrentSignal" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVDigitalFilter = { "KVDigitalFilter" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVChargeSignal = { "KVChargeSignal" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVFAZIARawEvent = { "KVFAZIARawEvent" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVASMultiDetArray = { "KVASMultiDetArray" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVINDRA = { "KVINDRA" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVINDRAFAZIA = { "KVINDRAFAZIA" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVFAZIADetector = { "KVFAZIADetector" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVFAZIA_2B = { "KVFAZIA_2B" , 99 , -1 };
G__linked_taginfo G__G__FAZIAgeometryLN_KVFAZIASYM = { "KVFAZIASYM" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__FAZIAgeometry() {
  G__G__FAZIAgeometryLN_TClass.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TBuffer.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMemberInspector.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TObject.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TNamed.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TCollection.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TString.tagnum = -1 ;
  G__G__FAZIAgeometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TClonesArray.tagnum = -1 ;
  G__G__FAZIAgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVString.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVBase.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TSeqCollection.tagnum = -1 ;
  G__G__FAZIAgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVList.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TAttLine.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TAttFill.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TAttMarker.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TF1.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TH1.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TGeoVolume.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVMaterial.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVPosition.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVNameValueList.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVDetector.tagnum = -1 ;
  G__G__FAZIAgeometryLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVGeoStrucElement.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TGraph.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TGeoAtt.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TAtt3D.tagnum = -1 ;
  G__G__FAZIAgeometryLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TGeoVolumeAssembly.tagnum = -1 ;
  G__G__FAZIAgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVDetectorEvent.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVMultiDetArray.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVFAZIA.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVISOFAZIA.tagnum = -1 ;
  G__G__FAZIAgeometryLN_TArrayF.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVPSAResult.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVSignal.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVFAZIABlock.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVCurrentSignal.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVDigitalFilter.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVChargeSignal.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVFAZIARawEvent.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVASMultiDetArray.tagnum = -1 ;
  G__G__FAZIAgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVINDRA.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVINDRAFAZIA.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVFAZIADetector.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVFAZIA_2B.tagnum = -1 ;
  G__G__FAZIAgeometryLN_KVFAZIASYM.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__FAZIAgeometry() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TCollection);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TString);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVString);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVList);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TF1);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVMaterial);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVPosition);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVNameValueList);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVDetector);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVGeoStrucElement);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TGraph);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TGeoAtt);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TAtt3D);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TGeoVolumeAssembly);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVDetectorEvent);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVMultiDetArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVFAZIA),sizeof(KVFAZIA),-1,324864,"Base class for description of the FAZIA set up",G__setup_memvarKVFAZIA,G__setup_memfuncKVFAZIA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVISOFAZIA),sizeof(KVISOFAZIA),-1,324864,"FAZIA set-up with two blocks used in LNS 2014 commissioning",G__setup_memvarKVISOFAZIA,G__setup_memfuncKVISOFAZIA);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_TArrayF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVPSAResult),sizeof(KVPSAResult),-1,324864,"class to store PSA parameters and results",G__setup_memvarKVPSAResult,G__setup_memfuncKVPSAResult);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVSignal),sizeof(KVSignal),-1,324864,"simple class to store TArray in a list",G__setup_memvarKVSignal,G__setup_memfuncKVSignal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVFAZIABlock),sizeof(KVFAZIABlock),-1,324864,"Block of 16 telescopes FAZIA",G__setup_memvarKVFAZIABlock,G__setup_memfuncKVFAZIABlock);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVCurrentSignal),sizeof(KVCurrentSignal),-1,324864,"digitized intensity signal",G__setup_memvarKVCurrentSignal,G__setup_memfuncKVCurrentSignal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVDigitalFilter),sizeof(KVDigitalFilter),-1,327424,"FIASCO: Class for digital filtering",G__setup_memvarKVDigitalFilter,G__setup_memfuncKVDigitalFilter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVChargeSignal),sizeof(KVChargeSignal),-1,324864,"digitized charge signal",G__setup_memvarKVChargeSignal,G__setup_memfuncKVChargeSignal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVFAZIARawEvent),sizeof(KVFAZIARawEvent),-1,324864,"Handle list of signals and additional information coming from acquisition file",G__setup_memvarKVFAZIARawEvent,G__setup_memfuncKVFAZIARawEvent);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVASMultiDetArray);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVINDRA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVINDRAFAZIA),sizeof(KVINDRAFAZIA),-1,324864,"INDRA-FAZIA setups",G__setup_memvarKVINDRAFAZIA,G__setup_memfuncKVINDRAFAZIA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVFAZIADetector),sizeof(KVFAZIADetector),-1,324864,"Base class for FAZIA detector",G__setup_memvarKVFAZIADetector,G__setup_memfuncKVFAZIADetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVFAZIA_2B),sizeof(KVFAZIA_2B),-1,324864,"FAZIA set-up with two blocks used in LNS 2014 commissioning",G__setup_memvarKVFAZIA_2B,G__setup_memfuncKVFAZIA_2B);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAgeometryLN_KVFAZIASYM),sizeof(KVFAZIASYM),-1,324864,"Description of the FAZIA set up",G__setup_memvarKVFAZIASYM,G__setup_memfuncKVFAZIASYM);
}
extern "C" void G__cpp_setupG__FAZIAgeometry(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__FAZIAgeometry()");
  G__set_cpp_environmentG__FAZIAgeometry();
  G__cpp_setup_tagtableG__FAZIAgeometry();

  G__cpp_setup_inheritanceG__FAZIAgeometry();

  G__cpp_setup_typetableG__FAZIAgeometry();

  G__cpp_setup_memvarG__FAZIAgeometry();

  G__cpp_setup_memfuncG__FAZIAgeometry();
  G__cpp_setup_globalG__FAZIAgeometry();
  G__cpp_setup_funcG__FAZIAgeometry();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__FAZIAgeometry();
  return;
}
class G__cpp_setup_initG__FAZIAgeometry {
  public:
    G__cpp_setup_initG__FAZIAgeometry() { G__add_setup_func("G__FAZIAgeometry",(G__incsetup)(&G__cpp_setupG__FAZIAgeometry)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__FAZIAgeometry() { G__remove_setup_func("G__FAZIAgeometry"); }
};
G__cpp_setup_initG__FAZIAgeometry G__cpp_setup_initializerG__FAZIAgeometry;

