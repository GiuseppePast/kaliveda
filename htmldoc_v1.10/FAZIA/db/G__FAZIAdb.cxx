//
// File generated by rootcint at Wed Jul 29 15:45:35 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__FAZIAdb
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__FAZIAdb.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVFAZIADBRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIADBRun(void *p = 0);
   static void *newArray_KVFAZIADBRun(Long_t size, void *p);
   static void delete_KVFAZIADBRun(void *p);
   static void deleteArray_KVFAZIADBRun(void *p);
   static void destruct_KVFAZIADBRun(void *p);
   static void streamer_KVFAZIADBRun(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIADBRun*)
   {
      ::KVFAZIADBRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIADBRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIADBRun", ::KVFAZIADBRun::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/db/KVFAZIADBRun.h", 10,
                  typeid(::KVFAZIADBRun), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIADBRun::Dictionary, isa_proxy, 0,
                  sizeof(::KVFAZIADBRun) );
      instance.SetNew(&new_KVFAZIADBRun);
      instance.SetNewArray(&newArray_KVFAZIADBRun);
      instance.SetDelete(&delete_KVFAZIADBRun);
      instance.SetDeleteArray(&deleteArray_KVFAZIADBRun);
      instance.SetDestructor(&destruct_KVFAZIADBRun);
      instance.SetStreamerFunc(&streamer_KVFAZIADBRun);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIADBRun*)
   {
      return GenerateInitInstanceLocal((::KVFAZIADBRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIADBRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVFAZIADB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVFAZIADB(void *p = 0);
   static void *newArray_KVFAZIADB(Long_t size, void *p);
   static void delete_KVFAZIADB(void *p);
   static void deleteArray_KVFAZIADB(void *p);
   static void destruct_KVFAZIADB(void *p);
   static void streamer_KVFAZIADB(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVFAZIADB*)
   {
      ::KVFAZIADB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVFAZIADB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVFAZIADB", ::KVFAZIADB::Class_Version(), "/home/john/software/sources/kaliveda.git/FAZIA/db/KVFAZIADB.h", 16,
                  typeid(::KVFAZIADB), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVFAZIADB::Dictionary, isa_proxy, 0,
                  sizeof(::KVFAZIADB) );
      instance.SetNew(&new_KVFAZIADB);
      instance.SetNewArray(&newArray_KVFAZIADB);
      instance.SetDelete(&delete_KVFAZIADB);
      instance.SetDeleteArray(&deleteArray_KVFAZIADB);
      instance.SetDestructor(&destruct_KVFAZIADB);
      instance.SetStreamerFunc(&streamer_KVFAZIADB);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVFAZIADB*)
   {
      return GenerateInitInstanceLocal((::KVFAZIADB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVFAZIADB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIADBRun::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIADBRun::Class_Name()
{
   return "KVFAZIADBRun";
}

//______________________________________________________________________________
const char *KVFAZIADBRun::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADBRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIADBRun::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADBRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIADBRun::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADBRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIADBRun::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADBRun*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVFAZIADB::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVFAZIADB::Class_Name()
{
   return "KVFAZIADB";
}

//______________________________________________________________________________
const char *KVFAZIADB::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVFAZIADB::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVFAZIADB::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVFAZIADB::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVFAZIADB*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVFAZIADB::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIADB.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDataBase::Streamer(R__b);
      R__b >> kFirstRun;
      R__b >> kLastRun;
      R__b >> fRuns;
      R__b >> fSystems;
      R__b.CheckByteCount(R__s, R__c, KVFAZIADB::IsA());
   } else {
      R__c = R__b.WriteVersion(KVFAZIADB::IsA(), kTRUE);
      KVDataBase::Streamer(R__b);
      R__b << kFirstRun;
      R__b << kLastRun;
      R__b << fRuns;
      R__b << fSystems;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVFAZIADB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIADB.
      TClass *R__cl = ::KVFAZIADB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kFirstRun", &kFirstRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kLastRun", &kLastRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRuns", &fRuns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSystems", &fSystems);
      KVDataBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIADB(void *p) {
      return  p ? new(p) ::KVFAZIADB : new ::KVFAZIADB;
   }
   static void *newArray_KVFAZIADB(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIADB[nElements] : new ::KVFAZIADB[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIADB(void *p) {
      delete ((::KVFAZIADB*)p);
   }
   static void deleteArray_KVFAZIADB(void *p) {
      delete [] ((::KVFAZIADB*)p);
   }
   static void destruct_KVFAZIADB(void *p) {
      typedef ::KVFAZIADB current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVFAZIADB(TBuffer &buf, void *obj) {
      ((::KVFAZIADB*)obj)->::KVFAZIADB::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVFAZIADB

//______________________________________________________________________________
void KVFAZIADBRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVFAZIADBRun.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDBRun::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVFAZIADBRun::IsA());
   } else {
      R__c = R__b.WriteVersion(KVFAZIADBRun::IsA(), kTRUE);
      KVDBRun::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVFAZIADBRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVFAZIADBRun.
      TClass *R__cl = ::KVFAZIADBRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDBRun::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVFAZIADBRun(void *p) {
      return  p ? new(p) ::KVFAZIADBRun : new ::KVFAZIADBRun;
   }
   static void *newArray_KVFAZIADBRun(Long_t nElements, void *p) {
      return p ? new(p) ::KVFAZIADBRun[nElements] : new ::KVFAZIADBRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVFAZIADBRun(void *p) {
      delete ((::KVFAZIADBRun*)p);
   }
   static void deleteArray_KVFAZIADBRun(void *p) {
      delete [] ((::KVFAZIADBRun*)p);
   }
   static void destruct_KVFAZIADBRun(void *p) {
      typedef ::KVFAZIADBRun current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVFAZIADBRun(TBuffer &buf, void *obj) {
      ((::KVFAZIADBRun*)obj)->::KVFAZIADBRun::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVFAZIADBRun

/********************************************************
* G__FAZIAdb.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__FAZIAdb();

extern "C" void G__set_cpp_environmentG__FAZIAdb() {
  G__cpp_reset_tagtableG__FAZIAdb();
}
#include <new>
extern "C" int G__cpp_dllrevG__FAZIAdb() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVFAZIADBRun */
static int G__G__FAZIAdb_358_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIADBRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIADBRun[n];
     } else {
       p = new((void*) gvp) KVFAZIADBRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIADBRun;
     } else {
       p = new((void*) gvp) KVFAZIADBRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIADBRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVFAZIADBRun((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) KVFAZIADBRun((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIADBRun*) G__getstructoffset())->SetTrigger((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVFAZIADBRun*) G__getstructoffset())->GetTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVFAZIADBRun*) G__getstructoffset())->GetTriggerString());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIADBRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIADBRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIADBRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIADBRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIADBRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIADBRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIADBRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIADBRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_358_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIADBRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIADBRun G__TKVFAZIADBRun;
static int G__G__FAZIAdb_358_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIADBRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIADBRun*) (soff+(sizeof(KVFAZIADBRun)*i)))->~G__TKVFAZIADBRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIADBRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIADBRun*) (soff))->~G__TKVFAZIADBRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVFAZIADB */
static int G__G__FAZIAdb_359_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIADB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIADB[n];
     } else {
       p = new((void*) gvp) KVFAZIADB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVFAZIADB;
     } else {
       p = new((void*) gvp) KVFAZIADB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVFAZIADB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVFAZIADB((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVFAZIADB((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIADB*) G__getstructoffset())->AddSystem((KVDBSystem*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIADB*) G__getstructoffset())->AddRun((KVFAZIADBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVFAZIADB*) G__getstructoffset())->GetRun((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVFAZIADB*) G__getstructoffset())->GetRuns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVFAZIADB*) G__getstructoffset())->GetSystem((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVFAZIADB*) G__getstructoffset())->GetSystems());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVFAZIADB*) G__getstructoffset())->WriteRunListFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIADB*) G__getstructoffset())->ReadNewRunList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVFAZIADB*) G__getstructoffset())->WriteSystemsFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVFAZIADB*) G__getstructoffset())->PrintRuns(*(KVNumberList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVFAZIADB*) G__getstructoffset())->GetCalibFileName((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVFAZIADB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIADB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVFAZIADB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVFAZIADB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVFAZIADB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIADB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIADB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVFAZIADB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FAZIAdb_359_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVFAZIADB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVFAZIADB G__TKVFAZIADB;
static int G__G__FAZIAdb_359_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVFAZIADB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVFAZIADB*) (soff+(sizeof(KVFAZIADB)*i)))->~G__TKVFAZIADB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVFAZIADB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVFAZIADB*) (soff))->~G__TKVFAZIADB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVFAZIADBRun */

/* KVFAZIADB */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__FAZIAdb {
 public:
  G__Sizep2memfuncG__FAZIAdb(): p(&G__Sizep2memfuncG__FAZIAdb::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__FAZIAdb::*p)();
};

size_t G__get_sizep2memfuncG__FAZIAdb()
{
  G__Sizep2memfuncG__FAZIAdb a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__FAZIAdb() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun))) {
     KVFAZIADBRun *G__Lderived;
     G__Lderived=(KVFAZIADBRun*)0x1000;
     {
       KVDBRun *G__Lpbase=(KVDBRun*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun),G__get_linked_tagnum(&G__G__FAZIAdbLN_KVDBRun),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun),G__get_linked_tagnum(&G__G__FAZIAdbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun),G__get_linked_tagnum(&G__G__FAZIAdbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun),G__get_linked_tagnum(&G__G__FAZIAdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun),G__get_linked_tagnum(&G__G__FAZIAdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB))) {
     KVFAZIADB *G__Lderived;
     G__Lderived=(KVFAZIADB*)0x1000;
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB),G__get_linked_tagnum(&G__G__FAZIAdbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB),G__get_linked_tagnum(&G__G__FAZIAdbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB),G__get_linked_tagnum(&G__G__FAZIAdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB),G__get_linked_tagnum(&G__G__FAZIAdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__FAZIAdb() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FAZIAdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__FAZIAdbLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVFAZIADBRun */
static void G__setup_memvarKVFAZIADBRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun));
   { KVFAZIADBRun *p; p=(KVFAZIADBRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVFAZIADB */
static void G__setup_memvarKVFAZIADB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB));
   { KVFAZIADB *p; p=(KVFAZIADB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kFirstRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kLastRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAdbLN_KVDBTable),-1,-1,2,"fRuns=",0,"-> table of runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAdbLN_KVDBTable),-1,-1,2,"fSystems=",0,"-> table of systems");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FAZIAdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__FAZIAdb() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVFAZIADBRun(void) {
   /* KVFAZIADBRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun));
   G__memfunc_setup("KVFAZIADBRun",967,G__G__FAZIAdb_358_0_1, 105, G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVFAZIADBRun",967,G__G__FAZIAdb_358_0_2, 105, G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - number C - 'Char_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrigger",1024,G__G__FAZIAdb_358_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigger",1012,G__G__FAZIAdb_358_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerString",1643,G__G__FAZIAdb_358_0_5, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAdb_358_0_6, 85, G__get_linked_tagnum(&G__G__FAZIAdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIADBRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAdb_358_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIADBRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAdb_358_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIADBRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAdb_358_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIADBRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAdb_358_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAdb_358_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIADBRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAdb_358_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIADBRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAdb_358_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIADBRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAdb_358_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIADBRun::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIADBRun", 1093, G__G__FAZIAdb_358_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVFAZIADB(void) {
   /* KVFAZIADB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB));
   G__memfunc_setup("ReadSystemList",1437,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkListToRunRanges",1922,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'TList' - 0 - list h - 'UInt_t' 0 - rr_number "
"h - 'UInt_t' 0 - run_ranges[][2]", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkRecordToRunRanges",2117,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'KVDBRecord' - 0 - rec h - 'UInt_t' 0 - rr_number "
"h - 'UInt_t' 0 - run_ranges[][2]", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkRecordToRunRange",2002,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'KVDBRecord' - 0 - rec h - 'UInt_t' 0 - first_run "
"h - 'UInt_t' 0 - last_run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkListToRunRange",1807,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TList' - 0 - list u 'KVNumberList' - 0 - nl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkRecordToRunRange",2002,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVDBRecord' - 0 - rec u 'KVNumberList' - 0 - nl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkRecordToRun",1509,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVDBRecord' - 0 - rec i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenCalibFile",1261,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 8, 
"C - 'Char_t' 10 - type u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - fs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDBEnv",719,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 2, 9, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVFAZIADB",658,G__G__FAZIAdb_359_0_11, 105, G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVFAZIADB",658,G__G__FAZIAdb_359_0_12, 105, G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddSystem",910,G__G__FAZIAdb_359_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBSystem' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRun",574,G__G__FAZIAdb_359_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVFAZIADBRun' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Save",399,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRun",597,G__G__FAZIAdb_359_0_17, 85, G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADBRun), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRuns",712,G__G__FAZIAdb_359_0_18, 85, G__get_linked_tagnum(&G__G__FAZIAdbLN_KVSeqCollection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSystem",933,G__G__FAZIAdb_359_0_19, 85, G__get_linked_tagnum(&G__G__FAZIAdbLN_KVDBSystem), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - system", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSystems",1048,G__G__FAZIAdb_359_0_20, 85, G__get_linked_tagnum(&G__G__FAZIAdbLN_KVSeqCollection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteRunListFile",1628,G__G__FAZIAdb_359_0_21, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadNewRunList",1399,G__G__FAZIAdb_359_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteSystemsFile",1667,G__G__FAZIAdb_359_0_23, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRuns",949,G__G__FAZIAdb_359_0_24, 121, -1, -1, 0, 1, 1, 1, 8, "u 'KVNumberList' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalibFileName",1532,G__G__FAZIAdb_359_0_26, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 9, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FAZIAdb_359_0_27, 85, G__get_linked_tagnum(&G__G__FAZIAdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVFAZIADB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FAZIAdb_359_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIADB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FAZIAdb_359_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVFAZIADB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FAZIAdb_359_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVFAZIADB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FAZIAdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FAZIAdb_359_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FAZIAdb_359_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIADB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FAZIAdb_359_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIADB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FAZIAdb_359_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVFAZIADB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FAZIAdb_359_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVFAZIADB::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVFAZIADB", 784, G__G__FAZIAdb_359_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__FAZIAdb() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gFaziaDB),85,0,0,G__get_linked_tagnum(&G__G__FAZIAdbLN_KVFAZIADB),-1,-1,1,"gFaziaDB=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__FAZIAdb() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__FAZIAdb() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__FAZIAdbLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TFolder = { "TFolder" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_KVSeqCollection = { "KVSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_KVDBRecord = { "KVDBRecord" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_KVDBTable = { "KVDBTable" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_KVDataBase = { "KVDataBase" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_KVNumberList = { "KVNumberList" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_KVDBSystem = { "KVDBSystem" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_KVDBRun = { "KVDBRun" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_KVFAZIADBRun = { "KVFAZIADBRun" , 99 , -1 };
G__linked_taginfo G__G__FAZIAdbLN_KVFAZIADB = { "KVFAZIADB" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__FAZIAdb() {
  G__G__FAZIAdbLN_TClass.tagnum = -1 ;
  G__G__FAZIAdbLN_TBuffer.tagnum = -1 ;
  G__G__FAZIAdbLN_TMemberInspector.tagnum = -1 ;
  G__G__FAZIAdbLN_TObject.tagnum = -1 ;
  G__G__FAZIAdbLN_TNamed.tagnum = -1 ;
  G__G__FAZIAdbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__FAZIAdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__FAZIAdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TList.tagnum = -1 ;
  G__G__FAZIAdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__FAZIAdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TFolder.tagnum = -1 ;
  G__G__FAZIAdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__FAZIAdbLN_KVSeqCollection.tagnum = -1 ;
  G__G__FAZIAdbLN_KVDBRecord.tagnum = -1 ;
  G__G__FAZIAdbLN_KVDBTable.tagnum = -1 ;
  G__G__FAZIAdbLN_KVDataBase.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__FAZIAdbLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__FAZIAdbLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__FAZIAdbLN_KVNumberList.tagnum = -1 ;
  G__G__FAZIAdbLN_KVDBSystem.tagnum = -1 ;
  G__G__FAZIAdbLN_KVDBRun.tagnum = -1 ;
  G__G__FAZIAdbLN_KVFAZIADBRun.tagnum = -1 ;
  G__G__FAZIAdbLN_KVFAZIADB.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__FAZIAdb() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TList);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TFolder);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_KVSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_KVDBRecord);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_KVDBTable);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_KVDataBase);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_KVNumberList);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_KVDBSystem);
   G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_KVDBRun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_KVFAZIADBRun),sizeof(KVFAZIADBRun),-1,62720,"run description for FAZIA experiment",G__setup_memvarKVFAZIADBRun,G__setup_memfuncKVFAZIADBRun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FAZIAdbLN_KVFAZIADB),sizeof(KVFAZIADB),-1,62720,"database for FAZIA detector",G__setup_memvarKVFAZIADB,G__setup_memfuncKVFAZIADB);
}
extern "C" void G__cpp_setupG__FAZIAdb(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__FAZIAdb()");
  G__set_cpp_environmentG__FAZIAdb();
  G__cpp_setup_tagtableG__FAZIAdb();

  G__cpp_setup_inheritanceG__FAZIAdb();

  G__cpp_setup_typetableG__FAZIAdb();

  G__cpp_setup_memvarG__FAZIAdb();

  G__cpp_setup_memfuncG__FAZIAdb();
  G__cpp_setup_globalG__FAZIAdb();
  G__cpp_setup_funcG__FAZIAdb();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__FAZIAdb();
  return;
}
class G__cpp_setup_initG__FAZIAdb {
  public:
    G__cpp_setup_initG__FAZIAdb() { G__add_setup_func("G__FAZIAdb",(G__incsetup)(&G__cpp_setupG__FAZIAdb)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__FAZIAdb() { G__remove_setup_func("G__FAZIAdb"); }
};
G__cpp_setup_initG__FAZIAdb G__cpp_setup_initializerG__FAZIAdb;

