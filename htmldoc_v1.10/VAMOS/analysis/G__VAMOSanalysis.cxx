//
// File generated by rootcint at Fri Jul 17 15:54:55 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__VAMOSanalysis
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__VAMOSanalysis.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVIVReconIdent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIVReconIdent(void *p = 0);
   static void *newArray_KVIVReconIdent(Long_t size, void *p);
   static void delete_KVIVReconIdent(void *p);
   static void deleteArray_KVIVReconIdent(void *p);
   static void destruct_KVIVReconIdent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIVReconIdent*)
   {
      ::KVIVReconIdent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIVReconIdent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIVReconIdent", ::KVIVReconIdent::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/analysis/KVIVReconIdent.h", 6,
                  typeid(::KVIVReconIdent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIVReconIdent::Dictionary, isa_proxy, 4,
                  sizeof(::KVIVReconIdent) );
      instance.SetNew(&new_KVIVReconIdent);
      instance.SetNewArray(&newArray_KVIVReconIdent);
      instance.SetDelete(&delete_KVIVReconIdent);
      instance.SetDeleteArray(&deleteArray_KVIVReconIdent);
      instance.SetDestructor(&destruct_KVIVReconIdent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIVReconIdent*)
   {
      return GenerateInitInstanceLocal((::KVIVReconIdent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIVReconIdent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Analysisv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Analysisv(void *p);
   static void deleteArray_Analysisv(void *p);
   static void destruct_Analysisv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Analysisv*)
   {
      ::Analysisv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Analysisv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Analysisv", ::Analysisv::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/analysis/Analysisv.h", 21,
                  typeid(::Analysisv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Analysisv::Dictionary, isa_proxy, 4,
                  sizeof(::Analysisv) );
      instance.SetDelete(&delete_Analysisv);
      instance.SetDeleteArray(&deleteArray_Analysisv);
      instance.SetDestructor(&destruct_Analysisv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Analysisv*)
   {
      return GenerateInitInstanceLocal((::Analysisv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Analysisv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Analysisv_e494s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Analysisv_e494s(void *p);
   static void deleteArray_Analysisv_e494s(void *p);
   static void destruct_Analysisv_e494s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Analysisv_e494s*)
   {
      ::Analysisv_e494s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Analysisv_e494s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Analysisv_e494s", ::Analysisv_e494s::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/analysis/Analysisv_e494s.h", 37,
                  typeid(::Analysisv_e494s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Analysisv_e494s::Dictionary, isa_proxy, 4,
                  sizeof(::Analysisv_e494s) );
      instance.SetDelete(&delete_Analysisv_e494s);
      instance.SetDeleteArray(&deleteArray_Analysisv_e494s);
      instance.SetDestructor(&destruct_Analysisv_e494s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Analysisv_e494s*)
   {
      return GenerateInitInstanceLocal((::Analysisv_e494s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Analysisv_e494s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIVRawDataReconstructor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIVRawDataReconstructor(void *p = 0);
   static void *newArray_KVIVRawDataReconstructor(Long_t size, void *p);
   static void delete_KVIVRawDataReconstructor(void *p);
   static void deleteArray_KVIVRawDataReconstructor(void *p);
   static void destruct_KVIVRawDataReconstructor(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIVRawDataReconstructor*)
   {
      ::KVIVRawDataReconstructor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIVRawDataReconstructor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIVRawDataReconstructor", ::KVIVRawDataReconstructor::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/analysis/KVIVRawDataReconstructor.h", 19,
                  typeid(::KVIVRawDataReconstructor), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIVRawDataReconstructor::Dictionary, isa_proxy, 4,
                  sizeof(::KVIVRawDataReconstructor) );
      instance.SetNew(&new_KVIVRawDataReconstructor);
      instance.SetNewArray(&newArray_KVIVRawDataReconstructor);
      instance.SetDelete(&delete_KVIVRawDataReconstructor);
      instance.SetDeleteArray(&deleteArray_KVIVRawDataReconstructor);
      instance.SetDestructor(&destruct_KVIVRawDataReconstructor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIVRawDataReconstructor*)
   {
      return GenerateInitInstanceLocal((::KVIVRawDataReconstructor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIVRawDataReconstructor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIVReconDataAnalyser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIVReconDataAnalyser(void *p = 0);
   static void *newArray_KVIVReconDataAnalyser(Long_t size, void *p);
   static void delete_KVIVReconDataAnalyser(void *p);
   static void deleteArray_KVIVReconDataAnalyser(void *p);
   static void destruct_KVIVReconDataAnalyser(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIVReconDataAnalyser*)
   {
      ::KVIVReconDataAnalyser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIVReconDataAnalyser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIVReconDataAnalyser", ::KVIVReconDataAnalyser::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/analysis/KVIVReconDataAnalyser.h", 10,
                  typeid(::KVIVReconDataAnalyser), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIVReconDataAnalyser::Dictionary, isa_proxy, 4,
                  sizeof(::KVIVReconDataAnalyser) );
      instance.SetNew(&new_KVIVReconDataAnalyser);
      instance.SetNewArray(&newArray_KVIVReconDataAnalyser);
      instance.SetDelete(&delete_KVIVReconDataAnalyser);
      instance.SetDeleteArray(&deleteArray_KVIVReconDataAnalyser);
      instance.SetDestructor(&destruct_KVIVReconDataAnalyser);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIVReconDataAnalyser*)
   {
      return GenerateInitInstanceLocal((::KVIVReconDataAnalyser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIVReconDataAnalyser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Analysisv_e503_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Analysisv_e503(void *p);
   static void deleteArray_Analysisv_e503(void *p);
   static void destruct_Analysisv_e503(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Analysisv_e503*)
   {
      ::Analysisv_e503 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Analysisv_e503 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Analysisv_e503", ::Analysisv_e503::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/analysis/Analysisv_e503.h", 43,
                  typeid(::Analysisv_e503), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Analysisv_e503::Dictionary, isa_proxy, 4,
                  sizeof(::Analysisv_e503) );
      instance.SetDelete(&delete_Analysisv_e503);
      instance.SetDeleteArray(&deleteArray_Analysisv_e503);
      instance.SetDestructor(&destruct_Analysisv_e503);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Analysisv_e503*)
   {
      return GenerateInitInstanceLocal((::Analysisv_e503*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Analysisv_e503*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIVRawDataAnalyser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVIVRawDataAnalyser(void *p);
   static void deleteArray_KVIVRawDataAnalyser(void *p);
   static void destruct_KVIVRawDataAnalyser(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIVRawDataAnalyser*)
   {
      ::KVIVRawDataAnalyser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIVRawDataAnalyser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIVRawDataAnalyser", ::KVIVRawDataAnalyser::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/analysis/KVIVRawDataAnalyser.h", 17,
                  typeid(::KVIVRawDataAnalyser), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIVRawDataAnalyser::Dictionary, isa_proxy, 4,
                  sizeof(::KVIVRawDataAnalyser) );
      instance.SetDelete(&delete_KVIVRawDataAnalyser);
      instance.SetDeleteArray(&deleteArray_KVIVRawDataAnalyser);
      instance.SetDestructor(&destruct_KVIVRawDataAnalyser);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIVRawDataAnalyser*)
   {
      return GenerateInitInstanceLocal((::KVIVRawDataAnalyser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIVRawDataAnalyser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIVSelector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIVSelector(void *p = 0);
   static void *newArray_KVIVSelector(Long_t size, void *p);
   static void delete_KVIVSelector(void *p);
   static void deleteArray_KVIVSelector(void *p);
   static void destruct_KVIVSelector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIVSelector*)
   {
      ::KVIVSelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIVSelector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIVSelector", ::KVIVSelector::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/analysis/KVIVSelector.h", 14,
                  typeid(::KVIVSelector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIVSelector::Dictionary, isa_proxy, 4,
                  sizeof(::KVIVSelector) );
      instance.SetNew(&new_KVIVSelector);
      instance.SetNewArray(&newArray_KVIVSelector);
      instance.SetDelete(&delete_KVIVSelector);
      instance.SetDeleteArray(&deleteArray_KVIVSelector);
      instance.SetDestructor(&destruct_KVIVSelector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIVSelector*)
   {
      return GenerateInitInstanceLocal((::KVIVSelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIVSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVIVReconIdent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIVReconIdent::Class_Name()
{
   return "KVIVReconIdent";
}

//______________________________________________________________________________
const char *KVIVReconIdent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVReconIdent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIVReconIdent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVReconIdent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIVReconIdent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVReconIdent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIVReconIdent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVReconIdent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Analysisv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Analysisv::Class_Name()
{
   return "Analysisv";
}

//______________________________________________________________________________
const char *Analysisv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Analysisv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Analysisv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Analysisv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Analysisv_e494s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Analysisv_e494s::Class_Name()
{
   return "Analysisv_e494s";
}

//______________________________________________________________________________
const char *Analysisv_e494s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv_e494s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Analysisv_e494s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv_e494s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Analysisv_e494s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv_e494s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Analysisv_e494s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv_e494s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIVRawDataReconstructor::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIVRawDataReconstructor::Class_Name()
{
   return "KVIVRawDataReconstructor";
}

//______________________________________________________________________________
const char *KVIVRawDataReconstructor::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVRawDataReconstructor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIVRawDataReconstructor::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVRawDataReconstructor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIVRawDataReconstructor::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVRawDataReconstructor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIVRawDataReconstructor::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVRawDataReconstructor*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIVReconDataAnalyser::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIVReconDataAnalyser::Class_Name()
{
   return "KVIVReconDataAnalyser";
}

//______________________________________________________________________________
const char *KVIVReconDataAnalyser::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVReconDataAnalyser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIVReconDataAnalyser::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVReconDataAnalyser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIVReconDataAnalyser::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVReconDataAnalyser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIVReconDataAnalyser::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVReconDataAnalyser*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Analysisv_e503::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Analysisv_e503::Class_Name()
{
   return "Analysisv_e503";
}

//______________________________________________________________________________
const char *Analysisv_e503::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv_e503*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Analysisv_e503::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv_e503*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Analysisv_e503::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv_e503*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Analysisv_e503::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Analysisv_e503*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIVRawDataAnalyser::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIVRawDataAnalyser::Class_Name()
{
   return "KVIVRawDataAnalyser";
}

//______________________________________________________________________________
const char *KVIVRawDataAnalyser::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVRawDataAnalyser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIVRawDataAnalyser::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVRawDataAnalyser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIVRawDataAnalyser::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVRawDataAnalyser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIVRawDataAnalyser::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVRawDataAnalyser*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIVSelector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIVSelector::Class_Name()
{
   return "KVIVSelector";
}

//______________________________________________________________________________
const char *KVIVSelector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIVSelector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIVSelector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIVSelector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVSelector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVIVRawDataAnalyser::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIVRawDataAnalyser.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIVRawDataAnalyser::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIVRawDataAnalyser::Class(),this);
   }
}

//______________________________________________________________________________
void KVIVRawDataAnalyser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIVRawDataAnalyser.
      TClass *R__cl = ::KVIVRawDataAnalyser::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBidonTree", &fBidonTree);
      KVINDRARawDataAnalyser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVIVRawDataAnalyser(void *p) {
      delete ((::KVIVRawDataAnalyser*)p);
   }
   static void deleteArray_KVIVRawDataAnalyser(void *p) {
      delete [] ((::KVIVRawDataAnalyser*)p);
   }
   static void destruct_KVIVRawDataAnalyser(void *p) {
      typedef ::KVIVRawDataAnalyser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIVRawDataAnalyser

//______________________________________________________________________________
void KVIVRawDataReconstructor::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIVRawDataReconstructor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIVRawDataReconstructor::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIVRawDataReconstructor::Class(),this);
   }
}

//______________________________________________________________________________
void KVIVRawDataReconstructor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIVRawDataReconstructor.
      TClass *R__cl = ::KVIVRawDataReconstructor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fINDRADetEv", &fINDRADetEv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVAMOSDetEv", &fVAMOSDetEv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIVevent", &fIVevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbVAMOSrecon", &fNbVAMOSrecon);
      KVINDRARawDataReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIVRawDataReconstructor(void *p) {
      return  p ? new(p) ::KVIVRawDataReconstructor : new ::KVIVRawDataReconstructor;
   }
   static void *newArray_KVIVRawDataReconstructor(Long_t nElements, void *p) {
      return p ? new(p) ::KVIVRawDataReconstructor[nElements] : new ::KVIVRawDataReconstructor[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIVRawDataReconstructor(void *p) {
      delete ((::KVIVRawDataReconstructor*)p);
   }
   static void deleteArray_KVIVRawDataReconstructor(void *p) {
      delete [] ((::KVIVRawDataReconstructor*)p);
   }
   static void destruct_KVIVRawDataReconstructor(void *p) {
      typedef ::KVIVRawDataReconstructor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIVRawDataReconstructor

//______________________________________________________________________________
void KVIVReconDataAnalyser::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIVReconDataAnalyser.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIVReconDataAnalyser::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIVReconDataAnalyser::Class(),this);
   }
}

//______________________________________________________________________________
void KVIVReconDataAnalyser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIVReconDataAnalyser.
      TClass *R__cl = ::KVIVReconDataAnalyser::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRAReconDataAnalyser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIVReconDataAnalyser(void *p) {
      return  p ? new(p) ::KVIVReconDataAnalyser : new ::KVIVReconDataAnalyser;
   }
   static void *newArray_KVIVReconDataAnalyser(Long_t nElements, void *p) {
      return p ? new(p) ::KVIVReconDataAnalyser[nElements] : new ::KVIVReconDataAnalyser[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIVReconDataAnalyser(void *p) {
      delete ((::KVIVReconDataAnalyser*)p);
   }
   static void deleteArray_KVIVReconDataAnalyser(void *p) {
      delete [] ((::KVIVReconDataAnalyser*)p);
   }
   static void destruct_KVIVReconDataAnalyser(void *p) {
      typedef ::KVIVReconDataAnalyser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIVReconDataAnalyser

//______________________________________________________________________________
void KVIVReconIdent::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIVReconIdent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIVReconIdent::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIVReconIdent::Class(),this);
   }
}

//______________________________________________________________________________
void KVIVReconIdent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIVReconIdent.
      TClass *R__cl = ::KVIVReconIdent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsIVevent", &fIsIVevent);
      KVINDRAReconIdent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIVReconIdent(void *p) {
      return  p ? new(p) ::KVIVReconIdent : new ::KVIVReconIdent;
   }
   static void *newArray_KVIVReconIdent(Long_t nElements, void *p) {
      return p ? new(p) ::KVIVReconIdent[nElements] : new ::KVIVReconIdent[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIVReconIdent(void *p) {
      delete ((::KVIVReconIdent*)p);
   }
   static void deleteArray_KVIVReconIdent(void *p) {
      delete [] ((::KVIVReconIdent*)p);
   }
   static void destruct_KVIVReconIdent(void *p) {
      typedef ::KVIVReconIdent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIVReconIdent

//______________________________________________________________________________
void Analysisv::Streamer(TBuffer &R__b)
{
   // Stream an object of class Analysisv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Analysisv::Class(),this);
   } else {
      R__b.WriteClassBuffer(Analysisv::Class(),this);
   }
}

//______________________________________________________________________________
void Analysisv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Analysisv.
      TClass *R__cl = ::Analysisv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*L", &L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inT", &inT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "innEntries", &innEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalEntries", &totalEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outTree", &outTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outT", &outT);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Analysisv(void *p) {
      delete ((::Analysisv*)p);
   }
   static void deleteArray_Analysisv(void *p) {
      delete [] ((::Analysisv*)p);
   }
   static void destruct_Analysisv(void *p) {
      typedef ::Analysisv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Analysisv

//______________________________________________________________________________
void Analysisv_e494s::Streamer(TBuffer &R__b)
{
   // Stream an object of class Analysisv_e494s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Analysisv_e494s::Class(),this);
   } else {
      R__b.WriteClassBuffer(Analysisv_e494s::Class(),this);
   }
}

//______________________________________________________________________________
void Analysisv_e494s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Analysisv_e494s.
      TClass *R__cl = ::Analysisv_e494s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SeD1", &SeD1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SeD2", &SeD2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SeD12", &SeD12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RC", &RC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ic", &Ic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Si", &Si);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_Raw[10]", T_Raw);
      Analysisv::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Analysisv_e494s(void *p) {
      delete ((::Analysisv_e494s*)p);
   }
   static void deleteArray_Analysisv_e494s(void *p) {
      delete [] ((::Analysisv_e494s*)p);
   }
   static void destruct_Analysisv_e494s(void *p) {
      typedef ::Analysisv_e494s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Analysisv_e494s

//______________________________________________________________________________
void Analysisv_e503::Streamer(TBuffer &R__b)
{
   // Stream an object of class Analysisv_e503.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Analysisv_e503::Class(),this);
   } else {
      R__b.WriteClassBuffer(Analysisv_e503::Class(),this);
   }
}

//______________________________________________________________________________
void Analysisv_e503::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Analysisv_e503.
      TClass *R__cl = ::Analysisv_e503::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Dr", &Dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RC", &RC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Id", &Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ic", &Ic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Si", &Si);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CsI", &CsI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*energytree", &energytree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*si", &si);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*csi", &csi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gap", &gap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tgt", &tgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dcv1", &dcv1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sed", &sed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dcv2", &dcv2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ic", &ic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*isogap1", &isogap1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ssi", &ssi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*isogap2", &isogap2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ccsi", &ccsi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t", &t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_Raw[10]", T_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcoup", &fcoup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcoup2", &fcoup2);
      Analysisv::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Analysisv_e503(void *p) {
      delete ((::Analysisv_e503*)p);
   }
   static void deleteArray_Analysisv_e503(void *p) {
      delete [] ((::Analysisv_e503*)p);
   }
   static void destruct_Analysisv_e503(void *p) {
      typedef ::Analysisv_e503 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Analysisv_e503

//______________________________________________________________________________
void KVIVSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIVSelector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIVSelector::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIVSelector::Class(),this);
   }
}

//______________________________________________________________________________
void KVIVSelector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIVSelector.
      TClass *R__cl = ::KVIVSelector::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVSelector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIVSelector(void *p) {
      return  p ? new(p) ::KVIVSelector : new ::KVIVSelector;
   }
   static void *newArray_KVIVSelector(Long_t nElements, void *p) {
      return p ? new(p) ::KVIVSelector[nElements] : new ::KVIVSelector[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIVSelector(void *p) {
      delete ((::KVIVSelector*)p);
   }
   static void deleteArray_KVIVSelector(void *p) {
      delete [] ((::KVIVSelector*)p);
   }
   static void destruct_KVIVSelector(void *p) {
      typedef ::KVIVSelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIVSelector

/********************************************************
* G__VAMOSanalysis.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__VAMOSanalysis();

extern "C" void G__set_cpp_environmentG__VAMOSanalysis() {
  G__cpp_reset_tagtableG__VAMOSanalysis();
}
#include <new>
extern "C" int G__cpp_dllrevG__VAMOSanalysis() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVIVReconIdent */
static int G__G__VAMOSanalysis_903_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIVReconIdent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIVReconIdent[n];
     } else {
       p = new((void*) gvp) KVIVReconIdent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIVReconIdent;
     } else {
       p = new((void*) gvp) KVIVReconIdent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconIdent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_903_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIVReconIdent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_903_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVReconIdent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_903_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIVReconIdent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_903_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIVReconIdent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_903_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIVReconIdent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_903_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVReconIdent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_903_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVReconIdent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_903_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVReconIdent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_903_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVReconIdent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIVReconIdent G__TKVIVReconIdent;
static int G__G__VAMOSanalysis_903_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIVReconIdent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIVReconIdent*) (soff+(sizeof(KVIVReconIdent)*i)))->~G__TKVIVReconIdent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIVReconIdent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIVReconIdent*) (soff))->~G__TKVIVReconIdent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Analysisv */
static int G__G__VAMOSanalysis_926_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->OpenInputTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->CloseInputTree((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->OpenOutputTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->CloseOutputTree((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Analysisv::NewAnalyser((const Char_t*) G__int(libp->para[0]), (LogFile*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->inAttach();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->outAttach();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->Treat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->CreateHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->FillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetTel1((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetTel2((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetTel3((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetTarget((KVTarget*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetDC1((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetSed((KVMaterial*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetDC2((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetIC((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetGap1((KVMaterial*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetSi((KVMaterial*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetGap2((KVMaterial*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetCsI((KVMaterial*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetFileCut((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->SetFileCutChioSi((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Analysisv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysisv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Analysisv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Analysisv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Analysisv*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysisv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Analysisv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysisv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_926_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Analysisv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Analysisv G__TAnalysisv;
static int G__G__VAMOSanalysis_926_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Analysisv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Analysisv*) (soff+(sizeof(Analysisv)*i)))->~G__TAnalysisv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Analysisv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Analysisv*) (soff))->~G__TAnalysisv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSanalysis_926_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Analysisv* dest = (Analysisv*) G__getstructoffset();
   *dest = *(Analysisv*) libp->para[0].ref;
   const Analysisv& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Analysisv_e494s */
static int G__G__VAMOSanalysis_927_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Analysisv_e494s* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Analysisv_e494s((LogFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Analysisv_e494s((LogFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e494s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_927_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Analysisv_e494s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_927_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysisv_e494s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_927_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Analysisv_e494s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_927_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Analysisv_e494s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_927_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv_e494s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_927_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysisv_e494s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_927_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Analysisv_e494s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_927_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysisv_e494s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_927_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Analysisv_e494s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSanalysis_927_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Analysisv_e494s* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Analysisv_e494s(*(Analysisv_e494s*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e494s));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Analysisv_e494s G__TAnalysisv_e494s;
static int G__G__VAMOSanalysis_927_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Analysisv_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Analysisv_e494s*) (soff+(sizeof(Analysisv_e494s)*i)))->~G__TAnalysisv_e494s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Analysisv_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Analysisv_e494s*) (soff))->~G__TAnalysisv_e494s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSanalysis_927_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Analysisv_e494s* dest = (Analysisv_e494s*) G__getstructoffset();
   *dest = *(Analysisv_e494s*) libp->para[0].ref;
   const Analysisv_e494s& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIVRawDataReconstructor */
static int G__G__VAMOSanalysis_975_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIVRawDataReconstructor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIVRawDataReconstructor[n];
     } else {
       p = new((void*) gvp) KVIVRawDataReconstructor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIVRawDataReconstructor;
     } else {
       p = new((void*) gvp) KVIVRawDataReconstructor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_975_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIVRawDataReconstructor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_975_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVRawDataReconstructor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_975_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIVRawDataReconstructor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_975_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIVRawDataReconstructor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_975_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIVRawDataReconstructor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_975_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVRawDataReconstructor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_975_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVRawDataReconstructor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_975_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVRawDataReconstructor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_975_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVRawDataReconstructor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIVRawDataReconstructor G__TKVIVRawDataReconstructor;
static int G__G__VAMOSanalysis_975_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIVRawDataReconstructor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIVRawDataReconstructor*) (soff+(sizeof(KVIVRawDataReconstructor)*i)))->~G__TKVIVRawDataReconstructor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIVRawDataReconstructor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIVRawDataReconstructor*) (soff))->~G__TKVIVRawDataReconstructor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIVReconDataAnalyser */
static int G__G__VAMOSanalysis_978_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIVReconDataAnalyser* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIVReconDataAnalyser[n];
     } else {
       p = new((void*) gvp) KVIVReconDataAnalyser[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIVReconDataAnalyser;
     } else {
       p = new((void*) gvp) KVIVReconDataAnalyser;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconDataAnalyser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_978_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIVReconDataAnalyser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_978_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVReconDataAnalyser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_978_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIVReconDataAnalyser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_978_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIVReconDataAnalyser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_978_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIVReconDataAnalyser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_978_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVReconDataAnalyser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_978_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVReconDataAnalyser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_978_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVReconDataAnalyser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_978_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVReconDataAnalyser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIVReconDataAnalyser G__TKVIVReconDataAnalyser;
static int G__G__VAMOSanalysis_978_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIVReconDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIVReconDataAnalyser*) (soff+(sizeof(KVIVReconDataAnalyser)*i)))->~G__TKVIVReconDataAnalyser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIVReconDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIVReconDataAnalyser*) (soff))->~G__TKVIVReconDataAnalyser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Analysisv_e503 */
static int G__G__VAMOSanalysis_1039_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Analysisv_e503* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Analysisv_e503((LogFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Analysisv_e503((LogFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e503));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1039_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Analysisv_e503::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1039_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysisv_e503::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1039_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Analysisv_e503::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1039_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Analysisv_e503::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1039_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysisv_e503*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1039_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysisv_e503::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1039_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Analysisv_e503::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1039_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysisv_e503::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1039_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Analysisv_e503::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSanalysis_1039_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Analysisv_e503* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Analysisv_e503(*(Analysisv_e503*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e503));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Analysisv_e503 G__TAnalysisv_e503;
static int G__G__VAMOSanalysis_1039_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Analysisv_e503*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Analysisv_e503*) (soff+(sizeof(Analysisv_e503)*i)))->~G__TAnalysisv_e503();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Analysisv_e503*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Analysisv_e503*) (soff))->~G__TAnalysisv_e503();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSanalysis_1039_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Analysisv_e503* dest = (Analysisv_e503*) G__getstructoffset();
   *dest = *(Analysisv_e503*) libp->para[0].ref;
   const Analysisv_e503& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIVRawDataAnalyser */
static int G__G__VAMOSanalysis_1040_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      KVIVRawDataAnalyser::Make((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      KVIVRawDataAnalyser::Make();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIVRawDataAnalyser*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIVRawDataAnalyser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVRawDataAnalyser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIVRawDataAnalyser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIVRawDataAnalyser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIVRawDataAnalyser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVRawDataAnalyser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVRawDataAnalyser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVRawDataAnalyser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1040_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVRawDataAnalyser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIVRawDataAnalyser G__TKVIVRawDataAnalyser;
static int G__G__VAMOSanalysis_1040_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIVRawDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIVRawDataAnalyser*) (soff+(sizeof(KVIVRawDataAnalyser)*i)))->~G__TKVIVRawDataAnalyser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIVRawDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIVRawDataAnalyser*) (soff))->~G__TKVIVRawDataAnalyser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIVSelector */
static int G__G__VAMOSanalysis_1041_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIVSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIVSelector((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVIVSelector((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVIVSelector[n];
       } else {
         p = new((void*) gvp) KVIVSelector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVIVSelector;
       } else {
         p = new((void*) gvp) KVIVSelector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIVSelector*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      KVIVSelector::Make((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      KVIVSelector::Make();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIVSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIVSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIVSelector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIVSelector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSanalysis_1041_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIVSelector G__TKVIVSelector;
static int G__G__VAMOSanalysis_1041_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIVSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIVSelector*) (soff+(sizeof(KVIVSelector)*i)))->~G__TKVIVSelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIVSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIVSelector*) (soff))->~G__TKVIVSelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVIVReconIdent */

/* Analysisv */

/* Analysisv_e494s */

/* KVIVRawDataReconstructor */

/* KVIVReconDataAnalyser */

/* Analysisv_e503 */

/* KVIVRawDataAnalyser */

/* KVIVSelector */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__VAMOSanalysis {
 public:
  G__Sizep2memfuncG__VAMOSanalysis(): p(&G__Sizep2memfuncG__VAMOSanalysis::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__VAMOSanalysis::*p)();
};

size_t G__get_sizep2memfuncG__VAMOSanalysis()
{
  G__Sizep2memfuncG__VAMOSanalysis a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__VAMOSanalysis() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconIdent))) {
     KVIVReconIdent *G__Lderived;
     G__Lderived=(KVIVReconIdent*)0x1000;
     {
       KVINDRAReconIdent *G__Lpbase=(KVINDRAReconIdent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconIdent),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVINDRAReconIdent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVSelector *G__Lpbase=(KVSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconIdent),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconIdent),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconIdent),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e494s))) {
     Analysisv_e494s *G__Lderived;
     G__Lderived=(Analysisv_e494s*)0x1000;
     {
       Analysisv *G__Lpbase=(Analysisv*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e494s),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor))) {
     KVIVRawDataReconstructor *G__Lderived;
     G__Lderived=(KVIVRawDataReconstructor*)0x1000;
     {
       KVINDRARawDataReconstructor *G__Lpbase=(KVINDRARawDataReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVINDRARawDataReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRARawDataAnalyser *G__Lpbase=(KVINDRARawDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVINDRARawDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVRawDataAnalyser *G__Lpbase=(KVRawDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVRawDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconDataAnalyser))) {
     KVIVReconDataAnalyser *G__Lderived;
     G__Lderived=(KVIVReconDataAnalyser*)0x1000;
     {
       KVINDRAReconDataAnalyser *G__Lpbase=(KVINDRAReconDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconDataAnalyser),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVINDRAReconDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconDataAnalyser),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconDataAnalyser),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e503))) {
     Analysisv_e503 *G__Lderived;
     G__Lderived=(Analysisv_e503*)0x1000;
     {
       Analysisv *G__Lpbase=(Analysisv*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e503),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataAnalyser))) {
     KVIVRawDataAnalyser *G__Lderived;
     G__Lderived=(KVIVRawDataAnalyser*)0x1000;
     {
       KVINDRARawDataAnalyser *G__Lpbase=(KVINDRARawDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataAnalyser),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVINDRARawDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVRawDataAnalyser *G__Lpbase=(KVRawDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataAnalyser),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVRawDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataAnalyser),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataAnalyser),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVSelector))) {
     KVIVSelector *G__Lderived;
     G__Lderived=(KVIVSelector*)0x1000;
     {
       KVSelector *G__Lpbase=(KVSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVSelector),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVSelector),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVSelector),G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__VAMOSanalysis() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*,less<long> >",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,Int_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVIVReconIdent */
static void G__setup_memvarKVIVReconIdent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconIdent));
   { KVIVReconIdent *p; p=(KVIVReconIdent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsIVevent=",0,"flag set when the event class inherits from KVIVReconEvent;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Analysisv */
static void G__setup_memvarAnalysisv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv));
   { Analysisv *p; p=(Analysisv*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->L)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_LogFile),-1,-1,1,"L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TFile),-1,-1,1,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TTree),-1,-1,1,"inT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->innEntries)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"innEntries=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->totalEntries)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"totalEntries=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TFile),-1,-1,1,"outTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TTree),-1,-1,1,"outT=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Analysisv_e494s */
static void G__setup_memvarAnalysisv_e494s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e494s));
   { Analysisv_e494s *p; p=(Analysisv_e494s*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->SeD1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_SeDv),-1,-1,1,"SeD1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SeD2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_SeDv),-1,-1,1,"SeD2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SeD12)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_SeD12v),-1,-1,1,"SeD12=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_ReconstructionSeDv),-1,-1,1,"RC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ic)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_IonisationChamberv),-1,-1,1,"Ic=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Si)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Siv),-1,-1,1,"Si=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"T_Raw[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIVRawDataReconstructor */
static void G__setup_memvarKVIVRawDataReconstructor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor));
   { KVIVRawDataReconstructor *p; p=(KVIVRawDataReconstructor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDetectorEvent),-1,-1,2,"fINDRADetEv=",0,"list of hit group for INDRA event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDetectorEvent),-1,-1,2,"fVAMOSDetEv=",0,"list of hit group for VAMOS event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconEvent),-1,-1,2,"fIVevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbVAMOSrecon=",0,"number of reconstructed VAMOS events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIVReconDataAnalyser */
static void G__setup_memvarKVIVReconDataAnalyser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconDataAnalyser));
   { KVIVReconDataAnalyser *p; p=(KVIVReconDataAnalyser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Analysisv_e503 */
static void G__setup_memvarAnalysisv_e503(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e503));
   { Analysisv_e503 *p; p=(Analysisv_e503*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Dr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_DriftChamberv),-1,-1,1,"Dr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Reconstructionv),-1,-1,1,"RC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Id)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Identificationv),-1,-1,1,"Id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ic)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_IonisationChamberv),-1,-1,1,"Ic=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Si)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Sive503),-1,-1,1,"Si=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CsI)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_CsIv),-1,-1,1,"CsI=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energytree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_CsICalib),-1,-1,1,"energytree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDetector),-1,-1,1,"si=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->csi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDetector),-1,-1,1,"csi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gap)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDetector),-1,-1,1,"gap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVTarget),-1,-1,1,"tgt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dcv1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDetector),-1,-1,1,"dcv1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sed)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVMaterial),-1,-1,1,"sed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dcv2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDetector),-1,-1,1,"dcv2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ic)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVDetector),-1,-1,1,"ic=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isogap1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVMaterial),-1,-1,1,"isogap1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ssi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVMaterial),-1,-1,1,"ssi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isogap2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVMaterial),-1,-1,1,"isogap2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccsi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVMaterial),-1,-1,1,"ccsi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TTree),-1,-1,1,"t=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"T_Raw[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fcoup)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TList),-1,-1,1,"fcoup=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fcoup2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TList),-1,-1,1,"fcoup2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIVRawDataAnalyser */
static void G__setup_memvarKVIVRawDataAnalyser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataAnalyser));
   { KVIVRawDataAnalyser *p; p=(KVIVRawDataAnalyser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TTree),-1,-1,4,"fBidonTree=",0,"! just a dummy for VAMOS Parameters class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIVSelector */
static void G__setup_memvarKVIVSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVSelector));
   { KVIVSelector *p; p=(KVIVSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__VAMOSanalysis() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVIVReconIdent(void) {
   /* KVIVReconIdent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconIdent));
   G__memfunc_setup("KVIVReconIdent",1323,G__G__VAMOSanalysis_903_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconIdent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitAnalysis",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndAnalysis",1115,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__VAMOSanalysis_903_0_7, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIVReconIdent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSanalysis_903_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVReconIdent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSanalysis_903_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIVReconIdent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSanalysis_903_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIVReconIdent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSanalysis_903_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSanalysis_903_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVReconIdent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSanalysis_903_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVReconIdent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSanalysis_903_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVReconIdent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSanalysis_903_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVReconIdent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIVReconIdent", 1449, G__G__VAMOSanalysis_903_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalysisv(void) {
   /* Analysisv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv));
   G__memfunc_setup("OpenInputTree",1330,G__G__VAMOSanalysis_926_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseInputTree",1430,G__G__VAMOSanalysis_926_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - inTreeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenOutputTree",1459,G__G__VAMOSanalysis_926_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseOutputTree",1559,G__G__VAMOSanalysis_926_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - outTreeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewAnalyser",1129,G__G__VAMOSanalysis_926_0_6, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv), -1, 0, 2, 3, 1, 0, 
"C - 'Char_t' 10 - dataset U 'LogFile' - 0 - Log", (char*)NULL, (void*) G__func2void( (Analysisv* (*)(const Char_t*, LogFile*))(&Analysisv::NewAnalyser) ), 0);
   G__memfunc_setup("inAttach",812,G__G__VAMOSanalysis_926_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "Attaching the variables ", (void*) NULL, 3);
   G__memfunc_setup("outAttach",941,G__G__VAMOSanalysis_926_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "Attaching the variables ", (void*) NULL, 3);
   G__memfunc_setup("Treat",512,G__G__VAMOSanalysis_926_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "Treating data", (void*) NULL, 3);
   G__memfunc_setup("CreateHistograms",1653,G__G__VAMOSanalysis_926_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FillHistograms",1448,G__G__VAMOSanalysis_926_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetTel1",642,G__G__VAMOSanalysis_926_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - si", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetTel2",643,G__G__VAMOSanalysis_926_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - gap", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetTel3",644,G__G__VAMOSanalysis_926_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - csi", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetTarget",915,G__G__VAMOSanalysis_926_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVTarget' - 0 - tgt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetDC1",484,G__G__VAMOSanalysis_926_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - dcv1", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetSed",584,G__G__VAMOSanalysis_926_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - sed", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetDC2",485,G__G__VAMOSanalysis_926_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - dcv2", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetIC",440,G__G__VAMOSanalysis_926_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - ic", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetGap1",629,G__G__VAMOSanalysis_926_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - isogap1", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetSi",488,G__G__VAMOSanalysis_926_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - si", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetGap2",630,G__G__VAMOSanalysis_926_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - isogap2", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetCsI",555,G__G__VAMOSanalysis_926_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - ccsi", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetFileCut",984,G__G__VAMOSanalysis_926_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - list", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetFileCutChioSi",1559,G__G__VAMOSanalysis_926_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - list2", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__G__VAMOSanalysis_926_0_26, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Analysisv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSanalysis_926_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysisv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSanalysis_926_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Analysisv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSanalysis_926_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Analysisv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__VAMOSanalysis_926_0_30, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__VAMOSanalysis_926_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__VAMOSanalysis_926_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSanalysis_926_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSanalysis_926_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysisv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSanalysis_926_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Analysisv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSanalysis_926_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysisv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSanalysis_926_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Analysisv::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Analysisv", 1080, G__G__VAMOSanalysis_926_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSanalysis_926_0_39, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv), -1, 1, 1, 1, 1, 0, "u 'Analysisv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalysisv_e494s(void) {
   /* Analysisv_e494s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e494s));
   G__memfunc_setup("Analysisv_e494s",1426,G__G__VAMOSanalysis_927_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e494s), -1, 0, 1, 1, 1, 0, "U 'LogFile' - 0 - Log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inAttach",812,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Attaching the variables ", (void*) NULL, 1);
   G__memfunc_setup("outAttach",941,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Attaching the variables ", (void*) NULL, 1);
   G__memfunc_setup("Treat",512,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Treating data", (void*) NULL, 1);
   G__memfunc_setup("CreateHistograms",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillHistograms",1448,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTel1",642,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - si", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTel2",643,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - gap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTel3",644,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - csi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFileCut",984,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFileCutChioSi",1559,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - list2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTarget",915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVTarget' - 0 - tgt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDC1",484,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - dcv1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSed",584,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - sed", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDC2",485,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - dcv2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIC",440,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - ic", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGap1",629,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - isogap1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSi",488,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - ssi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGap2",630,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - isogap2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCsI",555,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - ccsi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__VAMOSanalysis_927_0_21, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Analysisv_e494s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSanalysis_927_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysisv_e494s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSanalysis_927_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Analysisv_e494s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSanalysis_927_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Analysisv_e494s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSanalysis_927_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSanalysis_927_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysisv_e494s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSanalysis_927_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Analysisv_e494s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSanalysis_927_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysisv_e494s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSanalysis_927_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Analysisv_e494s::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Analysisv_e494s", 1426, G__G__VAMOSanalysis_927_0_33, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e494s), -1, 0, 1, 1, 1, 0, "u 'Analysisv_e494s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Analysisv_e494s", 1552, G__G__VAMOSanalysis_927_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSanalysis_927_0_35, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e494s), -1, 1, 1, 1, 1, 0, "u 'Analysisv_e494s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIVRawDataReconstructor(void) {
   /* KVIVRawDataReconstructor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor));
   G__memfunc_setup("KVIVRawDataReconstructor",2401,G__G__VAMOSanalysis_975_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("postInitRun",1167,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preAnalysis",1163,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("postAnalysis",1290,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__VAMOSanalysis_975_0_8, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIVRawDataReconstructor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSanalysis_975_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVRawDataReconstructor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSanalysis_975_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIVRawDataReconstructor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSanalysis_975_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIVRawDataReconstructor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSanalysis_975_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSanalysis_975_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVRawDataReconstructor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSanalysis_975_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVRawDataReconstructor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSanalysis_975_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVRawDataReconstructor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSanalysis_975_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVRawDataReconstructor::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIVRawDataReconstructor", 2527, G__G__VAMOSanalysis_975_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIVReconDataAnalyser(void) {
   /* KVIVReconDataAnalyser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconDataAnalyser));
   G__memfunc_setup("KVIVReconDataAnalyser",2032,G__G__VAMOSanalysis_978_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconDataAnalyser), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("preAnalysis",1163,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preInitRun",1040,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__VAMOSanalysis_978_0_4, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIVReconDataAnalyser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSanalysis_978_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVReconDataAnalyser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSanalysis_978_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIVReconDataAnalyser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSanalysis_978_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIVReconDataAnalyser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSanalysis_978_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSanalysis_978_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVReconDataAnalyser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSanalysis_978_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVReconDataAnalyser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSanalysis_978_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVReconDataAnalyser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSanalysis_978_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVReconDataAnalyser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIVReconDataAnalyser", 2158, G__G__VAMOSanalysis_978_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalysisv_e503(void) {
   /* Analysisv_e503 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e503));
   G__memfunc_setup("Analysisv_e503",1302,G__G__VAMOSanalysis_1039_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e503), -1, 0, 1, 1, 1, 0, "U 'LogFile' - 0 - Log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inAttach",812,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Attaching the variables ", (void*) NULL, 1);
   G__memfunc_setup("outAttach",941,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Attaching the variables ", (void*) NULL, 1);
   G__memfunc_setup("Treat",512,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Treating data", (void*) NULL, 1);
   G__memfunc_setup("CreateHistograms",1653,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillHistograms",1448,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTel1",642,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - si", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTel2",643,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - gap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTel3",644,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - csi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFileCut",984,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFileCutChioSi",1559,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - list2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTarget",915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVTarget' - 0 - tgt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDC1",484,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - dcv1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSed",584,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - sed", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDC2",485,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - dcv2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIC",440,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - ic", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGap1",629,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - isogap1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSi",488,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - ssi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGap2",630,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - isogap2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCsI",555,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVMaterial' - 0 - ccsi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__VAMOSanalysis_1039_0_21, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Analysisv_e503::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSanalysis_1039_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysisv_e503::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSanalysis_1039_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Analysisv_e503::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSanalysis_1039_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Analysisv_e503::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSanalysis_1039_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSanalysis_1039_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysisv_e503::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSanalysis_1039_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Analysisv_e503::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSanalysis_1039_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysisv_e503::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSanalysis_1039_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Analysisv_e503::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Analysisv_e503", 1302, G__G__VAMOSanalysis_1039_0_33, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e503), -1, 0, 1, 1, 1, 0, "u 'Analysisv_e503' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Analysisv_e503", 1428, G__G__VAMOSanalysis_1039_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSanalysis_1039_0_35, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSanalysisLN_Analysisv_e503), -1, 1, 1, 1, 1, 0, "u 'Analysisv_e503' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIVRawDataAnalyser(void) {
   /* KVIVRawDataAnalyser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVRawDataAnalyser));
   G__memfunc_setup("postInitRun",1167,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,G__G__VAMOSanalysis_1040_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 '\"MyOwnRawDataAnalyser\"' kvsname", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*))(&KVIVRawDataAnalyser::Make) ), 0);
   G__memfunc_setup("GetTree",688,G__G__VAMOSanalysis_1040_0_4, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__VAMOSanalysis_1040_0_5, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIVRawDataAnalyser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSanalysis_1040_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVRawDataAnalyser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSanalysis_1040_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIVRawDataAnalyser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSanalysis_1040_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIVRawDataAnalyser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSanalysis_1040_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSanalysis_1040_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVRawDataAnalyser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSanalysis_1040_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVRawDataAnalyser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSanalysis_1040_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVRawDataAnalyser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSanalysis_1040_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVRawDataAnalyser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIVRawDataAnalyser", 1953, G__G__VAMOSanalysis_1040_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIVSelector(void) {
   /* KVIVSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVSelector));
   G__memfunc_setup("KVIVSelector",1153,G__G__VAMOSanalysis_1041_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVSelector), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvent",802,G__G__VAMOSanalysis_1041_0_3, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_KVIVReconEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Make",382,G__G__VAMOSanalysis_1041_0_4, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 '\"MyOwnKVIVSelector\"' kvsname", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*))(&KVIVSelector::Make) ), 0);
   G__memfunc_setup("Class",502,G__G__VAMOSanalysis_1041_0_5, 85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIVSelector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSanalysis_1041_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVSelector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSanalysis_1041_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIVSelector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSanalysis_1041_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIVSelector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSanalysis_1041_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSanalysis_1041_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVSelector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSanalysis_1041_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVSelector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSanalysis_1041_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVSelector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSanalysis_1041_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVSelector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIVSelector", 1279, G__G__VAMOSanalysis_1041_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__VAMOSanalysis() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__VAMOSanalysis() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__VAMOSanalysis() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__VAMOSanalysisLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR = { "map<long,int,less<long>,allocator<pair<const long,int> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVMaterial = { "KVMaterial" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVDetector = { "KVDetector" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVDetectorEvent = { "KVDetectorEvent" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR = { "map<long,TGeoNavigatorArray*,less<long>,allocator<pair<const long,TGeoNavigatorArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVTarget = { "KVTarget" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVSelector = { "KVSelector" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVDataAnalyser = { "KVDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVINDRAReconIdent = { "KVINDRAReconIdent" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVIVReconIdent = { "KVIVReconIdent" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_LogFile = { "LogFile" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_IonisationChamberv = { "IonisationChamberv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Siv = { "Siv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_SeDv = { "SeDv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_SeD12v = { "SeD12v" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_ReconstructionSeDv = { "ReconstructionSeDv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Analysisv = { "Analysisv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Analysisv_e494s = { "Analysisv_e494s" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVRawDataAnalyser = { "KVRawDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVINDRARawDataAnalyser = { "KVINDRARawDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVINDRARawDataReconstructor = { "KVINDRARawDataReconstructor" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVIVReconEvent = { "KVIVReconEvent" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVIVRawDataReconstructor = { "KVIVRawDataReconstructor" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVINDRAReconDataAnalyser = { "KVINDRAReconDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVIVReconDataAnalyser = { "KVIVReconDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Sive503 = { "Sive503" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_CsIv = { "CsIv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_DriftChamberv = { "DriftChamberv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Reconstructionv = { "Reconstructionv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_CsICalib = { "CsICalib" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Identificationv = { "Identificationv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_Analysisv_e503 = { "Analysisv_e503" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVIVRawDataAnalyser = { "KVIVRawDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__VAMOSanalysisLN_KVIVSelector = { "KVIVSelector" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__VAMOSanalysis() {
  G__G__VAMOSanalysisLN_TClass.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TBuffer.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMemberInspector.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TObject.tagnum = -1 ;
  G__G__VAMOSanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TList.tagnum = -1 ;
  G__G__VAMOSanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TFile.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TTree.tagnum = -1 ;
  G__G__VAMOSanalysisLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TSelector.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVMaterial.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVDetector.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVDetectorEvent.tagnum = -1 ;
  G__G__VAMOSanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVTarget.tagnum = -1 ;
  G__G__VAMOSanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVSelector.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVDataAnalyser.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVINDRAReconIdent.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVIVReconIdent.tagnum = -1 ;
  G__G__VAMOSanalysisLN_LogFile.tagnum = -1 ;
  G__G__VAMOSanalysisLN_IonisationChamberv.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Siv.tagnum = -1 ;
  G__G__VAMOSanalysisLN_SeDv.tagnum = -1 ;
  G__G__VAMOSanalysisLN_SeD12v.tagnum = -1 ;
  G__G__VAMOSanalysisLN_ReconstructionSeDv.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Analysisv.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Analysisv_e494s.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVRawDataAnalyser.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVINDRARawDataAnalyser.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVINDRARawDataReconstructor.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVIVReconEvent.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVIVRawDataReconstructor.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVINDRAReconDataAnalyser.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVIVReconDataAnalyser.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Sive503.tagnum = -1 ;
  G__G__VAMOSanalysisLN_CsIv.tagnum = -1 ;
  G__G__VAMOSanalysisLN_DriftChamberv.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Reconstructionv.tagnum = -1 ;
  G__G__VAMOSanalysisLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSanalysisLN_CsICalib.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Identificationv.tagnum = -1 ;
  G__G__VAMOSanalysisLN_Analysisv_e503.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVIVRawDataAnalyser.tagnum = -1 ;
  G__G__VAMOSanalysisLN_KVIVSelector.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__VAMOSanalysis() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TList);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TSelector);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVMaterial);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVDetector);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVDetectorEvent);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVTarget);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVSelector);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVDataAnalyser);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVINDRAReconIdent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVIVReconIdent),sizeof(KVIVReconIdent),-1,292096,"Identification and reconstruction of VAMOS and INDRA events from recon data ",G__setup_memvarKVIVReconIdent,G__setup_memfuncKVIVReconIdent);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_LogFile);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_IonisationChamberv);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Siv);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_SeDv);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_SeD12v);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_ReconstructionSeDv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Analysisv),sizeof(Analysisv),-1,295955,(char*)NULL,G__setup_memvarAnalysisv,G__setup_memfuncAnalysisv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Analysisv_e494s),sizeof(Analysisv_e494s),-1,295936,"VAMOS calibration for E494S",G__setup_memvarAnalysisv_e494s,G__setup_memfuncAnalysisv_e494s);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVRawDataAnalyser);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVINDRARawDataAnalyser);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVINDRARawDataReconstructor);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVIVReconEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVIVRawDataReconstructor),sizeof(KVIVRawDataReconstructor),-1,292096,"Reconstructs raw data from INDRA-VAMOS experiments",G__setup_memvarKVIVRawDataReconstructor,G__setup_memfuncKVIVRawDataReconstructor);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVINDRAReconDataAnalyser);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVIVReconDataAnalyser),sizeof(KVIVReconDataAnalyser),-1,292096,"For analysing reconstructed INDRA+VAMOS data",G__setup_memvarKVIVReconDataAnalyser,G__setup_memfuncKVIVReconDataAnalyser);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Sive503);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_CsIv);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_DriftChamberv);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Reconstructionv);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_CsICalib);
   G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Identificationv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_Analysisv_e503),sizeof(Analysisv_e503),-1,295936,"VAMOS calibration for e503",G__setup_memvarAnalysisv_e503,G__setup_memfuncAnalysisv_e503);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVIVRawDataAnalyser),sizeof(KVIVRawDataAnalyser),-1,292101,"Analysis of raw INDRA-VAMOS data",G__setup_memvarKVIVRawDataAnalyser,G__setup_memfuncKVIVRawDataAnalyser);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSanalysisLN_KVIVSelector),sizeof(KVIVSelector),-1,292096,(char*)NULL,G__setup_memvarKVIVSelector,G__setup_memfuncKVIVSelector);
}
extern "C" void G__cpp_setupG__VAMOSanalysis(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__VAMOSanalysis()");
  G__set_cpp_environmentG__VAMOSanalysis();
  G__cpp_setup_tagtableG__VAMOSanalysis();

  G__cpp_setup_inheritanceG__VAMOSanalysis();

  G__cpp_setup_typetableG__VAMOSanalysis();

  G__cpp_setup_memvarG__VAMOSanalysis();

  G__cpp_setup_memfuncG__VAMOSanalysis();
  G__cpp_setup_globalG__VAMOSanalysis();
  G__cpp_setup_funcG__VAMOSanalysis();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__VAMOSanalysis();
  return;
}
class G__cpp_setup_initG__VAMOSanalysis {
  public:
    G__cpp_setup_initG__VAMOSanalysis() { G__add_setup_func("G__VAMOSanalysis",(G__incsetup)(&G__cpp_setupG__VAMOSanalysis)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__VAMOSanalysis() { G__remove_setup_func("G__VAMOSanalysis"); }
};
G__cpp_setup_initG__VAMOSanalysis G__cpp_setup_initializerG__VAMOSanalysis;

