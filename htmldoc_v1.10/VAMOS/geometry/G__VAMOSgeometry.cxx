//
// File generated by rootcint at Fri Jul 17 15:54:21 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__VAMOSgeometry
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__VAMOSgeometry.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::DriftChamber DriftChamber;
      #else
      class DriftChamber  {
         public:
         //friend XX;
         ::KVDetector* driftChamber; //
         ::KVMaterial* entranceWindow; //
         ::KVMaterial* exitWindow; //
         ::KVMaterial* gas; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::IonisationChamber IonisationChamber;
      #else
      class IonisationChamber  {
         public:
         //friend XX;
         ::KVDetector* ioCh; //
         ::KVMaterial* entranceWindow; //
         ::KVMaterial* exitWindow; //
         ::KVMaterial* deadGas; //
         ::KVMaterial* activeGas; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Sive503 Sive503;
      #else
      class Sive503  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~Sive503() throw() {};
         bool Ready; //
         ::LogFile* L; //
         bool Present; //
         ::TRandom3* Rnd; //
         unsigned short E_Raw[21]; //
         unsigned short SiRaw[21]; //
         unsigned short E_Raw_Nr[21]; //
         int E_RawM; //
         unsigned short T_Raw[3]; //
         unsigned short T_Raw_SIHF; //
         unsigned short SI_Raw; //
         float ECoef[21][3]; //
         float TOff[21][2]; //
         float TCoef[3][5]; //for the new time calibration with 4 parameters
         float TOffset[21]; //
         double TRef[19]; //
         double Tpropre_el[19]; //
         double Offset328[19]; //
         double Offset333[19]; //
         double Offset339[19]; //
         double Offset344[19]; //
         double Offset348[19]; //
         double Offset353[19]; //
         double Offset355[19]; //
         double Offset379[19]; //
         double Offset384[19]; //
         double Offset390[19]; //
         double Offset398[19]; //
         double Offset403[19]; //
         double Offset404[19]; //
         double Offset405[19]; //
         double Offset407[19]; //
         double Offset455[19]; //
         double Offset467[19]; //
         double Offset475[19]; //
         double Offset484[19]; //
         double Offset490[19]; //
         double Offset493[19]; //
         double Offset511[19]; //
         double Offset525[19]; //
         double Offset528[19]; //
         double Offset531[19]; //
         double Offset537[19]; //
         double Offset543[19]; //
         double Offset548[19]; //
         double Tfrag; //
         double si_thick[19]; //
         int EM; //
         float E[21]; //
         unsigned short ENr[21]; //
         float T[3]; //
         float Offset[2]; //
         float ETotal; //
         unsigned short Number; //
         int DetSi; //
         int Counter[2]; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVSiliconVamos_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSiliconVamos(void *p = 0);
   static void *newArray_KVSiliconVamos(Long_t size, void *p);
   static void delete_KVSiliconVamos(void *p);
   static void deleteArray_KVSiliconVamos(void *p);
   static void destruct_KVSiliconVamos(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSiliconVamos*)
   {
      ::KVSiliconVamos *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSiliconVamos >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSiliconVamos", ::KVSiliconVamos::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/geometry/KVSiliconVamos.h", 16,
                  typeid(::KVSiliconVamos), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSiliconVamos::Dictionary, isa_proxy, 4,
                  sizeof(::KVSiliconVamos) );
      instance.SetNew(&new_KVSiliconVamos);
      instance.SetNewArray(&newArray_KVSiliconVamos);
      instance.SetDelete(&delete_KVSiliconVamos);
      instance.SetDeleteArray(&deleteArray_KVSiliconVamos);
      instance.SetDestructor(&destruct_KVSiliconVamos);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSiliconVamos*)
   {
      return GenerateInitInstanceLocal((::KVSiliconVamos*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSiliconVamos*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DriftChamber_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DriftChamber_Dictionary();
   static void *new_DriftChamber(void *p = 0);
   static void *newArray_DriftChamber(Long_t size, void *p);
   static void delete_DriftChamber(void *p);
   static void deleteArray_DriftChamber(void *p);
   static void destruct_DriftChamber(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DriftChamber*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::DriftChamber) == sizeof( ::ROOTShadow::Shadow::DriftChamber));
      ::DriftChamber *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DriftChamber),0);
      static ::ROOT::TGenericClassInfo 
         instance("DriftChamber", "/home/john/software/sources/kaliveda.git/VAMOS/geometry/DriftChamber.h", 18,
                  typeid(::DriftChamber), ::ROOT::DefineBehavior(ptr, ptr),
                  &DriftChamber_ShowMembers, &DriftChamber_Dictionary, isa_proxy, 4,
                  sizeof(::DriftChamber) );
      instance.SetNew(&new_DriftChamber);
      instance.SetNewArray(&newArray_DriftChamber);
      instance.SetDelete(&delete_DriftChamber);
      instance.SetDeleteArray(&deleteArray_DriftChamber);
      instance.SetDestructor(&destruct_DriftChamber);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DriftChamber*)
   {
      return GenerateInitInstanceLocal((::DriftChamber*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DriftChamber*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DriftChamber_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::DriftChamber*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSpectroDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSpectroDetector(void *p = 0);
   static void *newArray_KVSpectroDetector(Long_t size, void *p);
   static void delete_KVSpectroDetector(void *p);
   static void deleteArray_KVSpectroDetector(void *p);
   static void destruct_KVSpectroDetector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSpectroDetector*)
   {
      ::KVSpectroDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSpectroDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSpectroDetector", ::KVSpectroDetector::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/geometry/KVSpectroDetector.h", 18,
                  typeid(::KVSpectroDetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSpectroDetector::Dictionary, isa_proxy, 4,
                  sizeof(::KVSpectroDetector) );
      instance.SetNew(&new_KVSpectroDetector);
      instance.SetNewArray(&newArray_KVSpectroDetector);
      instance.SetDelete(&delete_KVSpectroDetector);
      instance.SetDeleteArray(&deleteArray_KVSpectroDetector);
      instance.SetDestructor(&destruct_KVSpectroDetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSpectroDetector*)
   {
      return GenerateInitInstanceLocal((::KVSpectroDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSpectroDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void IonisationChamber_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void IonisationChamber_Dictionary();
   static void *new_IonisationChamber(void *p = 0);
   static void *newArray_IonisationChamber(Long_t size, void *p);
   static void delete_IonisationChamber(void *p);
   static void deleteArray_IonisationChamber(void *p);
   static void destruct_IonisationChamber(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::IonisationChamber*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::IonisationChamber) == sizeof( ::ROOTShadow::Shadow::IonisationChamber));
      ::IonisationChamber *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::IonisationChamber),0);
      static ::ROOT::TGenericClassInfo 
         instance("IonisationChamber", "/home/john/software/sources/kaliveda.git/VAMOS/geometry/IonisationChamber.h", 18,
                  typeid(::IonisationChamber), ::ROOT::DefineBehavior(ptr, ptr),
                  &IonisationChamber_ShowMembers, &IonisationChamber_Dictionary, isa_proxy, 4,
                  sizeof(::IonisationChamber) );
      instance.SetNew(&new_IonisationChamber);
      instance.SetNewArray(&newArray_IonisationChamber);
      instance.SetDelete(&delete_IonisationChamber);
      instance.SetDeleteArray(&deleteArray_IonisationChamber);
      instance.SetDestructor(&destruct_IonisationChamber);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::IonisationChamber*)
   {
      return GenerateInitInstanceLocal((::IonisationChamber*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::IonisationChamber*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void IonisationChamber_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::IonisationChamber*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void KVCsIVamos_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVCsIVamos(void *p = 0);
   static void *newArray_KVCsIVamos(Long_t size, void *p);
   static void delete_KVCsIVamos(void *p);
   static void deleteArray_KVCsIVamos(void *p);
   static void destruct_KVCsIVamos(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVCsIVamos*)
   {
      ::KVCsIVamos *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVCsIVamos >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVCsIVamos", ::KVCsIVamos::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/geometry/KVCsIVamos.h", 16,
                  typeid(::KVCsIVamos), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVCsIVamos::Dictionary, isa_proxy, 4,
                  sizeof(::KVCsIVamos) );
      instance.SetNew(&new_KVCsIVamos);
      instance.SetNewArray(&newArray_KVCsIVamos);
      instance.SetDelete(&delete_KVCsIVamos);
      instance.SetDeleteArray(&deleteArray_KVCsIVamos);
      instance.SetDestructor(&destruct_KVCsIVamos);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVCsIVamos*)
   {
      return GenerateInitInstanceLocal((::KVCsIVamos*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVCsIVamos*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Sive503_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Sive503_Dictionary();
   static void delete_Sive503(void *p);
   static void deleteArray_Sive503(void *p);
   static void destruct_Sive503(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Sive503*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Sive503) == sizeof( ::ROOTShadow::Shadow::Sive503));
      ::Sive503 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Sive503),0);
      static ::ROOT::TGenericClassInfo 
         instance("Sive503", "/home/john/software/sources/kaliveda.git/VAMOS/geometry/Sive503.h", 14,
                  typeid(::Sive503), ::ROOT::DefineBehavior(ptr, ptr),
                  &Sive503_ShowMembers, &Sive503_Dictionary, isa_proxy, 4,
                  sizeof(::Sive503) );
      instance.SetDelete(&delete_Sive503);
      instance.SetDeleteArray(&deleteArray_Sive503);
      instance.SetDestructor(&destruct_Sive503);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Sive503*)
   {
      return GenerateInitInstanceLocal((::Sive503*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Sive503*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Sive503_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Sive503*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void IonisationChamberv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_IonisationChamberv(void *p);
   static void deleteArray_IonisationChamberv(void *p);
   static void destruct_IonisationChamberv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::IonisationChamberv*)
   {
      ::IonisationChamberv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::IonisationChamberv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("IonisationChamberv", ::IonisationChamberv::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/geometry/IonisationChamberv.h", 11,
                  typeid(::IonisationChamberv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::IonisationChamberv::Dictionary, isa_proxy, 4,
                  sizeof(::IonisationChamberv) );
      instance.SetDelete(&delete_IonisationChamberv);
      instance.SetDeleteArray(&deleteArray_IonisationChamberv);
      instance.SetDestructor(&destruct_IonisationChamberv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::IonisationChamberv*)
   {
      return GenerateInitInstanceLocal((::IonisationChamberv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::IonisationChamberv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DriftChamberv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_DriftChamberv(void *p);
   static void deleteArray_DriftChamberv(void *p);
   static void destruct_DriftChamberv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DriftChamberv*)
   {
      ::DriftChamberv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DriftChamberv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DriftChamberv", ::DriftChamberv::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/geometry/DriftChamberv.h", 12,
                  typeid(::DriftChamberv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DriftChamberv::Dictionary, isa_proxy, 4,
                  sizeof(::DriftChamberv) );
      instance.SetDelete(&delete_DriftChamberv);
      instance.SetDeleteArray(&deleteArray_DriftChamberv);
      instance.SetDestructor(&destruct_DriftChamberv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DriftChamberv*)
   {
      return GenerateInitInstanceLocal((::DriftChamberv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DriftChamberv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SeDv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_SeDv(void *p);
   static void deleteArray_SeDv(void *p);
   static void destruct_SeDv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SeDv*)
   {
      ::SeDv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SeDv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SeDv", ::SeDv::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/geometry/SeDv.h", 11,
                  typeid(::SeDv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SeDv::Dictionary, isa_proxy, 4,
                  sizeof(::SeDv) );
      instance.SetDelete(&delete_SeDv);
      instance.SetDeleteArray(&deleteArray_SeDv);
      instance.SetDestructor(&destruct_SeDv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SeDv*)
   {
      return GenerateInitInstanceLocal((::SeDv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SeDv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SeD12v_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_SeD12v(void *p);
   static void deleteArray_SeD12v(void *p);
   static void destruct_SeD12v(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SeD12v*)
   {
      ::SeD12v *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SeD12v >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SeD12v", ::SeD12v::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/geometry/SeD12v.h", 11,
                  typeid(::SeD12v), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SeD12v::Dictionary, isa_proxy, 4,
                  sizeof(::SeD12v) );
      instance.SetDelete(&delete_SeD12v);
      instance.SetDeleteArray(&deleteArray_SeD12v);
      instance.SetDestructor(&destruct_SeD12v);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SeD12v*)
   {
      return GenerateInitInstanceLocal((::SeD12v*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SeD12v*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Siv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Siv(void *p);
   static void deleteArray_Siv(void *p);
   static void destruct_Siv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Siv*)
   {
      ::Siv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Siv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Siv", ::Siv::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/geometry/Siv.h", 11,
                  typeid(::Siv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Siv::Dictionary, isa_proxy, 4,
                  sizeof(::Siv) );
      instance.SetDelete(&delete_Siv);
      instance.SetDeleteArray(&deleteArray_Siv);
      instance.SetDestructor(&destruct_Siv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Siv*)
   {
      return GenerateInitInstanceLocal((::Siv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Siv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CsIv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_CsIv(void *p);
   static void deleteArray_CsIv(void *p);
   static void destruct_CsIv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CsIv*)
   {
      ::CsIv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CsIv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CsIv", ::CsIv::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/geometry/CsIv.h", 16,
                  typeid(::CsIv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CsIv::Dictionary, isa_proxy, 4,
                  sizeof(::CsIv) );
      instance.SetDelete(&delete_CsIv);
      instance.SetDeleteArray(&deleteArray_CsIv);
      instance.SetDestructor(&destruct_CsIv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CsIv*)
   {
      return GenerateInitInstanceLocal((::CsIv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CsIv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVSiliconVamos::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSiliconVamos::Class_Name()
{
   return "KVSiliconVamos";
}

//______________________________________________________________________________
const char *KVSiliconVamos::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiliconVamos*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSiliconVamos::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiliconVamos*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSiliconVamos::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiliconVamos*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSiliconVamos::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiliconVamos*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSpectroDetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSpectroDetector::Class_Name()
{
   return "KVSpectroDetector";
}

//______________________________________________________________________________
const char *KVSpectroDetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSpectroDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSpectroDetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSpectroDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSpectroDetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSpectroDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSpectroDetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSpectroDetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVCsIVamos::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVCsIVamos::Class_Name()
{
   return "KVCsIVamos";
}

//______________________________________________________________________________
const char *KVCsIVamos::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsIVamos*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVCsIVamos::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsIVamos*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVCsIVamos::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsIVamos*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVCsIVamos::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsIVamos*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr IonisationChamberv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *IonisationChamberv::Class_Name()
{
   return "IonisationChamberv";
}

//______________________________________________________________________________
const char *IonisationChamberv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IonisationChamberv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int IonisationChamberv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IonisationChamberv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void IonisationChamberv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IonisationChamberv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *IonisationChamberv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IonisationChamberv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DriftChamberv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DriftChamberv::Class_Name()
{
   return "DriftChamberv";
}

//______________________________________________________________________________
const char *DriftChamberv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DriftChamberv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DriftChamberv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DriftChamberv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DriftChamberv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DriftChamberv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DriftChamberv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DriftChamberv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SeDv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SeDv::Class_Name()
{
   return "SeDv";
}

//______________________________________________________________________________
const char *SeDv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SeDv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SeDv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SeDv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SeDv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SeDv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SeDv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SeDv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SeD12v::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SeD12v::Class_Name()
{
   return "SeD12v";
}

//______________________________________________________________________________
const char *SeD12v::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SeD12v*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SeD12v::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SeD12v*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SeD12v::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SeD12v*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SeD12v::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SeD12v*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Siv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Siv::Class_Name()
{
   return "Siv";
}

//______________________________________________________________________________
const char *Siv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Siv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Siv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Siv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Siv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Siv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Siv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Siv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CsIv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CsIv::Class_Name()
{
   return "CsIv";
}

//______________________________________________________________________________
const char *CsIv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CsIv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CsIv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CsIv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CsIv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CsIv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CsIv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CsIv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void DriftChamberv::Streamer(TBuffer &R__b)
{
   // Stream an object of class DriftChamberv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DriftChamberv::Class(),this);
   } else {
      R__b.WriteClassBuffer(DriftChamberv::Class(),this);
   }
}

//______________________________________________________________________________
void DriftChamberv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DriftChamberv.
      TClass *R__cl = ::DriftChamberv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ready", &Ready);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*L", &L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Si", &Si);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Present", &Present);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PresentWires", &PresentWires);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PresentStrips", &PresentStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PresentSubseqX", &PresentSubseqX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PresentSubseqY", &PresentSubseqY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Rnd", &Rnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw[2]", E_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_Raw[2]", T_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ECoef[2][2]", ECoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TCoef[2][2]", TCoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E[2]", E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T[2]", T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_DCRef[2]", T_DCRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_DCpropre_el[2]", T_DCpropre_el);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_DCfrag[2]", T_DCfrag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q_Raw[256]", Q_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q_Raw_Nr[256]", Q_Raw_Nr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q_RawM[4]", Q_RawM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QCoef[64][4][3]", QCoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q[64][4]", Q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N[64][4]", N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NStrips", &NStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QThresh", &QThresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mult[4]", Mult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XRef[4][2]", XRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YRef[2][2]", YRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FocalPos", &FocalPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatX[2][2]", MatX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatY[2][2]", MatY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DriftVelocity", &DriftVelocity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AngleFocal[2]", AngleFocal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AngleFocal1[1]", AngleFocal1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TanFocal[2]", TanFocal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TanFocal1[1]", TanFocal1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X[4]", X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y[2]", Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XS[4]", XS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XWA[4]", XWA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xf", &Xf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xf1", &Xf1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yf", &Yf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tf", &Tf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pf", &Pf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter[14]", Counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter1[4][5]", Counter1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Dr_ST_Q_11", &Dr_ST_Q_11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Dr_ST_Q_12", &Dr_ST_Q_12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Dr_ST_Q_21", &Dr_ST_Q_21);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Dr_ST_Q_22", &Dr_ST_Q_22);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_DriftChamberv(void *p) {
      delete ((::DriftChamberv*)p);
   }
   static void deleteArray_DriftChamberv(void *p) {
      delete [] ((::DriftChamberv*)p);
   }
   static void destruct_DriftChamberv(void *p) {
      typedef ::DriftChamberv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DriftChamberv

//______________________________________________________________________________
void IonisationChamberv::Streamer(TBuffer &R__b)
{
   // Stream an object of class IonisationChamberv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(IonisationChamberv::Class(),this);
   } else {
      R__b.WriteClassBuffer(IonisationChamberv::Class(),this);
   }
}

//______________________________________________________________________________
void IonisationChamberv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class IonisationChamberv.
      TClass *R__cl = ::IonisationChamberv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ready", &Ready);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "logLevel", &logLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*L", &L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Present", &Present);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Rnd", &Rnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw[7]", E_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw_Nr[7]", E_Raw_Nr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_RawM", &E_RawM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IC_Raw", &IC_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a[7]", a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b[7]", b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vnorm[7]", Vnorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E[7]", E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ENr[24]", ENr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EM", &EM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ETotal", &ETotal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Number", &Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eloss", &eloss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter[5]", Counter);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_IonisationChamberv(void *p) {
      delete ((::IonisationChamberv*)p);
   }
   static void deleteArray_IonisationChamberv(void *p) {
      delete [] ((::IonisationChamberv*)p);
   }
   static void destruct_IonisationChamberv(void *p) {
      typedef ::IonisationChamberv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::IonisationChamberv

//______________________________________________________________________________
namespace ROOTDict {
   void DriftChamber_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class DriftChamber.
      typedef ::ROOTShadow::Shadow::DriftChamber ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::DriftChamber*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*driftChamber", &sobj->driftChamber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*entranceWindow", &sobj->entranceWindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*exitWindow", &sobj->exitWindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gas", &sobj->gas);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DriftChamber(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DriftChamber : new ::DriftChamber;
   }
   static void *newArray_DriftChamber(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DriftChamber[nElements] : new ::DriftChamber[nElements];
   }
   // Wrapper around operator delete
   static void delete_DriftChamber(void *p) {
      delete ((::DriftChamber*)p);
   }
   static void deleteArray_DriftChamber(void *p) {
      delete [] ((::DriftChamber*)p);
   }
   static void destruct_DriftChamber(void *p) {
      typedef ::DriftChamber current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DriftChamber

//______________________________________________________________________________
namespace ROOTDict {
   void IonisationChamber_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class IonisationChamber.
      typedef ::ROOTShadow::Shadow::IonisationChamber ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::IonisationChamber*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ioCh", &sobj->ioCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*entranceWindow", &sobj->entranceWindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*exitWindow", &sobj->exitWindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*deadGas", &sobj->deadGas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*activeGas", &sobj->activeGas);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_IonisationChamber(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::IonisationChamber : new ::IonisationChamber;
   }
   static void *newArray_IonisationChamber(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::IonisationChamber[nElements] : new ::IonisationChamber[nElements];
   }
   // Wrapper around operator delete
   static void delete_IonisationChamber(void *p) {
      delete ((::IonisationChamber*)p);
   }
   static void deleteArray_IonisationChamber(void *p) {
      delete [] ((::IonisationChamber*)p);
   }
   static void destruct_IonisationChamber(void *p) {
      typedef ::IonisationChamber current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::IonisationChamber

//______________________________________________________________________________
void SeDv::Streamer(TBuffer &R__b)
{
   // Stream an object of class SeDv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SeDv::Class(),this);
   } else {
      R__b.WriteClassBuffer(SeDv::Class(),this);
   }
}

//______________________________________________________________________________
void SeDv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SeDv.
      TClass *R__cl = ::SeDv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ready", &Ready);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*L", &L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lnr", &lnr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Present", &Present);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PresentWires", &PresentWires);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PresentStrips", &PresentStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Rnd", &Rnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw[3]", E_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_Raw[1]", T_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ECoef[3][2]", ECoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TCoef[1][2]", TCoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E[3]", E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T[1]", T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q_Raw[256]", Q_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q_Raw_Nr[256]", Q_Raw_Nr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q_RawM[2]", Q_RawM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QCoef[128][2][3]", QCoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q[128][2]", Q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N[128][2]", N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NStrips", &NStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QThresh", &QThresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mult[2]", Mult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XRef[2]", XRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X[2]", X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XS[2]", XS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XWA[2]", XWA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter[14]", Counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter1[4][5]", Counter1);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SeDv(void *p) {
      delete ((::SeDv*)p);
   }
   static void deleteArray_SeDv(void *p) {
      delete [] ((::SeDv*)p);
   }
   static void destruct_SeDv(void *p) {
      typedef ::SeDv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SeDv

//______________________________________________________________________________
void SeD12v::Streamer(TBuffer &R__b)
{
   // Stream an object of class SeD12v.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SeD12v::Class(),this);
   } else {
      R__b.WriteClassBuffer(SeD12v::Class(),this);
   }
}

//______________________________________________________________________________
void SeD12v::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SeD12v.
      TClass *R__cl = ::SeD12v::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ready", &Ready);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*L", &L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*S1", &S1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*S2", &S2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Present", &Present);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Rnd", &Rnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XRef[2]", XRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YRef[2]", YRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FocalPos", &FocalPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatX[2][2]", MatX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatY[2][2]", MatY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AngleFocal[2]", AngleFocal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TanFocal[2]", TanFocal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_Raw[1]", T_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TCoef[1][2]", TCoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T[1]", T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V", &V);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X[2]", X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y[2]", Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xf", &Xf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yf", &Yf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tf", &Tf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pf", &Pf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter[14]", Counter);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SeD12v(void *p) {
      delete ((::SeD12v*)p);
   }
   static void deleteArray_SeD12v(void *p) {
      delete [] ((::SeD12v*)p);
   }
   static void destruct_SeD12v(void *p) {
      typedef ::SeD12v current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SeD12v

//______________________________________________________________________________
void Siv::Streamer(TBuffer &R__b)
{
   // Stream an object of class Siv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Siv::Class(),this);
   } else {
      R__b.WriteClassBuffer(Siv::Class(),this);
   }
}

//______________________________________________________________________________
void Siv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Siv.
      TClass *R__cl = ::Siv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ready", &Ready);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*L", &L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Present", &Present);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Rnd", &Rnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw[21]", E_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw_Nr[21]", E_Raw_Nr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_RawM", &E_RawM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_Raw[3]", T_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ECoef[21][3]", ECoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOff[21][2]", TOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TCoef[3][2]", TCoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EM", &EM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E[21]", E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ENr[21]", ENr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T[3]", T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset[2]", Offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ETotal", &ETotal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Number", &Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter[2]", Counter);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Siv(void *p) {
      delete ((::Siv*)p);
   }
   static void deleteArray_Siv(void *p) {
      delete [] ((::Siv*)p);
   }
   static void destruct_Siv(void *p) {
      typedef ::Siv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Siv

//______________________________________________________________________________
namespace ROOTDict {
   void Sive503_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Sive503.
      typedef ::ROOTShadow::Shadow::Sive503 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Sive503*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ready", &sobj->Ready);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*L", &sobj->L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Present", &sobj->Present);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Rnd", &sobj->Rnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw[21]", sobj->E_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SiRaw[21]", sobj->SiRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw_Nr[21]", sobj->E_Raw_Nr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_RawM", &sobj->E_RawM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_Raw[3]", sobj->T_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T_Raw_SIHF", &sobj->T_Raw_SIHF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SI_Raw", &sobj->SI_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ECoef[21][3]", sobj->ECoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOff[21][2]", sobj->TOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TCoef[3][5]", sobj->TCoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOffset[21]", sobj->TOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TRef[19]", sobj->TRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tpropre_el[19]", sobj->Tpropre_el);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset328[19]", sobj->Offset328);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset333[19]", sobj->Offset333);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset339[19]", sobj->Offset339);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset344[19]", sobj->Offset344);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset348[19]", sobj->Offset348);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset353[19]", sobj->Offset353);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset355[19]", sobj->Offset355);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset379[19]", sobj->Offset379);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset384[19]", sobj->Offset384);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset390[19]", sobj->Offset390);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset398[19]", sobj->Offset398);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset403[19]", sobj->Offset403);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset404[19]", sobj->Offset404);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset405[19]", sobj->Offset405);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset407[19]", sobj->Offset407);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset455[19]", sobj->Offset455);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset467[19]", sobj->Offset467);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset475[19]", sobj->Offset475);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset484[19]", sobj->Offset484);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset490[19]", sobj->Offset490);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset493[19]", sobj->Offset493);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset511[19]", sobj->Offset511);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset525[19]", sobj->Offset525);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset528[19]", sobj->Offset528);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset531[19]", sobj->Offset531);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset537[19]", sobj->Offset537);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset543[19]", sobj->Offset543);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset548[19]", sobj->Offset548);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tfrag", &sobj->Tfrag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_thick[19]", sobj->si_thick);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EM", &sobj->EM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E[21]", sobj->E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ENr[21]", sobj->ENr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T[3]", sobj->T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Offset[2]", sobj->Offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ETotal", &sobj->ETotal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Number", &sobj->Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetSi", &sobj->DetSi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter[2]", sobj->Counter);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Sive503(void *p) {
      delete ((::Sive503*)p);
   }
   static void deleteArray_Sive503(void *p) {
      delete [] ((::Sive503*)p);
   }
   static void destruct_Sive503(void *p) {
      typedef ::Sive503 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Sive503

//______________________________________________________________________________
void CsIv::Streamer(TBuffer &R__b)
{
   // Stream an object of class CsIv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CsIv::Class(),this);
   } else {
      R__b.WriteClassBuffer(CsIv::Class(),this);
   }
}

//______________________________________________________________________________
void CsIv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CsIv.
      TClass *R__cl = ::CsIv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*L", &L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ped[80][1]", Ped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ECoef[80][3]", ECoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Rnd", &Rnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw[80]", E_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CsIRaw[80]", CsIRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_Raw_Nr[80]", E_Raw_Nr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_RawM", &E_RawM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CSI_Raw", &CSI_Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EM", &EM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ENr[80]", ENr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ETotal", &ETotal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Number", &Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetCsI", &DetCsI);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_CsIv(void *p) {
      delete ((::CsIv*)p);
   }
   static void deleteArray_CsIv(void *p) {
      delete [] ((::CsIv*)p);
   }
   static void destruct_CsIv(void *p) {
      typedef ::CsIv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CsIv

//______________________________________________________________________________
void KVCsIVamos::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVCsIVamos.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVCsIVamos::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVCsIVamos::Class(),this);
   }
}

//______________________________________________________________________________
void KVCsIVamos::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVCsIVamos.
      TClass *R__cl = ::KVCsIVamos::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPar", &fPar);
      KVCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVCsIVamos(void *p) {
      return  p ? new(p) ::KVCsIVamos : new ::KVCsIVamos;
   }
   static void *newArray_KVCsIVamos(Long_t nElements, void *p) {
      return p ? new(p) ::KVCsIVamos[nElements] : new ::KVCsIVamos[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVCsIVamos(void *p) {
      delete ((::KVCsIVamos*)p);
   }
   static void deleteArray_KVCsIVamos(void *p) {
      delete [] ((::KVCsIVamos*)p);
   }
   static void destruct_KVCsIVamos(void *p) {
      typedef ::KVCsIVamos current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVCsIVamos

//______________________________________________________________________________
void KVSiliconVamos::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSiliconVamos.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVSiliconVamos::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVSiliconVamos::Class(),this);
   }
}

//______________________________________________________________________________
void KVSiliconVamos::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSiliconVamos.
      TClass *R__cl = ::KVSiliconVamos::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVSilicon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSiliconVamos(void *p) {
      return  p ? new(p) ::KVSiliconVamos : new ::KVSiliconVamos;
   }
   static void *newArray_KVSiliconVamos(Long_t nElements, void *p) {
      return p ? new(p) ::KVSiliconVamos[nElements] : new ::KVSiliconVamos[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSiliconVamos(void *p) {
      delete ((::KVSiliconVamos*)p);
   }
   static void deleteArray_KVSiliconVamos(void *p) {
      delete [] ((::KVSiliconVamos*)p);
   }
   static void destruct_KVSiliconVamos(void *p) {
      typedef ::KVSiliconVamos current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVSiliconVamos

//______________________________________________________________________________
void KVSpectroDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSpectroDetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVSpectroDetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVSpectroDetector::Class(),this);
   }
}

//______________________________________________________________________________
void KVSpectroDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSpectroDetector.
      TClass *R__cl = ::KVSpectroDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fActiveVolumes", &fActiveVolumes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFocalToTarget", &fFocalToTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNabsorbers", &fNabsorbers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotThick", &fTotThick);
      KVDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSpectroDetector(void *p) {
      return  p ? new(p) ::KVSpectroDetector : new ::KVSpectroDetector;
   }
   static void *newArray_KVSpectroDetector(Long_t nElements, void *p) {
      return p ? new(p) ::KVSpectroDetector[nElements] : new ::KVSpectroDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSpectroDetector(void *p) {
      delete ((::KVSpectroDetector*)p);
   }
   static void deleteArray_KVSpectroDetector(void *p) {
      delete [] ((::KVSpectroDetector*)p);
   }
   static void destruct_KVSpectroDetector(void *p) {
      typedef ::KVSpectroDetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVSpectroDetector

/********************************************************
* G__VAMOSgeometry.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__VAMOSgeometry();

extern "C" void G__set_cpp_environmentG__VAMOSgeometry() {
  G__cpp_reset_tagtableG__VAMOSgeometry();
}
#include <new>
extern "C" int G__cpp_dllrevG__VAMOSgeometry() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVSiliconVamos */
static int G__G__VAMOSgeometry_378_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSiliconVamos* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSiliconVamos[n];
     } else {
       p = new((void*) gvp) KVSiliconVamos[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSiliconVamos;
     } else {
       p = new((void*) gvp) KVSiliconVamos;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSiliconVamos* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSiliconVamos((Float_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) KVSiliconVamos((Float_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSiliconVamos::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSiliconVamos::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSiliconVamos::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSiliconVamos::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSiliconVamos*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSiliconVamos::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSiliconVamos::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSiliconVamos::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_378_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSiliconVamos::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSiliconVamos G__TKVSiliconVamos;
static int G__G__VAMOSgeometry_378_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSiliconVamos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSiliconVamos*) (soff+(sizeof(KVSiliconVamos)*i)))->~G__TKVSiliconVamos();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSiliconVamos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSiliconVamos*) (soff))->~G__TKVSiliconVamos();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DriftChamber */
static int G__G__VAMOSgeometry_379_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DriftChamber* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DriftChamber[n];
     } else {
       p = new((void*) gvp) DriftChamber[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DriftChamber;
     } else {
       p = new((void*) gvp) DriftChamber;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((DriftChamber*) G__getstructoffset())->GetEntranceWindowThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((DriftChamber*) G__getstructoffset())->GetExitWindowThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((DriftChamber*) G__getstructoffset())->GetGasPressure());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((DriftChamber*) G__getstructoffset())->GetGasThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamber*) G__getstructoffset())->SetEntranceWindowThickness((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamber*) G__getstructoffset())->SetExitWindowThickness((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamber*) G__getstructoffset())->SetGasPressure((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamber*) G__getstructoffset())->SetGasThickness((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((DriftChamber*) G__getstructoffset())->GetEnergyLoss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((DriftChamber*) G__getstructoffset())->GetEnergyLoss((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((DriftChamber*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_379_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DriftChamber*) G__getstructoffset())->GetDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSgeometry_379_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DriftChamber* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DriftChamber(*(DriftChamber*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DriftChamber G__TDriftChamber;
static int G__G__VAMOSgeometry_379_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DriftChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DriftChamber*) (soff+(sizeof(DriftChamber)*i)))->~G__TDriftChamber();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DriftChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DriftChamber*) (soff))->~G__TDriftChamber();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSgeometry_379_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DriftChamber* dest = (DriftChamber*) G__getstructoffset();
   *dest = *(DriftChamber*) libp->para[0].ref;
   const DriftChamber& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSpectroDetector */
static int G__G__VAMOSgeometry_682_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSpectroDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSpectroDetector[n];
     } else {
       p = new((void*) gvp) KVSpectroDetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSpectroDetector;
     } else {
       p = new((void*) gvp) KVSpectroDetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSpectroDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSpectroDetector((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVSpectroDetector((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSpectroDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSpectroDetector(*(KVSpectroDetector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVSpectroDetector(*(KVSpectroDetector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSpectroDetector*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->ActiveVolumeToFocal((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->ActiveVolumeToFocal((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->FocalToActiveVolume((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->FocalToActiveVolume((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->ActiveVolumeToFocalVect((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->ActiveVolumeToFocalVect((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->FocalToActiveVolumeVect((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->FocalToActiveVolumeVect((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((KVSpectroDetector*) G__getstructoffset())->AddAbsorber((const Char_t*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMatrix*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVSpectroDetector*) G__getstructoffset())->AddAbsorber((const Char_t*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMatrix*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVSpectroDetector*) G__getstructoffset())->AddAbsorber((const Char_t*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->BuildGeoVolume((TEnv*) G__int(libp->para[0]), (TGeoVolume*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->BuildGeoVolume((TEnv*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((KVSpectroDetector*) G__getstructoffset())->GetFiredACQParamList((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((KVSpectroDetector*) G__getstructoffset())->GetFiredACQParamList());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const TGeoHMatrix& obj = ((const KVSpectroDetector*) G__getstructoffset())->GetActiveVolToFocalMatrix((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const TGeoHMatrix& obj = ((const KVSpectroDetector*) G__getstructoffset())->GetActiveVolToFocalMatrix();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSpectroDetector*) G__getstructoffset())->GetGeoVolume((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (TGeoShape*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSpectroDetector*) G__getstructoffset())->GetGeoVolume((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((KVSpectroDetector*) G__getstructoffset())->GetMult((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((KVSpectroDetector*) G__getstructoffset())->GetMult());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 98, (long) ((KVSpectroDetector*) G__getstructoffset())->GetPosition((Double_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 98, (long) ((KVSpectroDetector*) G__getstructoffset())->GetPosition((Double_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVSpectroDetector*) G__getstructoffset())->GetDeltaXYZf((Double_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVSpectroDetector*) G__getstructoffset())->GetDeltaXYZf((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSpectroDetector*) G__getstructoffset())->SetActiveVolume((TGeoVolume*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 67, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetDetectorEnv((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (TEnv*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetDetectorEnv((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetDetectorEnv((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const KVSpectroDetector*) G__getstructoffset())->GetDetectorEnv((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (TEnv*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const KVSpectroDetector*) G__getstructoffset())->GetDetectorEnv((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetDetectorEnv((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TEnv*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetDetectorEnv((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetDetectorEnv((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (TEnv*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetDetectorEnv((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVSpectroDetector*) G__getstructoffset())->GetXf((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVSpectroDetector*) G__getstructoffset())->GetXf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVSpectroDetector*) G__getstructoffset())->GetYf((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVSpectroDetector*) G__getstructoffset())->GetYf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVSpectroDetector*) G__getstructoffset())->GetZf((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVSpectroDetector*) G__getstructoffset())->GetZf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVSpectroDetector*) G__getstructoffset())->PositionIsOK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSpectroDetector*) G__getstructoffset())->UpdateVolumeAndNodeNames();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetActiveVolumes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetActiveVolume((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const KVSpectroDetector*) G__getstructoffset())->GetActiveVolume());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVSpectroDetector*) G__getstructoffset())->GetTotalThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSpectroDetector*) G__getstructoffset())->SetFocalToTargetMatrix((TGeoHMatrix*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 98, (long) ((KVSpectroDetector*) G__getstructoffset())->GetXYZf((Double_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 98, (long) ((KVSpectroDetector*) G__getstructoffset())->GetXYZf((Double_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVSpectroDetector*) G__getstructoffset())->IsOKforID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVSpectroDetector*) G__getstructoffset())->UseRandomPosition((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVSpectroDetector*) G__getstructoffset())->UseRandomPosition();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSpectroDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSpectroDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSpectroDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSpectroDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSpectroDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSpectroDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSpectroDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSpectroDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_682_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSpectroDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSpectroDetector G__TKVSpectroDetector;
static int G__G__VAMOSgeometry_682_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSpectroDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSpectroDetector*) (soff+(sizeof(KVSpectroDetector)*i)))->~G__TKVSpectroDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSpectroDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSpectroDetector*) (soff))->~G__TKVSpectroDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* IonisationChamber */
static int G__G__VAMOSgeometry_684_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IonisationChamber* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IonisationChamber[n];
     } else {
       p = new((void*) gvp) IonisationChamber[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IonisationChamber;
     } else {
       p = new((void*) gvp) IonisationChamber;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((IonisationChamber*) G__getstructoffset())->GetDeadGasThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((IonisationChamber*) G__getstructoffset())->GetDeadGasPressure());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((IonisationChamber*) G__getstructoffset())->GetActiveGasThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((IonisationChamber*) G__getstructoffset())->GetActiveGasPressure());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((IonisationChamber*) G__getstructoffset())->GetEntranceWindowThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((IonisationChamber*) G__getstructoffset())->GetExitWindowThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamber*) G__getstructoffset())->SetDeadGasThickness((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamber*) G__getstructoffset())->SetDeadGasPressure((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamber*) G__getstructoffset())->SetActiveGasThickness((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamber*) G__getstructoffset())->SetActiveGasPressure((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamber*) G__getstructoffset())->SetEntranceWindowThickness((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamber*) G__getstructoffset())->SetExitWindowThickness((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((IonisationChamber*) G__getstructoffset())->GetDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((IonisationChamber*) G__getstructoffset())->GetEnergyLoss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((IonisationChamber*) G__getstructoffset())->GetEnergyLoss((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_684_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((IonisationChamber*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSgeometry_684_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   IonisationChamber* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new IonisationChamber(*(IonisationChamber*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef IonisationChamber G__TIonisationChamber;
static int G__G__VAMOSgeometry_684_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (IonisationChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((IonisationChamber*) (soff+(sizeof(IonisationChamber)*i)))->~G__TIonisationChamber();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (IonisationChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((IonisationChamber*) (soff))->~G__TIonisationChamber();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSgeometry_684_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IonisationChamber* dest = (IonisationChamber*) G__getstructoffset();
   *dest = *(IonisationChamber*) libp->para[0].ref;
   const IonisationChamber& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVCsIVamos */
static int G__G__VAMOSgeometry_688_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVCsIVamos* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCsIVamos[n];
     } else {
       p = new((void*) gvp) KVCsIVamos[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCsIVamos;
     } else {
       p = new((void*) gvp) KVCsIVamos;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVCsIVamos* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVCsIVamos((Float_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) KVCsIVamos((Float_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVCsIVamos*) G__getstructoffset())->GetACQPar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVCsIVamos::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCsIVamos::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVCsIVamos::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVCsIVamos::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCsIVamos*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCsIVamos::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVCsIVamos::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCsIVamos::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_688_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVCsIVamos::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVCsIVamos G__TKVCsIVamos;
static int G__G__VAMOSgeometry_688_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVCsIVamos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVCsIVamos*) (soff+(sizeof(KVCsIVamos)*i)))->~G__TKVCsIVamos();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVCsIVamos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVCsIVamos*) (soff))->~G__TKVCsIVamos();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Sive503 */
static int G__G__VAMOSgeometry_797_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Sive503* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Sive503((LogFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Sive503((LogFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Sive503));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->InitRaw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->Calibrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->Show_Raw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->Treat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->inAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->outAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->CreateHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->FillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_797_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Sive503*) G__getstructoffset())->PrintCounters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSgeometry_797_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Sive503* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Sive503(*(Sive503*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Sive503));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Sive503 G__TSive503;
static int G__G__VAMOSgeometry_797_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Sive503*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Sive503*) (soff+(sizeof(Sive503)*i)))->~G__TSive503();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Sive503*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Sive503*) (soff))->~G__TSive503();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSgeometry_797_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Sive503* dest = (Sive503*) G__getstructoffset();
   *dest = *(Sive503*) libp->para[0].ref;
   const Sive503& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* IonisationChamberv */
static int G__G__VAMOSgeometry_798_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IonisationChamberv* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new IonisationChamberv((LogFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) IonisationChamberv((LogFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamberv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->InitRaw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->Calibrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->Show_Raw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->Treat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->inAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->outAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->CreateHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->FillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->PrintCounters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) IonisationChamberv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IonisationChamberv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) IonisationChamberv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      IonisationChamberv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const IonisationChamberv*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IonisationChamberv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IonisationChamberv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IonisationChamberv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IonisationChamberv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IonisationChamberv*) G__getstructoffset())->SetLogLevel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_798_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((IonisationChamberv*) G__getstructoffset())->GetLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSgeometry_798_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   IonisationChamberv* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new IonisationChamberv(*(IonisationChamberv*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamberv));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef IonisationChamberv G__TIonisationChamberv;
static int G__G__VAMOSgeometry_798_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (IonisationChamberv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((IonisationChamberv*) (soff+(sizeof(IonisationChamberv)*i)))->~G__TIonisationChamberv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (IonisationChamberv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((IonisationChamberv*) (soff))->~G__TIonisationChamberv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSgeometry_798_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IonisationChamberv* dest = (IonisationChamberv*) G__getstructoffset();
   *dest = *(IonisationChamberv*) libp->para[0].ref;
   const IonisationChamberv& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DriftChamberv */
static int G__G__VAMOSgeometry_818_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DriftChamberv* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DriftChamberv((LogFile*) G__int(libp->para[0]), (Sive503*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) DriftChamberv((LogFile*) G__int(libp->para[0]), (Sive503*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamberv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->InitRaw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->SetMatX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->SetMatY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->Zero();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->Calibrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->Focal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->FocalSubseqX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->FocalSubseqY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->FocalX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->FocalY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->Show_Raw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->Treat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->inAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->outAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->CreateHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->FillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->PrintCounters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DriftChamberv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DriftChamberv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DriftChamberv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DriftChamberv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DriftChamberv*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DriftChamberv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DriftChamberv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DriftChamberv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DriftChamberv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_818_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DriftChamberv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSgeometry_818_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DriftChamberv* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DriftChamberv(*(DriftChamberv*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamberv));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DriftChamberv G__TDriftChamberv;
static int G__G__VAMOSgeometry_818_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DriftChamberv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DriftChamberv*) (soff+(sizeof(DriftChamberv)*i)))->~G__TDriftChamberv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DriftChamberv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DriftChamberv*) (soff))->~G__TDriftChamberv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSgeometry_818_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DriftChamberv* dest = (DriftChamberv*) G__getstructoffset();
   *dest = *(DriftChamberv*) libp->para[0].ref;
   const DriftChamberv& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SeDv */
static int G__G__VAMOSgeometry_819_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SeDv* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SeDv((LogFile*) G__int(libp->para[0]), (short) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) SeDv((LogFile*) G__int(libp->para[0]), (short) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeDv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->InitRaw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->Zero();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->Calibrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->FocalSubseqX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->Show_Raw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->Treat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->inAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->outAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->CreateHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->FillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->PrintCounters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SeDv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SeDv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SeDv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SeDv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SeDv*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeDv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SeDv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SeDv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SeDv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_819_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SeDv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSgeometry_819_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SeDv* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SeDv(*(SeDv*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeDv));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SeDv G__TSeDv;
static int G__G__VAMOSgeometry_819_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SeDv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SeDv*) (soff+(sizeof(SeDv)*i)))->~G__TSeDv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SeDv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SeDv*) (soff))->~G__TSeDv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSgeometry_819_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SeDv* dest = (SeDv*) G__getstructoffset();
   *dest = *(SeDv*) libp->para[0].ref;
   const SeDv& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SeD12v */
static int G__G__VAMOSgeometry_820_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SeD12v* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SeD12v(
(LogFile*) G__int(libp->para[0]), (SeDv*) G__int(libp->para[1])
, (SeDv*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) SeD12v(
(LogFile*) G__int(libp->para[0]), (SeDv*) G__int(libp->para[1])
, (SeDv*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeD12v));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->SetMatX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->SetMatY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->Calibrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->Focal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->FocalX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->FocalY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->Treat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->inAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->outAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->CreateHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->FillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->PrintCounters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SeD12v::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SeD12v::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SeD12v::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SeD12v::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SeD12v*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SeD12v*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SeD12v::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SeD12v::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SeD12v::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_820_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SeD12v::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSgeometry_820_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SeD12v* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SeD12v(*(SeD12v*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeD12v));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SeD12v G__TSeD12v;
static int G__G__VAMOSgeometry_820_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SeD12v*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SeD12v*) (soff+(sizeof(SeD12v)*i)))->~G__TSeD12v();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SeD12v*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SeD12v*) (soff))->~G__TSeD12v();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSgeometry_820_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SeD12v* dest = (SeD12v*) G__getstructoffset();
   *dest = *(SeD12v*) libp->para[0].ref;
   const SeD12v& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Siv */
static int G__G__VAMOSgeometry_822_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Siv* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Siv((LogFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Siv((LogFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Siv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->InitRaw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->Calibrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->Show_Raw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->Treat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->inAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->outAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->CreateHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->FillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->PrintCounters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Siv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Siv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Siv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Siv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Siv*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Siv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Siv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Siv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Siv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_822_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Siv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSgeometry_822_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Siv* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Siv(*(Siv*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Siv));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Siv G__TSiv;
static int G__G__VAMOSgeometry_822_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Siv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Siv*) (soff+(sizeof(Siv)*i)))->~G__TSiv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Siv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Siv*) (soff))->~G__TSiv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSgeometry_822_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Siv* dest = (Siv*) G__getstructoffset();
   *dest = *(Siv*) libp->para[0].ref;
   const Siv& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CsIv */
static int G__G__VAMOSgeometry_823_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CsIv* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CsIv((LogFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) CsIv((LogFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_CsIv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->InitRaw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->Calibrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->Treat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->inAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->outAttach((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->CreateHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->FillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CsIv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CsIv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CsIv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CsIv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CsIv*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CsIv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CsIv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CsIv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CsIv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSgeometry_823_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CsIv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__VAMOSgeometry_823_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CsIv* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CsIv(*(CsIv*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_CsIv));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CsIv G__TCsIv;
static int G__G__VAMOSgeometry_823_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CsIv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CsIv*) (soff+(sizeof(CsIv)*i)))->~G__TCsIv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CsIv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CsIv*) (soff))->~G__TCsIv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__VAMOSgeometry_823_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CsIv* dest = (CsIv*) G__getstructoffset();
   *dest = *(CsIv*) libp->para[0].ref;
   const CsIv& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVSiliconVamos */

/* DriftChamber */

/* KVSpectroDetector */

/* IonisationChamber */

/* KVCsIVamos */

/* Sive503 */

/* IonisationChamberv */

/* DriftChamberv */

/* SeDv */

/* SeD12v */

/* Siv */

/* CsIv */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__VAMOSgeometry {
 public:
  G__Sizep2memfuncG__VAMOSgeometry(): p(&G__Sizep2memfuncG__VAMOSgeometry::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__VAMOSgeometry::*p)();
};

size_t G__get_sizep2memfuncG__VAMOSgeometry()
{
  G__Sizep2memfuncG__VAMOSgeometry a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__VAMOSgeometry() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos))) {
     KVSiliconVamos *G__Lderived;
     G__Lderived=(KVSiliconVamos*)0x1000;
     {
       KVSilicon *G__Lpbase=(KVSilicon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSilicon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector))) {
     KVSpectroDetector *G__Lderived;
     G__Lderived=(KVSpectroDetector*)0x1000;
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos))) {
     KVCsIVamos *G__Lderived;
     G__Lderived=(KVCsIVamos*)0x1000;
     {
       KVCsI *G__Lpbase=(KVCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos),G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__VAMOSgeometry() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*,less<long> >",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,Int_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVSiliconVamos */
static void G__setup_memvarKVSiliconVamos(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos));
   { KVSiliconVamos *p; p=(KVSiliconVamos*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DriftChamber */
static void G__setup_memvarDriftChamber(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamber));
   { DriftChamber *p; p=(DriftChamber*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVDetector),-1,-1,4,"driftChamber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),-1,-1,4,"entranceWindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),-1,-1,4,"exitWindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),-1,-1,4,"gas=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSpectroDetector */
static void G__setup_memvarKVSpectroDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector));
   { KVSpectroDetector *p; p=(KVSpectroDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetectorcLcLdA),-1,-2,2,"kRdmPos=1048576LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetectorcLcLdA),-1,-2,2,"kOKforID=2097152LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVList),-1,-1,2,"fActiveVolumes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TGeoHMatrix),-1,-1,2,"fFocalToTarget=",0,"! focal-plan to target position transformation matrix");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNabsorbers=",0,"Number of absobers");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTotThick=",0,"Total thickness of the detector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fNumVol=",0,"used to set number to each new volume");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* IonisationChamber */
static void G__setup_memvarIonisationChamber(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamber));
   { IonisationChamber *p; p=(IonisationChamber*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVDetector),-1,-1,4,"ioCh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),-1,-1,4,"entranceWindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),-1,-1,4,"exitWindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),-1,-1,4,"deadGas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVMaterial),-1,-1,4,"activeGas=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVCsIVamos */
static void G__setup_memvarKVCsIVamos(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos));
   { KVCsIVamos *p; p=(KVCsIVamos*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVACQParam),-1,-1,4,"fPar=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Sive503 */
static void G__setup_memvarSive503(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Sive503));
   { Sive503 *p; p=(Sive503*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"Ready=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->L)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_LogFile),-1,-1,1,"L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Present)-(long)(p)),103,0,0,-1,-1,-1,1,"Present=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Rnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TRandom3),-1,-1,1,"Rnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SiRaw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"SiRaw[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_Raw_Nr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw_Nr[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_RawM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"E_RawM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"T_Raw[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_Raw_SIHF)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"T_Raw_SIHF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SI_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"SI_Raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ECoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ECoef[21][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TOff)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TOff[21][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TCoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TCoef[3][5]=",0,"for the new time calibration with 4 parameters");
   G__memvar_setup((void*)((long)(&p->TOffset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TOffset[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TRef)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"TRef[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tpropre_el)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Tpropre_el[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset328)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset328[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset333)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset333[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset339)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset339[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset344)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset344[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset348)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset348[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset353)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset353[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset355)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset355[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset379)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset379[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset384)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset384[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset390)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset390[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset398)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset398[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset403)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset403[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset404)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset404[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset405)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset405[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset407)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset407[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset455)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset455[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset467)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset467[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset475)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset475[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset484)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset484[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset490)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset490[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset493)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset493[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset511)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset511[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset525)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset525[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset528)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset528[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset531)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset531[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset537)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset537[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset543)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset543[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset548)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Offset548[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tfrag)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Tfrag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_thick)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"si_thick[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"EM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"E[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ENr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"ENr[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Offset[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETotal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ETotal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Number)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"Number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DetSi)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"DetSi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Counter[2]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* IonisationChamberv */
static void G__setup_memvarIonisationChamberv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamberv));
   { IonisationChamberv *p; p=(IonisationChamberv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"Ready=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"logLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->L)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_LogFile),-1,-1,1,"L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Present)-(long)(p)),103,0,0,-1,-1,-1,1,"Present=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Rnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Random),-1,-1,1,"Rnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw[7]=",0,"UShort_t E_Raw[3*8]");
   G__memvar_setup((void*)((long)(&p->E_Raw_Nr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw_Nr[7]=",0,"UShort_t E_Raw_Nr[3*8]");
   G__memvar_setup((void*)((long)(&p->E_RawM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"E_RawM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IC_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"IC_Raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"a[7]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"b[7]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vnorm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Vnorm[7]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"E[7]=",0,"Float_t E[3*8]");
   G__memvar_setup((void*)((long)(&p->ENr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"ENr[24]=",0,"UShort_t ENr[3*8]");
   G__memvar_setup((void*)((long)(&p->EM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"EM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETotal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ETotal=",0,"Multiplicity");
   G__memvar_setup((void*)((long)(&p->Number)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Number=",0,"Multiplicity");
   G__memvar_setup((void*)((long)(&p->eloss)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eloss=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Counter[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DriftChamberv */
static void G__setup_memvarDriftChamberv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamberv));
   { DriftChamberv *p; p=(DriftChamberv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"Ready=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->L)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_LogFile),-1,-1,1,"L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Si)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Sive503),-1,-1,1,"Si=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Present)-(long)(p)),103,0,0,-1,-1,-1,1,"Present=",0,"true if focal coordinates determined");
   G__memvar_setup((void*)((long)(&p->PresentWires)-(long)(p)),103,0,0,-1,-1,-1,1,"PresentWires=",0,"true if Wires are present");
   G__memvar_setup((void*)((long)(&p->PresentStrips)-(long)(p)),103,0,0,-1,-1,-1,1,"PresentStrips=",0,"true if Strips are present and Wires are present");
   G__memvar_setup((void*)((long)(&p->PresentSubseqX)-(long)(p)),103,0,0,-1,-1,-1,1,"PresentSubseqX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PresentSubseqY)-(long)(p)),103,0,0,-1,-1,-1,1,"PresentSubseqY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Rnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Random),-1,-1,1,"Rnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"T_Raw[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ECoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ECoef[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TCoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TCoef[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"E[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_DCRef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T_DCRef[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_DCpropre_el)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T_DCpropre_el[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_DCfrag)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T_DCfrag[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"Q_Raw[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q_Raw_Nr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"Q_Raw_Nr[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q_RawM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Q_RawM[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->QCoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"QCoef[64][4][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Q[64][4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->N)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"N[64][4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NStrips)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"NStrips=",0,"Number of strips considered");
   G__memvar_setup((void*)((long)(&p->QThresh)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"QThresh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mult)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"Mult[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XRef)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"XRef[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->YRef)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"YRef[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FocalPos)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"FocalPos=",0,"Focal Plane position");
   G__memvar_setup((void*)((long)(&p->MatX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MatX[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MatY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MatY[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DriftVelocity)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"DriftVelocity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AngleFocal)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"AngleFocal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AngleFocal1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"AngleFocal1[1]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TanFocal)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"TanFocal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TanFocal1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"TanFocal1[1]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"X[4]=",0,"Subsequent X");
   G__memvar_setup((void*)((long)(&p->Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Y[2]=",0,"Subsequent Y");
   G__memvar_setup((void*)((long)(&p->XS)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"XS[4]=",0,"Subsequent XSech");
   G__memvar_setup((void*)((long)(&p->XWA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"XWA[4]=",0,"Subsequent XWA");
   G__memvar_setup((void*)((long)(&p->Xf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Xf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Xf1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Xf1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Yf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Yf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Tf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Counter[14]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Counter1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Counter1[4][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Dr_ST_Q_11)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TH2S),-1,-1,1,"Dr_ST_Q_11=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Dr_ST_Q_12)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TH2S),-1,-1,1,"Dr_ST_Q_12=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Dr_ST_Q_21)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TH2S),-1,-1,1,"Dr_ST_Q_21=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Dr_ST_Q_22)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TH2S),-1,-1,1,"Dr_ST_Q_22=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SeDv */
static void G__setup_memvarSeDv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeDv));
   { SeDv *p; p=(SeDv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"Ready=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->L)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_LogFile),-1,-1,1,"L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lnr)-(long)(p)),115,0,0,-1,-1,-1,1,"lnr=",0,"SeD number locally");
   G__memvar_setup((void*)((long)(&p->Present)-(long)(p)),103,0,0,-1,-1,-1,1,"Present=",0,"true if focal coordinates determined");
   G__memvar_setup((void*)((long)(&p->PresentWires)-(long)(p)),103,0,0,-1,-1,-1,1,"PresentWires=",0,"true if Wires are present");
   G__memvar_setup((void*)((long)(&p->PresentStrips)-(long)(p)),103,0,0,-1,-1,-1,1,"PresentStrips=",0,"true if Strips are present and Wires are present");
   G__memvar_setup((void*)((long)(&p->Rnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Random),-1,-1,1,"Rnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"T_Raw[1]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ECoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ECoef[3][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TCoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TCoef[1][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"E[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T[1]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"Q_Raw[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q_Raw_Nr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"Q_Raw_Nr[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q_RawM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Q_RawM[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->QCoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"QCoef[128][2][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Q[128][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->N)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"N[128][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NStrips)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"NStrips=",0,"Number of strips considered");
   G__memvar_setup((void*)((long)(&p->QThresh)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"QThresh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mult)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Mult[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XRef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"XRef[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"X[2]=",0,"Subsequent X");
   G__memvar_setup((void*)((long)(&p->XS)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"XS[2]=",0,"Subsequent XSech");
   G__memvar_setup((void*)((long)(&p->XWA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"XWA[2]=",0,"Subsequent XWA");
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Counter[14]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Counter1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Counter1[4][5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SeD12v */
static void G__setup_memvarSeD12v(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeD12v));
   { SeD12v *p; p=(SeD12v*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"Ready=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->L)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_LogFile),-1,-1,1,"L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->S1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeDv),-1,-1,1,"S1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->S2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeDv),-1,-1,1,"S2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Present)-(long)(p)),103,0,0,-1,-1,-1,1,"Present=",0,"true if focal coordinates determined");
   G__memvar_setup((void*)((long)(&p->Rnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Random),-1,-1,1,"Rnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XRef)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"XRef[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->YRef)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"YRef[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FocalPos)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"FocalPos=",0,"Focal Plane position");
   G__memvar_setup((void*)((long)(&p->MatX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MatX[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MatY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MatY[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AngleFocal)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"AngleFocal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TanFocal)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"TanFocal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"T_Raw[1]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TCoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TCoef[1][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T[1]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->V)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"V=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"X[2]=",0,"Subsequent X");
   G__memvar_setup((void*)((long)(&p->Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Y[2]=",0,"Subsequent Y");
   G__memvar_setup((void*)((long)(&p->Xf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Xf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Yf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Yf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Tf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Pf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Counter[14]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Siv */
static void G__setup_memvarSiv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Siv));
   { Siv *p; p=(Siv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"Ready=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->L)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_LogFile),-1,-1,1,"L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Present)-(long)(p)),103,0,0,-1,-1,-1,1,"Present=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Rnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Random),-1,-1,1,"Rnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_Raw_Nr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw_Nr[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_RawM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"E_RawM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"T_Raw[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ECoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ECoef[21][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TOff)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TOff[21][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TCoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TCoef[3][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"EM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"E[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ENr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"ENr[21]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Offset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Offset[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETotal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ETotal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Number)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"Number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Counter[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CsIv */
static void G__setup_memvarCsIv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_CsIv));
   { CsIv *p; p=(CsIv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->L)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_LogFile),-1,-1,1,"L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ped)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Ped[80][1]=",0,"CsI pedestal");
   G__memvar_setup((void*)((long)(&p->ECoef)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ECoef[80][3]=",0,"CsI calibration coefficients");
   G__memvar_setup((void*)((long)(&p->Rnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TRandom3),-1,-1,1,"Rnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw[80]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CsIRaw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"CsIRaw[80]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_Raw_Nr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"E_Raw_Nr[80]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_RawM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"E_RawM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CSI_Raw)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"CSI_Raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EM)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"EM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ENr)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"ENr[80]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETotal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ETotal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Number)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"Number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DetCsI)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"DetCsI=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__VAMOSgeometry() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVSiliconVamos(void) {
   /* KVSiliconVamos */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos));
   G__memfunc_setup("KVSiliconVamos",1400,G__G__VAMOSgeometry_378_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSiliconVamos",1400,G__G__VAMOSgeometry_378_0_2, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSiliconVamos), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetACQParams",1125,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__VAMOSgeometry_378_0_5, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSiliconVamos::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSgeometry_378_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSiliconVamos::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSgeometry_378_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSiliconVamos::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSgeometry_378_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSiliconVamos::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSgeometry_378_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSgeometry_378_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSiliconVamos::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSgeometry_378_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSiliconVamos::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSgeometry_378_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSiliconVamos::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSgeometry_378_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSiliconVamos::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSiliconVamos", 1526, G__G__VAMOSgeometry_378_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDriftChamber(void) {
   /* DriftChamber */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamber));
   G__memfunc_setup("DriftChamber",1195,G__G__VAMOSgeometry_379_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamber), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntranceWindowThickness",2676,G__G__VAMOSgeometry_379_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExitWindowThickness",2270,G__G__VAMOSgeometry_379_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGasPressure",1428,G__G__VAMOSgeometry_379_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGasThickness",1511,G__G__VAMOSgeometry_379_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntranceWindowThickness",2688,G__G__VAMOSgeometry_379_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExitWindowThickness",2282,G__G__VAMOSgeometry_379_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGasPressure",1440,G__G__VAMOSgeometry_379_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGasThickness",1523,G__G__VAMOSgeometry_379_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyLoss",1323,G__G__VAMOSgeometry_379_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyLoss",1323,G__G__VAMOSgeometry_379_0_11, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__VAMOSgeometry_379_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__G__VAMOSgeometry_379_0_13, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DriftChamber", 1195, G__G__VAMOSgeometry_379_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamber), -1, 0, 1, 1, 1, 0, "u 'DriftChamber' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DriftChamber", 1321, G__G__VAMOSgeometry_379_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSgeometry_379_0_16, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamber), -1, 1, 1, 1, 1, 0, "u 'DriftChamber' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSpectroDetector(void) {
   /* KVSpectroDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector));
   G__memfunc_setup("AddAbsorber",1081,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'TGeoVolume' - 0 - - U 'TGeoMatrix' - 0 '0' matrix "
"g - 'Bool_t' 0 'kFALSE' active", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAbsorberLayer",1590,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TGeoVolume' - 0 - - g - 'Bool_t' 0 'kFALSE' active", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSpectroDetector",1723,G__G__VAMOSgeometry_682_0_3, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSpectroDetector",1723,G__G__VAMOSgeometry_682_0_4, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSpectroDetector",1723,G__G__VAMOSgeometry_682_0_5, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVSpectroDetector), -1, 0, 1, 1, 1, 0, "u 'KVSpectroDetector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__VAMOSgeometry_682_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ActiveVolumeToFocal",1916,G__G__VAMOSgeometry_682_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"D - 'Double_t' 10 - volume D - 'Double_t' 0 - focal "
"i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FocalToActiveVolume",1916,G__G__VAMOSgeometry_682_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"D - 'Double_t' 10 - focal D - 'Double_t' 0 - volume "
"i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ActiveVolumeToFocalVect",2318,G__G__VAMOSgeometry_682_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"D - 'Double_t' 10 - volume D - 'Double_t' 0 - focal "
"i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FocalToActiveVolumeVect",2318,G__G__VAMOSgeometry_682_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"D - 'Double_t' 10 - focal D - 'Double_t' 0 - volume "
"i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAbsorber",1081,G__G__VAMOSgeometry_682_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - material U 'TGeoShape' - 0 - shape "
"U 'TGeoMatrix' - 0 '0' matrix g - 'Bool_t' 0 'kFALSE' active", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildGeoVolume",1411,G__G__VAMOSgeometry_682_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TEnv' - 0 - infos U 'TGeoVolume' - 0 '0' ref_vol", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DetectParticle",1421,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVNucleus' - 0 - - U 'TVector3' - 0 '0' norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFiredACQParamList",1900,G__G__VAMOSgeometry_682_0_16, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVList), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"P\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetActiveVolToFocalMatrix",2506,G__G__VAMOSgeometry_682_0_17, 117, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TGeoHMatrix), -1, 1, 1, 1, 1, 8, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetELostByParticle",1782,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'KVNucleus' - 0 - - U 'TVector3' - 0 '0' norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeoMedium",1180,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TGeoMedium), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeoVolume",1203,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TGeoVolume), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeoVolume",1203,G__G__VAMOSgeometry_682_0_21, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TGeoVolume), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 - - "
"U 'TGeoShape' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeoVolume",1203,G__G__VAMOSgeometry_682_0_22, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TGeoVolume), -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - material "
"C - 'Char_t' 10 - shape_name C - 'Char_t' 10 - params", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMult",706,G__G__VAMOSgeometry_682_0_23, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleEIncFromERes",2230,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'KVNucleus' - 0 - - U 'TVector3' - 0 '0' norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__G__VAMOSgeometry_682_0_25, 98, -1, G__defined_typename("UChar_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - XYZf i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDeltaXYZf",1147,G__G__VAMOSgeometry_682_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - XYZf i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetActiveVolume",1536,G__G__VAMOSgeometry_682_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGeoVolume' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorEnv",1411,G__G__VAMOSgeometry_682_0_28, 67, -1, G__defined_typename("Char_t"), 0, 3, 1, 1, 9, 
"C - 'Char_t' 10 - type C - 'Char_t' 10 '\"\"' defval "
"U 'TEnv' - 0 '0' env", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorEnv",1411,G__G__VAMOSgeometry_682_0_29, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"C - 'Char_t' 10 - type d - 'Double_t' 0 - defval "
"U 'TEnv' - 0 '0' env", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorEnv",1411,G__G__VAMOSgeometry_682_0_30, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - defval "
"U 'TEnv' - 0 '0' env", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorEnv",1411,G__G__VAMOSgeometry_682_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"C - 'Char_t' 10 - type g - 'Bool_t' 0 - defval "
"U 'TEnv' - 0 '0' env", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXf",478,G__G__VAMOSgeometry_682_0_32, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYf",479,G__G__VAMOSgeometry_682_0_33, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZf",480,G__G__VAMOSgeometry_682_0_34, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PositionIsOK",1195,G__G__VAMOSgeometry_682_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateVolumeAndNodeNames",2408,G__G__VAMOSgeometry_682_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActiveVolumes",1639,G__G__VAMOSgeometry_682_0_37, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActiveVolume",1524,G__G__VAMOSgeometry_682_0_38, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TGeoVolume), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalThickness",1744,G__G__VAMOSgeometry_682_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFocalToTargetMatrix",2224,G__G__VAMOSgeometry_682_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGeoHMatrix' - 0 - matrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXYZf",657,G__G__VAMOSgeometry_682_0_41, 98, -1, G__defined_typename("UChar_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - XYZf i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOKforID",810,G__G__VAMOSgeometry_682_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseRandomPosition",1763,G__G__VAMOSgeometry_682_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' rdm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__VAMOSgeometry_682_0_44, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSpectroDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSgeometry_682_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSpectroDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSgeometry_682_0_46, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSpectroDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSgeometry_682_0_47, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSpectroDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSgeometry_682_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSgeometry_682_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSpectroDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSgeometry_682_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSpectroDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSgeometry_682_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSpectroDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSgeometry_682_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSpectroDetector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSpectroDetector", 1849, G__G__VAMOSgeometry_682_0_56, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncIonisationChamber(void) {
   /* IonisationChamber */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamber));
   G__memfunc_setup("IonisationChamber",1743,G__G__VAMOSgeometry_684_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamber), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeadGasThickness",1877,G__G__VAMOSgeometry_684_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeadGasPressure",1794,G__G__VAMOSgeometry_684_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActiveGasThickness",2115,G__G__VAMOSgeometry_684_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActiveGasPressure",2032,G__G__VAMOSgeometry_684_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntranceWindowThickness",2676,G__G__VAMOSgeometry_684_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExitWindowThickness",2270,G__G__VAMOSgeometry_684_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeadGasThickness",1889,G__G__VAMOSgeometry_684_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeadGasPressure",1806,G__G__VAMOSgeometry_684_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActiveGasThickness",2127,G__G__VAMOSgeometry_684_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActiveGasPressure",2044,G__G__VAMOSgeometry_684_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntranceWindowThickness",2688,G__G__VAMOSgeometry_684_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExitWindowThickness",2282,G__G__VAMOSgeometry_684_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__G__VAMOSgeometry_684_0_14, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyLoss",1323,G__G__VAMOSgeometry_684_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyLoss",1323,G__G__VAMOSgeometry_684_0_16, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__VAMOSgeometry_684_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("IonisationChamber", 1743, G__G__VAMOSgeometry_684_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamber), -1, 0, 1, 1, 1, 0, "u 'IonisationChamber' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IonisationChamber", 1869, G__G__VAMOSgeometry_684_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSgeometry_684_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamber), -1, 1, 1, 1, 1, 0, "u 'IonisationChamber' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVCsIVamos(void) {
   /* KVCsIVamos */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos));
   G__memfunc_setup("KVCsIVamos",934,G__G__VAMOSgeometry_688_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVCsIVamos",934,G__G__VAMOSgeometry_688_0_2, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVCsIVamos), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetACQParams",1125,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetACQPar",792,G__G__VAMOSgeometry_688_0_5, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_KVACQParam), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLumiereTotale",1628,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '-1.0' - d - 'Double_t' 0 '-1.0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCorrectedLumiereTotale",2551,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '-1.0' - d - 'Double_t' 0 '-1.0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__VAMOSgeometry_688_0_8, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVCsIVamos::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSgeometry_688_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCsIVamos::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSgeometry_688_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVCsIVamos::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSgeometry_688_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVCsIVamos::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSgeometry_688_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSgeometry_688_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCsIVamos::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSgeometry_688_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVCsIVamos::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSgeometry_688_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCsIVamos::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSgeometry_688_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVCsIVamos::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVCsIVamos", 1060, G__G__VAMOSgeometry_688_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSive503(void) {
   /* Sive503 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Sive503));
   G__memfunc_setup("Sive503",559,G__G__VAMOSgeometry_797_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Sive503), -1, 0, 1, 1, 1, 0, "U 'LogFile' - 0 - Log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__VAMOSgeometry_797_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRaw",702,G__G__VAMOSgeometry_797_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__G__VAMOSgeometry_797_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show_Raw",810,G__G__VAMOSgeometry_797_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__VAMOSgeometry_797_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Treat",512,G__G__VAMOSgeometry_797_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inAttach",812,G__G__VAMOSgeometry_797_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - inT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outAttach",941,G__G__VAMOSgeometry_797_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - outT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateHistograms",1653,G__G__VAMOSgeometry_797_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistograms",1448,G__G__VAMOSgeometry_797_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCounters",1376,G__G__VAMOSgeometry_797_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Sive503", 559, G__G__VAMOSgeometry_797_0_13, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Sive503), -1, 0, 1, 1, 1, 0, "u 'Sive503' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Sive503", 685, G__G__VAMOSgeometry_797_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSgeometry_797_0_15, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Sive503), -1, 1, 1, 1, 1, 0, "u 'Sive503' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncIonisationChamberv(void) {
   /* IonisationChamberv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamberv));
   G__memfunc_setup("IonisationChamberv",1861,G__G__VAMOSgeometry_798_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamberv), -1, 0, 1, 1, 1, 0, "U 'LogFile' - 0 - LOg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__VAMOSgeometry_798_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRaw",702,G__G__VAMOSgeometry_798_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__G__VAMOSgeometry_798_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show_Raw",810,G__G__VAMOSgeometry_798_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__VAMOSgeometry_798_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Treat",512,G__G__VAMOSgeometry_798_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inAttach",812,G__G__VAMOSgeometry_798_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - inT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outAttach",941,G__G__VAMOSgeometry_798_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - outT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateHistograms",1653,G__G__VAMOSgeometry_798_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistograms",1448,G__G__VAMOSgeometry_798_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCounters",1376,G__G__VAMOSgeometry_798_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__VAMOSgeometry_798_0_13, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&IonisationChamberv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSgeometry_798_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IonisationChamberv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSgeometry_798_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&IonisationChamberv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSgeometry_798_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&IonisationChamberv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__VAMOSgeometry_798_0_17, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__VAMOSgeometry_798_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__VAMOSgeometry_798_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSgeometry_798_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSgeometry_798_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IonisationChamberv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSgeometry_798_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IonisationChamberv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSgeometry_798_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IonisationChamberv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSgeometry_798_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IonisationChamberv::DeclFileLine) ), 0);
   G__memfunc_setup("SetLogLevel",1094,G__G__VAMOSgeometry_798_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogLevel",1082,G__G__VAMOSgeometry_798_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("IonisationChamberv", 1861, G__G__VAMOSgeometry_798_0_27, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamberv), -1, 0, 1, 1, 1, 0, "u 'IonisationChamberv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IonisationChamberv", 1987, G__G__VAMOSgeometry_798_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSgeometry_798_0_29, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_IonisationChamberv), -1, 1, 1, 1, 1, 0, "u 'IonisationChamberv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDriftChamberv(void) {
   /* DriftChamberv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamberv));
   G__memfunc_setup("DriftChamberv",1313,G__G__VAMOSgeometry_818_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamberv), -1, 0, 2, 1, 1, 0, 
"U 'LogFile' - 0 - Log U 'Sive503' - 0 - SiD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__VAMOSgeometry_818_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", "Init for every event, focal variables go to -500. ", (void*) NULL, 0);
   G__memfunc_setup("InitRaw",702,G__G__VAMOSgeometry_818_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMatX",678,G__G__VAMOSgeometry_818_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMatY",679,G__G__VAMOSgeometry_818_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Zero",416,G__G__VAMOSgeometry_818_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", "Zeroes initially, focal variables go to -500.0", (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__G__VAMOSgeometry_818_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Focal",485,G__G__VAMOSgeometry_818_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "Calulate focal coordinates", (void*) NULL, 0);
   G__memfunc_setup("FocalSubseqX",1200,G__G__VAMOSgeometry_818_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "Subsequent X", (void*) NULL, 0);
   G__memfunc_setup("FocalSubseqY",1201,G__G__VAMOSgeometry_818_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "Subsequent Y", (void*) NULL, 0);
   G__memfunc_setup("FocalX",573,G__G__VAMOSgeometry_818_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "X", (void*) NULL, 0);
   G__memfunc_setup("FocalY",574,G__G__VAMOSgeometry_818_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "Y  ", (void*) NULL, 0);
   G__memfunc_setup("Show_Raw",810,G__G__VAMOSgeometry_818_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__VAMOSgeometry_818_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Treat",512,G__G__VAMOSgeometry_818_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inAttach",812,G__G__VAMOSgeometry_818_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - inT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outAttach",941,G__G__VAMOSgeometry_818_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - outT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateHistograms",1653,G__G__VAMOSgeometry_818_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistograms",1448,G__G__VAMOSgeometry_818_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCounters",1376,G__G__VAMOSgeometry_818_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__VAMOSgeometry_818_0_21, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DriftChamberv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSgeometry_818_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DriftChamberv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSgeometry_818_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DriftChamberv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSgeometry_818_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DriftChamberv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__VAMOSgeometry_818_0_25, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__VAMOSgeometry_818_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__VAMOSgeometry_818_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSgeometry_818_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSgeometry_818_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DriftChamberv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSgeometry_818_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DriftChamberv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSgeometry_818_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DriftChamberv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSgeometry_818_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DriftChamberv::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DriftChamberv", 1313, G__G__VAMOSgeometry_818_0_33, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamberv), -1, 0, 1, 1, 1, 0, "u 'DriftChamberv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DriftChamberv", 1439, G__G__VAMOSgeometry_818_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSgeometry_818_0_35, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_DriftChamberv), -1, 1, 1, 1, 1, 0, "u 'DriftChamberv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSeDv(void) {
   /* SeDv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeDv));
   G__memfunc_setup("SeDv",370,G__G__VAMOSgeometry_819_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeDv), -1, 0, 2, 1, 1, 0, 
"U 'LogFile' - 0 - Log s - - 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__VAMOSgeometry_819_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", "Init for every event,focal variables go to -500. ", (void*) NULL, 0);
   G__memfunc_setup("InitRaw",702,G__G__VAMOSgeometry_819_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Zero",416,G__G__VAMOSgeometry_819_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "Zeroes initially, focal variables go to -500.0", (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__G__VAMOSgeometry_819_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FocalSubseqX",1200,G__G__VAMOSgeometry_819_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", "Subsequent X", (void*) NULL, 0);
   G__memfunc_setup("Show_Raw",810,G__G__VAMOSgeometry_819_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__VAMOSgeometry_819_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Treat",512,G__G__VAMOSgeometry_819_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inAttach",812,G__G__VAMOSgeometry_819_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - inT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outAttach",941,G__G__VAMOSgeometry_819_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - outT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateHistograms",1653,G__G__VAMOSgeometry_819_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistograms",1448,G__G__VAMOSgeometry_819_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCounters",1376,G__G__VAMOSgeometry_819_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__VAMOSgeometry_819_0_15, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SeDv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSgeometry_819_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SeDv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSgeometry_819_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SeDv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSgeometry_819_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SeDv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__VAMOSgeometry_819_0_19, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__VAMOSgeometry_819_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__VAMOSgeometry_819_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSgeometry_819_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSgeometry_819_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SeDv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSgeometry_819_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SeDv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSgeometry_819_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SeDv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSgeometry_819_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SeDv::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SeDv", 370, G__G__VAMOSgeometry_819_0_27, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeDv), -1, 0, 1, 1, 1, 0, "u 'SeDv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SeDv", 496, G__G__VAMOSgeometry_819_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSgeometry_819_0_29, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeDv), -1, 1, 1, 1, 1, 0, "u 'SeDv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSeD12v(void) {
   /* SeD12v */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeD12v));
   G__memfunc_setup("SeD12v",469,G__G__VAMOSgeometry_820_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeD12v), -1, 0, 3, 1, 1, 0, 
"U 'LogFile' - 0 - Log U 'SeDv' - 0 - SeD1 "
"U 'SeDv' - 0 - SeD2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__VAMOSgeometry_820_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", "Init for every event, focal variables go to -500. ", (void*) NULL, 0);
   G__memfunc_setup("SetMatX",678,G__G__VAMOSgeometry_820_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMatY",679,G__G__VAMOSgeometry_820_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__G__VAMOSgeometry_820_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Focal",485,G__G__VAMOSgeometry_820_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FocalX",573,G__G__VAMOSgeometry_820_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "X", (void*) NULL, 0);
   G__memfunc_setup("FocalY",574,G__G__VAMOSgeometry_820_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "Y  ", (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__VAMOSgeometry_820_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Treat",512,G__G__VAMOSgeometry_820_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inAttach",812,G__G__VAMOSgeometry_820_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - inT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outAttach",941,G__G__VAMOSgeometry_820_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - outT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateHistograms",1653,G__G__VAMOSgeometry_820_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistograms",1448,G__G__VAMOSgeometry_820_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCounters",1376,G__G__VAMOSgeometry_820_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__VAMOSgeometry_820_0_16, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SeD12v::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSgeometry_820_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SeD12v::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSgeometry_820_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SeD12v::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSgeometry_820_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SeD12v::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__VAMOSgeometry_820_0_20, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__VAMOSgeometry_820_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__VAMOSgeometry_820_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSgeometry_820_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSgeometry_820_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SeD12v::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSgeometry_820_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SeD12v::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSgeometry_820_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SeD12v::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSgeometry_820_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SeD12v::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SeD12v", 469, G__G__VAMOSgeometry_820_0_28, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeD12v), -1, 0, 1, 1, 1, 0, "u 'SeD12v' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SeD12v", 595, G__G__VAMOSgeometry_820_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSgeometry_820_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_SeD12v), -1, 1, 1, 1, 1, 0, "u 'SeD12v' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSiv(void) {
   /* Siv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Siv));
   G__memfunc_setup("Siv",306,G__G__VAMOSgeometry_822_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Siv), -1, 0, 1, 1, 1, 0, "U 'LogFile' - 0 - Log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__VAMOSgeometry_822_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRaw",702,G__G__VAMOSgeometry_822_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__G__VAMOSgeometry_822_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show_Raw",810,G__G__VAMOSgeometry_822_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__VAMOSgeometry_822_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Treat",512,G__G__VAMOSgeometry_822_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inAttach",812,G__G__VAMOSgeometry_822_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - inT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outAttach",941,G__G__VAMOSgeometry_822_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - outT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateHistograms",1653,G__G__VAMOSgeometry_822_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistograms",1448,G__G__VAMOSgeometry_822_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCounters",1376,G__G__VAMOSgeometry_822_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__VAMOSgeometry_822_0_13, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Siv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSgeometry_822_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Siv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSgeometry_822_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Siv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSgeometry_822_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Siv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__VAMOSgeometry_822_0_17, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__VAMOSgeometry_822_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__VAMOSgeometry_822_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSgeometry_822_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSgeometry_822_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Siv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSgeometry_822_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Siv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSgeometry_822_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Siv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSgeometry_822_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Siv::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Siv", 306, G__G__VAMOSgeometry_822_0_25, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Siv), -1, 0, 1, 1, 1, 0, "u 'Siv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Siv", 432, G__G__VAMOSgeometry_822_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSgeometry_822_0_27, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_Siv), -1, 1, 1, 1, 1, 0, "u 'Siv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCsIv(void) {
   /* CsIv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSgeometryLN_CsIv));
   G__memfunc_setup("CsIv",373,G__G__VAMOSgeometry_823_0_1, 105, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_CsIv), -1, 0, 1, 1, 1, 0, "U 'LogFile' - 0 - Log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__VAMOSgeometry_823_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRaw",702,G__G__VAMOSgeometry_823_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__G__VAMOSgeometry_823_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Treat",512,G__G__VAMOSgeometry_823_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inAttach",812,G__G__VAMOSgeometry_823_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - inT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outAttach",941,G__G__VAMOSgeometry_823_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - outT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateHistograms",1653,G__G__VAMOSgeometry_823_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistograms",1448,G__G__VAMOSgeometry_823_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__VAMOSgeometry_823_0_10, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CsIv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSgeometry_823_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CsIv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSgeometry_823_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CsIv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSgeometry_823_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CsIv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__VAMOSgeometry_823_0_14, 85, G__get_linked_tagnum(&G__G__VAMOSgeometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__VAMOSgeometry_823_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__VAMOSgeometry_823_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSgeometry_823_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSgeometry_823_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CsIv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSgeometry_823_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CsIv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSgeometry_823_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CsIv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSgeometry_823_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CsIv::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CsIv", 373, G__G__VAMOSgeometry_823_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_CsIv), -1, 0, 1, 1, 1, 0, "u 'CsIv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CsIv", 499, G__G__VAMOSgeometry_823_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__VAMOSgeometry_823_0_24, (int) ('u'), G__get_linked_tagnum(&G__G__VAMOSgeometryLN_CsIv), -1, 1, 1, 1, 1, 0, "u 'CsIv' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__VAMOSgeometry() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__VAMOSgeometry() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__VAMOSgeometry() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__VAMOSgeometryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVList = { "KVList" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVNucleus = { "KVNucleus" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TGeoMedium = { "TGeoMedium" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVMaterial = { "KVMaterial" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TGeoHMatrix = { "TGeoHMatrix" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVPosition = { "KVPosition" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVDetector = { "KVDetector" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVACQParam = { "KVACQParam" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVINDRADetector = { "KVINDRADetector" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVSilicon = { "KVSilicon" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVSiliconVamos = { "KVSiliconVamos" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_DriftChamber = { "DriftChamber" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR = { "map<long,int,less<long>,allocator<pair<const long,int> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TGeoMatrix = { "TGeoMatrix" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TGeoShape = { "TGeoShape" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR = { "map<long,TGeoNavigatorArray*,less<long>,allocator<pair<const long,TGeoNavigatorArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVSpectroDetector = { "KVSpectroDetector" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVSpectroDetectorcLcLdA = { "KVSpectroDetector::$" , 101 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_IonisationChamber = { "IonisationChamber" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVCsI = { "KVCsI" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_KVCsIVamos = { "KVCsIVamos" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_LogFile = { "LogFile" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_Random = { "Random" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_Sive503 = { "Sive503" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_IonisationChamberv = { "IonisationChamberv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_TH2S = { "TH2S" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_DriftChamberv = { "DriftChamberv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_SeDv = { "SeDv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_SeD12v = { "SeD12v" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_Siv = { "Siv" , 99 , -1 };
G__linked_taginfo G__G__VAMOSgeometryLN_CsIv = { "CsIv" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__VAMOSgeometry() {
  G__G__VAMOSgeometryLN_TClass.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TBuffer.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMemberInspector.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TObject.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TNamed.tagnum = -1 ;
  G__G__VAMOSgeometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TRandom3.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVBase.tagnum = -1 ;
  G__G__VAMOSgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVList.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TVector3.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVNucleus.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TGeoMedium.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TGeoVolume.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVMaterial.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TGeoHMatrix.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVPosition.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TEnv.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVDetector.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVACQParam.tagnum = -1 ;
  G__G__VAMOSgeometryLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TTree.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVINDRADetector.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVSilicon.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVSiliconVamos.tagnum = -1 ;
  G__G__VAMOSgeometryLN_DriftChamber.tagnum = -1 ;
  G__G__VAMOSgeometryLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TGeoMatrix.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TGeoShape.tagnum = -1 ;
  G__G__VAMOSgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVSpectroDetector.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVSpectroDetectorcLcLdA.tagnum = -1 ;
  G__G__VAMOSgeometryLN_IonisationChamber.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVCsI.tagnum = -1 ;
  G__G__VAMOSgeometryLN_KVCsIVamos.tagnum = -1 ;
  G__G__VAMOSgeometryLN_LogFile.tagnum = -1 ;
  G__G__VAMOSgeometryLN_Random.tagnum = -1 ;
  G__G__VAMOSgeometryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSgeometryLN_Sive503.tagnum = -1 ;
  G__G__VAMOSgeometryLN_IonisationChamberv.tagnum = -1 ;
  G__G__VAMOSgeometryLN_TH2S.tagnum = -1 ;
  G__G__VAMOSgeometryLN_DriftChamberv.tagnum = -1 ;
  G__G__VAMOSgeometryLN_SeDv.tagnum = -1 ;
  G__G__VAMOSgeometryLN_SeD12v.tagnum = -1 ;
  G__G__VAMOSgeometryLN_Siv.tagnum = -1 ;
  G__G__VAMOSgeometryLN_CsIv.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__VAMOSgeometry() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TRandom3);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVList);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TVector3);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVNucleus);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TGeoMedium);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVMaterial);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TGeoHMatrix);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVPosition);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TEnv);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVDetector);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVACQParam);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVINDRADetector);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVSilicon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVSiliconVamos),sizeof(KVSiliconVamos),-1,324864,"KVSilicon for Vamos",G__setup_memvarKVSiliconVamos,G__setup_memfuncKVSiliconVamos);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_DriftChamber),sizeof(DriftChamber),-1,263424,(char*)NULL,G__setup_memvarDriftChamber,G__setup_memfuncDriftChamber);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TGeoMatrix);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TGeoShape);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVSpectroDetector),sizeof(KVSpectroDetector),-1,325376,"Base class for the description of detectors in spectrometer",G__setup_memvarKVSpectroDetector,G__setup_memfuncKVSpectroDetector);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVSpectroDetectorcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_IonisationChamber),sizeof(IonisationChamber),-1,263424,(char*)NULL,G__setup_memvarIonisationChamber,G__setup_memfuncIonisationChamber);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVCsI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_KVCsIVamos),sizeof(KVCsIVamos),-1,324864,"KVCsI for Vamos",G__setup_memvarKVCsIVamos,G__setup_memfuncKVCsIVamos);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_LogFile);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_Random);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_Sive503),sizeof(Sive503),-1,295936,(char*)NULL,G__setup_memvarSive503,G__setup_memfuncSive503);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_IonisationChamberv),sizeof(IonisationChamberv),-1,295936,(char*)NULL,G__setup_memvarIonisationChamberv,G__setup_memfuncIonisationChamberv);
   G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_TH2S);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_DriftChamberv),sizeof(DriftChamberv),-1,295936,(char*)NULL,G__setup_memvarDriftChamberv,G__setup_memfuncDriftChamberv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_SeDv),sizeof(SeDv),-1,295936,(char*)NULL,G__setup_memvarSeDv,G__setup_memfuncSeDv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_SeD12v),sizeof(SeD12v),-1,295936,(char*)NULL,G__setup_memvarSeD12v,G__setup_memfuncSeD12v);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_Siv),sizeof(Siv),-1,295936,(char*)NULL,G__setup_memvarSiv,G__setup_memfuncSiv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSgeometryLN_CsIv),sizeof(CsIv),-1,295936,"VAMOS CsI",G__setup_memvarCsIv,G__setup_memfuncCsIv);
}
extern "C" void G__cpp_setupG__VAMOSgeometry(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__VAMOSgeometry()");
  G__set_cpp_environmentG__VAMOSgeometry();
  G__cpp_setup_tagtableG__VAMOSgeometry();

  G__cpp_setup_inheritanceG__VAMOSgeometry();

  G__cpp_setup_typetableG__VAMOSgeometry();

  G__cpp_setup_memvarG__VAMOSgeometry();

  G__cpp_setup_memfuncG__VAMOSgeometry();
  G__cpp_setup_globalG__VAMOSgeometry();
  G__cpp_setup_funcG__VAMOSgeometry();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__VAMOSgeometry();
  return;
}
class G__cpp_setup_initG__VAMOSgeometry {
  public:
    G__cpp_setup_initG__VAMOSgeometry() { G__add_setup_func("G__VAMOSgeometry",(G__incsetup)(&G__cpp_setupG__VAMOSgeometry)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__VAMOSgeometry() { G__remove_setup_func("G__VAMOSgeometry"); }
};
G__cpp_setup_initG__VAMOSgeometry G__cpp_setup_initializerG__VAMOSgeometry;

