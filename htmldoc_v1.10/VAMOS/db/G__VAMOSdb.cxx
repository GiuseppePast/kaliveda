//
// File generated by rootcint at Fri Jul 17 15:54:13 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__VAMOSdb
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__VAMOSdb.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVIVDB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIVDB(void *p = 0);
   static void *newArray_KVIVDB(Long_t size, void *p);
   static void delete_KVIVDB(void *p);
   static void deleteArray_KVIVDB(void *p);
   static void destruct_KVIVDB(void *p);
   static void streamer_KVIVDB(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIVDB*)
   {
      ::KVIVDB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIVDB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIVDB", ::KVIVDB::Class_Version(), "/home/john/software/sources/kaliveda.git/VAMOS/db/KVIVDB.h", 11,
                  typeid(::KVIVDB), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIVDB::Dictionary, isa_proxy, 0,
                  sizeof(::KVIVDB) );
      instance.SetNew(&new_KVIVDB);
      instance.SetNewArray(&newArray_KVIVDB);
      instance.SetDelete(&delete_KVIVDB);
      instance.SetDeleteArray(&deleteArray_KVIVDB);
      instance.SetDestructor(&destruct_KVIVDB);
      instance.SetStreamerFunc(&streamer_KVIVDB);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIVDB*)
   {
      return GenerateInitInstanceLocal((::KVIVDB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIVDB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVIVDB::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIVDB::Class_Name()
{
   return "KVIVDB";
}

//______________________________________________________________________________
const char *KVIVDB::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVDB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIVDB::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVDB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIVDB::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVDB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIVDB::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIVDB*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVIVDB::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIVDB.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVINDRADB::Streamer(R__b);
      R__b >> fDeltaPed;
      R__b >> fVAMOSCalConf;
      R__b.CheckByteCount(R__s, R__c, KVIVDB::IsA());
   } else {
      R__c = R__b.WriteVersion(KVIVDB::IsA(), kTRUE);
      KVINDRADB::Streamer(R__b);
      R__b << fDeltaPed;
      R__b << fVAMOSCalConf;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVIVDB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIVDB.
      TClass *R__cl = ::KVIVDB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaPed", &fDeltaPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVAMOSCalConf", &fVAMOSCalConf);
      KVINDRADB::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIVDB(void *p) {
      return  p ? new(p) ::KVIVDB : new ::KVIVDB;
   }
   static void *newArray_KVIVDB(Long_t nElements, void *p) {
      return p ? new(p) ::KVIVDB[nElements] : new ::KVIVDB[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIVDB(void *p) {
      delete ((::KVIVDB*)p);
   }
   static void deleteArray_KVIVDB(void *p) {
      delete [] ((::KVIVDB*)p);
   }
   static void destruct_KVIVDB(void *p) {
      typedef ::KVIVDB current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVIVDB(TBuffer &buf, void *obj) {
      ((::KVIVDB*)obj)->::KVIVDB::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVIVDB

/********************************************************
* G__VAMOSdb.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__VAMOSdb();

extern "C" void G__set_cpp_environmentG__VAMOSdb() {
  G__cpp_reset_tagtableG__VAMOSdb();
}
#include <new>
extern "C" int G__cpp_dllrevG__VAMOSdb() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVIVDB */
static int G__G__VAMOSdb_693_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIVDB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIVDB[n];
     } else {
       p = new((void*) gvp) KVIVDB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIVDB;
     } else {
       p = new((void*) gvp) KVIVDB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIVDB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVIVDB((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVIVDB((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIVDB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVDB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIVDB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIVDB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIVDB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVDB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVDB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIVDB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__VAMOSdb_693_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIVDB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIVDB G__TKVIVDB;
static int G__G__VAMOSdb_693_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIVDB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIVDB*) (soff+(sizeof(KVIVDB)*i)))->~G__TKVIVDB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIVDB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIVDB*) (soff))->~G__TKVIVDB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVIVDB */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__VAMOSdb {
 public:
  G__Sizep2memfuncG__VAMOSdb(): p(&G__Sizep2memfuncG__VAMOSdb::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__VAMOSdb::*p)();
};

size_t G__get_sizep2memfuncG__VAMOSdb()
{
  G__Sizep2memfuncG__VAMOSdb a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__VAMOSdb() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB))) {
     KVIVDB *G__Lderived;
     G__Lderived=(KVIVDB*)0x1000;
     {
       KVINDRADB *G__Lpbase=(KVINDRADB*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB),G__get_linked_tagnum(&G__G__VAMOSdbLN_KVINDRADB),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB),G__get_linked_tagnum(&G__G__VAMOSdbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB),G__get_linked_tagnum(&G__G__VAMOSdbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB),G__get_linked_tagnum(&G__G__VAMOSdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB),G__get_linked_tagnum(&G__G__VAMOSdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARunListReader *G__Lpbase=(KVINDRARunListReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB),G__get_linked_tagnum(&G__G__VAMOSdbLN_KVINDRARunListReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__VAMOSdb() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__VAMOSdbLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__VAMOSdbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVIVDB */
static void G__setup_memvarKVIVDB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB));
   { KVIVDB *p; p=(KVIVDB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSdbLN_KVDBTable),-1,-1,2,"fDeltaPed=",0,"-> table of INDRA detector pedestal corrections");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSdbLN_KVDBTable),-1,-1,2,"fVAMOSCalConf=",0,"-> table of VAMOS detector calibration and configuration parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__VAMOSdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__VAMOSdb() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVIVDB(void) {
   /* KVIVDB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB));
   G__memfunc_setup("ReadDeltaPedestal",1688,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - ifile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadPedestalCorrection",2246,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadPedestalList",1610,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadVamosCalibFile",1757,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - ifile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadVamosCalibrations",2141,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadVamosScalers",1615,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIVDB",454,G__G__VAMOSdb_693_0_8, 105, G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIVDB",454,G__G__VAMOSdb_693_0_9, 105, G__get_linked_tagnum(&G__G__VAMOSdbLN_KVIVDB), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__VAMOSdb_693_0_11, 85, G__get_linked_tagnum(&G__G__VAMOSdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIVDB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__VAMOSdb_693_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVDB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__VAMOSdb_693_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIVDB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__VAMOSdb_693_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIVDB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__VAMOSdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__VAMOSdb_693_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__VAMOSdb_693_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVDB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__VAMOSdb_693_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVDB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__VAMOSdb_693_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIVDB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__VAMOSdb_693_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIVDB::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIVDB", 580, G__G__VAMOSdb_693_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__VAMOSdb() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__VAMOSdb() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__VAMOSdb() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__VAMOSdbLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TFolder = { "TFolder" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_KVDBTable = { "KVDBTable" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_KVDataBase = { "KVDataBase" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_KVINDRARunListReader = { "KVINDRARunListReader" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_KVINDRADB = { "KVINDRADB" , 99 , -1 };
G__linked_taginfo G__G__VAMOSdbLN_KVIVDB = { "KVIVDB" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__VAMOSdb() {
  G__G__VAMOSdbLN_TClass.tagnum = -1 ;
  G__G__VAMOSdbLN_TBuffer.tagnum = -1 ;
  G__G__VAMOSdbLN_TMemberInspector.tagnum = -1 ;
  G__G__VAMOSdbLN_TObject.tagnum = -1 ;
  G__G__VAMOSdbLN_TNamed.tagnum = -1 ;
  G__G__VAMOSdbLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__VAMOSdbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__VAMOSdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__VAMOSdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__VAMOSdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TFolder.tagnum = -1 ;
  G__G__VAMOSdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__VAMOSdbLN_KVDBTable.tagnum = -1 ;
  G__G__VAMOSdbLN_KVDataBase.tagnum = -1 ;
  G__G__VAMOSdbLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__VAMOSdbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__VAMOSdbLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__VAMOSdbLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__VAMOSdbLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__VAMOSdbLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__VAMOSdbLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__VAMOSdbLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__VAMOSdbLN_KVINDRARunListReader.tagnum = -1 ;
  G__G__VAMOSdbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__VAMOSdbLN_KVINDRADB.tagnum = -1 ;
  G__G__VAMOSdbLN_KVIVDB.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__VAMOSdb() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TFolder);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_KVDBTable);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_KVDataBase);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_KVINDRARunListReader);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_KVINDRADB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__VAMOSdbLN_KVIVDB),sizeof(KVIVDB),-1,62720,"Database for e494s experiment coupling INDRA with VAMOS",G__setup_memvarKVIVDB,G__setup_memfuncKVIVDB);
}
extern "C" void G__cpp_setupG__VAMOSdb(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__VAMOSdb()");
  G__set_cpp_environmentG__VAMOSdb();
  G__cpp_setup_tagtableG__VAMOSdb();

  G__cpp_setup_inheritanceG__VAMOSdb();

  G__cpp_setup_typetableG__VAMOSdb();

  G__cpp_setup_memvarG__VAMOSdb();

  G__cpp_setup_memfuncG__VAMOSdb();
  G__cpp_setup_globalG__VAMOSdb();
  G__cpp_setup_funcG__VAMOSdb();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__VAMOSdb();
  return;
}
class G__cpp_setup_initG__VAMOSdb {
  public:
    G__cpp_setup_initG__VAMOSdb() { G__add_setup_func("G__VAMOSdb",(G__incsetup)(&G__cpp_setupG__VAMOSdb)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__VAMOSdb() { G__remove_setup_func("G__VAMOSdb"); }
};
G__cpp_setup_initG__VAMOSdb G__cpp_setup_initializerG__VAMOSdb;

