//
// File generated by rootcint at Fri Jul 17 15:51:25 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVMultiDetexp_events
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVMultiDetexp_events.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVGANILDataReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVGANILDataReader(void *p = 0);
   static void *newArray_KVGANILDataReader(Long_t size, void *p);
   static void delete_KVGANILDataReader(void *p);
   static void deleteArray_KVGANILDataReader(void *p);
   static void destruct_KVGANILDataReader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGANILDataReader*)
   {
      ::KVGANILDataReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGANILDataReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGANILDataReader", ::KVGANILDataReader::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVGANILDataReader.h", 15,
                  typeid(::KVGANILDataReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGANILDataReader::Dictionary, isa_proxy, 4,
                  sizeof(::KVGANILDataReader) );
      instance.SetNew(&new_KVGANILDataReader);
      instance.SetNewArray(&newArray_KVGANILDataReader);
      instance.SetDelete(&delete_KVGANILDataReader);
      instance.SetDeleteArray(&deleteArray_KVGANILDataReader);
      instance.SetDestructor(&destruct_KVGANILDataReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGANILDataReader*)
   {
      return GenerateInitInstanceLocal((::KVGANILDataReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGANILDataReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVReconstructedNucleus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVReconstructedNucleus(void *p = 0);
   static void *newArray_KVReconstructedNucleus(Long_t size, void *p);
   static void delete_KVReconstructedNucleus(void *p);
   static void deleteArray_KVReconstructedNucleus(void *p);
   static void destruct_KVReconstructedNucleus(void *p);
   static void streamer_KVReconstructedNucleus(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVReconstructedNucleus*)
   {
      ::KVReconstructedNucleus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVReconstructedNucleus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVReconstructedNucleus", ::KVReconstructedNucleus::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVReconstructedNucleus.h", 13,
                  typeid(::KVReconstructedNucleus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVReconstructedNucleus::Dictionary, isa_proxy, 1,
                  sizeof(::KVReconstructedNucleus) );
      instance.SetNew(&new_KVReconstructedNucleus);
      instance.SetNewArray(&newArray_KVReconstructedNucleus);
      instance.SetDelete(&delete_KVReconstructedNucleus);
      instance.SetDeleteArray(&deleteArray_KVReconstructedNucleus);
      instance.SetDestructor(&destruct_KVReconstructedNucleus);
      instance.SetStreamerFunc(&streamer_KVReconstructedNucleus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVReconstructedNucleus*)
   {
      return GenerateInitInstanceLocal((::KVReconstructedNucleus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVReconstructedNucleus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVMultiDetArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVMultiDetArray(void *p = 0);
   static void *newArray_KVMultiDetArray(Long_t size, void *p);
   static void delete_KVMultiDetArray(void *p);
   static void deleteArray_KVMultiDetArray(void *p);
   static void destruct_KVMultiDetArray(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVMultiDetArray*)
   {
      ::KVMultiDetArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVMultiDetArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVMultiDetArray", ::KVMultiDetArray::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVMultiDetArray.h", 31,
                  typeid(::KVMultiDetArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVMultiDetArray::Dictionary, isa_proxy, 4,
                  sizeof(::KVMultiDetArray) );
      instance.SetNew(&new_KVMultiDetArray);
      instance.SetNewArray(&newArray_KVMultiDetArray);
      instance.SetDelete(&delete_KVMultiDetArray);
      instance.SetDeleteArray(&deleteArray_KVMultiDetArray);
      instance.SetDestructor(&destruct_KVMultiDetArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVMultiDetArray*)
   {
      return GenerateInitInstanceLocal((::KVMultiDetArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVMultiDetArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDTelescope_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDTelescope(void *p = 0);
   static void *newArray_KVIDTelescope(Long_t size, void *p);
   static void delete_KVIDTelescope(void *p);
   static void deleteArray_KVIDTelescope(void *p);
   static void destruct_KVIDTelescope(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDTelescope*)
   {
      ::KVIDTelescope *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDTelescope >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDTelescope", ::KVIDTelescope::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVIDTelescope.h", 35,
                  typeid(::KVIDTelescope), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDTelescope::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDTelescope) );
      instance.SetNew(&new_KVIDTelescope);
      instance.SetNewArray(&newArray_KVIDTelescope);
      instance.SetDelete(&delete_KVIDTelescope);
      instance.SetDeleteArray(&deleteArray_KVIDTelescope);
      instance.SetDestructor(&destruct_KVIDTelescope);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDTelescope*)
   {
      return GenerateInitInstanceLocal((::KVIDTelescope*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDTelescope*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVReconstructedEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVReconstructedEvent(void *p = 0);
   static void *newArray_KVReconstructedEvent(Long_t size, void *p);
   static void delete_KVReconstructedEvent(void *p);
   static void deleteArray_KVReconstructedEvent(void *p);
   static void destruct_KVReconstructedEvent(void *p);
   static void streamer_KVReconstructedEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVReconstructedEvent*)
   {
      ::KVReconstructedEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVReconstructedEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVReconstructedEvent", ::KVReconstructedEvent::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVReconstructedEvent.h", 29,
                  typeid(::KVReconstructedEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVReconstructedEvent::Dictionary, isa_proxy, 1,
                  sizeof(::KVReconstructedEvent) );
      instance.SetNew(&new_KVReconstructedEvent);
      instance.SetNewArray(&newArray_KVReconstructedEvent);
      instance.SetDelete(&delete_KVReconstructedEvent);
      instance.SetDeleteArray(&deleteArray_KVReconstructedEvent);
      instance.SetDestructor(&destruct_KVReconstructedEvent);
      instance.SetStreamerFunc(&streamer_KVReconstructedEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVReconstructedEvent*)
   {
      return GenerateInitInstanceLocal((::KVReconstructedEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVReconstructedEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDetectorEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDetectorEvent(void *p = 0);
   static void *newArray_KVDetectorEvent(Long_t size, void *p);
   static void delete_KVDetectorEvent(void *p);
   static void deleteArray_KVDetectorEvent(void *p);
   static void destruct_KVDetectorEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDetectorEvent*)
   {
      ::KVDetectorEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDetectorEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDetectorEvent", ::KVDetectorEvent::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVDetectorEvent.h", 28,
                  typeid(::KVDetectorEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDetectorEvent::Dictionary, isa_proxy, 4,
                  sizeof(::KVDetectorEvent) );
      instance.SetNew(&new_KVDetectorEvent);
      instance.SetNewArray(&newArray_KVDetectorEvent);
      instance.SetDelete(&delete_KVDetectorEvent);
      instance.SetDeleteArray(&deleteArray_KVDetectorEvent);
      instance.SetDestructor(&destruct_KVDetectorEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDetectorEvent*)
   {
      return GenerateInitInstanceLocal((::KVDetectorEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDetectorEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVUpDater_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVUpDater(void *p = 0);
   static void *newArray_KVUpDater(Long_t size, void *p);
   static void delete_KVUpDater(void *p);
   static void deleteArray_KVUpDater(void *p);
   static void destruct_KVUpDater(void *p);
   static void streamer_KVUpDater(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVUpDater*)
   {
      ::KVUpDater *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVUpDater >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVUpDater", ::KVUpDater::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVUpDater.h", 15,
                  typeid(::KVUpDater), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVUpDater::Dictionary, isa_proxy, 0,
                  sizeof(::KVUpDater) );
      instance.SetNew(&new_KVUpDater);
      instance.SetNewArray(&newArray_KVUpDater);
      instance.SetDelete(&delete_KVUpDater);
      instance.SetDeleteArray(&deleteArray_KVUpDater);
      instance.SetDestructor(&destruct_KVUpDater);
      instance.SetStreamerFunc(&streamer_KVUpDater);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVUpDater*)
   {
      return GenerateInitInstanceLocal((::KVUpDater*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVUpDater*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVASMultiDetArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVASMultiDetArray(void *p = 0);
   static void *newArray_KVASMultiDetArray(Long_t size, void *p);
   static void delete_KVASMultiDetArray(void *p);
   static void deleteArray_KVASMultiDetArray(void *p);
   static void destruct_KVASMultiDetArray(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVASMultiDetArray*)
   {
      ::KVASMultiDetArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVASMultiDetArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVASMultiDetArray", ::KVASMultiDetArray::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVASMultiDetArray.h", 28,
                  typeid(::KVASMultiDetArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVASMultiDetArray::Dictionary, isa_proxy, 4,
                  sizeof(::KVASMultiDetArray) );
      instance.SetNew(&new_KVASMultiDetArray);
      instance.SetNewArray(&newArray_KVASMultiDetArray);
      instance.SetDelete(&delete_KVASMultiDetArray);
      instance.SetDeleteArray(&deleteArray_KVASMultiDetArray);
      instance.SetDestructor(&destruct_KVASMultiDetArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVASMultiDetArray*)
   {
      return GenerateInitInstanceLocal((::KVASMultiDetArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVASMultiDetArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVRTGIDManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVRTGIDManager(void *p = 0);
   static void *newArray_KVRTGIDManager(Long_t size, void *p);
   static void delete_KVRTGIDManager(void *p);
   static void deleteArray_KVRTGIDManager(void *p);
   static void destruct_KVRTGIDManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVRTGIDManager*)
   {
      ::KVRTGIDManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVRTGIDManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVRTGIDManager", ::KVRTGIDManager::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVRTGIDManager.h", 10,
                  typeid(::KVRTGIDManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVRTGIDManager::Dictionary, isa_proxy, 4,
                  sizeof(::KVRTGIDManager) );
      instance.SetNew(&new_KVRTGIDManager);
      instance.SetNewArray(&newArray_KVRTGIDManager);
      instance.SetDelete(&delete_KVRTGIDManager);
      instance.SetDeleteArray(&deleteArray_KVRTGIDManager);
      instance.SetDestructor(&destruct_KVRTGIDManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVRTGIDManager*)
   {
      return GenerateInitInstanceLocal((::KVRTGIDManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVRTGIDManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVElasticScatterEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVElasticScatterEvent(void *p = 0);
   static void *newArray_KVElasticScatterEvent(Long_t size, void *p);
   static void delete_KVElasticScatterEvent(void *p);
   static void deleteArray_KVElasticScatterEvent(void *p);
   static void destruct_KVElasticScatterEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVElasticScatterEvent*)
   {
      ::KVElasticScatterEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVElasticScatterEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVElasticScatterEvent", ::KVElasticScatterEvent::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVElasticScatterEvent.h", 34,
                  typeid(::KVElasticScatterEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVElasticScatterEvent::Dictionary, isa_proxy, 4,
                  sizeof(::KVElasticScatterEvent) );
      instance.SetNew(&new_KVElasticScatterEvent);
      instance.SetNewArray(&newArray_KVElasticScatterEvent);
      instance.SetDelete(&delete_KVElasticScatterEvent);
      instance.SetDeleteArray(&deleteArray_KVElasticScatterEvent);
      instance.SetDestructor(&destruct_KVElasticScatterEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVElasticScatterEvent*)
   {
      return GenerateInitInstanceLocal((::KVElasticScatterEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVElasticScatterEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVGeoImport_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVGeoImport(void *p);
   static void deleteArray_KVGeoImport(void *p);
   static void destruct_KVGeoImport(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGeoImport*)
   {
      ::KVGeoImport *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGeoImport >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGeoImport", ::KVGeoImport::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVGeoImport.h", 15,
                  typeid(::KVGeoImport), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGeoImport::Dictionary, isa_proxy, 4,
                  sizeof(::KVGeoImport) );
      instance.SetDelete(&delete_KVGeoImport);
      instance.SetDeleteArray(&deleteArray_KVGeoImport);
      instance.SetDestructor(&destruct_KVGeoImport);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGeoImport*)
   {
      return GenerateInitInstanceLocal((::KVGeoImport*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGeoImport*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVEventFiltering_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVEventFiltering(void *p = 0);
   static void *newArray_KVEventFiltering(Long_t size, void *p);
   static void delete_KVEventFiltering(void *p);
   static void deleteArray_KVEventFiltering(void *p);
   static void destruct_KVEventFiltering(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVEventFiltering*)
   {
      ::KVEventFiltering *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVEventFiltering >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVEventFiltering", ::KVEventFiltering::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVEventFiltering.h", 13,
                  typeid(::KVEventFiltering), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVEventFiltering::Dictionary, isa_proxy, 4,
                  sizeof(::KVEventFiltering) );
      instance.SetNew(&new_KVEventFiltering);
      instance.SetNewArray(&newArray_KVEventFiltering);
      instance.SetDelete(&delete_KVEventFiltering);
      instance.SetDeleteArray(&deleteArray_KVEventFiltering);
      instance.SetDestructor(&destruct_KVEventFiltering);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVEventFiltering*)
   {
      return GenerateInitInstanceLocal((::KVEventFiltering*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVEventFiltering*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVRawDataAnalyser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVRawDataAnalyser(void *p);
   static void deleteArray_KVRawDataAnalyser(void *p);
   static void destruct_KVRawDataAnalyser(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVRawDataAnalyser*)
   {
      ::KVRawDataAnalyser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVRawDataAnalyser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVRawDataAnalyser", ::KVRawDataAnalyser::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVRawDataAnalyser.h", 13,
                  typeid(::KVRawDataAnalyser), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVRawDataAnalyser::Dictionary, isa_proxy, 4,
                  sizeof(::KVRawDataAnalyser) );
      instance.SetDelete(&delete_KVRawDataAnalyser);
      instance.SetDeleteArray(&deleteArray_KVRawDataAnalyser);
      instance.SetDestructor(&destruct_KVRawDataAnalyser);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVRawDataAnalyser*)
   {
      return GenerateInitInstanceLocal((::KVRawDataAnalyser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVRawDataAnalyser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVElasticScatter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVElasticScatter(void *p = 0);
   static void *newArray_KVElasticScatter(Long_t size, void *p);
   static void delete_KVElasticScatter(void *p);
   static void deleteArray_KVElasticScatter(void *p);
   static void destruct_KVElasticScatter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVElasticScatter*)
   {
      ::KVElasticScatter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVElasticScatter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVElasticScatter", ::KVElasticScatter::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/exp_events/KVElasticScatter.h", 26,
                  typeid(::KVElasticScatter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVElasticScatter::Dictionary, isa_proxy, 4,
                  sizeof(::KVElasticScatter) );
      instance.SetNew(&new_KVElasticScatter);
      instance.SetNewArray(&newArray_KVElasticScatter);
      instance.SetDelete(&delete_KVElasticScatter);
      instance.SetDeleteArray(&deleteArray_KVElasticScatter);
      instance.SetDestructor(&destruct_KVElasticScatter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVElasticScatter*)
   {
      return GenerateInitInstanceLocal((::KVElasticScatter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVElasticScatter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVGANILDataReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGANILDataReader::Class_Name()
{
   return "KVGANILDataReader";
}

//______________________________________________________________________________
const char *KVGANILDataReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGANILDataReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGANILDataReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGANILDataReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGANILDataReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGANILDataReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGANILDataReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGANILDataReader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVReconstructedNucleus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVReconstructedNucleus::Class_Name()
{
   return "KVReconstructedNucleus";
}

//______________________________________________________________________________
const char *KVReconstructedNucleus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconstructedNucleus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVReconstructedNucleus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconstructedNucleus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVReconstructedNucleus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconstructedNucleus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVReconstructedNucleus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconstructedNucleus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVMultiDetArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVMultiDetArray::Class_Name()
{
   return "KVMultiDetArray";
}

//______________________________________________________________________________
const char *KVMultiDetArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVMultiDetArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVMultiDetArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVMultiDetArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVMultiDetArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVMultiDetArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVMultiDetArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVMultiDetArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDTelescope::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDTelescope::Class_Name()
{
   return "KVIDTelescope";
}

//______________________________________________________________________________
const char *KVIDTelescope::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDTelescope*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDTelescope::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDTelescope*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDTelescope::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDTelescope*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDTelescope::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDTelescope*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVReconstructedEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVReconstructedEvent::Class_Name()
{
   return "KVReconstructedEvent";
}

//______________________________________________________________________________
const char *KVReconstructedEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconstructedEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVReconstructedEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconstructedEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVReconstructedEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconstructedEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVReconstructedEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconstructedEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDetectorEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDetectorEvent::Class_Name()
{
   return "KVDetectorEvent";
}

//______________________________________________________________________________
const char *KVDetectorEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDetectorEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDetectorEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDetectorEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDetectorEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDetectorEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDetectorEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDetectorEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVUpDater::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVUpDater::Class_Name()
{
   return "KVUpDater";
}

//______________________________________________________________________________
const char *KVUpDater::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVUpDater*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVUpDater::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVUpDater*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVUpDater::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVUpDater*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVUpDater::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVUpDater*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVASMultiDetArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVASMultiDetArray::Class_Name()
{
   return "KVASMultiDetArray";
}

//______________________________________________________________________________
const char *KVASMultiDetArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVASMultiDetArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVASMultiDetArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVASMultiDetArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVASMultiDetArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVASMultiDetArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVASMultiDetArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVASMultiDetArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVRTGIDManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVRTGIDManager::Class_Name()
{
   return "KVRTGIDManager";
}

//______________________________________________________________________________
const char *KVRTGIDManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRTGIDManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVRTGIDManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRTGIDManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVRTGIDManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRTGIDManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVRTGIDManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRTGIDManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVElasticScatterEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVElasticScatterEvent::Class_Name()
{
   return "KVElasticScatterEvent";
}

//______________________________________________________________________________
const char *KVElasticScatterEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVElasticScatterEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVElasticScatterEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVElasticScatterEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVElasticScatterEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVElasticScatterEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVElasticScatterEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVElasticScatterEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVGeoImport::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGeoImport::Class_Name()
{
   return "KVGeoImport";
}

//______________________________________________________________________________
const char *KVGeoImport::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGeoImport*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGeoImport::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGeoImport*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGeoImport::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGeoImport*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGeoImport::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGeoImport*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVEventFiltering::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVEventFiltering::Class_Name()
{
   return "KVEventFiltering";
}

//______________________________________________________________________________
const char *KVEventFiltering::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVEventFiltering*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVEventFiltering::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVEventFiltering*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVEventFiltering::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVEventFiltering*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVEventFiltering::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVEventFiltering*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVRawDataAnalyser::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVRawDataAnalyser::Class_Name()
{
   return "KVRawDataAnalyser";
}

//______________________________________________________________________________
const char *KVRawDataAnalyser::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRawDataAnalyser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVRawDataAnalyser::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRawDataAnalyser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVRawDataAnalyser::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRawDataAnalyser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVRawDataAnalyser::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRawDataAnalyser*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVElasticScatter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVElasticScatter::Class_Name()
{
   return "KVElasticScatter";
}

//______________________________________________________________________________
const char *KVElasticScatter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVElasticScatter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVElasticScatter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVElasticScatter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVElasticScatter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVElasticScatter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVElasticScatter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVElasticScatter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVEventFiltering::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVEventFiltering.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVEventFiltering::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVEventFiltering::Class(),this);
   }
}

//______________________________________________________________________________
void KVEventFiltering::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVEventFiltering.
      TClass *R__cl = ::KVEventFiltering::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEVN", &fEVN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReconEvent", &fReconEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCMVelocity", &fCMVelocity);
      R__insp.InspectMember(fCMVelocity, "fCMVelocity.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTransformKinematics", &fTransformKinematics);
      KVEventSelector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVEventFiltering(void *p) {
      return  p ? new(p) ::KVEventFiltering : new ::KVEventFiltering;
   }
   static void *newArray_KVEventFiltering(Long_t nElements, void *p) {
      return p ? new(p) ::KVEventFiltering[nElements] : new ::KVEventFiltering[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVEventFiltering(void *p) {
      delete ((::KVEventFiltering*)p);
   }
   static void deleteArray_KVEventFiltering(void *p) {
      delete [] ((::KVEventFiltering*)p);
   }
   static void destruct_KVEventFiltering(void *p) {
      typedef ::KVEventFiltering current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVEventFiltering

//______________________________________________________________________________
void KVReconstructedNucleus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVReconstructedNucleus.
      TClass *R__cl = ::KVReconstructedNucleus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetNames", &fDetNames);
      R__insp.InspectMember(fDetNames, "fDetNames.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetList", &fDetList);
      R__insp.InspectMember(fDetList, "fDetList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDTelName", &fIDTelName);
      R__insp.InspectMember(fIDTelName, "fIDTelName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIDTelescope", &fIDTelescope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSegDet", &fNSegDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnalStatus", &fAnalStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealZ", &fRealZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealA", &fRealA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetEnergyLoss", &fTargetEnergyLoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDresults[5]", fIDresults);
      KVNucleus::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVReconstructedNucleus(void *p) {
      return  p ? new(p) ::KVReconstructedNucleus : new ::KVReconstructedNucleus;
   }
   static void *newArray_KVReconstructedNucleus(Long_t nElements, void *p) {
      return p ? new(p) ::KVReconstructedNucleus[nElements] : new ::KVReconstructedNucleus[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVReconstructedNucleus(void *p) {
      delete ((::KVReconstructedNucleus*)p);
   }
   static void deleteArray_KVReconstructedNucleus(void *p) {
      delete [] ((::KVReconstructedNucleus*)p);
   }
   static void destruct_KVReconstructedNucleus(void *p) {
      typedef ::KVReconstructedNucleus current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVReconstructedNucleus(TBuffer &buf, void *obj) {
      ((::KVReconstructedNucleus*)obj)->::KVReconstructedNucleus::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVReconstructedNucleus

//______________________________________________________________________________
void KVDetectorEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDetectorEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDetectorEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDetectorEvent::Class(),this);
   }
}

//______________________________________________________________________________
void KVDetectorEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDetectorEvent.
      TClass *R__cl = ::KVDetectorEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitGroups", &fHitGroups);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDetectorEvent(void *p) {
      return  p ? new(p) ::KVDetectorEvent : new ::KVDetectorEvent;
   }
   static void *newArray_KVDetectorEvent(Long_t nElements, void *p) {
      return p ? new(p) ::KVDetectorEvent[nElements] : new ::KVDetectorEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDetectorEvent(void *p) {
      delete ((::KVDetectorEvent*)p);
   }
   static void deleteArray_KVDetectorEvent(void *p) {
      delete [] ((::KVDetectorEvent*)p);
   }
   static void destruct_KVDetectorEvent(void *p) {
      typedef ::KVDetectorEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDetectorEvent

//______________________________________________________________________________
void KVElasticScatter::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVElasticScatter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVElasticScatter::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVElasticScatter::Class(),this);
   }
}

//______________________________________________________________________________
void KVElasticScatter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVElasticScatter.
      TClass *R__cl = ::KVElasticScatter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDepth", &fDepth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBinE", &fBinE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProj", &fProj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTarg", &fTarg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKinematics", &fKinematics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTelescope", &fTelescope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetector", &fDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAlignedDetectors", &fAlignedDetectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDets", &fNDets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTarget", &fTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiLayer", &fMultiLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeamDirection", &fBeamDirection);
      R__insp.InspectMember(fBeamDirection, "fBeamDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntLayer", &fIntLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExx", &fExx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistos", &fHistos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetInd", &fDetInd);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVElasticScatter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVElasticScatter : new ::KVElasticScatter;
   }
   static void *newArray_KVElasticScatter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVElasticScatter[nElements] : new ::KVElasticScatter[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVElasticScatter(void *p) {
      delete ((::KVElasticScatter*)p);
   }
   static void deleteArray_KVElasticScatter(void *p) {
      delete [] ((::KVElasticScatter*)p);
   }
   static void destruct_KVElasticScatter(void *p) {
      typedef ::KVElasticScatter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVElasticScatter

//______________________________________________________________________________
void KVElasticScatterEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVElasticScatterEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVElasticScatterEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVElasticScatterEvent::Class(),this);
   }
}

//______________________________________________________________________________
void KVElasticScatterEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVElasticScatterEvent.
      TClass *R__cl = ::KVElasticScatterEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kb2", &kb2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kIPPVector", &kIPPVector);
      R__insp.InspectMember(kIPPVector, "kIPPVector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ktarget", &ktarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*proj", &proj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*targ", &targ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rec_evt", &rec_evt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sim_evt", &sim_evt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lhisto", &lhisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ltree", &ltree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "th_min", &th_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "th_max", &th_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_min", &phi_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_max", &phi_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kXruth_evt", &kXruth_evt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kchoix_layer", &kchoix_layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kTreatedNevts", &kTreatedNevts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kDiffNuc", &kDiffNuc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kRandomOpt", &kRandomOpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kposalea", &kposalea);
      R__insp.InspectMember(kposalea, "kposalea.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kChoixSol", &kChoixSol);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVElasticScatterEvent(void *p) {
      return  p ? new(p) ::KVElasticScatterEvent : new ::KVElasticScatterEvent;
   }
   static void *newArray_KVElasticScatterEvent(Long_t nElements, void *p) {
      return p ? new(p) ::KVElasticScatterEvent[nElements] : new ::KVElasticScatterEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVElasticScatterEvent(void *p) {
      delete ((::KVElasticScatterEvent*)p);
   }
   static void deleteArray_KVElasticScatterEvent(void *p) {
      delete [] ((::KVElasticScatterEvent*)p);
   }
   static void destruct_KVElasticScatterEvent(void *p) {
      typedef ::KVElasticScatterEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVElasticScatterEvent

//______________________________________________________________________________
void KVReconstructedEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVReconstructedEvent.
      TClass *R__cl = ::KVReconstructedEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanAngles", &fMeanAngles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPartSeedCond", &fPartSeedCond);
      R__insp.InspectMember(fPartSeedCond, "fPartSeedCond.");
      KVEvent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVReconstructedEvent(void *p) {
      return  p ? new(p) ::KVReconstructedEvent : new ::KVReconstructedEvent;
   }
   static void *newArray_KVReconstructedEvent(Long_t nElements, void *p) {
      return p ? new(p) ::KVReconstructedEvent[nElements] : new ::KVReconstructedEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVReconstructedEvent(void *p) {
      delete ((::KVReconstructedEvent*)p);
   }
   static void deleteArray_KVReconstructedEvent(void *p) {
      delete [] ((::KVReconstructedEvent*)p);
   }
   static void destruct_KVReconstructedEvent(void *p) {
      typedef ::KVReconstructedEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVReconstructedEvent(TBuffer &buf, void *obj) {
      ((::KVReconstructedEvent*)obj)->::KVReconstructedEvent::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVReconstructedEvent

//______________________________________________________________________________
void KVIDTelescope::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDTelescope.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDTelescope::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDTelescope::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDTelescope::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDTelescope.
      TClass *R__cl = ::KVIDTelescope::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetectors", &fDetectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGroup", &fGroup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIDGrids", &fIDGrids);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibStatus", &fCalibStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVarX", &fVarX);
      R__insp.InspectMember(fVarX, "fVarX.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVarY", &fVarY);
      R__insp.InspectMember(fVarY, "fVarY.");
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDTelescope(void *p) {
      return  p ? new(p) ::KVIDTelescope : new ::KVIDTelescope;
   }
   static void *newArray_KVIDTelescope(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDTelescope[nElements] : new ::KVIDTelescope[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDTelescope(void *p) {
      delete ((::KVIDTelescope*)p);
   }
   static void deleteArray_KVIDTelescope(void *p) {
      delete [] ((::KVIDTelescope*)p);
   }
   static void destruct_KVIDTelescope(void *p) {
      typedef ::KVIDTelescope current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDTelescope

//______________________________________________________________________________
void KVRTGIDManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVRTGIDManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVRTGIDManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVRTGIDManager::Class(),this);
   }
}

//______________________________________________________________________________
void KVRTGIDManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVRTGIDManager.
      TClass *R__cl = ::KVRTGIDManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVTGIDManager::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVRTGIDManager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVRTGIDManager : new ::KVRTGIDManager;
   }
   static void *newArray_KVRTGIDManager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVRTGIDManager[nElements] : new ::KVRTGIDManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVRTGIDManager(void *p) {
      delete ((::KVRTGIDManager*)p);
   }
   static void deleteArray_KVRTGIDManager(void *p) {
      delete [] ((::KVRTGIDManager*)p);
   }
   static void destruct_KVRTGIDManager(void *p) {
      typedef ::KVRTGIDManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVRTGIDManager

//______________________________________________________________________________
void KVUpDater::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVUpDater.

   ::Error("KVUpDater::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void KVUpDater::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVUpDater.
      TClass *R__cl = ::KVUpDater::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSet", &fDataSet);
      R__insp.InspectMember(fDataSet, "fDataSet.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVUpDater(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVUpDater : new ::KVUpDater;
   }
   static void *newArray_KVUpDater(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVUpDater[nElements] : new ::KVUpDater[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVUpDater(void *p) {
      delete ((::KVUpDater*)p);
   }
   static void deleteArray_KVUpDater(void *p) {
      delete [] ((::KVUpDater*)p);
   }
   static void destruct_KVUpDater(void *p) {
      typedef ::KVUpDater current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVUpDater(TBuffer &buf, void *obj) {
      ((::KVUpDater*)obj)->::KVUpDater::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVUpDater

//______________________________________________________________________________
void KVGANILDataReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGANILDataReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVGANILDataReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVGANILDataReader::Class(),this);
   }
}

//______________________________________________________________________________
void KVGANILDataReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGANILDataReader.
      TClass *R__cl = ::KVGANILDataReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGanilData", &fGanilData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUserTree", &fUserTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbParFired", &NbParFired);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ParVal", &ParVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ParNum", &ParNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "make_arrays", &make_arrays);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "make_leaves", &make_leaves);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParameters", &fParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtParams", &fExtParams);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFired", &fFired);
      KVRawDataReader::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVGANILDataReader(void *p) {
      return  p ? new(p) ::KVGANILDataReader : new ::KVGANILDataReader;
   }
   static void *newArray_KVGANILDataReader(Long_t nElements, void *p) {
      return p ? new(p) ::KVGANILDataReader[nElements] : new ::KVGANILDataReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVGANILDataReader(void *p) {
      delete ((::KVGANILDataReader*)p);
   }
   static void deleteArray_KVGANILDataReader(void *p) {
      delete [] ((::KVGANILDataReader*)p);
   }
   static void destruct_KVGANILDataReader(void *p) {
      typedef ::KVGANILDataReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVGANILDataReader

//______________________________________________________________________________
void KVRawDataAnalyser::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVRawDataAnalyser.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVRawDataAnalyser::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVRawDataAnalyser::Class(),this);
   }
}

//______________________________________________________________________________
void KVRawDataAnalyser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVRawDataAnalyser.
      TClass *R__cl = ::KVRawDataAnalyser::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunFile", &fRunFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetEv", &fDetEv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHistoList", &fHistoList);
      R__insp.InspectMember(fHistoList, "fHistoList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalEntriesToRead", &TotalEntriesToRead);
      KVDataAnalyser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVRawDataAnalyser(void *p) {
      delete ((::KVRawDataAnalyser*)p);
   }
   static void deleteArray_KVRawDataAnalyser(void *p) {
      delete [] ((::KVRawDataAnalyser*)p);
   }
   static void destruct_KVRawDataAnalyser(void *p) {
      typedef ::KVRawDataAnalyser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVRawDataAnalyser

//______________________________________________________________________________
void KVMultiDetArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVMultiDetArray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVMultiDetArray::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVMultiDetArray::Class(),this);
   }
}

//______________________________________________________________________________
void KVMultiDetArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVMultiDetArray.
      TClass *R__cl = ::KVMultiDetArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTarget", &fTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStatusIDTelescopes", &fStatusIDTelescopes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibStatusDets", &fCalibStatusDets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitGroups", &fHitGroups);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIDTelescopes", &fIDTelescopes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fACQParams", &fACQParams);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSet", &fDataSet);
      R__insp.InspectMember(fDataSet, "fDataSet.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentRun", &fCurrentRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUpDater", &fUpDater);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimMode", &fSimMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fROOTGeometry", &fROOTGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilterType", &fFilterType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeoManager", &fGeoManager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNavigator", &fNavigator);
      KVGeoStrucElement::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVMultiDetArray(void *p) {
      return  p ? new(p) ::KVMultiDetArray : new ::KVMultiDetArray;
   }
   static void *newArray_KVMultiDetArray(Long_t nElements, void *p) {
      return p ? new(p) ::KVMultiDetArray[nElements] : new ::KVMultiDetArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVMultiDetArray(void *p) {
      delete ((::KVMultiDetArray*)p);
   }
   static void deleteArray_KVMultiDetArray(void *p) {
      delete [] ((::KVMultiDetArray*)p);
   }
   static void destruct_KVMultiDetArray(void *p) {
      typedef ::KVMultiDetArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVMultiDetArray

//______________________________________________________________________________
void KVASMultiDetArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVASMultiDetArray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVASMultiDetArray::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVASMultiDetArray::Class(),this);
   }
}

//______________________________________________________________________________
void KVASMultiDetArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVASMultiDetArray.
      TClass *R__cl = ::KVASMultiDetArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentLayerNumber", &fCurrentLayerNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGr", &fGr);
      KVMultiDetArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVASMultiDetArray(void *p) {
      return  p ? new(p) ::KVASMultiDetArray : new ::KVASMultiDetArray;
   }
   static void *newArray_KVASMultiDetArray(Long_t nElements, void *p) {
      return p ? new(p) ::KVASMultiDetArray[nElements] : new ::KVASMultiDetArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVASMultiDetArray(void *p) {
      delete ((::KVASMultiDetArray*)p);
   }
   static void deleteArray_KVASMultiDetArray(void *p) {
      delete [] ((::KVASMultiDetArray*)p);
   }
   static void destruct_KVASMultiDetArray(void *p) {
      typedef ::KVASMultiDetArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVASMultiDetArray

//______________________________________________________________________________
void KVGeoImport::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGeoImport.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVGeoImport::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVGeoImport::Class(),this);
   }
}

//______________________________________________________________________________
void KVGeoImport::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGeoImport.
      TClass *R__cl = ::KVGeoImport::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRangeTable", &fRangeTable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentGroup", &fCurrentGroup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupNumber", &fGroupNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLastDetector", &fLastDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCreateArray", &fCreateArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectorPlugin", &fDetectorPlugin);
      R__insp.InspectMember(fDetectorPlugin, "fDetectorPlugin.");
      KVGeoNavigator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVGeoImport(void *p) {
      delete ((::KVGeoImport*)p);
   }
   static void deleteArray_KVGeoImport(void *p) {
      delete [] ((::KVGeoImport*)p);
   }
   static void destruct_KVGeoImport(void *p) {
      typedef ::KVGeoImport current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVGeoImport

/********************************************************
* G__KVMultiDetexp_events.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVMultiDetexp_events();

extern "C" void G__set_cpp_environmentG__KVMultiDetexp_events() {
  G__cpp_reset_tagtableG__KVMultiDetexp_events();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVMultiDetexp_events() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVGANILDataReader */
static int G__G__KVMultiDetexp_events_561_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGANILDataReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGANILDataReader[n];
     } else {
       p = new((void*) gvp) KVGANILDataReader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGANILDataReader;
     } else {
       p = new((void*) gvp) KVGANILDataReader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGANILDataReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVGANILDataReader((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVGANILDataReader((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGANILDataReader*) G__getstructoffset())->OpenFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGANILDataReader*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVGANILDataReader*) G__getstructoffset())->GetGanTapeInterface());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVGANILDataReader*) G__getstructoffset())->SetUserTree((TTree*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVGANILDataReader*) G__getstructoffset())->SetUserTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) KVGANILDataReader::Open((const Char_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) KVGANILDataReader::Open((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVGANILDataReader*) G__getstructoffset())->HasScalerBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVGANILDataReader*) G__getstructoffset())->GetNumberOfScalers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVGANILDataReader*) G__getstructoffset())->GetScalerCount((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGANILDataReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGANILDataReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGANILDataReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGANILDataReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGANILDataReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGANILDataReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGANILDataReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGANILDataReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_561_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGANILDataReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetexp_events_561_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVGANILDataReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVGANILDataReader(*(KVGANILDataReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGANILDataReader G__TKVGANILDataReader;
static int G__G__KVMultiDetexp_events_561_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGANILDataReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGANILDataReader*) (soff+(sizeof(KVGANILDataReader)*i)))->~G__TKVGANILDataReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGANILDataReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGANILDataReader*) (soff))->~G__TKVGANILDataReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetexp_events_561_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGANILDataReader* dest = (KVGANILDataReader*) G__getstructoffset();
   *dest = *(KVGANILDataReader*) libp->para[0].ref;
   const KVGANILDataReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVReconstructedNucleus */
static int G__G__KVMultiDetexp_events_673_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVReconstructedNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVReconstructedNucleus[n];
     } else {
       p = new((void*) gvp) KVReconstructedNucleus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVReconstructedNucleus;
     } else {
       p = new((void*) gvp) KVReconstructedNucleus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVReconstructedNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVReconstructedNucleus(*(KVReconstructedNucleus*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVReconstructedNucleus(*(KVReconstructedNucleus*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->Reconstruct((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetIdentification((KVIdentificationResult*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetDetectorList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetDetector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetDetectorNames());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetIDtelNames());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetStoppingDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetNumDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetNSegDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetNSegDet((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->ResetNSegDet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetStatus((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVReconstructedNucleus*) G__getstructoffset())->GetAnglesFromStoppingDetector((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVReconstructedNucleus*) G__getstructoffset())->GetAnglesFromStoppingDetector();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetGroup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->AddDetector((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetIDTelescopes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->Identify();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->Calibrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetIdentifyingTelescope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetIdentifyingTelescope((KVIDTelescope*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetIDCode((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetIDCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetECode((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetECode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetIsIdentified();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetIsCalibrated();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetIsUnidentified();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetIsUncalibrated();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->IsIdentified());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->IsCalibrated());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetRealZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetRealA((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVReconstructedNucleus*) G__getstructoffset())->GetRealZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVReconstructedNucleus*) G__getstructoffset())->GetRealA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVReconstructedNucleus*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SetTargetEnergyLoss((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVReconstructedNucleus*) G__getstructoffset())->GetTargetEnergyLoss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVReconstructedNucleus*) G__getstructoffset())->SetZMeasured((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVReconstructedNucleus*) G__getstructoffset())->SetZMeasured();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVReconstructedNucleus*) G__getstructoffset())->SetAMeasured((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVReconstructedNucleus*) G__getstructoffset())->SetAMeasured();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->IsZMeasured());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->IsAMeasured());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVReconstructedNucleus*) G__getstructoffset())->GetIdentificationResult((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVReconstructedNucleus*) G__getstructoffset())->GetIdentificationResult((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVReconstructedNucleus*) G__getstructoffset())->GetIdentificationResult((KVIDTelescope*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetIdentificationResult((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetIdentificationResult((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedNucleus*) G__getstructoffset())->GetIdentificationResult((KVIDTelescope*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->SubtractEnergyFromAllDetectors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) KVReconstructedNucleus::GetNIdentifiedInGroup((KVGroup*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) KVReconstructedNucleus::GetNUnidentifiedInGroup((KVGroup*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVReconstructedNucleus::AnalyseParticlesInGroup((KVGroup*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVReconstructedNucleus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVReconstructedNucleus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVReconstructedNucleus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVReconstructedNucleus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedNucleus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVReconstructedNucleus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVReconstructedNucleus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVReconstructedNucleus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_673_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVReconstructedNucleus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVReconstructedNucleus G__TKVReconstructedNucleus;
static int G__G__KVMultiDetexp_events_673_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVReconstructedNucleus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVReconstructedNucleus*) (soff+(sizeof(KVReconstructedNucleus)*i)))->~G__TKVReconstructedNucleus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVReconstructedNucleus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVReconstructedNucleus*) (soff))->~G__TKVReconstructedNucleus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVMultiDetArray */
static int G__G__KVMultiDetexp_events_676_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetGeometry((TGeoManager*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVMultiDetArray*) G__getstructoffset())->GetGeometry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVMultiDetArray*) G__getstructoffset())->GetNavigator());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVMultiDetArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVMultiDetArray[n];
     } else {
       p = new((void*) gvp) KVMultiDetArray[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVMultiDetArray;
     } else {
       p = new((void*) gvp) KVMultiDetArray;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetFilterType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVMultiDetArray*) G__getstructoffset())->Build((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVMultiDetArray*) G__getstructoffset())->Build();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->CreateIDTelescopesInGroups();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->GetIDTelescopes((KVDetector*) G__int(libp->para[0]), (KVDetector*) G__int(libp->para[1])
, (TCollection*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVMultiDetArray*) G__getstructoffset())->GetTelescope((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetGroupWithDetector((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetGroup((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetGroupWithAngles((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->RemoveGroup((KVGroup*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->RemoveGroup((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->ReplaceDetector((const Char_t*) G__int(libp->para[0]), (KVDetector*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->AddACQParam((KVACQParam*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetACQParams());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetACQParam((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetArrayACQParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((KVMultiDetArray*) G__getstructoffset())->DetectEvent((KVEvent*) G__int(libp->para[0]), (KVReconstructedEvent*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVMultiDetArray*) G__getstructoffset())->DetectEvent((KVEvent*) G__int(libp->para[0]), (KVReconstructedEvent*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVMultiDetArray*) G__getstructoffset())->FilteredEventCoherencyAnalysis((Int_t) G__int(libp->para[0]), (KVReconstructedEvent*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVMultiDetArray*) G__getstructoffset())->GetDetectorEvent((KVDetectorEvent*) G__int(libp->para[0]), (TSeqCollection*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVMultiDetArray*) G__getstructoffset())->GetDetectorEvent((KVDetectorEvent*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->ReconstructEvent((KVReconstructedEvent*) G__int(libp->para[0]), (KVDetectorEvent*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->DetectParticle_TGEO((KVNucleus*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->DetectParticle((KVNucleus*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->DetectParticleIn((const Char_t*) G__int(libp->para[0]), (KVNucleus*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVMultiDetArray*) G__getstructoffset())->GetIDTelescope((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVMultiDetArray*) G__getstructoffset())->GetListOfIDTelescopes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetIDTelescopeTypes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetIDTelescopesWithType((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetTarget((const Char_t*) G__int(libp->para[0]), (const Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetTarget((KVTarget*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetTargetMaterial((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetTargetThickness((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVMultiDetArray*) G__getstructoffset())->GetTargetEnergyLossCorrection((KVReconstructedNucleus*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVMultiDetArray*) G__getstructoffset())->IsRemoving());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetPedestals((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVMultiDetArray*) G__getstructoffset())->IsBuilt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) KVMultiDetArray::MakeMultiDetector((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) KVMultiDetArray::MakeMultiDetector((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVMultiDetArray*) G__getstructoffset())->IsBeingDeleted());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetUpDater());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetParameters((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetRunIdentificationParameters((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetRunCalibrationParameters((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVMultiDetArray*) G__getstructoffset())->ParamsSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVMultiDetArray*) G__getstructoffset())->IDParamsSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVMultiDetArray*) G__getstructoffset())->CalParamsSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVMultiDetArray*) G__getstructoffset())->GetCurrentRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetIdentifications();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->InitializeIDTelescopes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->UpdateIDTelescopes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->UpdateIdentifications();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->UpdateCalibrators();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVMultiDetArray*) G__getstructoffset())->GetTotalSolidAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetStatusOfIDTelescopes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->GetCalibrationStatusOfDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->PrintStatusOfIDTelescopes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->PrintCalibStatusOfDetectors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVMultiDetArray*) G__getstructoffset())->SetSimMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVMultiDetArray*) G__getstructoffset())->SetSimMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVMultiDetArray*) G__getstructoffset())->IsSimMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVMultiDetArray*) G__getstructoffset())->GetPunchThroughEnergy((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->DrawPunchThroughEnergyVsZ((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->DrawPunchThroughEnergyVsZ((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->DrawPunchThroughEsurAVsZ((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVMultiDetArray*) G__getstructoffset())->DrawPunchThroughEsurAVsZ((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVMultiDetArray*) G__getstructoffset())->SetROOTGeometry((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVMultiDetArray*) G__getstructoffset())->SetROOTGeometry();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVMultiDetArray*) G__getstructoffset())->IsROOTGeometry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->CalculateDetectorSegmentationIndex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVMultiDetArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVMultiDetArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVMultiDetArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVMultiDetArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVMultiDetArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVMultiDetArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVMultiDetArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVMultiDetArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->AnalyseGroupAndReconstructEvent((KVReconstructedEvent*) G__int(libp->para[0]), (KVGroup*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->SetGridsInTelescopes((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_676_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMultiDetArray*) G__getstructoffset())->FillListOfIDTelescopes((KVIDGraph*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVMultiDetArray G__TKVMultiDetArray;
static int G__G__KVMultiDetexp_events_676_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVMultiDetArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVMultiDetArray*) (soff+(sizeof(KVMultiDetArray)*i)))->~G__TKVMultiDetArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVMultiDetArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVMultiDetArray*) (soff))->~G__TKVMultiDetArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDTelescope */
static int G__G__KVMultiDetexp_events_679_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDTelescope* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDTelescope[n];
     } else {
       p = new((void*) gvp) KVIDTelescope[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDTelescope;
     } else {
       p = new((void*) gvp) KVIDTelescope;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->AddDetector((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVIDTelescope*) G__getstructoffset())->GetDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVIDTelescope*) G__getstructoffset())->GetDetector((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVIDTelescope*) G__getstructoffset())->GetDetector((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((KVIDTelescope*) G__getstructoffset())->GetDetectorRank((KVDetector*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVIDTelescope*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVIDTelescope*) G__getstructoffset())->GetGroup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->SetGroup((KVGroup*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((KVIDTelescope*) G__getstructoffset())->GetGroupNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVIDTelescope*) G__getstructoffset())->GetVarX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVIDTelescope*) G__getstructoffset())->GetVarY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->MakeIDLine((KVNucleus*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->MakeIDLine((KVNucleus*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((KVIDTelescope*) G__getstructoffset())->Identify((KVIdentificationResult*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((KVIDTelescope*) G__getstructoffset())->Identify((KVIdentificationResult*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((KVIDTelescope*) G__getstructoffset())->Identify((KVIdentificationResult*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->CalculateParticleEnergy((KVReconstructedNucleus*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVIDTelescope*) G__getstructoffset())->GetCalibStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->SetIDGrid((KVIDGraph*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->GetIDGrid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->GetIDGrid((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->GetIDGrid((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVIDTelescope*) G__getstructoffset())->GetListOfIDGrids());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->RemoveGrids();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetIDMapX((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetIDMapX());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetIDMapY((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetIDMapY());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetPedestalX((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetPedestalX());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetPedestalY((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetPedestalY());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVIDTelescope*) G__getstructoffset())->SetHasMassID((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVIDTelescope*) G__getstructoffset())->SetHasMassID();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVIDTelescope*) G__getstructoffset())->HasMassID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDTelescope::MakeIDTelescope((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVIDTelescope*) G__getstructoffset())->SetIdentificationParameters((KVMultiDetArray*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->RemoveIdentificationParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVIDTelescope*) G__getstructoffset())->IsReadyForID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVIDTelescope*) G__getstructoffset())->GetDefaultIDGridClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->CalculateDeltaE_EGrid((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (UChar_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->CalculateDeltaE_EGrid((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (UChar_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->CalculateDeltaE_EGrid((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->CalculateDeltaE_EGrid((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIDTelescope*) G__getstructoffset())->CalculateDeltaE_EGrid((TH2*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetMeanDEFromID(*(Int_t*) G__Intref(&libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetMeanDEFromID(*(Int_t*) G__Intref(&libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((KVIDTelescope*) G__getstructoffset())->GetMeanDEFromID(*(Int_t*) G__Intref(&libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((KVIDTelescope*) G__getstructoffset())->GetBadIDCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((KVIDTelescope*) G__getstructoffset())->GetCoherencyIDCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((KVIDTelescope*) G__getstructoffset())->GetMultiHitFirstStageIDCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((KVIDTelescope*) G__getstructoffset())->GetIDCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((KVIDTelescope*) G__getstructoffset())->GetZminCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((KVIDTelescope*) G__getstructoffset())->GetECode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->SetIDCode((KVReconstructedNucleus*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((KVIDTelescope*) G__getstructoffset())->CheckTheoreticalIdentificationThreshold((KVNucleus*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((KVIDTelescope*) G__getstructoffset())->CheckTheoreticalIdentificationThreshold((KVNucleus*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVIDTelescope*) G__getstructoffset())->CanIdentify((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDTelescope::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDTelescope::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDTelescope::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDTelescope::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDTelescope*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDTelescope::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDTelescope::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDTelescope::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_679_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDTelescope::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetexp_events_679_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDTelescope* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDTelescope(*(KVIDTelescope*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDTelescope G__TKVIDTelescope;
static int G__G__KVMultiDetexp_events_679_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDTelescope*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDTelescope*) (soff+(sizeof(KVIDTelescope)*i)))->~G__TKVIDTelescope();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDTelescope*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDTelescope*) (soff))->~G__TKVIDTelescope();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetexp_events_679_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDTelescope* dest = (KVIDTelescope*) G__getstructoffset();
   *dest = *(KVIDTelescope*) libp->para[0].ref;
   const KVIDTelescope& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVReconstructedEvent */
static int G__G__KVMultiDetexp_events_777_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedEvent*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVReconstructedEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVReconstructedEvent((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVReconstructedEvent((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVReconstructedEvent((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVReconstructedEvent((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVReconstructedEvent[n];
       } else {
         p = new((void*) gvp) KVReconstructedEvent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVReconstructedEvent;
       } else {
         p = new((void*) gvp) KVReconstructedEvent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVReconstructedEvent*) G__getstructoffset())->AddParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedEvent*) G__getstructoffset())->GetParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedEvent*) G__getstructoffset())->GetParticleWithName((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVReconstructedEvent*) G__getstructoffset())->GetParticle((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((KVReconstructedEvent*) G__getstructoffset())->GetNextParticle((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((KVReconstructedEvent*) G__getstructoffset())->GetNextParticle());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVReconstructedEvent*) G__getstructoffset())->AnalyseDetectors((TList*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVReconstructedEvent*) G__getstructoffset())->GetPartSeedCond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedEvent*) G__getstructoffset())->SetPartSeedCond((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedEvent*) G__getstructoffset())->IdentifyEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedEvent*) G__getstructoffset())->CalibrateEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedEvent*) G__getstructoffset())->UseMeanAngles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedEvent*) G__getstructoffset())->UseRandomAngles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVReconstructedEvent*) G__getstructoffset())->HasMeanAngles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVReconstructedEvent*) G__getstructoffset())->HasRandomAngles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedEvent*) G__getstructoffset())->SecondaryIdentCalib();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVReconstructedEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVReconstructedEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVReconstructedEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVReconstructedEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconstructedEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVReconstructedEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVReconstructedEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVReconstructedEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_777_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVReconstructedEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVReconstructedEvent G__TKVReconstructedEvent;
static int G__G__KVMultiDetexp_events_777_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVReconstructedEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVReconstructedEvent*) (soff+(sizeof(KVReconstructedEvent)*i)))->~G__TKVReconstructedEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVReconstructedEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVReconstructedEvent*) (soff))->~G__TKVReconstructedEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDetectorEvent */
static int G__G__KVMultiDetexp_events_778_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDetectorEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDetectorEvent[n];
     } else {
       p = new((void*) gvp) KVDetectorEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDetectorEvent;
     } else {
       p = new((void*) gvp) KVDetectorEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDetectorEvent*) G__getstructoffset())->AddGroup((KVGroup*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDetectorEvent*) G__getstructoffset())->GetGroups());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDetectorEvent*) G__getstructoffset())->ContainsGroup((KVGroup*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVDetectorEvent*) G__getstructoffset())->GetMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDetectorEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDetectorEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDetectorEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDetectorEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDetectorEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDetectorEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDetectorEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDetectorEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_778_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDetectorEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetexp_events_778_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDetectorEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDetectorEvent(*(KVDetectorEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDetectorEvent G__TKVDetectorEvent;
static int G__G__KVMultiDetexp_events_778_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDetectorEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDetectorEvent*) (soff+(sizeof(KVDetectorEvent)*i)))->~G__TKVDetectorEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDetectorEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDetectorEvent*) (soff))->~G__TKVDetectorEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetexp_events_778_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDetectorEvent* dest = (KVDetectorEvent*) G__getstructoffset();
   *dest = *(KVDetectorEvent*) libp->para[0].ref;
   const KVDetectorEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVUpDater */
static int G__G__KVMultiDetexp_events_782_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVUpDater* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVUpDater[n];
     } else {
       p = new((void*) gvp) KVUpDater[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVUpDater;
     } else {
       p = new((void*) gvp) KVUpDater;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVUpDater*) G__getstructoffset())->SetParameters((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVUpDater*) G__getstructoffset())->SetIdentificationParameters((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVUpDater*) G__getstructoffset())->SetCalibrationParameters((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVUpDater*) G__getstructoffset())->SetTarget((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVUpDater*) G__getstructoffset())->SetIDGrids((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVUpDater*) G__getstructoffset())->SetCalibParameters((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVUpDater::MakeUpDater((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVUpDater::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVUpDater::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVUpDater::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVUpDater::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVUpDater*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVUpDater*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVUpDater*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVUpDater*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVUpDater::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVUpDater::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVUpDater::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_782_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVUpDater::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetexp_events_782_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVUpDater* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVUpDater(*(KVUpDater*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVUpDater G__TKVUpDater;
static int G__G__KVMultiDetexp_events_782_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVUpDater*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVUpDater*) (soff+(sizeof(KVUpDater)*i)))->~G__TKVUpDater();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVUpDater*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVUpDater*) (soff))->~G__TKVUpDater();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetexp_events_782_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVUpDater* dest = (KVUpDater*) G__getstructoffset();
   *dest = *(KVUpDater*) libp->para[0].ref;
   const KVUpDater& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVASMultiDetArray */
static int G__G__KVMultiDetexp_events_789_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVASMultiDetArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVASMultiDetArray[n];
     } else {
       p = new((void*) gvp) KVASMultiDetArray[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVASMultiDetArray;
     } else {
       p = new((void*) gvp) KVASMultiDetArray;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVASMultiDetArray*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVASMultiDetArray*) G__getstructoffset())->GetTelescopes((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVASMultiDetArray*) G__getstructoffset())->CalculateGroupsFromGeometry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVASMultiDetArray*) G__getstructoffset())->GetLayer((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVASMultiDetArray*) G__getstructoffset())->GetLayer((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVASMultiDetArray*) G__getstructoffset())->GetRing((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVASMultiDetArray*) G__getstructoffset())->GetRing((const Char_t*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVASMultiDetArray*) G__getstructoffset())->GetRing((UInt_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVASMultiDetArray*) G__getstructoffset())->GetRing((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVASMultiDetArray*) G__getstructoffset())->GetSolidAngleByLayerAndRing((const Char_t*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVASMultiDetArray*) G__getstructoffset())->GetSolidAngleByLayer((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVASMultiDetArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVASMultiDetArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVASMultiDetArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVASMultiDetArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVASMultiDetArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVASMultiDetArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVASMultiDetArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVASMultiDetArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVASMultiDetArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_789_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVASMultiDetArray*) G__getstructoffset())->AnalyseTelescopes((KVReconstructedEvent*) G__int(libp->para[0]), (TList*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVASMultiDetArray G__TKVASMultiDetArray;
static int G__G__KVMultiDetexp_events_789_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVASMultiDetArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVASMultiDetArray*) (soff+(sizeof(KVASMultiDetArray)*i)))->~G__TKVASMultiDetArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVASMultiDetArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVASMultiDetArray*) (soff))->~G__TKVASMultiDetArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVRTGIDManager */
static int G__G__KVMultiDetexp_events_887_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVRTGIDManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRTGIDManager[n];
     } else {
       p = new((void*) gvp) KVRTGIDManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRTGIDManager;
     } else {
       p = new((void*) gvp) KVRTGIDManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRTGIDManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRTGIDManager::AddTGIDToGlobalList((KVTGID*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      KVRTGIDManager::BuildGridForAllTGID(
(const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Bool_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      KVRTGIDManager::BuildGridForAllTGID((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      KVRTGIDManager::BuildGridForAllTGID((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      KVRTGIDManager::BuildGridForAllTGID((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      KVRTGIDManager::BuildGridForAllTGID((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      KVRTGIDManager::BuildGridForAllTGID((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      KVRTGIDManager::BuildGridForAllTGID((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      KVRTGIDManager::BuildGridForAllTGID();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRTGIDManager::Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRTGIDManager::DeleteTGID((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVRTGIDManager::GetGlobalListOfIDFunctions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) KVRTGIDManager::GetTGIDfromIDGridManager((TList*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) KVRTGIDManager::ReadAsciiFile((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRTGIDManager::SetIDFuncInTelescopes((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRTGIDManager::UpdateListFromIDGridManager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) KVRTGIDManager::WriteAsciiFile((const Char_t*) G__int(libp->para[0]), (TCollection*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) KVRTGIDManager::WriteAsciiFile((const Char_t*) G__int(libp->para[0]), (TCollection*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) KVRTGIDManager::WriteAsciiFile((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVRTGIDManager::GetIDTelescopesForTGID((KVTGID*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVRTGIDManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRTGIDManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVRTGIDManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRTGIDManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRTGIDManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRTGIDManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRTGIDManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRTGIDManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_887_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRTGIDManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVRTGIDManager G__TKVRTGIDManager;
static int G__G__KVMultiDetexp_events_887_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVRTGIDManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVRTGIDManager*) (soff+(sizeof(KVRTGIDManager)*i)))->~G__TKVRTGIDManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVRTGIDManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVRTGIDManager*) (soff))->~G__TKVRTGIDManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVElasticScatterEvent */
static int G__G__KVMultiDetexp_events_896_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->IsProjNucSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->IsTargNucSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->IsTargMatSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->IsUpdated());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->IsDetectionOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVElasticScatterEvent*) G__getstructoffset())->ChooseKinSol((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVElasticScatterEvent*) G__getstructoffset())->ChooseKinSol();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElasticScatterEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVElasticScatterEvent[n];
     } else {
       p = new((void*) gvp) KVElasticScatterEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVElasticScatterEvent;
     } else {
       p = new((void*) gvp) KVElasticScatterEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->SetSystem((KVDBSystem*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->SetSystem((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->SetTargNucleus((KVNucleus*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->SetProjNucleus((KVNucleus*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVElasticScatterEvent*) G__getstructoffset())->SetDetectionOn((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVElasticScatterEvent*) G__getstructoffset())->SetDetectionOn();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->GetNucleus((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->GetNucleus((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVElasticScatterEvent*) G__getstructoffset())->SetTargetMaterial((KVTarget*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVElasticScatterEvent*) G__getstructoffset())->SetTargetMaterial((KVTarget*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->GetTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((KVElasticScatterEvent*) G__getstructoffset())->GetInteractionPointInTargetLayer();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVElasticScatterEvent*) G__getstructoffset())->GetReconstructedNucleus(*((KVString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->GetReconstructedEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->GetSimEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVElasticScatterEvent*) G__getstructoffset())->ValidateEntrance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVElasticScatterEvent*) G__getstructoffset())->SetDiffNucleus(*((KVString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((KVElasticScatterEvent*) G__getstructoffset())->SetDiffNucleus();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVElasticScatterEvent*) G__getstructoffset())->SetRandomOption((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVElasticScatterEvent*) G__getstructoffset())->SetRandomOption();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->IsIsotropic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVElasticScatterEvent*) G__getstructoffset())->Process((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVElasticScatterEvent*) G__getstructoffset())->Process((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVElasticScatterEvent*) G__getstructoffset())->Process();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->SetAnglesForDiffusion((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->Filter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->TreateEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->DefineAngularRange((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->DefineAngularRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVElasticScatterEvent*) G__getstructoffset())->GetTheta(*((KVString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVElasticScatterEvent*) G__getstructoffset())->GetPhi(*((KVString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVElasticScatterEvent*) G__getstructoffset())->GetKV2Body());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->ClearTrees();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->ResetTrees();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->DefineTrees();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->GetTrees());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->ClearHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->DefineHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->ResetHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElasticScatterEvent*) G__getstructoffset())->GetHistos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVElasticScatterEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElasticScatterEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVElasticScatterEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVElasticScatterEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatterEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElasticScatterEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVElasticScatterEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElasticScatterEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_896_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVElasticScatterEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetexp_events_896_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVElasticScatterEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVElasticScatterEvent(*(KVElasticScatterEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVElasticScatterEvent G__TKVElasticScatterEvent;
static int G__G__KVMultiDetexp_events_896_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVElasticScatterEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVElasticScatterEvent*) (soff+(sizeof(KVElasticScatterEvent)*i)))->~G__TKVElasticScatterEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVElasticScatterEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVElasticScatterEvent*) (soff))->~G__TKVElasticScatterEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetexp_events_896_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElasticScatterEvent* dest = (KVElasticScatterEvent*) G__getstructoffset();
   *dest = *(KVElasticScatterEvent*) libp->para[0].ref;
   const KVElasticScatterEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVGeoImport */
static int G__G__KVMultiDetexp_events_900_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGeoImport* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGeoImport(
(TGeoManager*) G__int(libp->para[0]), (KVIonRangeTable*) G__int(libp->para[1])
, (KVMultiDetArray*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) KVGeoImport(
(TGeoManager*) G__int(libp->para[0]), (KVIonRangeTable*) G__int(libp->para[1])
, (KVMultiDetArray*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGeoImport(
(TGeoManager*) G__int(libp->para[0]), (KVIonRangeTable*) G__int(libp->para[1])
, (KVMultiDetArray*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) KVGeoImport(
(TGeoManager*) G__int(libp->para[0]), (KVIonRangeTable*) G__int(libp->para[1])
, (KVMultiDetArray*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoImport));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((KVGeoImport*) G__getstructoffset())->ImportGeometry((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((KVGeoImport*) G__getstructoffset())->ImportGeometry((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((KVGeoImport*) G__getstructoffset())->ImportGeometry((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVGeoImport*) G__getstructoffset())->ImportGeometry((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVGeoImport*) G__getstructoffset())->ImportGeometry((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVGeoImport*) G__getstructoffset())->ImportGeometry((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVGeoImport*) G__getstructoffset())->ImportGeometry();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGeoImport*) G__getstructoffset())->SetLastDetector((KVDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGeoImport*) G__getstructoffset())->SetDetectorPlugin(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGeoImport::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGeoImport::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGeoImport::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGeoImport::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGeoImport*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGeoImport::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGeoImport::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGeoImport::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_900_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGeoImport::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGeoImport G__TKVGeoImport;
static int G__G__KVMultiDetexp_events_900_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGeoImport*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGeoImport*) (soff+(sizeof(KVGeoImport)*i)))->~G__TKVGeoImport();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGeoImport*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGeoImport*) (soff))->~G__TKVGeoImport();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVEventFiltering */
static int G__G__KVMultiDetexp_events_938_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVEventFiltering* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVEventFiltering[n];
     } else {
       p = new((void*) gvp) KVEventFiltering[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVEventFiltering;
     } else {
       p = new((void*) gvp) KVEventFiltering;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVEventFiltering* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVEventFiltering(*(KVEventFiltering*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVEventFiltering(*(KVEventFiltering*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventFiltering*) G__getstructoffset())->OpenOutputFile((KVDBSystem*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVEventFiltering::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVEventFiltering::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVEventFiltering::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVEventFiltering::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventFiltering*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVEventFiltering::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVEventFiltering::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVEventFiltering::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_938_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVEventFiltering::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVEventFiltering G__TKVEventFiltering;
static int G__G__KVMultiDetexp_events_938_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVEventFiltering*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVEventFiltering*) (soff+(sizeof(KVEventFiltering)*i)))->~G__TKVEventFiltering();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVEventFiltering*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVEventFiltering*) (soff))->~G__TKVEventFiltering();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVRawDataAnalyser */
static int G__G__KVMultiDetexp_events_943_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRawDataAnalyser*) G__getstructoffset())->InitAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRawDataAnalyser*) G__getstructoffset())->InitRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVRawDataAnalyser*) G__getstructoffset())->Analysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRawDataAnalyser*) G__getstructoffset())->EndRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRawDataAnalyser*) G__getstructoffset())->EndAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVRawDataAnalyser*) G__getstructoffset())->GetDetectorEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVRawDataAnalyser*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const KVRawDataAnalyser*) G__getstructoffset())->GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVRawDataAnalyser*) G__getstructoffset())->FileHasUnknownParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      KVRawDataAnalyser::Make((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      KVRawDataAnalyser::Make();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVRawDataAnalyser*) G__getstructoffset())->AddHisto((TH1*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVRawDataAnalyser*) G__getstructoffset())->AddHisto((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRawDataAnalyser*) G__getstructoffset())->SaveSpectra((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRawDataAnalyser*) G__getstructoffset())->ClearAllHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVRawDataAnalyser*) G__getstructoffset())->FindHisto((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRawDataAnalyser*) G__getstructoffset())->CalculateTotalEventsToRead();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVRawDataAnalyser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRawDataAnalyser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVRawDataAnalyser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRawDataAnalyser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRawDataAnalyser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRawDataAnalyser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRawDataAnalyser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRawDataAnalyser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_943_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRawDataAnalyser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVRawDataAnalyser G__TKVRawDataAnalyser;
static int G__G__KVMultiDetexp_events_943_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVRawDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVRawDataAnalyser*) (soff+(sizeof(KVRawDataAnalyser)*i)))->~G__TKVRawDataAnalyser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVRawDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVRawDataAnalyser*) (soff))->~G__TKVRawDataAnalyser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVElasticScatter */
static int G__G__KVMultiDetexp_events_944_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElasticScatter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVElasticScatter[n];
     } else {
       p = new((void*) gvp) KVElasticScatter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVElasticScatter;
     } else {
       p = new((void*) gvp) KVElasticScatter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->SetRun((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->SetProjectile((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->SetTargetScatteringLayer((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVElasticScatter*) G__getstructoffset())->SetEbinning((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVElasticScatter*) G__getstructoffset())->SetEbinning();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->SetDetector((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->CalculateScattering((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->SetTargetExcitedState((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVElasticScatter*) G__getstructoffset())->GetDepth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVElasticScatter*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVElasticScatter*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVElasticScatter*) G__getstructoffset())->GetEnergy((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVElasticScatter*) G__getstructoffset())->GetEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVElasticScatter*) G__getstructoffset())->GetNDets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVElasticScatter*) G__getstructoffset())->GetEbinning());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVElasticScatter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElasticScatter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVElasticScatter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVElasticScatter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElasticScatter*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElasticScatter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElasticScatter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVElasticScatter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElasticScatter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetexp_events_944_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVElasticScatter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetexp_events_944_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVElasticScatter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVElasticScatter(*(KVElasticScatter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVElasticScatter G__TKVElasticScatter;
static int G__G__KVMultiDetexp_events_944_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVElasticScatter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVElasticScatter*) (soff+(sizeof(KVElasticScatter)*i)))->~G__TKVElasticScatter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVElasticScatter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVElasticScatter*) (soff))->~G__TKVElasticScatter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetexp_events_944_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElasticScatter* dest = (KVElasticScatter*) G__getstructoffset();
   *dest = *(KVElasticScatter*) libp->para[0].ref;
   const KVElasticScatter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVGANILDataReader */

/* KVReconstructedNucleus */

/* KVMultiDetArray */

/* KVIDTelescope */

/* KVReconstructedEvent */

/* KVDetectorEvent */

/* KVUpDater */

/* KVASMultiDetArray */

/* KVRTGIDManager */

/* KVElasticScatterEvent */

/* KVGeoImport */

/* KVEventFiltering */

/* KVRawDataAnalyser */

/* KVElasticScatter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVMultiDetexp_events {
 public:
  G__Sizep2memfuncG__KVMultiDetexp_events(): p(&G__Sizep2memfuncG__KVMultiDetexp_events::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVMultiDetexp_events::*p)();
};

size_t G__get_sizep2memfuncG__KVMultiDetexp_events()
{
  G__Sizep2memfuncG__KVMultiDetexp_events a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVMultiDetexp_events() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader))) {
     KVGANILDataReader *G__Lderived;
     G__Lderived=(KVGANILDataReader*)0x1000;
     {
       KVRawDataReader *G__Lpbase=(KVRawDataReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRawDataReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus))) {
     KVReconstructedNucleus *G__Lderived;
     G__Lderived=(KVReconstructedNucleus*)0x1000;
     {
       KVNucleus *G__Lpbase=(KVNucleus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNucleus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVParticle *G__Lpbase=(KVParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray))) {
     KVMultiDetArray *G__Lderived;
     G__Lderived=(KVMultiDetArray*)0x1000;
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope))) {
     KVIDTelescope *G__Lderived;
     G__Lderived=(KVIDTelescope*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent))) {
     KVReconstructedEvent *G__Lderived;
     G__Lderived=(KVReconstructedEvent*)0x1000;
     {
       KVEvent *G__Lpbase=(KVEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent))) {
     KVDetectorEvent *G__Lderived;
     G__Lderived=(KVDetectorEvent*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEvent))) {
     KVEvent *G__Lderived;
     G__Lderived=(KVEvent*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray))) {
     KVASMultiDetArray *G__Lderived;
     G__Lderived=(KVASMultiDetArray*)0x1000;
     {
       KVMultiDetArray *G__Lpbase=(KVMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRTGIDManager))) {
     KVRTGIDManager *G__Lderived;
     G__Lderived=(KVRTGIDManager*)0x1000;
     {
       KVTGIDManager *G__Lpbase=(KVTGIDManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRTGIDManager),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTGIDManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent))) {
     KVElasticScatterEvent *G__Lderived;
     G__Lderived=(KVElasticScatterEvent*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoImport))) {
     KVGeoImport *G__Lderived;
     G__Lderived=(KVGeoImport*)0x1000;
     {
       KVGeoNavigator *G__Lpbase=(KVGeoNavigator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoImport),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoNavigator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoImport),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoImport),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoImport),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering))) {
     KVEventFiltering *G__Lderived;
     G__Lderived=(KVEventFiltering*)0x1000;
     {
       KVEventSelector *G__Lpbase=(KVEventSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRawDataAnalyser))) {
     KVRawDataAnalyser *G__Lderived;
     G__Lderived=(KVRawDataAnalyser*)0x1000;
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRawDataAnalyser),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRawDataAnalyser),G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVMultiDetexp_events() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*,less<long> >",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,Int_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVGANILDataReader */
static void G__setup_memvarKVGANILDataReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader));
   { KVGANILDataReader *p; p=(KVGANILDataReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_GTGanilData),-1,-1,2,"fGanilData=",0,"object used to read GANIL acquisition file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TTree),-1,-1,2,"fUserTree=",0,"user TTree to fill with data");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"NbParFired=",0,(char*)NULL);
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,2,"ParVal=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"ParNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"make_arrays=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"make_leaves=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVHashList),-1,-1,2,"fParameters=",0,"list of all data parameters contained in file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVHashList),-1,-1,2,"fExtParams=",0,"list of data parameters in file not defined by gMultiDetArray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVHashList),-1,-1,2,"fFired=",0,"list of fired parameters in one event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVReconstructedNucleus */
static void G__setup_memvarKVReconstructedNucleus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus));
   { KVReconstructedNucleus *p; p=(KVReconstructedNucleus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVString),-1,-1,2,"fDetNames=",0,"list of names of detectors through which particle passed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVHashList),-1,-1,2,"fDetList=",0,"! non-persistent list of pointers to detectors");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVString),-1,-1,2,"fIDTelName=",0,"name of identification telescope which identified this particle (if any)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope),-1,-1,2,"fIDTelescope=",0,"! non-persistent pointer to identification telescope");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,2,"kIsIdentified=262144LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,2,"kIsCalibrated=524288LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,2,"kCoherency=1048576LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,2,"kZMeasured=2097152LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,2,"kAMeasured=4194304LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNSegDet=",0,"number of segmented/independent detectors hit by particle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fAnalStatus=",0,"status of particle after analysis of reconstructed event");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRealZ=",0,"Z returned by identification routine");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRealA=",0,"A returned by identification routine");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetEnergyLoss=",0,"calculated energy lost in target");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIdentificationResult),-1,-1,2,"fIDresults[5]=",0,"[5] results of every identification attempt made for this nucleus, in order of the ID telescopes used");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kStatusOK=%lldLL",(long long)KVReconstructedNucleus::kStatusOK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kStatusOKafterSub=%lldLL",(long long)KVReconstructedNucleus::kStatusOKafterSub).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kStatusOKafterShare=%lldLL",(long long)KVReconstructedNucleus::kStatusOKafterShare).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kStatusStopFirstStage=%lldLL",(long long)KVReconstructedNucleus::kStatusStopFirstStage).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kStatusPileupDE=%lldLL",(long long)KVReconstructedNucleus::kStatusPileupDE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kStatusPileupGhost=%lldLL",(long long)KVReconstructedNucleus::kStatusPileupGhost).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVMultiDetArray */
static void G__setup_memvarKVMultiDetArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray));
   { KVMultiDetArray *p; p=(KVMultiDetArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTarget),-1,-1,2,"fTarget=",0,"target used in experiment");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLdA),-1,-2,2,"kIsRemoving=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLdA),-1,-2,2,"kParamsSet=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLdA),-1,-2,2,"kIsBuilt=65536LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLdA),-1,-2,2,"kIsBeingDeleted=131072LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLdA),-1,-2,2,"kIDParamsSet=262144LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLdA),-1,-2,2,"kCalParamsSet=524288LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TList),-1,-1,2,"fStatusIDTelescopes=",0,"! used by GetStatusIDTelescopes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TList),-1,-1,2,"fCalibStatusDets=",0,"! used by GetStatusIDTelescopes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent),-1,-1,2,"fHitGroups=",0,"!   list of hit groups in simulation");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection),-1,-1,2,"fIDTelescopes=",0,"->deltaE-E telescopes in groups");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection),-1,-1,2,"fACQParams=",0,"list of data acquisition parameters associated to detectors");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TString),-1,-1,2,"fDataSet=",0,"!name of associated dataset, used with MakeMultiDetector()");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCurrentRun=",0,"Number of the current run used to call SetParameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater),-1,-1,2,"fUpDater=",0,"!used to set parameters for multidetector");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSimMode=",0,"!=kTRUE in \"simulation mode\" (use for calculating response to simulated events)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fROOTGeometry=",0,"!=kTRUE if ROOT TGeo geometry and algorithms used for tracking/filtering");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFilterType=",0,"! type of filtering (used by DetectEvent)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TGeoManager),-1,-1,2,"fGeoManager=",0,"! array geometry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRangeTableGeoNavigator),-1,-1,2,"fNavigator=",0,"! for propagating particles through array geometry");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLEFilterType),-1,-2,1,G__FastAllocString(2048).Format("kFilterType_Geo=%lldLL",(long long)KVMultiDetArray::kFilterType_Geo).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLEFilterType),-1,-2,1,G__FastAllocString(2048).Format("kFilterType_GeoThresh=%lldLL",(long long)KVMultiDetArray::kFilterType_GeoThresh).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLEFilterType),-1,-2,1,G__FastAllocString(2048).Format("kFilterType_Full=%lldLL",(long long)KVMultiDetArray::kFilterType_Full).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDTelescope */
static void G__setup_memvarKVIDTelescope(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope));
   { KVIDTelescope *p; p=(KVIDTelescope*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVList),-1,-1,2,"fDetectors=",0,"->list of detectors in telescope");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGroup),-1,-1,2,"fGroup=",0,"group to which telescope belongs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVList),-1,-1,2,"fIDGrids=",0,"->identification grid(s)");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,2,"kMassID=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,2,"kReadyForID=65536LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCalibStatus=",0,"!temporary variable holding status code for last call to Calibrate(KVReconstructedNucleus*)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVString),-1,-1,2,"fVarX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVString),-1,-1,2,"fVarY=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCalibStatus_OK=%lldLL",(long long)KVIDTelescope::kCalibStatus_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCalibStatus_Calculated=%lldLL",(long long)KVIDTelescope::kCalibStatus_Calculated).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCalibStatus_NoCalibrations=%lldLL",(long long)KVIDTelescope::kCalibStatus_NoCalibrations).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCalibStatus_Multihit=%lldLL",(long long)KVIDTelescope::kCalibStatus_Multihit).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCalibStatus_Coherency=%lldLL",(long long)KVIDTelescope::kCalibStatus_Coherency).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMeanDE_OK=%lldLL",(long long)KVIDTelescope::kMeanDE_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMeanDE_XtooSmall=%lldLL",(long long)KVIDTelescope::kMeanDE_XtooSmall).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMeanDE_XtooLarge=%lldLL",(long long)KVIDTelescope::kMeanDE_XtooLarge).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMeanDE_NoIdentifier=%lldLL",(long long)KVIDTelescope::kMeanDE_NoIdentifier).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVReconstructedEvent */
static void G__setup_memvarKVReconstructedEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent));
   { KVReconstructedEvent *p; p=(KVReconstructedEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMeanAngles=",0,"!kTRUE if particle momenta calculated using mean angles of detectors (default: randomised angles)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TString),-1,-1,4,"fPartSeedCond=",0,"!condition used in AnalyseTelescopes for seeding new reconstructed particle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDetectorEvent */
static void G__setup_memvarKVDetectorEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent));
   { KVDetectorEvent *p; p=(KVDetectorEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUniqueNameList),-1,-1,4,"fHitGroups=",0,"->list of groups hit by particles in the event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVUpDater */
static void G__setup_memvarKVUpDater(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater));
   { KVUpDater *p; p=(KVUpDater*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TString),-1,-1,2,"fDataSet=",0,"!name of dataset associated");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVASMultiDetArray */
static void G__setup_memvarKVASMultiDetArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray));
   { KVASMultiDetArray *p; p=(KVASMultiDetArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCurrentLayerNumber=",0,"! used to number layers");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fGr=",0,"!used to number groups");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVRTGIDManager */
static void G__setup_memvarKVRTGIDManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRTGIDManager));
   { KVRTGIDManager *p; p=(KVRTGIDManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVList),-1,-2,2,"fIDGlobalList=",0,"! Global list of TGID of all the KVRTGIDManager");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVElasticScatterEvent */
static void G__setup_memvarKVElasticScatterEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent));
   { KVElasticScatterEvent *p; p=(KVElasticScatterEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KV2Body),-1,-1,2,"kb2=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TVector3),-1,-1,2,"kIPPVector=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTarget),-1,-1,2,"ktarget=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNucleus),-1,-1,2,"proj=",0,"!->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNucleus),-1,-1,2,"targ=",0,"!->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent),-1,-1,2,"rec_evt=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEvent),-1,-1,2,"sim_evt=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVHashList),-1,-1,2,"lhisto=",0,"! to store control histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVHashList),-1,-1,2,"ltree=",0,"!	to store tree");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"th_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"th_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"phi_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"phi_max=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"kXruth_evt=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kchoix_layer=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kTreatedNevts=",0,"!		number of diffusion performed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kDiffNuc=",0,"!");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Option_t"),-1,2,"kRandomOpt=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVPosition),-1,-1,2,"kposalea=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kChoixSol=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kProjIsSet=%lldLL",(long long)KVElasticScatterEvent::kProjIsSet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kTargIsSet=%lldLL",(long long)KVElasticScatterEvent::kTargIsSet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kHasTarget=%lldLL",(long long)KVElasticScatterEvent::kHasTarget).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsUpdated=%lldLL",(long long)KVElasticScatterEvent::kIsUpdated).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsDetectionOn=%lldLL",(long long)KVElasticScatterEvent::kIsDetectionOn).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVGeoImport */
static void G__setup_memvarKVGeoImport(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoImport));
   { KVGeoImport *p; p=(KVGeoImport*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray),-1,-1,4,"fArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIonRangeTable),-1,-1,4,"fRangeTable=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGroup),-1,-1,4,"fCurrentGroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGroupNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetector),-1,-1,4,"fLastDetector=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCreateArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TString),-1,-1,4,"fDetectorPlugin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVEventFiltering */
static void G__setup_memvarKVEventFiltering(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering));
   { KVEventFiltering *p; p=(KVEventFiltering*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEVN=",0,"event number counter");
   G__memvar_setup((void*)((long)(&p->fFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TFile),-1,-1,1,"fFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TTree),-1,-1,1,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fReconEvent)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent),-1,-1,1,"fReconEvent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCMVelocity)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TVector3),-1,-1,1,"fCMVelocity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTransformKinematics)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fTransformKinematics=",0,"=kTRUE if simulation not in lab frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVRawDataAnalyser */
static void G__setup_memvarKVRawDataAnalyser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRawDataAnalyser));
   { KVRawDataAnalyser *p; p=(KVRawDataAnalyser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRawDataReader),-1,-1,2,"fRunFile=",0,"currently analysed run file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRunNumber=",0,"run number of current file");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEventNumber=",0,"event number in current run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent),-1,-1,2,"fDetEv=",0,"list of hit groups for current event");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVHashList),-1,-1,2,"fHistoList=",0,"list of histograms of user analysis");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"TotalEntriesToRead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVElasticScatter */
static void G__setup_memvarKVElasticScatter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatter));
   { KVElasticScatter *p; p=(KVElasticScatter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TH1F),-1,-1,4,"fDepth=",0,"depth of scattering point in target");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TH1F),-1,-1,4,"fTheta=",0,"angle of scattered particle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBinE=",0,"Number of bins of the Energy histogram");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergy=",0,"energy of projectile");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNucleus),-1,-1,4,"fProj=",0,"scattered nucleus");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNucleus),-1,-1,4,"fTarg=",0,"target nucleus");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KV2Body),-1,-1,4,"fKinematics=",0,"kinematics calculation");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTelescope),-1,-1,4,"fTelescope=",0,"telescope where particle will be detected");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetector),-1,-1,4,"fDetector=",0,"detector where particle will be detected");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TList),-1,-1,4,"fAlignedDetectors=",0,"all aligned detectors");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNDets=",0,"number of aligned detectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTarget),-1,-1,4,"fTarget=",0,"target for current run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMultiLayer=",0,"kTRUE for multilayer target");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TVector3),-1,-1,4,"fBeamDirection=",0,"beam direction vector ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIntLayer=",0,"index of interaction layer in multilayer target");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExx=",0,"excited state of target nucleus");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TObjArray),-1,-1,4,"fHistos=",0,"energy loss histograms for all hit detectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNameValueList),-1,-1,4,"fDetInd=",0,"detector type-index association");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVMultiDetexp_events() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVGANILDataReader(void) {
   /* KVGANILDataReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader));
   G__memfunc_setup("ConnectRawDataParameters",2434,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewGanTapeInterface",1883,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_GTGanilData), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckACQParam",1188,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVACQParam), -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillFiredParameterList",2222,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGANILDataReader",1497,G__G__KVMultiDetexp_events_561_0_5, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGANILDataReader",1497,G__G__KVMultiDetexp_events_561_0_6, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenFile",786,G__G__KVMultiDetexp_events_561_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,G__G__KVMultiDetexp_events_561_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGanTapeInterface",1873,G__G__KVMultiDetexp_events_561_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_GTGanilData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserTree",1115,G__G__KVMultiDetexp_events_561_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - - C - 'Option_t' 10 '\"arrays\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUnknownParameters",2084,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawDataParameters",2008,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFiredDataParameters",2200,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Open",402,G__G__KVMultiDetexp_events_561_0_15, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader), -1, 0, 2, 3, 1, 0, 
"C - 'Char_t' 10 - filename C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) G__func2void( (KVGANILDataReader* (*)(const Char_t*, Option_t*))(&KVGANILDataReader::Open) ), 0);
   G__memfunc_setup("HasScalerBuffer",1488,G__G__KVMultiDetexp_events_561_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfScalers",1803,G__G__KVMultiDetexp_events_561_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalerCount",1411,G__G__KVMultiDetexp_events_561_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_561_0_19, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGANILDataReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_561_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGANILDataReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_561_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGANILDataReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_561_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGANILDataReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_561_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_561_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGANILDataReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_561_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGANILDataReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_561_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGANILDataReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_561_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGANILDataReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVGANILDataReader", 1497, G__G__KVMultiDetexp_events_561_0_31, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader), -1, 0, 1, 1, 1, 0, "u 'KVGANILDataReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVGANILDataReader", 1623, G__G__KVMultiDetexp_events_561_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetexp_events_561_0_33, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader), -1, 1, 1, 1, 1, 0, "u 'KVGANILDataReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVReconstructedNucleus(void) {
   /* KVReconstructedNucleus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus));
   G__memfunc_setup("MakeDetectorList",1620,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVReconstructedNucleus",2277,G__G__KVMultiDetexp_events_673_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVReconstructedNucleus",2277,G__G__KVMultiDetexp_events_673_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus), -1, 0, 1, 1, 1, 0, "u 'KVReconstructedNucleus' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVMultiDetexp_events_673_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,G__G__KVMultiDetexp_events_673_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - kvd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIdentification",1750,G__G__KVMultiDetexp_events_673_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVIdentificationResult' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetectorList",1526,G__G__KVMultiDetexp_events_673_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__G__KVMultiDetexp_events_673_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetector), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorNames",1614,G__G__KVMultiDetexp_events_673_0_11, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDtelNames",1254,G__G__KVMultiDetexp_events_673_0_12, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStoppingDetector",1966,G__G__KVMultiDetexp_events_673_0_13, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDet",877,G__G__KVMultiDetexp_events_673_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSegDet",938,G__G__KVMultiDetexp_events_673_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNSegDet",950,G__G__KVMultiDetexp_events_673_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetNSegDet",1165,G__G__KVMultiDetexp_events_673_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatus",932,G__G__KVMultiDetexp_events_673_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatus",944,G__G__KVMultiDetexp_events_673_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnglesFromStoppingDetector",2972,G__G__KVMultiDetexp_events_673_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"random\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGroup",813,G__G__KVMultiDetexp_events_673_0_21, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGroup), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDetector",1091,G__G__KVMultiDetexp_events_673_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDTelescopes",1476,G__G__KVMultiDetexp_events_673_0_24, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Identify",828,G__G__KVMultiDetexp_events_673_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calibrate",903,G__G__KVMultiDetexp_events_673_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIdentifyingTelescope",2366,G__G__KVMultiDetexp_events_673_0_27, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIdentifyingTelescope",2378,G__G__KVMultiDetexp_events_673_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVIDTelescope' - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIDCode",820,G__G__KVMultiDetexp_events_673_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDCode",808,G__G__KVMultiDetexp_events_673_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetECode",748,G__G__KVMultiDetexp_events_673_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetECode",736,G__G__KVMultiDetexp_events_673_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIsIdentified",1501,G__G__KVMultiDetexp_events_673_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsCalibrated",1491,G__G__KVMultiDetexp_events_673_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsUnidentified",1728,G__G__KVMultiDetexp_events_673_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsUncalibrated",1718,G__G__KVMultiDetexp_events_673_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIdentified",1201,G__G__KVMultiDetexp_events_673_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCalibrated",1191,G__G__KVMultiDetexp_events_673_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRealZ",778,G__G__KVMultiDetexp_events_673_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRealA",753,G__G__KVMultiDetexp_events_673_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - A", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRealZ",766,G__G__KVMultiDetexp_events_673_0_41, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRealA",741,G__G__KVMultiDetexp_events_673_0_42, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__G__KVMultiDetexp_events_673_0_43, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTargetEnergyLoss",1950,G__G__KVMultiDetexp_events_673_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTargetEnergyLoss",1938,G__G__KVMultiDetexp_events_673_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZMeasured",1212,G__G__KVMultiDetexp_events_673_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' yes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAMeasured",1187,G__G__KVMultiDetexp_events_673_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' yes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsZMeasured",1100,G__G__KVMultiDetexp_events_673_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsAMeasured",1075,G__G__KVMultiDetexp_events_673_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIdentificationResult",2377,G__G__KVMultiDetexp_events_673_0_50, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIdentificationResult), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdentificationResult",2377,G__G__KVMultiDetexp_events_673_0_51, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIdentificationResult), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - idtype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdentificationResult",2377,G__G__KVMultiDetexp_events_673_0_52, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIdentificationResult), -1, 0, 1, 1, 1, 0, "U 'KVIDTelescope' - 0 - idt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdentificationResult",2377,G__G__KVMultiDetexp_events_673_0_53, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIdentificationResult), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdentificationResult",2377,G__G__KVMultiDetexp_events_673_0_54, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIdentificationResult), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - idtype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdentificationResult",2377,G__G__KVMultiDetexp_events_673_0_55, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIdentificationResult), -1, 0, 1, 1, 1, 8, "U 'KVIDTelescope' - 0 - idt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubtractEnergyFromAllDetectors",3084,G__G__KVMultiDetexp_events_673_0_56, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNIdentifiedInGroup",2087,G__G__KVMultiDetexp_events_673_0_57, 104, -1, G__defined_typename("UInt_t"), 0, 1, 3, 1, 0, "U 'KVGroup' - 0 - grp", (char*)NULL, (void*) G__func2void( (UInt_t (*)(KVGroup*))(&KVReconstructedNucleus::GetNIdentifiedInGroup) ), 0);
   G__memfunc_setup("GetNUnidentifiedInGroup",2314,G__G__KVMultiDetexp_events_673_0_58, 104, -1, G__defined_typename("UInt_t"), 0, 1, 3, 1, 0, "U 'KVGroup' - 0 - grp", (char*)NULL, (void*) G__func2void( (UInt_t (*)(KVGroup*))(&KVReconstructedNucleus::GetNUnidentifiedInGroup) ), 0);
   G__memfunc_setup("AnalyseParticlesInGroup",2360,G__G__KVMultiDetexp_events_673_0_59, 121, -1, -1, 0, 1, 3, 1, 0, "U 'KVGroup' - 0 - grp", (char*)NULL, (void*) G__func2void( (void (*)(KVGroup*))(&KVReconstructedNucleus::AnalyseParticlesInGroup) ), 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_673_0_60, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVReconstructedNucleus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_673_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVReconstructedNucleus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_673_0_62, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVReconstructedNucleus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_673_0_63, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVReconstructedNucleus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_673_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_673_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVReconstructedNucleus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_673_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVReconstructedNucleus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_673_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVReconstructedNucleus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_673_0_71, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVReconstructedNucleus::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVReconstructedNucleus", 2403, G__G__KVMultiDetexp_events_673_0_72, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVMultiDetArray(void) {
   /* KVMultiDetArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray));
   G__memfunc_setup("RenumberGroups",1472,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildGeometry",1340,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeListOfDetectors",1916,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetACQParams",1125,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_up_telescope",1715,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"U 'KVDetector' - 0 - de U 'KVDetector' - 0 - e "
"U 'TCollection' - 0 - idtels U 'KVIDTelescope' - 0 - idt "
"u 'TString' - 1 - uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_up_single_stage_telescope",3079,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"U 'KVDetector' - 0 - det U 'TCollection' - 0 - idtels "
"U 'KVIDTelescope' - 0 - idt u 'TString' - 1 - uri", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrators",1442,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetectorThicknesses",2282,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateGeoManager",1578,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TGeoManager), -1, 0, 4, 1, 2, 0, 
"d - 'Double_t' 0 '500' - d - 'Double_t' 0 '500' - "
"d - 'Double_t' 0 '500' - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAlignedIDTelescopesForDetector",3289,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVDetector' - 0 - det U 'TCollection' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDTelescopesForGroup",2296,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVGroup' - 0 - grp U 'TCollection' - 0 - tel_list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrepareModifGroup",1739,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVGroup' - 0 - grp U 'KVDetector' - 0 - dd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPresent",1037,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVDetector' - 0 - det g - 'Bool_t' 0 'kTRUE' present", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetecting",1219,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVDetector' - 0 - det g - 'Bool_t' 0 'kTRUE' detecting", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGeometry",1144,G__G__KVMultiDetexp_events_676_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGeoManager' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeometry",1132,G__G__KVMultiDetexp_events_676_0_16, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TGeoManager), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNavigator",1227,G__G__KVMultiDetexp_events_676_0_17, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoNavigator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVMultiDetArray",1480,G__G__KVMultiDetexp_events_676_0_18, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilterType",1332,G__G__KVMultiDetexp_events_676_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVMultiDetexp_events_676_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__KVMultiDetexp_events_676_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateIDTelescopesInGroups",2607,G__G__KVMultiDetexp_events_676_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDTelescopes",1476,G__G__KVMultiDetexp_events_676_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'KVDetector' - 0 - - U 'KVDetector' - 0 - - "
"U 'TCollection' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTelescope",1220,G__G__KVMultiDetexp_events_676_0_25, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTelescope), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGroupWithDetector",2051,G__G__KVMultiDetexp_events_676_0_26, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGroup), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGroup",813,G__G__KVMultiDetexp_events_676_0_27, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGroup), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGroupWithAngles",1827,G__G__KVMultiDetexp_events_676_0_28, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGroup), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - - f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveGroup",1147,G__G__KVMultiDetexp_events_676_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVGroup' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveGroup",1147,G__G__KVMultiDetexp_events_676_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReplaceDetector",1526,G__G__KVMultiDetexp_events_676_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name U 'KVDetector' - 0 - new_kvd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddACQParam",975,G__G__KVMultiDetexp_events_676_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVACQParam' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetACQParams",1113,G__G__KVMultiDetexp_events_676_0_33, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetACQParam",998,G__G__KVMultiDetexp_events_676_0_34, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVACQParam), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrayACQParams",1636,G__G__KVMultiDetexp_events_676_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DetectEvent",1115,G__G__KVMultiDetexp_events_676_0_36, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'KVEvent' - 0 - event U 'KVReconstructedEvent' - 0 - rec_event "
"C - 'Char_t' 10 '\"\"' detection_frame", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FilteredEventCoherencyAnalysis",3093,G__G__KVMultiDetexp_events_676_0_37, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - round U 'KVReconstructedEvent' - 0 - rec_event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetectorEvent",1628,G__G__KVMultiDetexp_events_676_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVDetectorEvent' - 0 - detev U 'TSeqCollection' - 0 '0' fired_params", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructEvent",1694,G__G__KVMultiDetexp_events_676_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVReconstructedEvent' - 0 - - U 'KVDetectorEvent' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DetectParticle_TGEO",1819,G__G__KVMultiDetexp_events_676_0_40, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNameValueList), -1, 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectParticle",1421,G__G__KVMultiDetexp_events_676_0_41, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNameValueList), -1, 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - part", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DetectParticleIn",1604,G__G__KVMultiDetexp_events_676_0_42, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - detname U 'KVNucleus' - 0 - kvp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDTelescope",1361,G__G__KVMultiDetexp_events_676_0_43, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfIDTelescopes",2069,G__G__KVMultiDetexp_events_676_0_44, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDTelescopeTypes",1894,G__G__KVMultiDetexp_events_676_0_45, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDTelescopesWithType",2306,G__G__KVMultiDetexp_events_676_0_46, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTarget",915,G__G__KVMultiDetexp_events_676_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - material f - 'Float_t' 10 - thickness", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTarget",915,G__G__KVMultiDetexp_events_676_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVTarget' - 0 - target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetMaterial",1730,G__G__KVMultiDetexp_events_676_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - material", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetThickness",1855,G__G__KVMultiDetexp_events_676_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - thickness", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTarget",903,G__G__KVMultiDetexp_events_676_0_51, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTarget), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetEnergyLossCorrection",2986,G__G__KVMultiDetexp_events_676_0_52, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'KVReconstructedNucleus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsRemoving",1027,G__G__KVMultiDetexp_events_676_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestals",1233,G__G__KVMultiDetexp_events_676_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsBuilt",700,G__G__KVMultiDetexp_events_676_0_55, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeMultiDetector",1731,G__G__KVMultiDetexp_events_676_0_56, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray), -1, 0, 2, 3, 1, 0, 
"C - 'Char_t' 10 - dataset_name i - 'Int_t' 0 '-1' run", (char*)NULL, (void*) G__func2void( (KVMultiDetArray* (*)(const Char_t*, Int_t))(&KVMultiDetArray::MakeMultiDetector) ), 0);
   G__memfunc_setup("IsBeingDeleted",1368,G__G__KVMultiDetexp_events_676_0_57, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpDater",981,G__G__KVMultiDetexp_events_676_0_58, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__G__KVMultiDetexp_events_676_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunIdentificationParameters",3103,G__G__KVMultiDetexp_events_676_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunCalibrationParameters",2781,G__G__KVMultiDetexp_events_676_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ParamsSet",912,G__G__KVMultiDetexp_events_676_0_62, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDParamsSet",1053,G__G__KVMultiDetexp_events_676_0_63, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalParamsSet",1184,G__G__KVMultiDetexp_events_676_0_64, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentRunNumber",1953,G__G__KVMultiDetexp_events_676_0_65, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIdentifications",1865,G__G__KVMultiDetexp_events_676_0_66, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitializeIDTelescopes",2230,G__G__KVMultiDetexp_events_676_0_67, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateIDTelescopes",1799,G__G__KVMultiDetexp_events_676_0_68, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateIdentifications",2176,G__G__KVMultiDetexp_events_676_0_69, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateCalibrators",1753,G__G__KVMultiDetexp_events_676_0_70, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalSolidAngle",1798,G__G__KVMultiDetexp_events_676_0_71, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStatusOfIDTelescopes",2301,G__G__KVMultiDetexp_events_676_0_72, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibrationStatusOfDetectors",3182,G__G__KVMultiDetexp_events_676_0_73, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatusOfIDTelescopes",2538,G__G__KVMultiDetexp_events_676_0_74, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCalibStatusOfDetectors",2766,G__G__KVMultiDetexp_events_676_0_75, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSimMode",986,G__G__KVMultiDetexp_events_676_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSimMode",874,G__G__KVMultiDetexp_events_676_0_77, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPunchThroughEnergy",2153,G__G__KVMultiDetexp_events_676_0_78, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - detector i - 'Int_t' 0 - Z "
"i - 'Int_t' 0 - A", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPunchThroughEnergyVsZ",2554,G__G__KVMultiDetexp_events_676_0_79, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TGraph), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - detector i - 'Int_t' 0 'KVNucleus::kBetaMass' massform", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPunchThroughEsurAVsZ",2416,G__G__KVMultiDetexp_events_676_0_80, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TGraph), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - detector i - 'Int_t' 0 'KVNucleus::kBetaMass' massform", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetROOTGeometry",1468,G__G__KVMultiDetexp_events_676_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsROOTGeometry",1356,G__G__KVMultiDetexp_events_676_0_82, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateDetectorSegmentationIndex",3502,G__G__KVMultiDetexp_events_676_0_83, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_676_0_84, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVMultiDetArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_676_0_85, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVMultiDetArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_676_0_86, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVMultiDetArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_676_0_87, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVMultiDetArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_676_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_676_0_92, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVMultiDetArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_676_0_93, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVMultiDetArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_676_0_94, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVMultiDetArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_676_0_95, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVMultiDetArray::DeclFileLine) ), 0);
   G__memfunc_setup("AnalyseGroupAndReconstructEvent",3211,G__G__KVMultiDetexp_events_676_0_96, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVReconstructedEvent' - 0 - recev U 'KVGroup' - 0 - grp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGridsInTelescopes",2035,G__G__KVMultiDetexp_events_676_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillListOfIDTelescopes",2172,G__G__KVMultiDetexp_events_676_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVIDGraph' - 0 - gr", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVMultiDetArray", 1606, G__G__KVMultiDetexp_events_676_0_99, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDTelescope(void) {
   /* KVIDTelescope */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope));
   G__memfunc_setup("SetLabelFromURI",1424,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - uri", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIDTelescope",1234,G__G__KVMultiDetexp_events_679_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVMultiDetexp_events_679_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDetector",1091,G__G__KVMultiDetexp_events_679_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetectors",1229,G__G__KVMultiDetexp_events_679_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__G__KVMultiDetexp_events_679_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetector), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__G__KVMultiDetexp_events_679_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetector), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorRank",1510,G__G__KVMultiDetexp_events_679_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - kvd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__G__KVMultiDetexp_events_679_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroup",813,G__G__KVMultiDetexp_events_679_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGroup), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGroup",825,G__G__KVMultiDetexp_events_679_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVGroup' - 0 - kvg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroupNumber",1430,G__G__KVMultiDetexp_events_679_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarX",673,G__G__KVMultiDetexp_events_679_0_13, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVarY",674,G__G__KVMultiDetexp_events_679_0_14, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeIDLine",915,G__G__KVMultiDetexp_events_679_0_15, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TGraph), -1, 0, 4, 1, 1, 0, 
"U 'KVNucleus' - 0 - nuc d - 'Double_t' 0 - Emin "
"d - 'Double_t' 0 - Emax d - 'Double_t' 0 '0.0' Estep", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,G__G__KVMultiDetexp_events_679_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,G__G__KVMultiDetexp_events_679_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculateParticleEnergy",2348,G__G__KVMultiDetexp_events_679_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVReconstructedNucleus' - 0 - nuc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalibStatus",1407,G__G__KVMultiDetexp_events_679_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIDGrid",831,G__G__KVMultiDetexp_events_679_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVIDGraph' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDGrid",819,G__G__KVMultiDetexp_events_679_0_22, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDGraph), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDGrid",819,G__G__KVMultiDetexp_events_679_0_23, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDGraph), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDGrid",819,G__G__KVMultiDetexp_events_679_0_24, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDGraph), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfIDGrids",1527,G__G__KVMultiDetexp_events_679_0_25, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveGrids",1127,G__G__KVMultiDetexp_events_679_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,G__G__KVMultiDetexp_events_679_0_27, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,G__G__KVMultiDetexp_events_679_0_28, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPedestalX",1194,G__G__KVMultiDetexp_events_679_0_29, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPedestalY",1195,G__G__KVMultiDetexp_events_679_0_30, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHasMassID",1129,G__G__KVMultiDetexp_events_679_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' yes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasMassID",829,G__G__KVMultiDetexp_events_679_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeIDTelescope",1455,G__G__KVMultiDetexp_events_679_0_33, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope), -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) G__func2void( (KVIDTelescope* (*)(const Char_t*))(&KVIDTelescope::MakeIDTelescope) ), 0);
   G__memfunc_setup("SetIdentificationParameters",2794,G__G__KVMultiDetexp_events_679_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVMultiDetArray' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveIdentificationParameters",3116,G__G__KVMultiDetexp_events_679_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsReadyForID",1125,G__G__KVMultiDetexp_events_679_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDefaultIDGridClass",2030,G__G__KVMultiDetexp_events_679_0_37, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateDeltaE_EGrid",2023,G__G__KVMultiDetexp_events_679_0_38, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDGrid), -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 10 - Zrange i - 'Int_t' 0 - deltaMasse "
"i - 'Int_t' 0 - npoints d - 'Double_t' 0 '-10' lifetime "
"b - 'UChar_t' 0 '0' massformula d - 'Double_t' 0 '1.' xfactor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateDeltaE_EGrid",2023,G__G__KVMultiDetexp_events_679_0_39, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDGrid), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - haa_zz g - 'Bool_t' 0 - Zonly "
"i - 'Int_t' 0 - npoints", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanDEFromID",1355,G__G__KVMultiDetexp_events_679_0_40, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 1 - status i - 'Int_t' 0 - Z "
"i - 'Int_t' 0 '-1' A d - 'Double_t' 0 '-1.0' Eres", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBadIDCode",1071,G__G__KVMultiDetexp_events_679_0_41, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCoherencyIDCode",1736,G__G__KVMultiDetexp_events_679_0_42, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMultiHitFirstStageIDCode",2644,G__G__KVMultiDetexp_events_679_0_43, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDCode",808,G__G__KVMultiDetexp_events_679_0_44, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZminCode",1081,G__G__KVMultiDetexp_events_679_0_45, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetECode",736,G__G__KVMultiDetexp_events_679_0_46, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIDCode",820,G__G__KVMultiDetexp_events_679_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVReconstructedNucleus' - 0 - - r - 'UShort_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckTheoreticalIdentificationThreshold",4009,G__G__KVMultiDetexp_events_679_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'KVNucleus' - 0 - - d - 'Double_t' 0 '0.0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CanIdentify",1102,G__G__KVMultiDetexp_events_679_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_679_0_50, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDTelescope::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_679_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDTelescope::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_679_0_52, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDTelescope::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_679_0_53, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDTelescope::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_679_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_679_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDTelescope::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_679_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDTelescope::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_679_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDTelescope::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_679_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDTelescope::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDTelescope", 1234, G__G__KVMultiDetexp_events_679_0_62, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope), -1, 0, 1, 1, 1, 0, "u 'KVIDTelescope' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDTelescope", 1360, G__G__KVMultiDetexp_events_679_0_63, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetexp_events_679_0_64, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope), -1, 1, 1, 1, 1, 0, "u 'KVIDTelescope' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVReconstructedEvent(void) {
   /* KVReconstructedEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent));
   G__memfunc_setup("init",436,G__G__KVMultiDetexp_events_777_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVReconstructedEvent",2056,G__G__KVMultiDetexp_events_777_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '50' mult C - - 10 '\"KVReconstructedNucleus\"' classname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__G__KVMultiDetexp_events_777_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__G__KVMultiDetexp_events_777_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - npart", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleWithName",1905,G__G__KVMultiDetexp_events_777_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__G__KVMultiDetexp_events_777_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - group_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextParticle",1523,G__G__KVMultiDetexp_events_777_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnalyseDetectors",1658,G__G__KVMultiDetexp_events_777_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TList' - 0 - kvtl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPartSeedCond",1468,G__G__KVMultiDetexp_events_777_0_9, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPartSeedCond",1480,G__G__KVMultiDetexp_events_777_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - cond", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IdentifyEvent",1342,G__G__KVMultiDetexp_events_777_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalibrateEvent",1417,G__G__KVMultiDetexp_events_777_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UseMeanAngles",1288,G__G__KVMultiDetexp_events_777_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseRandomAngles",1512,G__G__KVMultiDetexp_events_777_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasMeanAngles",1271,G__G__KVMultiDetexp_events_777_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasRandomAngles",1495,G__G__KVMultiDetexp_events_777_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SecondaryIdentCalib",1911,G__G__KVMultiDetexp_events_777_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_777_0_19, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVReconstructedEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_777_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVReconstructedEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_777_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVReconstructedEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_777_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVReconstructedEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_777_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_777_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVReconstructedEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_777_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVReconstructedEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_777_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVReconstructedEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_777_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVReconstructedEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVReconstructedEvent", 2182, G__G__KVMultiDetexp_events_777_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDetectorEvent(void) {
   /* KVDetectorEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent));
   G__memfunc_setup("KVDetectorEvent",1501,G__G__KVMultiDetexp_events_778_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddGroup",790,G__G__KVMultiDetexp_events_778_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVGroup' - 0 - grp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGroups",928,G__G__KVMultiDetexp_events_778_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUniqueNameList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ContainsGroup",1356,G__G__KVMultiDetexp_events_778_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVGroup' - 0 - grp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMult",706,G__G__KVMultiDetexp_events_778_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_778_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDetectorEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_778_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDetectorEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_778_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDetectorEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_778_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDetectorEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_778_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_778_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDetectorEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_778_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDetectorEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_778_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDetectorEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_778_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDetectorEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDetectorEvent", 1501, G__G__KVMultiDetexp_events_778_0_21, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent), -1, 0, 1, 1, 1, 0, "u 'KVDetectorEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDetectorEvent", 1627, G__G__KVMultiDetexp_events_778_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetexp_events_778_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent), -1, 1, 1, 1, 1, 0, "u 'KVDetectorEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVUpDater(void) {
   /* KVUpDater */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater));
   G__memfunc_setup("KVUpDater",854,G__G__KVMultiDetexp_events_782_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__G__KVMultiDetexp_events_782_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIdentificationParameters",2794,G__G__KVMultiDetexp_events_782_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrationParameters",2472,G__G__KVMultiDetexp_events_782_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTarget",915,G__G__KVMultiDetexp_events_782_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIDGrids",946,G__G__KVMultiDetexp_events_782_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibParameters",1819,G__G__KVMultiDetexp_events_782_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeUpDater",1075,G__G__KVMultiDetexp_events_782_0_8, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater), -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 - uri", (char*)NULL, (void*) G__func2void( (KVUpDater* (*)(const Char_t*))(&KVUpDater::MakeUpDater) ), 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_782_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVUpDater::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_782_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVUpDater::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_782_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVUpDater::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_782_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVUpDater::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__KVMultiDetexp_events_782_0_13, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__KVMultiDetexp_events_782_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__KVMultiDetexp_events_782_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_782_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_782_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVUpDater::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_782_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVUpDater::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_782_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVUpDater::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_782_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVUpDater::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVUpDater", 854, G__G__KVMultiDetexp_events_782_0_21, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater), -1, 0, 1, 1, 1, 0, "u 'KVUpDater' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVUpDater", 980, G__G__KVMultiDetexp_events_782_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetexp_events_782_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVUpDater), -1, 1, 1, 1, 1, 0, "u 'KVUpDater' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVASMultiDetArray(void) {
   /* KVASMultiDetArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray));
   G__memfunc_setup("AddToGroups",1100,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVTelescope' - 0 - kt1 U 'KVTelescope' - 0 - kt2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGroups",940,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVLayer' - 0 - - U 'KVLayer' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateGroupsInRings",1949,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVRing' - 0 - r1 U 'KVRing' - 0 - r2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeListOfDetectors",1916,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MergeGroups",1136,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVASGroup' - 0 - kg1 U 'KVASGroup' - 0 - kg2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DetectParticle_KV",1677,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNameValueList), -1, 0, 1, 1, 2, 0, "U 'KVNucleus' - 0 - part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDTelescopesForGroup",2296,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVGroup' - 0 - grp U 'TCollection' - 0 - tel_list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVASMultiDetArray",1628,G__G__KVMultiDetexp_events_789_0_8, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVMultiDetexp_events_789_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroupWithAngles",1827,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGroup), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - theta f - 'Float_t' 0 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTelescopes",1335,G__G__KVMultiDetexp_events_789_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TList), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - theta f - 'Float_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectParticle",1421,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNameValueList), -1, 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - part", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculateGroupsFromGeometry",2798,G__G__KVMultiDetexp_events_789_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__G__KVMultiDetexp_events_789_0_14, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVLayer), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__G__KVMultiDetexp_events_789_0_15, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVLayer), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTelescope",1220,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTelescope), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRing",688,G__G__KVMultiDetexp_events_789_0_17, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRing), -1, 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - layer C - 'Char_t' 10 - ring_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRing",688,G__G__KVMultiDetexp_events_789_0_18, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRing), -1, 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - layer h - 'UInt_t' 0 - ring_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRing",688,G__G__KVMultiDetexp_events_789_0_19, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRing), -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - layer C - 'Char_t' 10 - ring_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRing",688,G__G__KVMultiDetexp_events_789_0_20, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRing), -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - layer h - 'UInt_t' 0 - ring_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSolidAngleByLayerAndRing",2653,G__G__KVMultiDetexp_events_789_0_21, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - layer h - 'UInt_t' 0 - ring_number", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSolidAngleByLayer",1978,G__G__KVMultiDetexp_events_789_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - layer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateGeoManager",1578,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TGeoManager), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 '500' - d - 'Double_t' 0 '500' - "
"d - 'Double_t' 0 '500' - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalSolidAngle",1798,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_789_0_25, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVASMultiDetArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_789_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVASMultiDetArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_789_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVASMultiDetArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_789_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVASMultiDetArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_789_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_789_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVASMultiDetArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_789_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVASMultiDetArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_789_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVASMultiDetArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_789_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVASMultiDetArray::DeclFileLine) ), 0);
   G__memfunc_setup("AnalyseGroupAndReconstructEvent",3211,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVReconstructedEvent' - 0 - event U 'KVGroup' - 0 - grp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AnalyseTelescopes",1764,G__G__KVMultiDetexp_events_789_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVReconstructedEvent' - 0 - event U 'TList' - 0 - kvtl", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVASMultiDetArray", 1754, G__G__KVMultiDetexp_events_789_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVRTGIDManager(void) {
   /* KVRTGIDManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRTGIDManager));
   G__memfunc_setup("SetTGID",596,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'KVTGID' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVRTGIDManager",1238,G__G__KVMultiDetexp_events_887_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRTGIDManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTGID",561,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVTGID' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTGID",584,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTGID), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - idt_name C - 'Char_t' 10 - id_type "
"C - 'Char_t' 10 - grid_type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveAllTGID",1199,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveTGID",918,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTGIDToGlobalList",1761,G__G__KVMultiDetexp_events_887_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "U 'KVTGID' - 0 - -", (char*)NULL, (void*) G__func2void( (void (*)(KVTGID*))(&KVRTGIDManager::AddTGIDToGlobalList) ), 0);
   G__memfunc_setup("BuildGridForAllTGID",1758,G__G__KVMultiDetexp_events_887_0_8, 121, -1, -1, 0, 7, 3, 1, 0, 
"C - 'Char_t' 10 '\"\"' idtype d - 'Double_t' 0 '0.' xmin "
"d - 'Double_t' 0 '4096.' xmax i - 'Int_t' 0 '0' ID_min "
"i - 'Int_t' 0 '0' ID_max i - 'Int_t' 0 '50' npoints "
"g - 'Bool_t' 0 'kTRUE' logscale", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*, Double_t, Double_t, Int_t, Int_t, Int_t, Bool_t))(&KVRTGIDManager::BuildGridForAllTGID) ), 0);
   G__memfunc_setup("Clear",487,G__G__KVMultiDetexp_events_887_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVRTGIDManager::Clear) ), 0);
   G__memfunc_setup("DeleteTGID",891,G__G__KVMultiDetexp_events_887_0_10, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*))(&KVRTGIDManager::DeleteTGID) ), 0);
   G__memfunc_setup("GetGlobalListOfIDFunctions",2568,G__G__KVMultiDetexp_events_887_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVList), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (KVList* (*)())(&KVRTGIDManager::GetGlobalListOfIDFunctions) ), 0);
   G__memfunc_setup("GetTGIDfromIDGridManager",2250,G__G__KVMultiDetexp_events_887_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "U 'TList' - 0 - tgid_list", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TList*))(&KVRTGIDManager::GetTGIDfromIDGridManager) ), 0);
   G__memfunc_setup("ReadAsciiFile",1253,G__G__KVMultiDetexp_events_887_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const Char_t*))(&KVRTGIDManager::ReadAsciiFile) ), 0);
   G__memfunc_setup("SetIDFuncInTelescopes",2067,G__G__KVMultiDetexp_events_887_0_14, 121, -1, -1, 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - run", (char*)NULL, (void*) G__func2void( (void (*)(UInt_t))(&KVRTGIDManager::SetIDFuncInTelescopes) ), 0);
   G__memfunc_setup("UpdateListFromIDGridManager",2657,G__G__KVMultiDetexp_events_887_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&KVRTGIDManager::UpdateListFromIDGridManager) ), 0);
   G__memfunc_setup("WriteAsciiFile",1396,G__G__KVMultiDetexp_events_887_0_16, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"C - 'Char_t' 10 - filename U 'TCollection' - 10 '0' selection "
"g - 'Bool_t' 0 'kTRUE' update", (char*)NULL, (void*) G__func2void( (Int_t (*)(const Char_t*, const TCollection*, Bool_t))(&KVRTGIDManager::WriteAsciiFile) ), 0);
   G__memfunc_setup("GetIDTelescopesForTGID",2067,G__G__KVMultiDetexp_events_887_0_17, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TCollection), -1, 0, 1, 3, 1, 0, "U 'KVTGID' - 0 - -", (char*)NULL, (void*) G__func2void( (TCollection* (*)(KVTGID*))(&KVRTGIDManager::GetIDTelescopesForTGID) ), 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_887_0_18, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVRTGIDManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_887_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRTGIDManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_887_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVRTGIDManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_887_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVRTGIDManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_887_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_887_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRTGIDManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_887_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRTGIDManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_887_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRTGIDManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_887_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRTGIDManager::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVRTGIDManager", 1364, G__G__KVMultiDetexp_events_887_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVElasticScatterEvent(void) {
   /* KVElasticScatterEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenereKV2Body",1207,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineTargetNucleusFromLayer",2850,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "u 'KVString' - 0 '\"\"' layer_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PropagateInTargetLayer",2238,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewInteractionPointInTargetLayer",3279,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartEvents",1155,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeDiffusion",1317,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SortieDeCible",1278,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsProjNucSet",1193,G__G__KVMultiDetexp_events_896_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTargNucSet",1180,G__G__KVMultiDetexp_events_896_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTargMatSet",1176,G__G__KVMultiDetexp_events_896_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUpdated",899,G__G__KVMultiDetexp_events_896_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDetectionOn",1304,G__G__KVMultiDetexp_events_896_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChooseKinSol",1201,G__G__KVMultiDetexp_events_896_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' choix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVElasticScatterEvent",2110,G__G__KVMultiDetexp_events_896_0_15, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSystem",945,G__G__KVMultiDetexp_events_896_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBSystem' - 0 - sys", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSystem",945,G__G__KVMultiDetexp_events_896_0_17, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - zp i - 'Int_t' 0 - ap "
"d - 'Double_t' 0 - ekin i - 'Int_t' 0 - zt "
"i - 'Int_t' 0 - at", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTargNucleus",1433,G__G__KVMultiDetexp_events_896_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - nuc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetProjNucleus",1446,G__G__KVMultiDetexp_events_896_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - nuc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetectionOn",1416,G__G__KVMultiDetexp_events_896_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' On", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNucleus",1023,G__G__KVMultiDetexp_events_896_0_21, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNucleus), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNucleus",1023,G__G__KVMultiDetexp_events_896_0_22, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVNucleus), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ii", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetMaterial",1730,G__G__KVMultiDetexp_events_896_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVTarget' - 0 - targ g - 'Bool_t' 0 'kTRUE' IsRandomized", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTarget",903,G__G__KVMultiDetexp_events_896_0_24, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVTarget), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInteractionPointInTargetLayer",3269,G__G__KVMultiDetexp_events_896_0_25, 117, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TVector3), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetReconstructedNucleus",2404,G__G__KVMultiDetexp_events_896_0_26, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus), -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 - nucname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReconstructedEvent",2183,G__G__KVMultiDetexp_events_896_0_27, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSimEvent",1099,G__G__KVMultiDetexp_events_896_0_28, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G__KVMultiDetexp_events_896_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ValidateEntrance",1626,G__G__KVMultiDetexp_events_896_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDiffNucleus",1412,G__G__KVMultiDetexp_events_896_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 '\"PROJ\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRandomOption",1542,G__G__KVMultiDetexp_events_896_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"isotropic\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIsotropic",1144,G__G__KVMultiDetexp_events_896_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__G__KVMultiDetexp_events_896_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '1' ntimes g - 'Bool_t' 0 'kTRUE' reset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAnglesForDiffusion",2132,G__G__KVMultiDetexp_events_896_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Filter",614,G__G__KVMultiDetexp_events_896_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TreateEvent",1127,G__G__KVMultiDetexp_events_896_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineAngularRange",1794,G__G__KVMultiDetexp_events_896_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineAngularRange",1794,G__G__KVMultiDetexp_events_896_0_39, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - tmin d - 'Double_t' 0 - tmax "
"d - 'Double_t' 0 - pmin d - 'Double_t' 0 - pmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__G__KVMultiDetexp_events_896_0_40, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'KVString' - 0 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__KVMultiDetexp_events_896_0_41, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'KVString' - 0 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKV2Body",897,G__G__KVMultiDetexp_events_896_0_42, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KV2Body), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearTrees",1002,G__G__KVMultiDetexp_events_896_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetTrees",1030,G__G__KVMultiDetexp_events_896_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineTrees",1102,G__G__KVMultiDetexp_events_896_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrees",803,G__G__KVMultiDetexp_events_896_0_47, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVHashList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearHistos",1121,G__G__KVMultiDetexp_events_896_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineHistos",1221,G__G__KVMultiDetexp_events_896_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetHistos",1149,G__G__KVMultiDetexp_events_896_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHistos",922,G__G__KVMultiDetexp_events_896_0_51, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVHashList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_896_0_52, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVElasticScatterEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_896_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElasticScatterEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_896_0_54, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVElasticScatterEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_896_0_55, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVElasticScatterEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_896_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_896_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElasticScatterEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_896_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVElasticScatterEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_896_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElasticScatterEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_896_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVElasticScatterEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVElasticScatterEvent", 2110, G__G__KVMultiDetexp_events_896_0_64, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent), -1, 0, 1, 1, 1, 0, "u 'KVElasticScatterEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVElasticScatterEvent", 2236, G__G__KVMultiDetexp_events_896_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetexp_events_896_0_66, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent), -1, 1, 1, 1, 1, 0, "u 'KVElasticScatterEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVGeoImport(void) {
   /* KVGeoImport */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoImport));
   G__memfunc_setup("GetCurrentDetector",1853,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetector), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildDetector",1322,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetector), -1, 0, 2, 1, 4, 0, 
"u 'TString' - 0 - det_name U 'TGeoVolume' - 0 - det_vol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLayer",774,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'KVDetector' - 0 - - U 'TGeoVolume' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGeoImport",1079,G__G__KVMultiDetexp_events_900_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVGeoImport), -1, 0, 4, 1, 1, 0, 
"U 'TGeoManager' - 0 - - U 'KVIonRangeTable' - 0 - - "
"U 'KVMultiDetArray' - 0 - - g - 'Bool_t' 0 'kTRUE' create", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleEntersNewVolume",2375,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ImportGeometry",1479,G__G__KVMultiDetexp_events_900_0_6, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 '0.1' dTheta d - 'Double_t' 0 '1.0' dPhi "
"d - 'Double_t' 0 '0.0' ThetaMin d - 'Double_t' 0 '0.0' PhiMin "
"d - 'Double_t' 0 '180.0' ThetaMax d - 'Double_t' 0 '360.0' PhiMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastDetector",1530,G__G__KVMultiDetexp_events_900_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorPlugin",1749,G__G__KVMultiDetexp_events_900_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_900_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGeoImport::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_900_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGeoImport::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_900_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGeoImport::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_900_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGeoImport::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_900_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_900_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGeoImport::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_900_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGeoImport::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_900_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGeoImport::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_900_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGeoImport::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVGeoImport", 1205, G__G__KVMultiDetexp_events_900_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVEventFiltering(void) {
   /* KVEventFiltering */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering));
   G__memfunc_setup("KVEventFiltering",1607,G__G__KVMultiDetexp_events_938_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVEventFiltering",1607,G__G__KVMultiDetexp_events_938_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering), -1, 0, 1, 1, 1, 0, "u 'KVEventFiltering' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndAnalysis",1115,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitAnalysis",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenOutputFile",1443,G__G__KVMultiDetexp_events_938_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVDBSystem' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_938_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVEventFiltering::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_938_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVEventFiltering::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_938_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVEventFiltering::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_938_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVEventFiltering::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_938_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_938_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVEventFiltering::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_938_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVEventFiltering::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_938_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVEventFiltering::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_938_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVEventFiltering::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVEventFiltering", 1733, G__G__KVMultiDetexp_events_938_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVRawDataAnalyser(void) {
   /* KVRawDataAnalyser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVRawDataAnalyser));
   G__memfunc_setup("ProcessRun",1044,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clearallhistos",1498,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TCollection' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalEntriesToRead",2109,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitAnalysis",1240,G__G__KVMultiDetexp_events_943_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("InitRun",713,G__G__KVMultiDetexp_events_943_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Analysis",836,G__G__KVMultiDetexp_events_943_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("EndRun",588,G__G__KVMultiDetexp_events_943_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("EndAnalysis",1115,G__G__KVMultiDetexp_events_943_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDetectorEvent",1628,G__G__KVMultiDetexp_events_943_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNumber",1214,G__G__KVMultiDetexp_events_943_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventNumber",1419,G__G__KVMultiDetexp_events_943_0_12, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FileHasUnknownParameters",2464,G__G__KVMultiDetexp_events_943_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SubmitTask",1031,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,G__G__KVMultiDetexp_events_943_0_15, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 '\"MyOwnRawDataAnalyser\"' kvsname", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*))(&KVRawDataAnalyser::Make) ), 0);
   G__memfunc_setup("AddHisto",784,G__G__KVMultiDetexp_events_943_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - - C - 'Char_t' 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveSpectra",1121,G__G__KVMultiDetexp_events_943_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearAllHistos",1402,G__G__KVMultiDetexp_events_943_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindHisto",904,G__G__KVMultiDetexp_events_943_0_19, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TH1), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateTotalEventsToRead",2630,G__G__KVMultiDetexp_events_943_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_943_0_21, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVRawDataAnalyser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_943_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRawDataAnalyser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_943_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVRawDataAnalyser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_943_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVRawDataAnalyser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_943_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_943_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRawDataAnalyser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_943_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRawDataAnalyser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_943_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRawDataAnalyser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_943_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRawDataAnalyser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVRawDataAnalyser", 1794, G__G__KVMultiDetexp_events_943_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVElasticScatter(void) {
   /* KVElasticScatter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatter));
   G__memfunc_setup("KVElasticScatter",1596,G__G__KVMultiDetexp_events_944_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRun",609,G__G__KVMultiDetexp_events_944_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProjectile",1341,G__G__KVMultiDetexp_events_944_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - A", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__G__KVMultiDetexp_events_944_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetScatteringLayer",2468,G__G__KVMultiDetexp_events_944_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEbinning",1110,G__G__KVMultiDetexp_events_944_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '500' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__G__KVMultiDetexp_events_944_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateScattering",1954,G__G__KVMultiDetexp_events_944_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - N", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetExcitedState",2138,G__G__KVMultiDetexp_events_944_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDepth",789,G__G__KVMultiDetexp_events_944_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__KVMultiDetexp_events_944_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__G__KVMultiDetexp_events_944_0_12, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TH1F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__KVMultiDetexp_events_944_0_13, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TH1F), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__KVMultiDetexp_events_944_0_14, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TH1F), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDets",766,G__G__KVMultiDetexp_events_944_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEbinning",1098,G__G__KVMultiDetexp_events_944_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetexp_events_944_0_17, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVElasticScatter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetexp_events_944_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElasticScatter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetexp_events_944_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVElasticScatter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetexp_events_944_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVElasticScatter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__KVMultiDetexp_events_944_0_21, 85, G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__KVMultiDetexp_events_944_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__KVMultiDetexp_events_944_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetexp_events_944_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetexp_events_944_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElasticScatter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetexp_events_944_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVElasticScatter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetexp_events_944_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElasticScatter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetexp_events_944_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVElasticScatter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVElasticScatter", 1596, G__G__KVMultiDetexp_events_944_0_29, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatter), -1, 0, 1, 1, 1, 0, "u 'KVElasticScatter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVElasticScatter", 1722, G__G__KVMultiDetexp_events_944_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetexp_events_944_0_31, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVElasticScatter), -1, 1, 1, 1, 1, 0, "u 'KVElasticScatter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVMultiDetexp_events() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gMultiDetArray),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray),-1,-1,1,"gMultiDetArray=",0,(char*)NULL);
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVMultiDetexp_events() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVMultiDetexp_events() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVString = { "KVString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVSeqCollection = { "KVSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVRawDataReader = { "KVRawDataReader" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVDetector = { "KVDetector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVACQParam = { "KVACQParam" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVHashList = { "KVHashList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR = { "map<long,int,less<long>,allocator<pair<const long,int> > >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_GTGanilData = { "GTGanilData" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVGANILDataReader = { "KVGANILDataReader" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVList = { "KVList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVIonRangeTable = { "KVIonRangeTable" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVNucleus = { "KVNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVPosition = { "KVPosition" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVUniqueNameList = { "KVUniqueNameList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVNameValueList = { "KVNameValueList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVParticle = { "KVParticle" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVGeoStrucElement = { "KVGeoStrucElement" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVGroup = { "KVGroup" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus = { "KVReconstructedNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVIDGraph = { "KVIDGraph" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVIDGrid = { "KVIDGrid" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVMultiDetArray = { "KVMultiDetArray" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVIdentificationResult = { "KVIdentificationResult" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVIDTelescope = { "KVIDTelescope" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA = { "KVIDTelescope::$" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_TGeoManager = { "TGeoManager" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR = { "map<long,TGeoNavigatorArray*,less<long>,allocator<pair<const long,TGeoNavigatorArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVTarget = { "KVTarget" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVTelescope = { "KVTelescope" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent = { "KVReconstructedEvent" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVDetectorEvent = { "KVDetectorEvent" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVEvent = { "KVEvent" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVGeoNavigator = { "KVGeoNavigator" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVRangeTableGeoNavigator = { "KVRangeTableGeoNavigator" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVUpDater = { "KVUpDater" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLdA = { "KVMultiDetArray::$" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLEFilterType = { "KVMultiDetArray::EFilterType" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVLayer = { "KVLayer" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVRing = { "KVRing" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVASGroup = { "KVASGroup" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray = { "KVASMultiDetArray" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA = { "KVReconstructedNucleus::$" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVTGID = { "KVTGID" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVTGIDManager = { "KVTGIDManager" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVRTGIDManager = { "KVRTGIDManager" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KV2Body = { "KV2Body" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVDBSystem = { "KVDBSystem" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent = { "KVElasticScatterEvent" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVElasticScatterEventcLcLdA = { "KVElasticScatterEvent::$" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVDBRun = { "KVDBRun" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVGeoImport = { "KVGeoImport" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVEventSelector = { "KVEventSelector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVEventFiltering = { "KVEventFiltering" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVDataAnalyser = { "KVDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVRawDataAnalyser = { "KVRawDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetexp_eventsLN_KVElasticScatter = { "KVElasticScatter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVMultiDetexp_events() {
  G__G__KVMultiDetexp_eventsLN_TClass.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TBuffer.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMemberInspector.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TObject.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TNamed.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TCollection.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TString.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TList.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TObjArray.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVString.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVBase.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TSeqCollection.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TFile.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVSeqCollection.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVRawDataReader.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVDetector.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVACQParam.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVHashList.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TTree.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TH1.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TSelector.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_GTGanilData.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVGANILDataReader.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVList.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TVector3.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVIonRangeTable.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVNucleus.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TGeoVolume.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVPosition.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TLorentzVector.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVUniqueNameList.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVNameValueList.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVParticle.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVGeoStrucElement.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVGroup.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TGraph.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TH1F.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVIDGraph.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVIDGrid.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVMultiDetArray.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVIdentificationResult.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TH2.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVIDTelescope.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_TGeoManager.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVTarget.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVTelescope.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVDetectorEvent.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVEvent.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVGeoNavigator.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVRangeTableGeoNavigator.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVUpDater.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLdA.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLEFilterType.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVLayer.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVRing.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVASGroup.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVTGID.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVTGIDManager.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVRTGIDManager.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KV2Body.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVDBSystem.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVElasticScatterEventcLcLdA.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVDBRun.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVGeoImport.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVEventSelector.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVEventFiltering.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVDataAnalyser.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVRawDataAnalyser.tagnum = -1 ;
  G__G__KVMultiDetexp_eventsLN_KVElasticScatter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVMultiDetexp_events() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TCollection);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVRawDataReader);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVDetector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVACQParam);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVHashList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TSelector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_GTGanilData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVGANILDataReader),sizeof(KVGANILDataReader),-1,324864,"Reads GANIL acquisition files",G__setup_memvarKVGANILDataReader,G__setup_memfuncKVGANILDataReader);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TVector3);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVIonRangeTable);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVPosition);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVUniqueNameList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVNameValueList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVParticle);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVGeoStrucElement);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVGroup);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TGraph);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TH1F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleus),sizeof(KVReconstructedNucleus),-1,128768,"Nucleus detected by multidetector array",G__setup_memvarKVReconstructedNucleus,G__setup_memfuncKVReconstructedNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVIDGraph);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVIDGrid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArray),sizeof(KVMultiDetArray),-1,324864,"Base class for multidetector arrays",G__setup_memvarKVMultiDetArray,G__setup_memfuncKVMultiDetArray);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVIdentificationResult);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TH2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVIDTelescope),sizeof(KVIDTelescope),-1,324864,"A delta-E - E identification telescope",G__setup_memvarKVIDTelescope,G__setup_memfuncKVIDTelescope);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVIDTelescopecLcLdA);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_TGeoManager);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVTarget);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVTelescope);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVReconstructedEvent),sizeof(KVReconstructedEvent),-1,128256,"Base class for reconstructed experimental multiparticle events",G__setup_memvarKVReconstructedEvent,G__setup_memfuncKVReconstructedEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVDetectorEvent),sizeof(KVDetectorEvent),-1,324864,"List of hit groups in a multidetector array",G__setup_memvarKVDetectorEvent,G__setup_memfuncKVDetectorEvent);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVEvent);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVGeoNavigator);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVRangeTableGeoNavigator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVUpDater),sizeof(KVUpDater),-1,1280,"Abstract base class handling setting of multidetector parameters for each run",G__setup_memvarKVUpDater,G__setup_memfuncKVUpDater);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVMultiDetArraycLcLEFilterType),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVLayer);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVRing);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVASGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVASMultiDetArray),sizeof(KVASMultiDetArray),-1,324864,"Azimuthally-symmetric multidetector arrays",G__setup_memvarKVASMultiDetArray,G__setup_memfuncKVASMultiDetArray);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVReconstructedNucleuscLcLdA);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVTGID);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVTGIDManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVRTGIDManager),sizeof(KVRTGIDManager),-1,263424,"Run-dependant KVTGIDManager",G__setup_memvarKVRTGIDManager,G__setup_memfuncKVRTGIDManager);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KV2Body);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVDBSystem);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEvent),sizeof(KVElasticScatterEvent),-1,324864,"simulate ElasticScatterEvent and answer of a given (multi-)detector",G__setup_memvarKVElasticScatterEvent,G__setup_memfuncKVElasticScatterEvent);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVElasticScatterEventcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVDBRun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVGeoImport),sizeof(KVGeoImport),-1,324608,"Import a ROOT geometry into a KVMultiDetArray object",G__setup_memvarKVGeoImport,G__setup_memfuncKVGeoImport);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVEventSelector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVEventFiltering),sizeof(KVEventFiltering),-1,292608,"Filter simulated events with multidetector response",G__setup_memvarKVEventFiltering,G__setup_memfuncKVEventFiltering);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVDataAnalyser);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVRawDataAnalyser),sizeof(KVRawDataAnalyser),-1,292101,"Abstract base class for user analysis of raw data",G__setup_memvarKVRawDataAnalyser,G__setup_memfuncKVRawDataAnalyser);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetexp_eventsLN_KVElasticScatter),sizeof(KVElasticScatter),-1,263424,"Calculate elastic scattering spectra in multidetector arrays",G__setup_memvarKVElasticScatter,G__setup_memfuncKVElasticScatter);
}
extern "C" void G__cpp_setupG__KVMultiDetexp_events(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVMultiDetexp_events()");
  G__set_cpp_environmentG__KVMultiDetexp_events();
  G__cpp_setup_tagtableG__KVMultiDetexp_events();

  G__cpp_setup_inheritanceG__KVMultiDetexp_events();

  G__cpp_setup_typetableG__KVMultiDetexp_events();

  G__cpp_setup_memvarG__KVMultiDetexp_events();

  G__cpp_setup_memfuncG__KVMultiDetexp_events();
  G__cpp_setup_globalG__KVMultiDetexp_events();
  G__cpp_setup_funcG__KVMultiDetexp_events();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVMultiDetexp_events();
  return;
}
class G__cpp_setup_initG__KVMultiDetexp_events {
  public:
    G__cpp_setup_initG__KVMultiDetexp_events() { G__add_setup_func("G__KVMultiDetexp_events",(G__incsetup)(&G__cpp_setupG__KVMultiDetexp_events)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVMultiDetexp_events() { G__remove_setup_func("G__KVMultiDetexp_events"); }
};
G__cpp_setup_initG__KVMultiDetexp_events G__cpp_setup_initializerG__KVMultiDetexp_events;

