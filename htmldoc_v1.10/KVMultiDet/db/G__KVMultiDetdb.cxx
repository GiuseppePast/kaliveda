//
// File generated by rootcint at Wed Jul 29 15:45:16 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVMultiDetdb
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVMultiDetdb.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVDBRecord_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBRecord(void *p = 0);
   static void *newArray_KVDBRecord(Long_t size, void *p);
   static void delete_KVDBRecord(void *p);
   static void deleteArray_KVDBRecord(void *p);
   static void destruct_KVDBRecord(void *p);
   static void streamer_KVDBRecord(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBRecord*)
   {
      ::KVDBRecord *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBRecord >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBRecord", ::KVDBRecord::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/db/KVDBRecord.h", 28,
                  typeid(::KVDBRecord), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBRecord::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBRecord) );
      instance.SetNew(&new_KVDBRecord);
      instance.SetNewArray(&newArray_KVDBRecord);
      instance.SetDelete(&delete_KVDBRecord);
      instance.SetDeleteArray(&deleteArray_KVDBRecord);
      instance.SetDestructor(&destruct_KVDBRecord);
      instance.SetStreamerFunc(&streamer_KVDBRecord);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBRecord*)
   {
      return GenerateInitInstanceLocal((::KVDBRecord*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBRecord*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDBTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBTable(void *p = 0);
   static void *newArray_KVDBTable(Long_t size, void *p);
   static void delete_KVDBTable(void *p);
   static void deleteArray_KVDBTable(void *p);
   static void destruct_KVDBTable(void *p);
   static void streamer_KVDBTable(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBTable*)
   {
      ::KVDBTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBTable", ::KVDBTable::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/db/KVDBTable.h", 27,
                  typeid(::KVDBTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBTable::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBTable) );
      instance.SetNew(&new_KVDBTable);
      instance.SetNewArray(&newArray_KVDBTable);
      instance.SetDelete(&delete_KVDBTable);
      instance.SetDeleteArray(&deleteArray_KVDBTable);
      instance.SetDestructor(&destruct_KVDBTable);
      instance.SetStreamerFunc(&streamer_KVDBTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBTable*)
   {
      return GenerateInitInstanceLocal((::KVDBTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDBKey_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBKey(void *p = 0);
   static void *newArray_KVDBKey(Long_t size, void *p);
   static void delete_KVDBKey(void *p);
   static void deleteArray_KVDBKey(void *p);
   static void destruct_KVDBKey(void *p);
   static void streamer_KVDBKey(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBKey*)
   {
      ::KVDBKey *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBKey >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBKey", ::KVDBKey::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/db/KVDBKey.h", 28,
                  typeid(::KVDBKey), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBKey::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBKey) );
      instance.SetNew(&new_KVDBKey);
      instance.SetNewArray(&newArray_KVDBKey);
      instance.SetDelete(&delete_KVDBKey);
      instance.SetDeleteArray(&deleteArray_KVDBKey);
      instance.SetDestructor(&destruct_KVDBKey);
      instance.SetStreamerFunc(&streamer_KVDBKey);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBKey*)
   {
      return GenerateInitInstanceLocal((::KVDBKey*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBKey*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataBase(void *p = 0);
   static void *newArray_KVDataBase(Long_t size, void *p);
   static void delete_KVDataBase(void *p);
   static void deleteArray_KVDataBase(void *p);
   static void destruct_KVDataBase(void *p);
   static void streamer_KVDataBase(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataBase*)
   {
      ::KVDataBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataBase", ::KVDataBase::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/db/KVDataBase.h", 28,
                  typeid(::KVDataBase), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataBase::Dictionary, isa_proxy, 0,
                  sizeof(::KVDataBase) );
      instance.SetNew(&new_KVDataBase);
      instance.SetNewArray(&newArray_KVDataBase);
      instance.SetDelete(&delete_KVDataBase);
      instance.SetDeleteArray(&deleteArray_KVDataBase);
      instance.SetDestructor(&destruct_KVDataBase);
      instance.SetStreamerFunc(&streamer_KVDataBase);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataBase*)
   {
      return GenerateInitInstanceLocal((::KVDataBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDBSystem_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBSystem(void *p = 0);
   static void *newArray_KVDBSystem(Long_t size, void *p);
   static void delete_KVDBSystem(void *p);
   static void deleteArray_KVDBSystem(void *p);
   static void destruct_KVDBSystem(void *p);
   static void streamer_KVDBSystem(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBSystem*)
   {
      ::KVDBSystem *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBSystem >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBSystem", ::KVDBSystem::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/db/KVDBSystem.h", 29,
                  typeid(::KVDBSystem), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBSystem::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBSystem) );
      instance.SetNew(&new_KVDBSystem);
      instance.SetNewArray(&newArray_KVDBSystem);
      instance.SetDelete(&delete_KVDBSystem);
      instance.SetDeleteArray(&deleteArray_KVDBSystem);
      instance.SetDestructor(&destruct_KVDBSystem);
      instance.SetStreamerFunc(&streamer_KVDBSystem);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBSystem*)
   {
      return GenerateInitInstanceLocal((::KVDBSystem*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBSystem*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDBRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBRun(void *p = 0);
   static void *newArray_KVDBRun(Long_t size, void *p);
   static void delete_KVDBRun(void *p);
   static void deleteArray_KVDBRun(void *p);
   static void destruct_KVDBRun(void *p);
   static void streamer_KVDBRun(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBRun*)
   {
      ::KVDBRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBRun", ::KVDBRun::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/db/KVDBRun.h", 35,
                  typeid(::KVDBRun), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBRun::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBRun) );
      instance.SetNew(&new_KVDBRun);
      instance.SetNewArray(&newArray_KVDBRun);
      instance.SetDelete(&delete_KVDBRun);
      instance.SetDeleteArray(&deleteArray_KVDBRun);
      instance.SetDestructor(&destruct_KVDBRun);
      instance.SetStreamerFunc(&streamer_KVDBRun);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBRun*)
   {
      return GenerateInitInstanceLocal((::KVDBRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDBParameterSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBParameterSet(void *p = 0);
   static void *newArray_KVDBParameterSet(Long_t size, void *p);
   static void delete_KVDBParameterSet(void *p);
   static void deleteArray_KVDBParameterSet(void *p);
   static void destruct_KVDBParameterSet(void *p);
   static void streamer_KVDBParameterSet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBParameterSet*)
   {
      ::KVDBParameterSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBParameterSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBParameterSet", ::KVDBParameterSet::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/db/KVDBParameterSet.h", 23,
                  typeid(::KVDBParameterSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBParameterSet::Dictionary, isa_proxy, 1,
                  sizeof(::KVDBParameterSet) );
      instance.SetNew(&new_KVDBParameterSet);
      instance.SetNewArray(&newArray_KVDBParameterSet);
      instance.SetDelete(&delete_KVDBParameterSet);
      instance.SetDeleteArray(&deleteArray_KVDBParameterSet);
      instance.SetDestructor(&destruct_KVDBParameterSet);
      instance.SetStreamerFunc(&streamer_KVDBParameterSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBParameterSet*)
   {
      return GenerateInitInstanceLocal((::KVDBParameterSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBParameterSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVRunListLine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVRunListLine(void *p = 0);
   static void *newArray_KVRunListLine(Long_t size, void *p);
   static void delete_KVRunListLine(void *p);
   static void deleteArray_KVRunListLine(void *p);
   static void destruct_KVRunListLine(void *p);
   static void streamer_KVRunListLine(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVRunListLine*)
   {
      ::KVRunListLine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVRunListLine >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVRunListLine", ::KVRunListLine::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/db/KVRunListLine.h", 13,
                  typeid(::KVRunListLine), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVRunListLine::Dictionary, isa_proxy, 0,
                  sizeof(::KVRunListLine) );
      instance.SetNew(&new_KVRunListLine);
      instance.SetNewArray(&newArray_KVRunListLine);
      instance.SetDelete(&delete_KVRunListLine);
      instance.SetDeleteArray(&deleteArray_KVRunListLine);
      instance.SetDestructor(&destruct_KVRunListLine);
      instance.SetStreamerFunc(&streamer_KVRunListLine);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVRunListLine*)
   {
      return GenerateInitInstanceLocal((::KVRunListLine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVRunListLine*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVDBRecord::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBRecord::Class_Name()
{
   return "KVDBRecord";
}

//______________________________________________________________________________
const char *KVDBRecord::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBRecord*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBRecord::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBRecord*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBRecord::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBRecord*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBRecord::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBRecord*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDBTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBTable::Class_Name()
{
   return "KVDBTable";
}

//______________________________________________________________________________
const char *KVDBTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDBKey::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBKey::Class_Name()
{
   return "KVDBKey";
}

//______________________________________________________________________________
const char *KVDBKey::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBKey*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBKey::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBKey*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBKey::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBKey*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBKey::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBKey*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataBase::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataBase::Class_Name()
{
   return "KVDataBase";
}

//______________________________________________________________________________
const char *KVDataBase::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataBase::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataBase::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataBase::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataBase*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDBSystem::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBSystem::Class_Name()
{
   return "KVDBSystem";
}

//______________________________________________________________________________
const char *KVDBSystem::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBSystem*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBSystem::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBSystem*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBSystem::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBSystem*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBSystem::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBSystem*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDBRun::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBRun::Class_Name()
{
   return "KVDBRun";
}

//______________________________________________________________________________
const char *KVDBRun::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBRun::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBRun::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBRun::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBRun*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDBParameterSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBParameterSet::Class_Name()
{
   return "KVDBParameterSet";
}

//______________________________________________________________________________
const char *KVDBParameterSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBParameterSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBParameterSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBParameterSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBParameterSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBParameterSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBParameterSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBParameterSet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVRunListLine::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVRunListLine::Class_Name()
{
   return "KVRunListLine";
}

//______________________________________________________________________________
const char *KVRunListLine::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRunListLine*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVRunListLine::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRunListLine*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVRunListLine::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRunListLine*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVRunListLine::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRunListLine*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVDataBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataBase.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TFolder::Streamer(R__b);
      fDataSet.Streamer(R__b);
      fDataSetDir.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVDataBase::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDataBase::IsA(), kTRUE);
      TFolder::Streamer(R__b);
      fDataSet.Streamer(R__b);
      fDataSetDir.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDataBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataBase.
      TClass *R__cl = ::KVDataBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSet", &fDataSet);
      R__insp.InspectMember(fDataSet, "fDataSet.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSetDir", &fDataSetDir);
      R__insp.InspectMember(fDataSetDir, "fDataSetDir.");
      TFolder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataBase(void *p) {
      return  p ? new(p) ::KVDataBase : new ::KVDataBase;
   }
   static void *newArray_KVDataBase(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataBase[nElements] : new ::KVDataBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataBase(void *p) {
      delete ((::KVDataBase*)p);
   }
   static void deleteArray_KVDataBase(void *p) {
      delete [] ((::KVDataBase*)p);
   }
   static void destruct_KVDataBase(void *p) {
      typedef ::KVDataBase current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDataBase(TBuffer &buf, void *obj) {
      ((::KVDataBase*)obj)->::KVDataBase::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDataBase

//______________________________________________________________________________
void KVDBKey::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBKey.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBase::Streamer(R__b);
      R__b >> fIsUnique;
      R__b >> fSingle;
      fRecord.Streamer(R__b);
      R__b >> fLinks;
      R__b.CheckByteCount(R__s, R__c, KVDBKey::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBKey::IsA(), kTRUE);
      KVBase::Streamer(R__b);
      R__b << fIsUnique;
      R__b << fSingle;
      fRecord.Streamer(R__b);
      R__b << fLinks;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBKey::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBKey.
      TClass *R__cl = ::KVDBKey::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsUnique", &fIsUnique);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSingle", &fSingle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecord", &fRecord);
      R__insp.InspectMember(fRecord, "fRecord.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLinks", &fLinks);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBKey(void *p) {
      return  p ? new(p) ::KVDBKey : new ::KVDBKey;
   }
   static void *newArray_KVDBKey(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBKey[nElements] : new ::KVDBKey[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBKey(void *p) {
      delete ((::KVDBKey*)p);
   }
   static void deleteArray_KVDBKey(void *p) {
      delete [] ((::KVDBKey*)p);
   }
   static void destruct_KVDBKey(void *p) {
      typedef ::KVDBKey current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBKey(TBuffer &buf, void *obj) {
      ((::KVDBKey*)obj)->::KVDBKey::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBKey

//______________________________________________________________________________
void KVDBRecord::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBRecord.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TFolder::Streamer(R__b);
      fFullPathTable.Streamer(R__b);
      R__b >> fNumber;
      R__b.CheckByteCount(R__s, R__c, KVDBRecord::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBRecord::IsA(), kTRUE);
      TFolder::Streamer(R__b);
      fFullPathTable.Streamer(R__b);
      R__b << fNumber;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBRecord::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBRecord.
      TClass *R__cl = ::KVDBRecord::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullPathTable", &fFullPathTable);
      R__insp.InspectMember(fFullPathTable, "fFullPathTable.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumber", &fNumber);
      TFolder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBRecord(void *p) {
      return  p ? new(p) ::KVDBRecord : new ::KVDBRecord;
   }
   static void *newArray_KVDBRecord(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBRecord[nElements] : new ::KVDBRecord[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBRecord(void *p) {
      delete ((::KVDBRecord*)p);
   }
   static void deleteArray_KVDBRecord(void *p) {
      delete [] ((::KVDBRecord*)p);
   }
   static void destruct_KVDBRecord(void *p) {
      typedef ::KVDBRecord current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBRecord(TBuffer &buf, void *obj) {
      ((::KVDBRecord*)obj)->::KVDBRecord::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBRecord

//______________________________________________________________________________
void KVDBRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBRun.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDBRecord::Streamer(R__b);
      fQObject.Streamer(R__b);
      fParameters.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVDBRun::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBRun::IsA(), kTRUE);
      KVDBRecord::Streamer(R__b);
      fQObject.Streamer(R__b);
      fParameters.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBRun.
      TClass *R__cl = ::KVDBRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBlockSignals", &fBlockSignals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParameters", &fParameters);
      R__insp.InspectMember(fParameters, "fParameters.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDatime", &fDatime);
      R__insp.InspectMember(fDatime, "fDatime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKVVersion", &fKVVersion);
      R__insp.InspectMember(fKVVersion, "fKVVersion.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserName", &fUserName);
      R__insp.InspectMember(fUserName, "fUserName.");
      KVDBRecord::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBRun(void *p) {
      return  p ? new(p) ::KVDBRun : new ::KVDBRun;
   }
   static void *newArray_KVDBRun(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBRun[nElements] : new ::KVDBRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBRun(void *p) {
      delete ((::KVDBRun*)p);
   }
   static void deleteArray_KVDBRun(void *p) {
      delete [] ((::KVDBRun*)p);
   }
   static void destruct_KVDBRun(void *p) {
      typedef ::KVDBRun current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBRun(TBuffer &buf, void *obj) {
      ((::KVDBRun*)obj)->::KVDBRun::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBRun

//______________________________________________________________________________
void KVDBSystem::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBSystem.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDBRecord::Streamer(R__b);
      R__b >> fTarget;
      R__b >> fZbeam;
      R__b >> fAbeam;
      R__b >> fZtarget;
      R__b >> fAtarget;
      R__b >> fEbeam;
      R__b.CheckByteCount(R__s, R__c, KVDBSystem::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBSystem::IsA(), kTRUE);
      KVDBRecord::Streamer(R__b);
      R__b << fTarget;
      R__b << fZbeam;
      R__b << fAbeam;
      R__b << fZtarget;
      R__b << fAtarget;
      R__b << fEbeam;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBSystem::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBSystem.
      TClass *R__cl = ::KVDBSystem::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCinema", &fCinema);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTarget", &fTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunlist", &fRunlist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRuns", &fRuns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZbeam", &fZbeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbeam", &fAbeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZtarget", &fZtarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAtarget", &fAtarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEbeam", &fEbeam);
      KVDBRecord::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBSystem(void *p) {
      return  p ? new(p) ::KVDBSystem : new ::KVDBSystem;
   }
   static void *newArray_KVDBSystem(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBSystem[nElements] : new ::KVDBSystem[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBSystem(void *p) {
      delete ((::KVDBSystem*)p);
   }
   static void deleteArray_KVDBSystem(void *p) {
      delete [] ((::KVDBSystem*)p);
   }
   static void destruct_KVDBSystem(void *p) {
      typedef ::KVDBSystem current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBSystem(TBuffer &buf, void *obj) {
      ((::KVDBSystem*)obj)->::KVDBSystem::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBSystem

//______________________________________________________________________________
void KVDBTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBTable.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TFolder::Streamer(R__b);
      R__b >> fIsUnique;
      fFullPath.Streamer(R__b);
      fDefFormatNumRec.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVDBTable::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBTable::IsA(), kTRUE);
      TFolder::Streamer(R__b);
      R__b << fIsUnique;
      fFullPath.Streamer(R__b);
      fDefFormatNumRec.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBTable.
      TClass *R__cl = ::KVDBTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsUnique", &fIsUnique);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullPath", &fFullPath);
      R__insp.InspectMember(fFullPath, "fFullPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefFormatNumRec", &fDefFormatNumRec);
      R__insp.InspectMember(fDefFormatNumRec, "fDefFormatNumRec.");
      TFolder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBTable(void *p) {
      return  p ? new(p) ::KVDBTable : new ::KVDBTable;
   }
   static void *newArray_KVDBTable(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBTable[nElements] : new ::KVDBTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBTable(void *p) {
      delete ((::KVDBTable*)p);
   }
   static void deleteArray_KVDBTable(void *p) {
      delete [] ((::KVDBTable*)p);
   }
   static void destruct_KVDBTable(void *p) {
      typedef ::KVDBTable current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBTable(TBuffer &buf, void *obj) {
      ((::KVDBTable*)obj)->::KVDBTable::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBTable

//______________________________________________________________________________
void KVDBParameterSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBParameterSet.
      TClass *R__cl = ::KVDBParameterSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParamNumber", &fParamNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParameters", &fParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParamNames", &fParamNames);
      KVDBRecord::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBParameterSet(void *p) {
      return  p ? new(p) ::KVDBParameterSet : new ::KVDBParameterSet;
   }
   static void *newArray_KVDBParameterSet(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBParameterSet[nElements] : new ::KVDBParameterSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBParameterSet(void *p) {
      delete ((::KVDBParameterSet*)p);
   }
   static void deleteArray_KVDBParameterSet(void *p) {
      delete [] ((::KVDBParameterSet*)p);
   }
   static void destruct_KVDBParameterSet(void *p) {
      typedef ::KVDBParameterSet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBParameterSet(TBuffer &buf, void *obj) {
      ((::KVDBParameterSet*)obj)->::KVDBParameterSet::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBParameterSet

//______________________________________________________________________________
void KVRunListLine::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVRunListLine.

   ::Error("KVRunListLine::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void KVRunListLine::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVRunListLine.
      TClass *R__cl = ::KVRunListLine::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxNFields", &fMaxNFields);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLine", &fLine);
      R__insp.InspectMember(fLine, "fLine.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFieldsSet", &fFieldsSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFields", &fFields);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFieldKeys", &fFieldKeys);
      R__insp.InspectMember(fFieldKeys, "fFieldKeys.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunKeys", &fRunKeys);
      R__insp.InspectMember(fRunKeys, "fRunKeys.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndexList", &fIndexList);
      R__insp.InspectMember(fIndexList, "fIndexList.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVRunListLine(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVRunListLine : new ::KVRunListLine;
   }
   static void *newArray_KVRunListLine(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVRunListLine[nElements] : new ::KVRunListLine[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVRunListLine(void *p) {
      delete ((::KVRunListLine*)p);
   }
   static void deleteArray_KVRunListLine(void *p) {
      delete [] ((::KVRunListLine*)p);
   }
   static void destruct_KVRunListLine(void *p) {
      typedef ::KVRunListLine current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVRunListLine(TBuffer &buf, void *obj) {
      ((::KVRunListLine*)obj)->::KVRunListLine::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVRunListLine

/********************************************************
* G__KVMultiDetdb.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVMultiDetdb();

extern "C" void G__set_cpp_environmentG__KVMultiDetdb() {
  G__cpp_reset_tagtableG__KVMultiDetdb();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVMultiDetdb() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVDBRecord */
static int G__G__KVMultiDetdb_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBRecord* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBRecord[n];
     } else {
       p = new((void*) gvp) KVDBRecord[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBRecord;
     } else {
       p = new((void*) gvp) KVDBRecord;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBRecord* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBRecord((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVDBRecord((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBRecord((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVDBRecord((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBRecord*) G__getstructoffset())->GetKey((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBRecord*) G__getstructoffset())->GetKeys());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((KVDBRecord*) G__getstructoffset())->AddLink((const Char_t*) G__int(libp->para[0]), (KVDBRecord*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((KVDBRecord*) G__getstructoffset())->AddLink((const Char_t*) G__int(libp->para[0]), (KVDBRecord*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((KVDBRecord*) G__getstructoffset())->RemoveLink((const Char_t*) G__int(libp->para[0]), (KVDBRecord*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVDBRecord*) G__getstructoffset())->RemoveLink((const Char_t*) G__int(libp->para[0]), (KVDBRecord*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((KVDBRecord*) G__getstructoffset())->AddKey((KVDBKey*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((KVDBRecord*) G__getstructoffset())->AddKey((KVDBKey*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((KVDBRecord*) G__getstructoffset())->AddKey((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((KVDBRecord*) G__getstructoffset())->AddKey((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBRecord*) G__getstructoffset())->GetLink((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBRecord*) G__getstructoffset())->GetLinks((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRecord*) G__getstructoffset())->RemoveAllLinks((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBRecord*) G__getstructoffset())->GetTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRecord*) G__getstructoffset())->SetTable((KVDBTable*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVDBRecord*) G__getstructoffset())->GetNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRecord*) G__getstructoffset())->SetNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBRecord::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBRecord::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBRecord::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBRecord::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRecord*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBRecord::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBRecord::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBRecord::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_234_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBRecord::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBRecord G__TKVDBRecord;
static int G__G__KVMultiDetdb_234_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBRecord*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBRecord*) (soff+(sizeof(KVDBRecord)*i)))->~G__TKVDBRecord();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBRecord*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBRecord*) (soff))->~G__TKVDBRecord();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDBTable */
static int G__G__KVMultiDetdb_235_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBTable[n];
     } else {
       p = new((void*) gvp) KVDBTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBTable;
     } else {
       p = new((void*) gvp) KVDBTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBTable(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) KVDBTable(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBTable((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVDBTable((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBTable((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVDBTable((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBTable*) G__getstructoffset())->GetRecord((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBTable*) G__getstructoffset())->GetRecord((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBTable*) G__getstructoffset())->GetRecords());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDBTable*) G__getstructoffset())->AddRecord((KVDBRecord*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBTable*) G__getstructoffset())->RemoveRecord((KVDBRecord*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBTable*) G__getstructoffset())->SetFullPath((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBTable*) G__getstructoffset())->GetFullPath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBTable*) G__getstructoffset())->SetDefaultFormat(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDBTable*) G__getstructoffset())->HasDefaultFormat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_235_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBTable G__TKVDBTable;
static int G__G__KVMultiDetdb_235_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBTable*) (soff+(sizeof(KVDBTable)*i)))->~G__TKVDBTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBTable*) (soff))->~G__TKVDBTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDBKey */
static int G__G__KVMultiDetdb_252_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBKey* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBKey[n];
     } else {
       p = new((void*) gvp) KVDBKey[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBKey;
     } else {
       p = new((void*) gvp) KVDBKey;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBKey* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBKey(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (KVDBRecord*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) KVDBKey(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (KVDBRecord*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBKey((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVDBKey((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBKey((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVDBKey((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((KVDBKey*) G__getstructoffset())->LinkTo((KVDBRecord*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((KVDBKey*) G__getstructoffset())->LinkTo((KVDBRecord*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDBKey*) G__getstructoffset())->Unlink((KVDBRecord*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDBKey*) G__getstructoffset())->Unlink((KVDBRecord*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBKey*) G__getstructoffset())->UnlinkAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBKey*) G__getstructoffset())->GetLink((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBKey*) G__getstructoffset())->GetLinks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDBKey*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDBKey*) G__getstructoffset())->GetRecord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBKey*) G__getstructoffset())->SetParent((KVDBRecord*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBKey*) G__getstructoffset())->SetRecord((KVDBRecord*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBKey*) G__getstructoffset())->SetUniqueStatus((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBKey*) G__getstructoffset())->SetSingleStatus((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBKey::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBKey::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBKey::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBKey::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBKey*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBKey::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBKey::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBKey::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_252_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBKey::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetdb_252_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDBKey* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDBKey(*(KVDBKey*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBKey G__TKVDBKey;
static int G__G__KVMultiDetdb_252_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBKey*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBKey*) (soff+(sizeof(KVDBKey)*i)))->~G__TKVDBKey();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBKey*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBKey*) (soff))->~G__TKVDBKey();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdb_252_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBKey* dest = (KVDBKey*) G__getstructoffset();
   *dest = *(KVDBKey*) libp->para[0].ref;
   const KVDBKey& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataBase */
static int G__G__KVMultiDetdb_253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataBase[n];
     } else {
       p = new((void*) gvp) KVDataBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataBase;
     } else {
       p = new((void*) gvp) KVDataBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDataBase((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) KVDataBase((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataBase*) G__getstructoffset())->GetTable((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataBase*) G__getstructoffset())->GetTables());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataBase*) G__getstructoffset())->AddTable((KVDBTable*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((KVDataBase*) G__getstructoffset())->AddTable((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((KVDataBase*) G__getstructoffset())->AddTable((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataBase*) G__getstructoffset())->GetRecord((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataBase*) G__getstructoffset())->Build();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataBase*) G__getstructoffset())->cd();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataBase::MakeDataBase((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataBase*) G__getstructoffset())->Save((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataBase*) G__getstructoffset())->WriteObjects((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataBase*) G__getstructoffset())->ReadObjects((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataBase*) G__getstructoffset())->GetDataSetDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataBase*) G__getstructoffset())->SetDataSetDir((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_253_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataBase G__TKVDataBase;
static int G__G__KVMultiDetdb_253_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataBase*) (soff+(sizeof(KVDataBase)*i)))->~G__TKVDataBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataBase*) (soff))->~G__TKVDataBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDBSystem */
static int G__G__KVMultiDetdb_356_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBSystem* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBSystem[n];
     } else {
       p = new((void*) gvp) KVDBSystem[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBSystem;
     } else {
       p = new((void*) gvp) KVDBSystem;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBSystem* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBSystem((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVDBSystem((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBSystem*) G__getstructoffset())->GetTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->SetTarget((KVTarget*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVDBSystem*) G__getstructoffset())->GetZtarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVDBSystem*) G__getstructoffset())->GetAtarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVDBSystem*) G__getstructoffset())->GetZbeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVDBSystem*) G__getstructoffset())->GetAbeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVDBSystem*) G__getstructoffset())->GetZproj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVDBSystem*) G__getstructoffset())->GetAproj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVDBSystem*) G__getstructoffset())->GetEbeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVDBSystem*) G__getstructoffset())->GetEproj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVDBSystem*) G__getstructoffset())->GetTargetThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVDBSystem*) G__getstructoffset())->GetZtot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVDBSystem*) G__getstructoffset())->GetAtot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVDBSystem*) G__getstructoffset())->GetZVtot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVDBSystem*) G__getstructoffset())->GetPtot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVDBSystem*) G__getstructoffset())->GetEtot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVDBSystem*) G__getstructoffset())->GetECM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDBSystem*) G__getstructoffset())->IsCollision());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->SetZtarget((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->SetAtarget((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->SetZbeam((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->SetAbeam((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->SetEbeam((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->SetBeam((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBSystem*) G__getstructoffset())->GetRuns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDBSystem*) G__getstructoffset())->GetRunList(*(KVNumberList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDBSystem*) G__getstructoffset())->Save(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->Load(*(istream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDBSystem*) G__getstructoffset())->GetKinematics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->SetNumberRuns((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVDBSystem*) G__getstructoffset())->GetNumberRuns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->SetRuns(*(KVNumberList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->RemoveRun((KVDBRecord*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->RemoveRun((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->AddRun((KVDBRecord*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->AddRun((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->RemoveAllRuns();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDBSystem*) G__getstructoffset())->GetBatchName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBSystem::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBSystem::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBSystem::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBSystem::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBSystem*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBSystem::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBSystem::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBSystem::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_356_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBSystem::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBSystem G__TKVDBSystem;
static int G__G__KVMultiDetdb_356_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBSystem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBSystem*) (soff+(sizeof(KVDBSystem)*i)))->~G__TKVDBSystem();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBSystem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBSystem*) (soff))->~G__TKVDBSystem();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDBRun */
static int G__G__KVMultiDetdb_357_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBRun*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDBRun*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((KVDBRun*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((KVDBRun*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((KVDBRun*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((KVDBRun*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDBRun*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDBRun*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDBRun*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDBRun*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("EmitVA: more than 56 var args\n");
   }
      ((KVDBRun*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Destroyed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->ChangedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetKVVersion((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBRun*) G__getstructoffset())->GetKVVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetUserName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBRun*) G__getstructoffset())->GetUserName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Modified();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDBRun*) G__getstructoffset())->BlockSignals((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDBRun*) G__getstructoffset())->BlockSignals();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const KVDBRun*) G__getstructoffset())->Has((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const KVDBRun*) G__getstructoffset())->Has((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBRun[n];
     } else {
       p = new((void*) gvp) KVDBRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBRun;
     } else {
       p = new((void*) gvp) KVDBRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBRun((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) KVDBRun((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TDatime& obj = ((KVDBRun*) G__getstructoffset())->GetDatime();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDBRun*) G__getstructoffset())->GetDatimeString());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetDatime(*(TDatime*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBRun*) G__getstructoffset())->GetSystem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBRun*) G__getstructoffset())->GetSystemName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVDBRun*) G__getstructoffset())->GetEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVDBRun*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVDBRun*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBRun*) G__getstructoffset())->GetComments());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBRun*) G__getstructoffset())->GetStartDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBRun*) G__getstructoffset())->GetDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBRun*) G__getstructoffset())->GetEndDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBRun*) G__getstructoffset())->GetTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetEvents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetSize((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetComments(*(KVString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetStartDate(*(KVString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetDate(*(KVString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetEndDate(*(KVString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetSystem((KVDBSystem*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->UnsetSystem();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const KVDBRun*) G__getstructoffset())->WriteRunListLine(*(ostream*) libp->para[0].ref, (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const KVDBRun*) G__getstructoffset())->WriteRunListLine(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->ReadRunListLine(*(KVString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const KVDBRun*) G__getstructoffset())->WriteRunListHeader(*(ostream*) libp->para[0].ref, (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const KVDBRun*) G__getstructoffset())->WriteRunListHeader(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->SetScaler((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVDBRun*) G__getstructoffset())->GetScaler((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Set((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVDBRun*) G__getstructoffset())->Get((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->Set((const Char_t*) G__int(libp->para[0]), *(KVString*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBRun*) G__getstructoffset())->GetString((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_357_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBRun G__TKVDBRun;
static int G__G__KVMultiDetdb_357_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBRun*) (soff+(sizeof(KVDBRun)*i)))->~G__TKVDBRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBRun*) (soff))->~G__TKVDBRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDBParameterSet */
static int G__G__KVMultiDetdb_358_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBParameterSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBParameterSet[n];
     } else {
       p = new((void*) gvp) KVDBParameterSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBParameterSet;
     } else {
       p = new((void*) gvp) KVDBParameterSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBParameterSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBParameterSet(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) KVDBParameterSet(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVDBParameterSet*) G__getstructoffset())->GetParamNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const KVDBParameterSet*) G__getstructoffset())->GetParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const KVDBParameterSet*) G__getstructoffset())->GetParameter((UShort_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVDBParameterSet*) G__getstructoffset())->GetParameter());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVDBParameterSet*) G__getstructoffset())->GetParameter(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVDBParameterSet*) G__getstructoffset())->GetParamIndex(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBParameterSet*) G__getstructoffset())->GetParamNames());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((const KVDBParameterSet*) G__getstructoffset())->GetParamName((UShort_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((const KVDBParameterSet*) G__getstructoffset())->GetParamName());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDBParameterSet*) G__getstructoffset())->GetRuns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBParameterSet*) G__getstructoffset())->SetParameter((UShort_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBParameterSet*) G__getstructoffset())->SetParameter((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBParameterSet*) G__getstructoffset())->SetParameter(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("SetParameters: more than 56 var args\n");
   }
      ((KVDBParameterSet*) G__getstructoffset())->SetParameters((Double_t) G__double(libp->para[0]), dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[1], lval[2], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBParameterSet*) G__getstructoffset())->SetParamName((UShort_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("SetParamNames: more than 56 var args\n");
   }
      ((KVDBParameterSet*) G__getstructoffset())->SetParamNames((const Char_t*) G__int(libp->para[0]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[2], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBParameterSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBParameterSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBParameterSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBParameterSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBParameterSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBParameterSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBParameterSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBParameterSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_358_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBParameterSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBParameterSet G__TKVDBParameterSet;
static int G__G__KVMultiDetdb_358_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBParameterSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBParameterSet*) (soff+(sizeof(KVDBParameterSet)*i)))->~G__TKVDBParameterSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBParameterSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBParameterSet*) (soff))->~G__TKVDBParameterSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVRunListLine */
static int G__G__KVMultiDetdb_359_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVRunListLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRunListLine[n];
     } else {
       p = new((void*) gvp) KVRunListLine[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRunListLine;
     } else {
       p = new((void*) gvp) KVRunListLine;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVRunListLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVRunListLine*) G__getstructoffset())->GetField((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVRunListLine*) G__getstructoffset())->GetFieldString((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVRunListLine*) G__getstructoffset())->GetIntField((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVRunListLine*) G__getstructoffset())->GetFloatField((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRunListLine*) G__getstructoffset())->SetFields();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVRunListLine*) G__getstructoffset())->FieldsSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRunListLine*) G__getstructoffset())->SetLine((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRunListLine*) G__getstructoffset())->SetLine(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRunListLine*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVRunListLine*) G__getstructoffset())->BreakLineIntoFields((const char) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVRunListLine*) G__getstructoffset())->HasFieldValue((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVRunListLine*) G__getstructoffset())->HasField((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVRunListLine*) G__getstructoffset())->FieldContains((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVRunListLine*) G__getstructoffset())->IsFloat((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVRunListLine*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVRunListLine*) G__getstructoffset())->PrintFieldValue((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((KVRunListLine*) G__getstructoffset())->GetTrigger((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((KVRunListLine*) G__getstructoffset())->GetTrigger((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((KVRunListLine*) G__getstructoffset())->GetTrigger());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("SetFieldKeys: more than 56 var args\n");
   }
      ((KVRunListLine*) G__getstructoffset())->SetFieldKeys((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("SetRunKeys: more than 56 var args\n");
   }
      ((KVRunListLine*) G__getstructoffset())->SetRunKeys((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVRunListLine*) G__getstructoffset())->IsFieldHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVRunListLine*) G__getstructoffset())->GoodRunLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVRunListLine::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRunListLine::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVRunListLine::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRunListLine::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVRunListLine*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRunListLine*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRunListLine*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRunListLine*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRunListLine::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRunListLine::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRunListLine::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdb_359_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRunListLine::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVRunListLine G__TKVRunListLine;
static int G__G__KVMultiDetdb_359_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVRunListLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVRunListLine*) (soff+(sizeof(KVRunListLine)*i)))->~G__TKVRunListLine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVRunListLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVRunListLine*) (soff))->~G__TKVRunListLine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVDBRecord */

/* KVDBTable */

/* KVDBKey */

/* KVDataBase */

/* KVDBSystem */

/* KVDBRun */

/* KVDBParameterSet */

/* KVRunListLine */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVMultiDetdb {
 public:
  G__Sizep2memfuncG__KVMultiDetdb(): p(&G__Sizep2memfuncG__KVMultiDetdb::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVMultiDetdb::*p)();
};

size_t G__get_sizep2memfuncG__KVMultiDetdb()
{
  G__Sizep2memfuncG__KVMultiDetdb a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVMultiDetdb() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord))) {
     KVDBRecord *G__Lderived;
     G__Lderived=(KVDBRecord*)0x1000;
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable))) {
     KVDBTable *G__Lderived;
     G__Lderived=(KVDBTable*)0x1000;
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey))) {
     KVDBKey *G__Lderived;
     G__Lderived=(KVDBKey*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase))) {
     KVDataBase *G__Lderived;
     G__Lderived=(KVDataBase*)0x1000;
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem))) {
     KVDBSystem *G__Lderived;
     G__Lderived=(KVDBSystem*)0x1000;
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun))) {
     KVDBRun *G__Lderived;
     G__Lderived=(KVDBRun*)0x1000;
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet))) {
     KVDBParameterSet *G__Lderived;
     G__Lderived=(KVDBParameterSet*)0x1000;
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet),G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVMultiDetdb() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVDBRecord */
static void G__setup_memvarKVDBRecord(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord));
   { KVDBRecord *p; p=(KVDBRecord*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TString),-1,-1,2,"fFullPathTable=",0,"full path to parent table in folder structure");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumber=",0,"number which can be used to identify/sort record");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDBTable */
static void G__setup_memvarKVDBTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable));
   { KVDBTable *p; p=(KVDBTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsUnique=",0,"Must each record name be unique ?");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TString),-1,-1,2,"fFullPath=",0,"full path to table in folder structure");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TString),-1,-1,2,"fDefFormatNumRec=",0,"default formatting for names of numbered records");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDBKey */
static void G__setup_memvarKVDBKey(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey));
   { KVDBKey *p; p=(KVDBKey*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsUnique=",0,"Can the list contains more than 1 object the same name");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSingle=",0,"Can the list contain more than 1 object in the list");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TRef),-1,-1,2,"fRecord=",0,"direct pointer to parent record");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVRList),-1,-1,2,"fLinks=",0,"->list of cross-referenced records");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataBase */
static void G__setup_memvarKVDataBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase));
   { KVDataBase *p; p=(KVDataBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TString),-1,-1,2,"fDataSet=",0,"the name of the dataset to which this database is associated");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TString),-1,-1,2,"fDataSetDir=",0,"the directory containing the dataset files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDBSystem */
static void G__setup_memvarKVDBSystem(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem));
   { KVDBSystem *p; p=(KVDBSystem*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KV2Body),-1,-1,4,"fCinema=",0,"! used to calculate kinematics of entrance channel");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVTarget),-1,-1,4,"fTarget=",0,"-> physical target used for experiment run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVList),-1,-1,4,"fRunlist=",0,"!used to store pointer to sorted list of runs");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRuns=",0,"!temporary variable used to stock number of associated runs");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fZbeam=",0,"charge of the projectile nucleus");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fAbeam=",0,"Mass of the projectile nucleus");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fZtarget=",0,"charge of the target nucleus");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fAtarget=",0,"Mass of the target nucleus");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fEbeam=",0,"Energy of the beam in MeV/nucleon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDBRun */
static void G__setup_memvarKVDBRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun));
   { KVDBRun *p; p=(KVDBRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBlockSignals=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVNameValueList),-1,-1,2,"fParameters=",0,"list of named parameters for run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TDatime),-1,-1,2,"fDatime=",0,"!set dynamically with date&time of ROOT file corresponding to run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TString),-1,-1,2,"fKVVersion=",0,"!set dynamically with KaliVeda version used to generate ROOT file corresponding to run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TString),-1,-1,2,"fUserName=",0,"!set dynamically with name of user who generated ROOT file corresponding to run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDBParameterSet */
static void G__setup_memvarKVDBParameterSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet));
   { KVDBParameterSet *p; p=(KVDBParameterSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fParamNumber=",0,"number of parameters");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fParameters=",0,"[fParamNumber] parameter array");
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"fParamNames=",0,"[fParamNumber][32] Names of parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVRunListLine */
static void G__setup_memvarKVRunListLine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVRunListLine));
   { KVRunListLine *p; p=(KVRunListLine*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxNFields=",0,"maximum allowed number of fields i.e. size of TObjArray fFields");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TString),-1,-1,4,"fLine=",0,"line to analyse");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFieldsSet=",0,"flag set once fields have been set");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TObjArray),-1,-1,4,"fFields=",0,"array of all fields after break down of fLine");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVList),-1,-1,4,"fFieldKeys=",0,"key words used to recognise field headings");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVList),-1,-1,4,"fRunKeys=",0,"fields that must be present (have a value) for a line to be considered a \"good run line\"");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVNameValueList),-1,-1,2,"fIndexList=",0,"list of integer indexes corresponding to field names");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVMultiDetdb() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVDBRecord(void) {
   /* KVDBRecord */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord));
   G__memfunc_setup("KVDBRecord",902,G__G__KVMultiDetdb_234_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBRecord",902,G__G__KVMultiDetdb_234_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKey",585,G__G__KVMultiDetdb_234_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKeys",700,G__G__KVMultiDetdb_234_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddLink",663,G__G__KVMultiDetdb_234_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - key_name U 'KVDBRecord' - 0 - rec "
"g - 'Bool_t' 0 'kTRUE' linkback", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveLink",1020,G__G__KVMultiDetdb_234_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - key_name U 'KVDBRecord' - 0 - rec "
"g - 'Bool_t' 0 'kTRUE' linkback", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddKey",562,G__G__KVMultiDetdb_234_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'KVDBKey' - 0 - key g - 'Bool_t' 0 'kTRUE' check", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddKey",562,G__G__KVMultiDetdb_234_0_8, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title "
"g - 'Bool_t' 0 'kTRUE' check", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLink",686,G__G__KVMultiDetdb_234_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord), -1, 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - key C - 'Char_t' 10 - link", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLinks",801,G__G__KVMultiDetdb_234_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVRList), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveAllLinks",1416,G__G__KVMultiDetdb_234_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTable",776,G__G__KVMultiDetdb_234_0_12, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTable",788,G__G__KVMultiDetdb_234_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBTable' - 10 - table", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"*\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumber",905,G__G__KVMultiDetdb_234_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumber",917,G__G__KVMultiDetdb_234_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdb_234_0_19, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBRecord::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdb_234_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBRecord::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdb_234_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBRecord::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdb_234_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBRecord::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdb_234_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdb_234_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBRecord::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdb_234_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBRecord::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdb_234_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBRecord::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdb_234_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBRecord::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBRecord", 1028, G__G__KVMultiDetdb_234_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDBTable(void) {
   /* KVDBTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable));
   G__memfunc_setup("KVDBTable",783,G__G__KVMultiDetdb_235_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBTable",783,G__G__KVMultiDetdb_235_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 '\"\"' title "
"g - 'Bool_t' 0 'kFALSE' unique", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecord",895,G__G__KVMultiDetdb_235_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - rec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRecord",895,G__G__KVMultiDetdb_235_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRecords",1010,G__G__KVMultiDetdb_235_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVSeqCollection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddRecord",872,G__G__KVMultiDetdb_235_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVDBRecord' - 0 - add", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveRecord",1229,G__G__KVMultiDetdb_235_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRecord' - 0 - add", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"*\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFullPath",1100,G__G__KVMultiDetdb_235_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - path", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullPath",1088,G__G__KVMultiDetdb_235_0_10, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDefaultFormat",1626,G__G__KVMultiDetdb_235_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasDefaultFormat",1610,G__G__KVMultiDetdb_235_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdb_235_0_13, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdb_235_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdb_235_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdb_235_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdb_235_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdb_235_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdb_235_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdb_235_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdb_235_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBTable::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBTable", 909, G__G__KVMultiDetdb_235_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDBKey(void) {
   /* KVDBKey */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey));
   G__memfunc_setup("AddLink",663,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'KVDBRecord' - 0 - rec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveLink",1020,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'KVDBRecord' - 0 - rec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVDBKey",592,G__G__KVMultiDetdb_252_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBKey",592,G__G__KVMultiDetdb_252_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 '\"\"' title "
"U 'KVDBRecord' - 0 '0' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LinkTo",593,G__G__KVMultiDetdb_252_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'KVDBRecord' - 0 - rec g - 'Bool_t' 0 'kTRUE' linkback", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unlink",625,G__G__KVMultiDetdb_252_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVDBRecord' - 0 - rec g - 'Bool_t' 0 'kTRUE' linkback", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UnlinkAll",906,G__G__KVMultiDetdb_252_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLink",686,G__G__KVMultiDetdb_252_0_8, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - link", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLinks",801,G__G__KVMultiDetdb_252_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVRList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParent",906,G__G__KVMultiDetdb_252_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRecord",895,G__G__KVMultiDetdb_252_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParent",918,G__G__KVMultiDetdb_252_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRecord' - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRecord",907,G__G__KVMultiDetdb_252_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRecord' - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUniqueStatus",1575,G__G__KVMultiDetdb_252_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - unique", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSingleStatus",1554,G__G__KVMultiDetdb_252_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - single", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdb_252_0_16, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBKey::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdb_252_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBKey::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdb_252_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBKey::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdb_252_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBKey::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdb_252_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdb_252_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBKey::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdb_252_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBKey::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdb_252_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBKey::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdb_252_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBKey::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDBKey", 592, G__G__KVMultiDetdb_252_0_28, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey), -1, 0, 1, 1, 1, 0, "u 'KVDBKey' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDBKey", 718, G__G__KVMultiDetdb_252_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdb_252_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBKey), -1, 1, 1, 1, 1, 0, "u 'KVDBKey' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataBase(void) {
   /* KVDataBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase));
   G__memfunc_setup("KVDataBase",918,G__G__KVMultiDetdb_253_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDataBase",918,G__G__KVMultiDetdb_253_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTable",776,G__G__KVMultiDetdb_253_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - table", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTables",891,G__G__KVMultiDetdb_253_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTable",753,G__G__KVMultiDetdb_253_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVDBTable' - 0 - table", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTable",753,G__G__KVMultiDetdb_253_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title "
"g - 'Bool_t' 0 'kFALSE' unique", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRecord",895,G__G__KVMultiDetdb_253_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRecord), -1, 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - table_name C - 'Char_t' 10 - rec_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Build",496,G__G__KVMultiDetdb_253_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,G__G__KVMultiDetdb_253_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeDataBase",1139,G__G__KVMultiDetdb_253_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase), -1, 0, 2, 3, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - datasetdir", (char*)NULL, (void*) G__func2void( (KVDataBase* (*)(const Char_t*, const Char_t*))(&KVDataBase::MakeDataBase) ), 0);
   G__memfunc_setup("Save",399,G__G__KVMultiDetdb_253_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteObjects",1237,G__G__KVMultiDetdb_253_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadObjects",1094,G__G__KVMultiDetdb_253_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSetDir",1253,G__G__KVMultiDetdb_253_0_15, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataSetDir",1265,G__G__KVMultiDetdb_253_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdb_253_0_17, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdb_253_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdb_253_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdb_253_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdb_253_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdb_253_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdb_253_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdb_253_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdb_253_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDataBase", 1044, G__G__KVMultiDetdb_253_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDBSystem(void) {
   /* KVDBSystem */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem));
   G__memfunc_setup("_GetRuns",807,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVList), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunsTable",1200,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBTable), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBSystem",940,G__G__KVMultiDetdb_356_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBSystem",940,G__G__KVMultiDetdb_356_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTarget",903,G__G__KVMultiDetdb_356_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVTarget), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTarget",915,G__G__KVMultiDetdb_356_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVTarget' - 0 - targ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"*\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZtarget",1025,G__G__KVMultiDetdb_356_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAtarget",1000,G__G__KVMultiDetdb_356_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZbeam",783,G__G__KVMultiDetdb_356_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbeam",758,G__G__KVMultiDetdb_356_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZproj",821,G__G__KVMultiDetdb_356_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAproj",796,G__G__KVMultiDetdb_356_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEbeam",762,G__G__KVMultiDetdb_356_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEproj",800,G__G__KVMultiDetdb_356_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetThickness",1843,G__G__KVMultiDetdb_356_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZtot",721,G__G__KVMultiDetdb_356_0_17, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAtot",696,G__G__KVMultiDetdb_356_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZVtot",807,G__G__KVMultiDetdb_356_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtot",711,G__G__KVMultiDetdb_356_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEtot",700,G__G__KVMultiDetdb_356_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetECM",501,G__G__KVMultiDetdb_356_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCollision",1128,G__G__KVMultiDetdb_356_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZtarget",1037,G__G__KVMultiDetdb_356_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAtarget",1012,G__G__KVMultiDetdb_356_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZbeam",795,G__G__KVMultiDetdb_356_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbeam",770,G__G__KVMultiDetdb_356_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEbeam",774,G__G__KVMultiDetdb_356_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeam",673,G__G__KVMultiDetdb_356_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - z h - 'UInt_t' 0 - a "
"f - 'Float_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRuns",712,G__G__KVMultiDetdb_356_0_30, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunList",1009,G__G__KVMultiDetdb_356_0_31, 121, -1, -1, 0, 1, 1, 1, 8, "u 'KVNumberList' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Save",399,G__G__KVMultiDetdb_356_0_32, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Load",384,G__G__KVMultiDetdb_356_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKinematics",1320,G__G__KVMultiDetdb_356_0_35, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KV2Body), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumberRuns",1341,G__G__KVMultiDetdb_356_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberRuns",1329,G__G__KVMultiDetdb_356_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRuns",724,G__G__KVMultiDetdb_356_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVNumberList' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveRun",931,G__G__KVMultiDetdb_356_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRecord' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveRun",931,G__G__KVMultiDetdb_356_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRun",574,G__G__KVMultiDetdb_356_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRecord' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRun",574,G__G__KVMultiDetdb_356_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveAllRuns",1327,G__G__KVMultiDetdb_356_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBatchName",1155,G__G__KVMultiDetdb_356_0_45, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdb_356_0_46, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBSystem::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdb_356_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBSystem::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdb_356_0_48, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBSystem::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdb_356_0_49, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBSystem::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdb_356_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdb_356_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBSystem::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdb_356_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBSystem::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdb_356_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBSystem::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdb_356_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBSystem::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBSystem", 1066, G__G__KVMultiDetdb_356_0_58, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDBRun(void) {
   /* KVDBRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun));
   G__memfunc_setup("GetListOfSignals",1602,G__G__KVMultiDetdb_357_0_1, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__G__KVMultiDetdb_357_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__G__KVMultiDetdb_357_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,G__G__KVMultiDetdb_357_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowPriority",1172,G__G__KVMultiDetdb_357_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitVA",550,G__G__KVMultiDetdb_357_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__KVMultiDetdb_357_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,G__G__KVMultiDetdb_357_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangedBy",869,G__G__KVMultiDetdb_357_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Message",709,G__G__KVMultiDetdb_357_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKVVersion",1203,G__G__KVMultiDetdb_357_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - V", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKVVersion",1191,G__G__KVMultiDetdb_357_0_27, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUserName",1100,G__G__KVMultiDetdb_357_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - U", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUserName",1088,G__G__KVMultiDetdb_357_0_29, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Modified",801,G__G__KVMultiDetdb_357_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BlockSignals",1212,G__G__KVMultiDetdb_357_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' yes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Has",284,G__G__KVMultiDetdb_357_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - param g - 'Bool_t' 0 'kTRUE' check_whitespace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBRun",604,G__G__KVMultiDetdb_357_0_33, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBRun",604,G__G__KVMultiDetdb_357_0_34, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBRun), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - number C - 'Char_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumber",917,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDatime",884,G__G__KVMultiDetdb_357_0_36, 117, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TDatime), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDatimeString",1515,G__G__KVMultiDetdb_357_0_37, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDatime",896,G__G__KVMultiDetdb_357_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TDatime' - 1 - dat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSystem",933,G__G__KVMultiDetdb_357_0_39, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBSystem), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSystemName",1318,G__G__KVMultiDetdb_357_0_40, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvents",917,G__G__KVMultiDetdb_357_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__G__KVMultiDetdb_357_0_42, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__G__KVMultiDetdb_357_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetComments",1126,G__G__KVMultiDetdb_357_0_44, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartDate",1196,G__G__KVMultiDetdb_357_0_45, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDate",670,G__G__KVMultiDetdb_357_0_46, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndDate",949,G__G__KVMultiDetdb_357_0_47, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTarget",903,G__G__KVMultiDetdb_357_0_48, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVTarget), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvents",929,G__G__KVMultiDetdb_357_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - evt_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__G__KVMultiDetdb_357_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSize",711,G__G__KVMultiDetdb_357_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetComments",1138,G__G__KVMultiDetdb_357_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVString' - 11 - comments", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartDate",1208,G__G__KVMultiDetdb_357_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVString' - 11 - date", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDate",682,G__G__KVMultiDetdb_357_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVString' - 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEndDate",961,G__G__KVMultiDetdb_357_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVString' - 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSystem",945,G__G__KVMultiDetdb_357_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBSystem' - 0 - system", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UnsetSystem",1172,G__G__KVMultiDetdb_357_0_57, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteRunListLine",1636,G__G__KVMultiDetdb_357_0_59, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - c - 'Char_t' 0 ''|'' delim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadRunListLine",1493,G__G__KVMultiDetdb_357_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVString' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteRunListHeader",1829,G__G__KVMultiDetdb_357_0_61, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - c - 'Char_t' 0 ''|'' delim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetScaler",902,G__G__KVMultiDetdb_357_0_62, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScaler",890,G__G__KVMultiDetdb_357_0_63, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set",300,G__G__KVMultiDetdb_357_0_64, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - param d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__G__KVMultiDetdb_357_0_65, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "C - 'Char_t' 10 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__KVMultiDetdb_357_0_66, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - param u 'KVString' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__G__KVMultiDetdb_357_0_67, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 9, "C - 'Char_t' 10 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdb_357_0_68, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdb_357_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdb_357_0_70, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdb_357_0_71, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdb_357_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdb_357_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdb_357_0_77, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdb_357_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdb_357_0_79, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBRun::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBRun", 730, G__G__KVMultiDetdb_357_0_80, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDBParameterSet(void) {
   /* KVDBParameterSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet));
   G__memfunc_setup("KVDBParameterSet",1524,G__G__KVMultiDetdb_358_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBParameterSet",1524,G__G__KVMultiDetdb_358_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDBParameterSet), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - type "
"r - 'UShort_t' 0 - pnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParamNumber",1402,G__G__KVMultiDetdb_358_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameters",1332,G__G__KVMultiDetdb_358_0_4, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,G__G__KVMultiDetdb_358_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "r - 'UShort_t' 0 '0' i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,G__G__KVMultiDetdb_358_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParamIndex",1289,G__G__KVMultiDetdb_358_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParamNames",1285,G__G__KVMultiDetdb_358_0_8, 67, -1, G__defined_typename("Char_t"), 2, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParamName",1170,G__G__KVMultiDetdb_358_0_9, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 8, "r - 'UShort_t' 0 '0' i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRuns",712,G__G__KVMultiDetdb_358_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVRList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameter",1229,G__G__KVMultiDetdb_358_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - 'UShort_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameter",1229,G__G__KVMultiDetdb_358_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameter",1229,G__G__KVMultiDetdb_358_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameters",1344,G__G__KVMultiDetdb_358_0_14, 121, -1, -1, 0, 1, 8, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParamName",1182,G__G__KVMultiDetdb_358_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - 'UShort_t' 0 - i C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParamNames",1297,G__G__KVMultiDetdb_358_0_16, 121, -1, -1, 0, 1, 8, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdb_358_0_18, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBParameterSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdb_358_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBParameterSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdb_358_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBParameterSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdb_358_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBParameterSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdb_358_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdb_358_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBParameterSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdb_358_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBParameterSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdb_358_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBParameterSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdb_358_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBParameterSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBParameterSet", 1650, G__G__KVMultiDetdb_358_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVRunListLine(void) {
   /* KVRunListLine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVRunListLine));
   G__memfunc_setup("GetFieldIndex",1276,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "C - 'Char_t' 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVRunListLine",1274,G__G__KVMultiDetdb_359_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVRunListLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetField",772,G__G__KVMultiDetdb_359_0_3, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 9, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFieldString",1403,G__G__KVMultiDetdb_359_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TObjString), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntField",1071,G__G__KVMultiDetdb_359_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFloatField",1274,G__G__KVMultiDetdb_359_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFields",899,G__G__KVMultiDetdb_359_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FieldsSet",899,G__G__KVMultiDetdb_359_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLine",692,G__G__KVMultiDetdb_359_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLine",692,G__G__KVMultiDetdb_359_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__G__KVMultiDetdb_359_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BreakLineIntoFields",1886,G__G__KVMultiDetdb_359_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "c - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasFieldValue",1277,G__G__KVMultiDetdb_359_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - 'Char_t' 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasField",768,G__G__KVMultiDetdb_359_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - 'Char_t' 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FieldContains",1315,G__G__KVMultiDetdb_359_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFloat",690,G__G__KVMultiDetdb_359_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__KVMultiDetdb_359_0_17, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintFieldValue",1518,G__G__KVMultiDetdb_359_0_18, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigger",1012,G__G__KVMultiDetdb_359_0_19, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"Trigger\"' field_name C - 'Char_t' 10 '\"M>=%d\"' fmt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFieldKeys",1196,G__G__KVMultiDetdb_359_0_20, 121, -1, -1, 0, 2, 8, 1, 0, 
"i - 'Int_t' 0 - nkeys C - 'Char_t' 10 - key1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunKeys",1021,G__G__KVMultiDetdb_359_0_21, 121, -1, -1, 0, 2, 8, 1, 0, 
"i - 'Int_t' 0 - nkeys C - 'Char_t' 10 - key1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFieldHeader",1257,G__G__KVMultiDetdb_359_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GoodRunLine",1094,G__G__KVMultiDetdb_359_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdb_359_0_24, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVRunListLine::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdb_359_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRunListLine::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdb_359_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVRunListLine::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdb_359_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVRunListLine::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__KVMultiDetdb_359_0_28, 85, G__get_linked_tagnum(&G__G__KVMultiDetdbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__KVMultiDetdb_359_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__KVMultiDetdb_359_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdb_359_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdb_359_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRunListLine::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdb_359_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRunListLine::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdb_359_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRunListLine::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdb_359_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRunListLine::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVRunListLine", 1400, G__G__KVMultiDetdb_359_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVMultiDetdb() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)(&gDataBase),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdbLN_KVDataBase),-1,-1,1,"gDataBase=",0,(char*)NULL);
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVMultiDetdb() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVMultiDetdb() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVMultiDetdbLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TFolder = { "TFolder" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVSeqCollection = { "KVSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVList = { "KVList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVDBRecord = { "KVDBRecord" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVDBTable = { "KVDBTable" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVString = { "KVString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVRList = { "KVRList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVDBKey = { "KVDBKey" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVDataBase = { "KVDataBase" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVNameValueList = { "KVNameValueList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVNumberList = { "KVNumberList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVTarget = { "KVTarget" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KV2Body = { "KV2Body" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVDBSystem = { "KVDBSystem" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVDBRun = { "KVDBRun" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVDBParameterSet = { "KVDBParameterSet" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdbLN_KVRunListLine = { "KVRunListLine" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVMultiDetdb() {
  G__G__KVMultiDetdbLN_TClass.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TBuffer.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMemberInspector.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TObject.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TNamed.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TString.tagnum = -1 ;
  G__G__KVMultiDetdbLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TList.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TObjArray.tagnum = -1 ;
  G__G__KVMultiDetdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TFolder.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TQObjSender.tagnum = -1 ;
  G__G__KVMultiDetdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TDatime.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TFile.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVSeqCollection.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVList.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVDBRecord.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVDBTable.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TRef.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVString.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVBase.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVRList.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVDBKey.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVDataBase.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetdbLN_TObjString.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVNameValueList.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVNumberList.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVTarget.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KV2Body.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVDBSystem.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVDBRun.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVDBParameterSet.tagnum = -1 ;
  G__G__KVMultiDetdbLN_KVRunListLine.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVMultiDetdb() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TFolder);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TQObjSender);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TDatime);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVDBRecord),sizeof(KVDBRecord),-1,62720,"Base Class for a record",G__setup_memvarKVDBRecord,G__setup_memfuncKVDBRecord);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVDBTable),sizeof(KVDBTable),-1,62720,"Table object for database",G__setup_memvarKVDBTable,G__setup_memfuncKVDBTable);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TRef);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVRList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVDBKey),sizeof(KVDBKey),-1,62720,"Key in a Record",G__setup_memvarKVDBKey,G__setup_memfuncKVDBKey);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVDataBase),sizeof(KVDataBase),-1,62720,"Base Class for a database of parameters",G__setup_memvarKVDataBase,G__setup_memfuncKVDataBase);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_TObjString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVNameValueList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVNumberList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVTarget);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KV2Body);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVDBSystem),sizeof(KVDBSystem),-1,62720,"System class",G__setup_memvarKVDBSystem,G__setup_memfuncKVDBSystem);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVDBRun),sizeof(KVDBRun),-1,62720,"Base class for an experiment run",G__setup_memvarKVDBRun,G__setup_memfuncKVDBRun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVDBParameterSet),sizeof(KVDBParameterSet),-1,128256,"Set of parameters for calibration",G__setup_memvarKVDBParameterSet,G__setup_memfuncKVDBParameterSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdbLN_KVRunListLine),sizeof(KVRunListLine),-1,1280,"Base class for reading runlist files",G__setup_memvarKVRunListLine,G__setup_memfuncKVRunListLine);
}
extern "C" void G__cpp_setupG__KVMultiDetdb(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVMultiDetdb()");
  G__set_cpp_environmentG__KVMultiDetdb();
  G__cpp_setup_tagtableG__KVMultiDetdb();

  G__cpp_setup_inheritanceG__KVMultiDetdb();

  G__cpp_setup_typetableG__KVMultiDetdb();

  G__cpp_setup_memvarG__KVMultiDetdb();

  G__cpp_setup_memfuncG__KVMultiDetdb();
  G__cpp_setup_globalG__KVMultiDetdb();
  G__cpp_setup_funcG__KVMultiDetdb();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVMultiDetdb();
  return;
}
class G__cpp_setup_initG__KVMultiDetdb {
  public:
    G__cpp_setup_initG__KVMultiDetdb() { G__add_setup_func("G__KVMultiDetdb",(G__incsetup)(&G__cpp_setupG__KVMultiDetdb)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVMultiDetdb() { G__remove_setup_func("G__KVMultiDetdb"); }
};
G__cpp_setup_initG__KVMultiDetdb G__cpp_setup_initializerG__KVMultiDetdb;

