//
// File generated by rootcint at Wed Jul 29 15:45:24 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVMultiDetdata_management
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVMultiDetdata_management.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVDataSetManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataSetManager(void *p = 0);
   static void *newArray_KVDataSetManager(Long_t size, void *p);
   static void delete_KVDataSetManager(void *p);
   static void deleteArray_KVDataSetManager(void *p);
   static void destruct_KVDataSetManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataSetManager*)
   {
      ::KVDataSetManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataSetManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataSetManager", ::KVDataSetManager::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVDataSetManager.h", 18,
                  typeid(::KVDataSetManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataSetManager::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataSetManager) );
      instance.SetNew(&new_KVDataSetManager);
      instance.SetNewArray(&newArray_KVDataSetManager);
      instance.SetDelete(&delete_KVDataSetManager);
      instance.SetDeleteArray(&deleteArray_KVDataSetManager);
      instance.SetDestructor(&destruct_KVDataSetManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataSetManager*)
   {
      return GenerateInitInstanceLocal((::KVDataSetManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataSetManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataRepository_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataRepository(void *p = 0);
   static void *newArray_KVDataRepository(Long_t size, void *p);
   static void delete_KVDataRepository(void *p);
   static void deleteArray_KVDataRepository(void *p);
   static void destruct_KVDataRepository(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataRepository*)
   {
      ::KVDataRepository *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataRepository >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataRepository", ::KVDataRepository::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVDataRepository.h", 25,
                  typeid(::KVDataRepository), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataRepository::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataRepository) );
      instance.SetNew(&new_KVDataRepository);
      instance.SetNewArray(&newArray_KVDataRepository);
      instance.SetDelete(&delete_KVDataRepository);
      instance.SetDeleteArray(&deleteArray_KVDataRepository);
      instance.SetDestructor(&destruct_KVDataRepository);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataRepository*)
   {
      return GenerateInitInstanceLocal((::KVDataRepository*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataRepository*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataAnalysisTask_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataAnalysisTask(void *p = 0);
   static void *newArray_KVDataAnalysisTask(Long_t size, void *p);
   static void delete_KVDataAnalysisTask(void *p);
   static void deleteArray_KVDataAnalysisTask(void *p);
   static void destruct_KVDataAnalysisTask(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataAnalysisTask*)
   {
      ::KVDataAnalysisTask *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataAnalysisTask >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataAnalysisTask", ::KVDataAnalysisTask::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVDataAnalysisTask.h", 17,
                  typeid(::KVDataAnalysisTask), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataAnalysisTask::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataAnalysisTask) );
      instance.SetNew(&new_KVDataAnalysisTask);
      instance.SetNewArray(&newArray_KVDataAnalysisTask);
      instance.SetDelete(&delete_KVDataAnalysisTask);
      instance.SetDeleteArray(&deleteArray_KVDataAnalysisTask);
      instance.SetDestructor(&destruct_KVDataAnalysisTask);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataAnalysisTask*)
   {
      return GenerateInitInstanceLocal((::KVDataAnalysisTask*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataAnalysisTask*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVAvailableRunsFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVAvailableRunsFile(void *p = 0);
   static void *newArray_KVAvailableRunsFile(Long_t size, void *p);
   static void delete_KVAvailableRunsFile(void *p);
   static void deleteArray_KVAvailableRunsFile(void *p);
   static void destruct_KVAvailableRunsFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVAvailableRunsFile*)
   {
      ::KVAvailableRunsFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVAvailableRunsFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVAvailableRunsFile", ::KVAvailableRunsFile::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVAvailableRunsFile.h", 29,
                  typeid(::KVAvailableRunsFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVAvailableRunsFile::Dictionary, isa_proxy, 4,
                  sizeof(::KVAvailableRunsFile) );
      instance.SetNew(&new_KVAvailableRunsFile);
      instance.SetNewArray(&newArray_KVAvailableRunsFile);
      instance.SetDelete(&delete_KVAvailableRunsFile);
      instance.SetDeleteArray(&deleteArray_KVAvailableRunsFile);
      instance.SetDestructor(&destruct_KVAvailableRunsFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVAvailableRunsFile*)
   {
      return GenerateInitInstanceLocal((::KVAvailableRunsFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVAvailableRunsFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataSet(void *p = 0);
   static void *newArray_KVDataSet(Long_t size, void *p);
   static void delete_KVDataSet(void *p);
   static void deleteArray_KVDataSet(void *p);
   static void destruct_KVDataSet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataSet*)
   {
      ::KVDataSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataSet", ::KVDataSet::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVDataSet.h", 29,
                  typeid(::KVDataSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataSet::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataSet) );
      instance.SetNew(&new_KVDataSet);
      instance.SetNewArray(&newArray_KVDataSet);
      instance.SetDelete(&delete_KVDataSet);
      instance.SetDeleteArray(&deleteArray_KVDataSet);
      instance.SetDestructor(&destruct_KVDataSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataSet*)
   {
      return GenerateInitInstanceLocal((::KVDataSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDMS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVDMS(void *p);
   static void deleteArray_KVDMS(void *p);
   static void destruct_KVDMS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDMS*)
   {
      ::KVDMS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDMS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDMS", ::KVDMS::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVDMS.h", 35,
                  typeid(::KVDMS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDMS::Dictionary, isa_proxy, 4,
                  sizeof(::KVDMS) );
      instance.SetDelete(&delete_KVDMS);
      instance.SetDeleteArray(&deleteArray_KVDMS);
      instance.SetDestructor(&destruct_KVDMS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDMS*)
   {
      return GenerateInitInstanceLocal((::KVDMS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDMS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDMSDataRepository_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDMSDataRepository(void *p = 0);
   static void *newArray_KVDMSDataRepository(Long_t size, void *p);
   static void delete_KVDMSDataRepository(void *p);
   static void deleteArray_KVDMSDataRepository(void *p);
   static void destruct_KVDMSDataRepository(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDMSDataRepository*)
   {
      ::KVDMSDataRepository *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDMSDataRepository >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDMSDataRepository", ::KVDMSDataRepository::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVDMSDataRepository.h", 11,
                  typeid(::KVDMSDataRepository), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDMSDataRepository::Dictionary, isa_proxy, 4,
                  sizeof(::KVDMSDataRepository) );
      instance.SetNew(&new_KVDMSDataRepository);
      instance.SetNewArray(&newArray_KVDMSDataRepository);
      instance.SetDelete(&delete_KVDMSDataRepository);
      instance.SetDeleteArray(&deleteArray_KVDMSDataRepository);
      instance.SetDestructor(&destruct_KVDMSDataRepository);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDMSDataRepository*)
   {
      return GenerateInitInstanceLocal((::KVDMSDataRepository*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDMSDataRepository*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DMSFile_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DMSFile_t(void *p = 0);
   static void *newArray_DMSFile_t(Long_t size, void *p);
   static void delete_DMSFile_t(void *p);
   static void deleteArray_DMSFile_t(void *p);
   static void destruct_DMSFile_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DMSFile_t*)
   {
      ::DMSFile_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DMSFile_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DMSFile_t", ::DMSFile_t::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVDMS.h", 13,
                  typeid(::DMSFile_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DMSFile_t::Dictionary, isa_proxy, 4,
                  sizeof(::DMSFile_t) );
      instance.SetNew(&new_DMSFile_t);
      instance.SetNewArray(&newArray_DMSFile_t);
      instance.SetDelete(&delete_DMSFile_t);
      instance.SetDeleteArray(&deleteArray_DMSFile_t);
      instance.SetDestructor(&destruct_DMSFile_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DMSFile_t*)
   {
      return GenerateInitInstanceLocal((::DMSFile_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DMSFile_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SRB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SRB(void *p = 0);
   static void *newArray_SRB(Long_t size, void *p);
   static void delete_SRB(void *p);
   static void deleteArray_SRB(void *p);
   static void destruct_SRB(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SRB*)
   {
      ::SRB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SRB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SRB", ::SRB::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/SRB.h", 10,
                  typeid(::SRB), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SRB::Dictionary, isa_proxy, 4,
                  sizeof(::SRB) );
      instance.SetNew(&new_SRB);
      instance.SetNewArray(&newArray_SRB);
      instance.SetDelete(&delete_SRB);
      instance.SetDeleteArray(&deleteArray_SRB);
      instance.SetDestructor(&destruct_SRB);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SRB*)
   {
      return GenerateInitInstanceLocal((::SRB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SRB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void IRODSDataRepository_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_IRODSDataRepository(void *p = 0);
   static void *newArray_IRODSDataRepository(Long_t size, void *p);
   static void delete_IRODSDataRepository(void *p);
   static void deleteArray_IRODSDataRepository(void *p);
   static void destruct_IRODSDataRepository(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::IRODSDataRepository*)
   {
      ::IRODSDataRepository *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::IRODSDataRepository >(0);
      static ::ROOT::TGenericClassInfo 
         instance("IRODSDataRepository", ::IRODSDataRepository::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/IRODSDataRepository.h", 10,
                  typeid(::IRODSDataRepository), ::ROOT::DefineBehavior(ptr, ptr),
                  &::IRODSDataRepository::Dictionary, isa_proxy, 4,
                  sizeof(::IRODSDataRepository) );
      instance.SetNew(&new_IRODSDataRepository);
      instance.SetNewArray(&newArray_IRODSDataRepository);
      instance.SetDelete(&delete_IRODSDataRepository);
      instance.SetDeleteArray(&deleteArray_IRODSDataRepository);
      instance.SetDestructor(&destruct_IRODSDataRepository);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::IRODSDataRepository*)
   {
      return GenerateInitInstanceLocal((::IRODSDataRepository*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::IRODSDataRepository*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DMSAvailableRunsFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DMSAvailableRunsFile(void *p = 0);
   static void *newArray_DMSAvailableRunsFile(Long_t size, void *p);
   static void delete_DMSAvailableRunsFile(void *p);
   static void deleteArray_DMSAvailableRunsFile(void *p);
   static void destruct_DMSAvailableRunsFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DMSAvailableRunsFile*)
   {
      ::DMSAvailableRunsFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DMSAvailableRunsFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DMSAvailableRunsFile", ::DMSAvailableRunsFile::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/DMSAvailableRunsFile.h", 10,
                  typeid(::DMSAvailableRunsFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DMSAvailableRunsFile::Dictionary, isa_proxy, 4,
                  sizeof(::DMSAvailableRunsFile) );
      instance.SetNew(&new_DMSAvailableRunsFile);
      instance.SetNewArray(&newArray_DMSAvailableRunsFile);
      instance.SetDelete(&delete_DMSAvailableRunsFile);
      instance.SetDeleteArray(&deleteArray_DMSAvailableRunsFile);
      instance.SetDestructor(&destruct_DMSAvailableRunsFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DMSAvailableRunsFile*)
   {
      return GenerateInitInstanceLocal((::DMSAvailableRunsFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DMSAvailableRunsFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SRBDataRepository_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SRBDataRepository(void *p = 0);
   static void *newArray_SRBDataRepository(Long_t size, void *p);
   static void delete_SRBDataRepository(void *p);
   static void deleteArray_SRBDataRepository(void *p);
   static void destruct_SRBDataRepository(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SRBDataRepository*)
   {
      ::SRBDataRepository *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SRBDataRepository >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SRBDataRepository", ::SRBDataRepository::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/SRBDataRepository.h", 10,
                  typeid(::SRBDataRepository), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SRBDataRepository::Dictionary, isa_proxy, 4,
                  sizeof(::SRBDataRepository) );
      instance.SetNew(&new_SRBDataRepository);
      instance.SetNewArray(&newArray_SRBDataRepository);
      instance.SetDelete(&delete_SRBDataRepository);
      instance.SetDeleteArray(&deleteArray_SRBDataRepository);
      instance.SetDestructor(&destruct_SRBDataRepository);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SRBDataRepository*)
   {
      return GenerateInitInstanceLocal((::SRBDataRepository*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SRBDataRepository*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataRepositoryManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataRepositoryManager(void *p = 0);
   static void *newArray_KVDataRepositoryManager(Long_t size, void *p);
   static void delete_KVDataRepositoryManager(void *p);
   static void deleteArray_KVDataRepositoryManager(void *p);
   static void destruct_KVDataRepositoryManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataRepositoryManager*)
   {
      ::KVDataRepositoryManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataRepositoryManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataRepositoryManager", ::KVDataRepositoryManager::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVDataRepositoryManager.h", 17,
                  typeid(::KVDataRepositoryManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataRepositoryManager::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataRepositoryManager) );
      instance.SetNew(&new_KVDataRepositoryManager);
      instance.SetNewArray(&newArray_KVDataRepositoryManager);
      instance.SetDelete(&delete_KVDataRepositoryManager);
      instance.SetDeleteArray(&deleteArray_KVDataRepositoryManager);
      instance.SetDestructor(&destruct_KVDataRepositoryManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataRepositoryManager*)
   {
      return GenerateInitInstanceLocal((::KVDataRepositoryManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataRepositoryManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVRemoteAvailableRunsFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVRemoteAvailableRunsFile(void *p = 0);
   static void *newArray_KVRemoteAvailableRunsFile(Long_t size, void *p);
   static void delete_KVRemoteAvailableRunsFile(void *p);
   static void deleteArray_KVRemoteAvailableRunsFile(void *p);
   static void destruct_KVRemoteAvailableRunsFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVRemoteAvailableRunsFile*)
   {
      ::KVRemoteAvailableRunsFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVRemoteAvailableRunsFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVRemoteAvailableRunsFile", ::KVRemoteAvailableRunsFile::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVRemoteAvailableRunsFile.h", 15,
                  typeid(::KVRemoteAvailableRunsFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVRemoteAvailableRunsFile::Dictionary, isa_proxy, 4,
                  sizeof(::KVRemoteAvailableRunsFile) );
      instance.SetNew(&new_KVRemoteAvailableRunsFile);
      instance.SetNewArray(&newArray_KVRemoteAvailableRunsFile);
      instance.SetDelete(&delete_KVRemoteAvailableRunsFile);
      instance.SetDeleteArray(&deleteArray_KVRemoteAvailableRunsFile);
      instance.SetDestructor(&destruct_KVRemoteAvailableRunsFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVRemoteAvailableRunsFile*)
   {
      return GenerateInitInstanceLocal((::KVRemoteAvailableRunsFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVRemoteAvailableRunsFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void IRODS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_IRODS(void *p = 0);
   static void *newArray_IRODS(Long_t size, void *p);
   static void delete_IRODS(void *p);
   static void deleteArray_IRODS(void *p);
   static void destruct_IRODS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::IRODS*)
   {
      ::IRODS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::IRODS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("IRODS", ::IRODS::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/IRODS.h", 10,
                  typeid(::IRODS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::IRODS::Dictionary, isa_proxy, 4,
                  sizeof(::IRODS) );
      instance.SetNew(&new_IRODS);
      instance.SetNewArray(&newArray_IRODS);
      instance.SetDelete(&delete_IRODS);
      instance.SetDeleteArray(&deleteArray_IRODS);
      instance.SetDestructor(&destruct_IRODS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::IRODS*)
   {
      return GenerateInitInstanceLocal((::IRODS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::IRODS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVRemoteDataRepository_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVRemoteDataRepository(void *p = 0);
   static void *newArray_KVRemoteDataRepository(Long_t size, void *p);
   static void delete_KVRemoteDataRepository(void *p);
   static void deleteArray_KVRemoteDataRepository(void *p);
   static void destruct_KVRemoteDataRepository(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVRemoteDataRepository*)
   {
      ::KVRemoteDataRepository *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVRemoteDataRepository >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVRemoteDataRepository", ::KVRemoteDataRepository::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVRemoteDataRepository.h", 17,
                  typeid(::KVRemoteDataRepository), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVRemoteDataRepository::Dictionary, isa_proxy, 4,
                  sizeof(::KVRemoteDataRepository) );
      instance.SetNew(&new_KVRemoteDataRepository);
      instance.SetNewArray(&newArray_KVRemoteDataRepository);
      instance.SetDelete(&delete_KVRemoteDataRepository);
      instance.SetDeleteArray(&deleteArray_KVRemoteDataRepository);
      instance.SetDestructor(&destruct_KVRemoteDataRepository);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVRemoteDataRepository*)
   {
      return GenerateInitInstanceLocal((::KVRemoteDataRepository*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVRemoteDataRepository*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVRemoteDataSetManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVRemoteDataSetManager(void *p = 0);
   static void *newArray_KVRemoteDataSetManager(Long_t size, void *p);
   static void delete_KVRemoteDataSetManager(void *p);
   static void deleteArray_KVRemoteDataSetManager(void *p);
   static void destruct_KVRemoteDataSetManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVRemoteDataSetManager*)
   {
      ::KVRemoteDataSetManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVRemoteDataSetManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVRemoteDataSetManager", ::KVRemoteDataSetManager::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVRemoteDataSetManager.h", 16,
                  typeid(::KVRemoteDataSetManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVRemoteDataSetManager::Dictionary, isa_proxy, 4,
                  sizeof(::KVRemoteDataSetManager) );
      instance.SetNew(&new_KVRemoteDataSetManager);
      instance.SetNewArray(&newArray_KVRemoteDataSetManager);
      instance.SetDelete(&delete_KVRemoteDataSetManager);
      instance.SetDeleteArray(&deleteArray_KVRemoteDataSetManager);
      instance.SetDestructor(&destruct_KVRemoteDataSetManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVRemoteDataSetManager*)
   {
      return GenerateInitInstanceLocal((::KVRemoteDataSetManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVRemoteDataSetManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimDir_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimDir(void *p = 0);
   static void *newArray_KVSimDir(Long_t size, void *p);
   static void delete_KVSimDir(void *p);
   static void deleteArray_KVSimDir(void *p);
   static void destruct_KVSimDir(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimDir*)
   {
      ::KVSimDir *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimDir >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimDir", ::KVSimDir::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVSimDir.h", 11,
                  typeid(::KVSimDir), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimDir::Dictionary, isa_proxy, 4,
                  sizeof(::KVSimDir) );
      instance.SetNew(&new_KVSimDir);
      instance.SetNewArray(&newArray_KVSimDir);
      instance.SetDelete(&delete_KVSimDir);
      instance.SetDeleteArray(&deleteArray_KVSimDir);
      instance.SetDestructor(&destruct_KVSimDir);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimDir*)
   {
      return GenerateInitInstanceLocal((::KVSimDir*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimDir*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimFile(void *p = 0);
   static void *newArray_KVSimFile(Long_t size, void *p);
   static void delete_KVSimFile(void *p);
   static void deleteArray_KVSimFile(void *p);
   static void destruct_KVSimFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimFile*)
   {
      ::KVSimFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimFile", ::KVSimFile::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/data_management/KVSimFile.h", 13,
                  typeid(::KVSimFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimFile::Dictionary, isa_proxy, 4,
                  sizeof(::KVSimFile) );
      instance.SetNew(&new_KVSimFile);
      instance.SetNewArray(&newArray_KVSimFile);
      instance.SetDelete(&delete_KVSimFile);
      instance.SetDeleteArray(&deleteArray_KVSimFile);
      instance.SetDestructor(&destruct_KVSimFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimFile*)
   {
      return GenerateInitInstanceLocal((::KVSimFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVDataSetManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataSetManager::Class_Name()
{
   return "KVDataSetManager";
}

//______________________________________________________________________________
const char *KVDataSetManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSetManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataSetManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSetManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataSetManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSetManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataSetManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSetManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataRepository::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataRepository::Class_Name()
{
   return "KVDataRepository";
}

//______________________________________________________________________________
const char *KVDataRepository::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataRepository*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataRepository::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataRepository*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataRepository::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataRepository*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataRepository::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataRepository*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataAnalysisTask::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataAnalysisTask::Class_Name()
{
   return "KVDataAnalysisTask";
}

//______________________________________________________________________________
const char *KVDataAnalysisTask::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataAnalysisTask*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataAnalysisTask::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataAnalysisTask*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataAnalysisTask::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataAnalysisTask*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataAnalysisTask::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataAnalysisTask*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVAvailableRunsFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVAvailableRunsFile::Class_Name()
{
   return "KVAvailableRunsFile";
}

//______________________________________________________________________________
const char *KVAvailableRunsFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVAvailableRunsFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVAvailableRunsFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVAvailableRunsFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVAvailableRunsFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVAvailableRunsFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVAvailableRunsFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVAvailableRunsFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataSet::Class_Name()
{
   return "KVDataSet";
}

//______________________________________________________________________________
const char *KVDataSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDMS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDMS::Class_Name()
{
   return "KVDMS";
}

//______________________________________________________________________________
const char *KVDMS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDMS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDMS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDMS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDMS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDMS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDMS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDMS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDMSDataRepository::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDMSDataRepository::Class_Name()
{
   return "KVDMSDataRepository";
}

//______________________________________________________________________________
const char *KVDMSDataRepository::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDMSDataRepository*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDMSDataRepository::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDMSDataRepository*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDMSDataRepository::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDMSDataRepository*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDMSDataRepository::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDMSDataRepository*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DMSFile_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DMSFile_t::Class_Name()
{
   return "DMSFile_t";
}

//______________________________________________________________________________
const char *DMSFile_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DMSFile_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DMSFile_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DMSFile_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DMSFile_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DMSFile_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DMSFile_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DMSFile_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SRB::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SRB::Class_Name()
{
   return "SRB";
}

//______________________________________________________________________________
const char *SRB::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SRB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SRB::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SRB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SRB::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SRB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SRB::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SRB*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr IRODSDataRepository::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *IRODSDataRepository::Class_Name()
{
   return "IRODSDataRepository";
}

//______________________________________________________________________________
const char *IRODSDataRepository::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IRODSDataRepository*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int IRODSDataRepository::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IRODSDataRepository*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void IRODSDataRepository::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IRODSDataRepository*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *IRODSDataRepository::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IRODSDataRepository*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DMSAvailableRunsFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DMSAvailableRunsFile::Class_Name()
{
   return "DMSAvailableRunsFile";
}

//______________________________________________________________________________
const char *DMSAvailableRunsFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DMSAvailableRunsFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DMSAvailableRunsFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DMSAvailableRunsFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DMSAvailableRunsFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DMSAvailableRunsFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DMSAvailableRunsFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DMSAvailableRunsFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SRBDataRepository::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SRBDataRepository::Class_Name()
{
   return "SRBDataRepository";
}

//______________________________________________________________________________
const char *SRBDataRepository::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SRBDataRepository*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SRBDataRepository::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SRBDataRepository*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SRBDataRepository::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SRBDataRepository*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SRBDataRepository::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SRBDataRepository*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataRepositoryManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataRepositoryManager::Class_Name()
{
   return "KVDataRepositoryManager";
}

//______________________________________________________________________________
const char *KVDataRepositoryManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataRepositoryManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataRepositoryManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataRepositoryManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataRepositoryManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataRepositoryManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataRepositoryManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataRepositoryManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVRemoteAvailableRunsFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVRemoteAvailableRunsFile::Class_Name()
{
   return "KVRemoteAvailableRunsFile";
}

//______________________________________________________________________________
const char *KVRemoteAvailableRunsFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteAvailableRunsFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVRemoteAvailableRunsFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteAvailableRunsFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVRemoteAvailableRunsFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteAvailableRunsFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVRemoteAvailableRunsFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteAvailableRunsFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr IRODS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *IRODS::Class_Name()
{
   return "IRODS";
}

//______________________________________________________________________________
const char *IRODS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IRODS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int IRODS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IRODS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void IRODS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IRODS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *IRODS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IRODS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVRemoteDataRepository::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVRemoteDataRepository::Class_Name()
{
   return "KVRemoteDataRepository";
}

//______________________________________________________________________________
const char *KVRemoteDataRepository::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteDataRepository*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVRemoteDataRepository::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteDataRepository*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVRemoteDataRepository::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteDataRepository*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVRemoteDataRepository::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteDataRepository*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVRemoteDataSetManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVRemoteDataSetManager::Class_Name()
{
   return "KVRemoteDataSetManager";
}

//______________________________________________________________________________
const char *KVRemoteDataSetManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteDataSetManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVRemoteDataSetManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteDataSetManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVRemoteDataSetManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteDataSetManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVRemoteDataSetManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRemoteDataSetManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimDir::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimDir::Class_Name()
{
   return "KVSimDir";
}

//______________________________________________________________________________
const char *KVSimDir::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimDir*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimDir::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimDir*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimDir::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimDir*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimDir::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimDir*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimFile::Class_Name()
{
   return "KVSimFile";
}

//______________________________________________________________________________
const char *KVSimFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVDataAnalysisTask::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataAnalysisTask.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataAnalysisTask::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataAnalysisTask::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataAnalysisTask::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataAnalysisTask.
      TClass *R__cl = ::KVDataAnalysisTask::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrereq", &fPrereq);
      R__insp.InspectMember(fPrereq, "fPrereq.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnalyser", &fAnalyser);
      R__insp.InspectMember(fAnalyser, "fAnalyser.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaseClass", &fBaseClass);
      R__insp.InspectMember(fBaseClass, "fBaseClass.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserClass", &fUserClass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaseIsPlugin", &fBaseIsPlugin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPluginURI", &fPluginURI);
      R__insp.InspectMember(fPluginURI, "fPluginURI.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPluginBase", &fPluginBase);
      R__insp.InspectMember(fPluginBase, "fPluginBase.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtraAClicIncludes", &fExtraAClicIncludes);
      R__insp.InspectMember(fExtraAClicIncludes, "fExtraAClicIncludes.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatusUpdateInterval", &fStatusUpdateInterval);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataAnalysisTask(void *p) {
      return  p ? new(p) ::KVDataAnalysisTask : new ::KVDataAnalysisTask;
   }
   static void *newArray_KVDataAnalysisTask(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataAnalysisTask[nElements] : new ::KVDataAnalysisTask[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataAnalysisTask(void *p) {
      delete ((::KVDataAnalysisTask*)p);
   }
   static void deleteArray_KVDataAnalysisTask(void *p) {
      delete [] ((::KVDataAnalysisTask*)p);
   }
   static void destruct_KVDataAnalysisTask(void *p) {
      typedef ::KVDataAnalysisTask current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataAnalysisTask

//______________________________________________________________________________
void KVAvailableRunsFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVAvailableRunsFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVAvailableRunsFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVAvailableRunsFile::Class(),this);
   }
}

//______________________________________________________________________________
void KVAvailableRunsFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVAvailableRunsFile.
      TClass *R__cl = ::KVAvailableRunsFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunlist", (void*)&fRunlist);
      R__insp.InspectMember("ifstream", (void*)&fRunlist, "fRunlist.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runlist_lock", &runlist_lock);
      R__insp.InspectMember(runlist_lock, "runlist_lock.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataSet", &fDataSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAvailableRuns", &fAvailableRuns);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVAvailableRunsFile(void *p) {
      return  p ? new(p) ::KVAvailableRunsFile : new ::KVAvailableRunsFile;
   }
   static void *newArray_KVAvailableRunsFile(Long_t nElements, void *p) {
      return p ? new(p) ::KVAvailableRunsFile[nElements] : new ::KVAvailableRunsFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVAvailableRunsFile(void *p) {
      delete ((::KVAvailableRunsFile*)p);
   }
   static void deleteArray_KVAvailableRunsFile(void *p) {
      delete [] ((::KVAvailableRunsFile*)p);
   }
   static void destruct_KVAvailableRunsFile(void *p) {
      typedef ::KVAvailableRunsFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVAvailableRunsFile

//______________________________________________________________________________
void KVRemoteAvailableRunsFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVRemoteAvailableRunsFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVRemoteAvailableRunsFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVRemoteAvailableRunsFile::Class(),this);
   }
}

//______________________________________________________________________________
void KVRemoteAvailableRunsFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVRemoteAvailableRunsFile.
      TClass *R__cl = ::KVRemoteAvailableRunsFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilePath", &fFilePath);
      R__insp.InspectMember(fFilePath, "fFilePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurl", &fCurl);
      R__insp.InspectMember(fCurl, "fCurl.");
      KVAvailableRunsFile::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVRemoteAvailableRunsFile(void *p) {
      return  p ? new(p) ::KVRemoteAvailableRunsFile : new ::KVRemoteAvailableRunsFile;
   }
   static void *newArray_KVRemoteAvailableRunsFile(Long_t nElements, void *p) {
      return p ? new(p) ::KVRemoteAvailableRunsFile[nElements] : new ::KVRemoteAvailableRunsFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVRemoteAvailableRunsFile(void *p) {
      delete ((::KVRemoteAvailableRunsFile*)p);
   }
   static void deleteArray_KVRemoteAvailableRunsFile(void *p) {
      delete [] ((::KVRemoteAvailableRunsFile*)p);
   }
   static void destruct_KVRemoteAvailableRunsFile(void *p) {
      typedef ::KVRemoteAvailableRunsFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVRemoteAvailableRunsFile

//______________________________________________________________________________
void KVDataSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataSet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataSet::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataSet::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataSet.
      TClass *R__cl = ::KVDataSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRepository", &fRepository);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDatatypes", &fDatatypes);
      R__insp.InspectMember(fDatatypes, "fDatatypes.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTasks", &fTasks);
      R__insp.InspectMember(fTasks, "fTasks.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibDir", &fCalibDir);
      R__insp.InspectMember(fCalibDir, "fCalibDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDBBuild", &fDBBuild);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDBase", &fDBase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDBName", &fDBName);
      R__insp.InspectMember(fDBName, "fDBName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDBFileName", &fDBFileName);
      R__insp.InspectMember(fDBFileName, "fDBFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataBase", &fDataBase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAvailableRuns", &fAvailableRuns);
      R__insp.InspectMember(fAvailableRuns, "fAvailableRuns.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserGroups", &fUserGroups);
      R__insp.InspectMember(fUserGroups, "fUserGroups.");
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataSet(void *p) {
      return  p ? new(p) ::KVDataSet : new ::KVDataSet;
   }
   static void *newArray_KVDataSet(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataSet[nElements] : new ::KVDataSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataSet(void *p) {
      delete ((::KVDataSet*)p);
   }
   static void deleteArray_KVDataSet(void *p) {
      delete [] ((::KVDataSet*)p);
   }
   static void destruct_KVDataSet(void *p) {
      typedef ::KVDataSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataSet

//______________________________________________________________________________
void KVDataRepository::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataRepository.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataRepository::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataRepository::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataRepository::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataRepository.
      TClass *R__cl = ::KVDataRepository::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLocalrootdir", &fLocalrootdir);
      R__insp.InspectMember(fLocalrootdir, "fLocalrootdir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAccessprotocol", &fAccessprotocol);
      R__insp.InspectMember(fAccessprotocol, "fAccessprotocol.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReadprotocol", &fReadprotocol);
      R__insp.InspectMember(fReadprotocol, "fReadprotocol.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXrootdserver", &fXrootdserver);
      R__insp.InspectMember(fXrootdserver, "fXrootdserver.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXrootdrootdir", &fXrootdrootdir);
      R__insp.InspectMember(fXrootdrootdir, "fXrootdrootdir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXRDtunnel", &fXRDtunnel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXRDtunHost", &fXRDtunHost);
      R__insp.InspectMember(fXRDtunHost, "fXRDtunHost.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXRDtunUser", &fXRDtunUser);
      R__insp.InspectMember(fXRDtunUser, "fXRDtunUser.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXRDtunSpec", &fXRDtunSpec);
      R__insp.InspectMember(fXRDtunSpec, "fXRDtunSpec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXRDtunRetry", &fXRDtunRetry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXRDtunPort", &fXRDtunPort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRfioserver", &fRfioserver);
      R__insp.InspectMember(fRfioserver, "fRfioserver.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRfiorootdir", &fRfiorootdir);
      R__insp.InspectMember(fRfiorootdir, "fRfiorootdir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAccessroot", &fAccessroot);
      R__insp.InspectMember(fAccessroot, "fAccessroot.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReadroot", &fReadroot);
      R__insp.InspectMember(fReadroot, "fReadroot.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTransfertype", &fTransfertype);
      R__insp.InspectMember(fTransfertype, "fTransfertype.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTransferExec", &fTransferExec);
      R__insp.InspectMember(fTransferExec, "fTransferExec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTransferserver", &fTransferserver);
      R__insp.InspectMember(fTransferserver, "fTransferserver.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTransferuser", &fTransferuser);
      R__insp.InspectMember(fTransferuser, "fTransferuser.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCanWrite", &fCanWrite);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCommitDataSet", &fCommitDataSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCommitDataType", &fCommitDataType);
      R__insp.InspectMember(fCommitDataType, "fCommitDataType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCommitFileName", &fCommitFileName);
      R__insp.InspectMember(fCommitFileName, "fCommitFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDSM", &fDSM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHelpers", &fHelpers);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataRepository(void *p) {
      return  p ? new(p) ::KVDataRepository : new ::KVDataRepository;
   }
   static void *newArray_KVDataRepository(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataRepository[nElements] : new ::KVDataRepository[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataRepository(void *p) {
      delete ((::KVDataRepository*)p);
   }
   static void deleteArray_KVDataRepository(void *p) {
      delete [] ((::KVDataRepository*)p);
   }
   static void destruct_KVDataRepository(void *p) {
      typedef ::KVDataRepository current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataRepository

//______________________________________________________________________________
void DMSFile_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class DMSFile_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DMSFile_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(DMSFile_t::Class(),this);
   }
}

//______________________________________________________________________________
void DMSFile_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DMSFile_t.
      TClass *R__cl = ::DMSFile_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModTime", &fModTime);
      R__insp.InspectMember(fModTime, "fModTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsCont", &fIsCont);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DMSFile_t(void *p) {
      return  p ? new(p) ::DMSFile_t : new ::DMSFile_t;
   }
   static void *newArray_DMSFile_t(Long_t nElements, void *p) {
      return p ? new(p) ::DMSFile_t[nElements] : new ::DMSFile_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_DMSFile_t(void *p) {
      delete ((::DMSFile_t*)p);
   }
   static void deleteArray_DMSFile_t(void *p) {
      delete [] ((::DMSFile_t*)p);
   }
   static void destruct_DMSFile_t(void *p) {
      typedef ::DMSFile_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DMSFile_t

//______________________________________________________________________________
void KVDMS::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDMS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDMS::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDMS::Class(),this);
   }
}

//______________________________________________________________________________
void KVDMS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDMS.
      TClass *R__cl = ::KVDMS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fexec", &fexec);
      R__insp.InspectMember(fexec, "fexec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcmd", &fcmd);
      R__insp.InspectMember(fcmd, "fcmd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fout", &fout);
      R__insp.InspectMember(fout, "fout.");
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVDMS(void *p) {
      delete ((::KVDMS*)p);
   }
   static void deleteArray_KVDMS(void *p) {
      delete [] ((::KVDMS*)p);
   }
   static void destruct_KVDMS(void *p) {
      typedef ::KVDMS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDMS

//______________________________________________________________________________
void KVDMSDataRepository::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDMSDataRepository.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDMSDataRepository::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDMSDataRepository::Class(),this);
   }
}

//______________________________________________________________________________
void KVDMSDataRepository::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDMSDataRepository.
      TClass *R__cl = ::KVDMSDataRepository::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDMS", &fDMS);
      KVDataRepository::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDMSDataRepository(void *p) {
      return  p ? new(p) ::KVDMSDataRepository : new ::KVDMSDataRepository;
   }
   static void *newArray_KVDMSDataRepository(Long_t nElements, void *p) {
      return p ? new(p) ::KVDMSDataRepository[nElements] : new ::KVDMSDataRepository[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDMSDataRepository(void *p) {
      delete ((::KVDMSDataRepository*)p);
   }
   static void deleteArray_KVDMSDataRepository(void *p) {
      delete [] ((::KVDMSDataRepository*)p);
   }
   static void destruct_KVDMSDataRepository(void *p) {
      typedef ::KVDMSDataRepository current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDMSDataRepository

//______________________________________________________________________________
void KVRemoteDataRepository::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVRemoteDataRepository.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVRemoteDataRepository::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVRemoteDataRepository::Class(),this);
   }
}

//______________________________________________________________________________
void KVRemoteDataRepository::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVRemoteDataRepository.
      TClass *R__cl = ::KVRemoteDataRepository::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDataRepository::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVRemoteDataRepository(void *p) {
      return  p ? new(p) ::KVRemoteDataRepository : new ::KVRemoteDataRepository;
   }
   static void *newArray_KVRemoteDataRepository(Long_t nElements, void *p) {
      return p ? new(p) ::KVRemoteDataRepository[nElements] : new ::KVRemoteDataRepository[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVRemoteDataRepository(void *p) {
      delete ((::KVRemoteDataRepository*)p);
   }
   static void deleteArray_KVRemoteDataRepository(void *p) {
      delete [] ((::KVRemoteDataRepository*)p);
   }
   static void destruct_KVRemoteDataRepository(void *p) {
      typedef ::KVRemoteDataRepository current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVRemoteDataRepository

//______________________________________________________________________________
void KVRemoteDataSetManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVRemoteDataSetManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVRemoteDataSetManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVRemoteDataSetManager::Class(),this);
   }
}

//______________________________________________________________________________
void KVRemoteDataSetManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVRemoteDataSetManager.
      TClass *R__cl = ::KVRemoteDataSetManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurl", &fCurl);
      R__insp.InspectMember(fCurl, "fCurl.");
      KVDataSetManager::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVRemoteDataSetManager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVRemoteDataSetManager : new ::KVRemoteDataSetManager;
   }
   static void *newArray_KVRemoteDataSetManager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVRemoteDataSetManager[nElements] : new ::KVRemoteDataSetManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVRemoteDataSetManager(void *p) {
      delete ((::KVRemoteDataSetManager*)p);
   }
   static void deleteArray_KVRemoteDataSetManager(void *p) {
      delete [] ((::KVRemoteDataSetManager*)p);
   }
   static void destruct_KVRemoteDataSetManager(void *p) {
      typedef ::KVRemoteDataSetManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVRemoteDataSetManager

//______________________________________________________________________________
void KVDataRepositoryManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataRepositoryManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataRepositoryManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataRepositoryManager::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataRepositoryManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataRepositoryManager.
      TClass *R__cl = ::KVDataRepositoryManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRepositories", &fRepositories);
      R__insp.InspectMember(fRepositories, "fRepositories.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataRepositoryManager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVDataRepositoryManager : new ::KVDataRepositoryManager;
   }
   static void *newArray_KVDataRepositoryManager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVDataRepositoryManager[nElements] : new ::KVDataRepositoryManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataRepositoryManager(void *p) {
      delete ((::KVDataRepositoryManager*)p);
   }
   static void deleteArray_KVDataRepositoryManager(void *p) {
      delete [] ((::KVDataRepositoryManager*)p);
   }
   static void destruct_KVDataRepositoryManager(void *p) {
      typedef ::KVDataRepositoryManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataRepositoryManager

//______________________________________________________________________________
void KVDataSetManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataSetManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataSetManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataSetManager::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataSetManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataSetManager.
      TClass *R__cl = ::KVDataSetManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDatasets", (void*)&fDatasets);
      R__insp.InspectMember("ifstream", (void*)&fDatasets, "fDatasets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSets", &fDataSets);
      R__insp.InspectMember(fDataSets, "fDataSets.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTasks", &fTasks);
      R__insp.InspectMember(fTasks, "fTasks.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNavailable", &fNavailable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserGroups", &fUserGroups);
      R__insp.InspectMember(fUserGroups, "fUserGroups.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRepository", &fRepository);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCacheAvailable", &fCacheAvailable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxCacheTime", &fMaxCacheTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCacheFileName", &fCacheFileName);
      R__insp.InspectMember(fCacheFileName, "fCacheFileName.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataSetManager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVDataSetManager : new ::KVDataSetManager;
   }
   static void *newArray_KVDataSetManager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVDataSetManager[nElements] : new ::KVDataSetManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataSetManager(void *p) {
      delete ((::KVDataSetManager*)p);
   }
   static void deleteArray_KVDataSetManager(void *p) {
      delete [] ((::KVDataSetManager*)p);
   }
   static void destruct_KVDataSetManager(void *p) {
      typedef ::KVDataSetManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataSetManager

//______________________________________________________________________________
void SRB::Streamer(TBuffer &R__b)
{
   // Stream an object of class SRB.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SRB::Class(),this);
   } else {
      R__b.WriteClassBuffer(SRB::Class(),this);
   }
}

//______________________________________________________________________________
void SRB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SRB.
      TClass *R__cl = ::SRB::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDMS::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SRB(void *p) {
      return  p ? new(p) ::SRB : new ::SRB;
   }
   static void *newArray_SRB(Long_t nElements, void *p) {
      return p ? new(p) ::SRB[nElements] : new ::SRB[nElements];
   }
   // Wrapper around operator delete
   static void delete_SRB(void *p) {
      delete ((::SRB*)p);
   }
   static void deleteArray_SRB(void *p) {
      delete [] ((::SRB*)p);
   }
   static void destruct_SRB(void *p) {
      typedef ::SRB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SRB

//______________________________________________________________________________
void IRODS::Streamer(TBuffer &R__b)
{
   // Stream an object of class IRODS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(IRODS::Class(),this);
   } else {
      R__b.WriteClassBuffer(IRODS::Class(),this);
   }
}

//______________________________________________________________________________
void IRODS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class IRODS.
      TClass *R__cl = ::IRODS::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDMS::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_IRODS(void *p) {
      return  p ? new(p) ::IRODS : new ::IRODS;
   }
   static void *newArray_IRODS(Long_t nElements, void *p) {
      return p ? new(p) ::IRODS[nElements] : new ::IRODS[nElements];
   }
   // Wrapper around operator delete
   static void delete_IRODS(void *p) {
      delete ((::IRODS*)p);
   }
   static void deleteArray_IRODS(void *p) {
      delete [] ((::IRODS*)p);
   }
   static void destruct_IRODS(void *p) {
      typedef ::IRODS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::IRODS

//______________________________________________________________________________
void IRODSDataRepository::Streamer(TBuffer &R__b)
{
   // Stream an object of class IRODSDataRepository.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(IRODSDataRepository::Class(),this);
   } else {
      R__b.WriteClassBuffer(IRODSDataRepository::Class(),this);
   }
}

//______________________________________________________________________________
void IRODSDataRepository::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class IRODSDataRepository.
      TClass *R__cl = ::IRODSDataRepository::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDMSDataRepository::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_IRODSDataRepository(void *p) {
      return  p ? new(p) ::IRODSDataRepository : new ::IRODSDataRepository;
   }
   static void *newArray_IRODSDataRepository(Long_t nElements, void *p) {
      return p ? new(p) ::IRODSDataRepository[nElements] : new ::IRODSDataRepository[nElements];
   }
   // Wrapper around operator delete
   static void delete_IRODSDataRepository(void *p) {
      delete ((::IRODSDataRepository*)p);
   }
   static void deleteArray_IRODSDataRepository(void *p) {
      delete [] ((::IRODSDataRepository*)p);
   }
   static void destruct_IRODSDataRepository(void *p) {
      typedef ::IRODSDataRepository current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::IRODSDataRepository

//______________________________________________________________________________
void SRBDataRepository::Streamer(TBuffer &R__b)
{
   // Stream an object of class SRBDataRepository.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SRBDataRepository::Class(),this);
   } else {
      R__b.WriteClassBuffer(SRBDataRepository::Class(),this);
   }
}

//______________________________________________________________________________
void SRBDataRepository::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SRBDataRepository.
      TClass *R__cl = ::SRBDataRepository::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDMSDataRepository::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SRBDataRepository(void *p) {
      return  p ? new(p) ::SRBDataRepository : new ::SRBDataRepository;
   }
   static void *newArray_SRBDataRepository(Long_t nElements, void *p) {
      return p ? new(p) ::SRBDataRepository[nElements] : new ::SRBDataRepository[nElements];
   }
   // Wrapper around operator delete
   static void delete_SRBDataRepository(void *p) {
      delete ((::SRBDataRepository*)p);
   }
   static void deleteArray_SRBDataRepository(void *p) {
      delete [] ((::SRBDataRepository*)p);
   }
   static void destruct_SRBDataRepository(void *p) {
      typedef ::SRBDataRepository current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SRBDataRepository

//______________________________________________________________________________
void DMSAvailableRunsFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class DMSAvailableRunsFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DMSAvailableRunsFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(DMSAvailableRunsFile::Class(),this);
   }
}

//______________________________________________________________________________
void DMSAvailableRunsFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DMSAvailableRunsFile.
      TClass *R__cl = ::DMSAvailableRunsFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVAvailableRunsFile::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DMSAvailableRunsFile(void *p) {
      return  p ? new(p) ::DMSAvailableRunsFile : new ::DMSAvailableRunsFile;
   }
   static void *newArray_DMSAvailableRunsFile(Long_t nElements, void *p) {
      return p ? new(p) ::DMSAvailableRunsFile[nElements] : new ::DMSAvailableRunsFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_DMSAvailableRunsFile(void *p) {
      delete ((::DMSAvailableRunsFile*)p);
   }
   static void deleteArray_DMSAvailableRunsFile(void *p) {
      delete [] ((::DMSAvailableRunsFile*)p);
   }
   static void destruct_DMSAvailableRunsFile(void *p) {
      typedef ::DMSAvailableRunsFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DMSAvailableRunsFile

//______________________________________________________________________________
void KVSimDir::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimDir.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVSimDir::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVSimDir::Class(),this);
   }
}

//______________________________________________________________________________
void KVSimDir::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimDir.
      TClass *R__cl = ::KVSimDir::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimData", &fSimData);
      R__insp.InspectMember(fSimData, "fSimData.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFiltData", &fFiltData);
      R__insp.InspectMember(fFiltData, "fFiltData.");
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimDir(void *p) {
      return  p ? new(p) ::KVSimDir : new ::KVSimDir;
   }
   static void *newArray_KVSimDir(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimDir[nElements] : new ::KVSimDir[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimDir(void *p) {
      delete ((::KVSimDir*)p);
   }
   static void deleteArray_KVSimDir(void *p) {
      delete [] ((::KVSimDir*)p);
   }
   static void destruct_KVSimDir(void *p) {
      typedef ::KVSimDir current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVSimDir

//______________________________________________________________________________
void KVSimFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVSimFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVSimFile::Class(),this);
   }
}

//______________________________________________________________________________
void KVSimFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimFile.
      TClass *R__cl = ::KVSimFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSimDir", &fSimDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFiltered", &fFiltered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvents", &fEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSet", &fDataSet);
      R__insp.InspectMember(fDataSet, "fDataSet.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSystem", &fSystem);
      R__insp.InspectMember(fSystem, "fSystem.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeoType", &fGeoType);
      R__insp.InspectMember(fGeoType, "fGeoType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTreeName", &fTreeName);
      R__insp.InspectMember(fTreeName, "fTreeName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchName", &fBranchName);
      R__insp.InspectMember(fBranchName, "fBranchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrigFile", &fOrigFile);
      R__insp.InspectMember(fOrigFile, "fOrigFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFiltType", &fFiltType);
      R__insp.InspectMember(fFiltType, "fFiltType.");
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimFile(void *p) {
      return  p ? new(p) ::KVSimFile : new ::KVSimFile;
   }
   static void *newArray_KVSimFile(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimFile[nElements] : new ::KVSimFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimFile(void *p) {
      delete ((::KVSimFile*)p);
   }
   static void deleteArray_KVSimFile(void *p) {
      delete [] ((::KVSimFile*)p);
   }
   static void destruct_KVSimFile(void *p) {
      typedef ::KVSimFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVSimFile

/********************************************************
* G__KVMultiDetdata_management.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVMultiDetdata_management();

extern "C" void G__set_cpp_environmentG__KVMultiDetdata_management() {
  G__cpp_reset_tagtableG__KVMultiDetdata_management();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVMultiDetdata_management() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVDataSetManager */
static int G__G__KVMultiDetdata_management_290_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataSetManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataSetManager[n];
     } else {
       p = new((void*) gvp) KVDataSetManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataSetManager;
     } else {
       p = new((void*) gvp) KVDataSetManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((KVDataSetManager*) G__getstructoffset())->Init((KVDataRepository*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((KVDataSetManager*) G__getstructoffset())->Init());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSetManager*) G__getstructoffset())->CheckAvailability();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const KVDataSetManager*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const KVDataSetManager*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataSetManager*) G__getstructoffset())->GetDataSet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataSetManager*) G__getstructoffset())->GetDataSet((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataSetManager*) G__getstructoffset())->GetAvailableDataSet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVDataSetManager*) G__getstructoffset())->GetNavailable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVDataSetManager*) G__getstructoffset())->GetNtotal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVNameValueList& obj = ((KVDataSetManager*) G__getstructoffset())->GetUserGroups();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((KVDataSetManager*) G__getstructoffset())->CheckUser((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((KVDataSetManager*) G__getstructoffset())->CheckUser((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataSetManager*) G__getstructoffset())->GetTask((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSetManager*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataSetManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataSetManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataSetManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataSetManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataSetManager*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSetManager*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSetManager*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSetManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataSetManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataSetManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataSetManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_290_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataSetManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataSetManager G__TKVDataSetManager;
static int G__G__KVMultiDetdata_management_290_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataSetManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataSetManager*) (soff+(sizeof(KVDataSetManager)*i)))->~G__TKVDataSetManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataSetManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataSetManager*) (soff))->~G__TKVDataSetManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataRepository */
static int G__G__KVMultiDetdata_management_291_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((KVDataRepository*) G__getstructoffset())->CopyFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((KVDataRepository*) G__getstructoffset())->CopyFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((KVDataRepository*) G__getstructoffset())->FindHelper((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVDataRepository*) G__getstructoffset())->FindHelper((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((KVDataRepository*) G__getstructoffset())->HelperIsConsistentWith((TSystem*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((KVDataRepository*) G__getstructoffset())->HelperIsConsistentWith((TSystem*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataRepository* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataRepository[n];
     } else {
       p = new((void*) gvp) KVDataRepository[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataRepository;
     } else {
       p = new((void*) gvp) KVDataRepository;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataRepository*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((KVDataRepository*) G__getstructoffset())->CheckSubdirExists((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((KVDataRepository*) G__getstructoffset())->CheckSubdirExists((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataRepository*) G__getstructoffset())->GetFileInfo((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), *(FileStat_t*) libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataRepository*) G__getstructoffset())->CheckFileStatus((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDataRepository*) G__getstructoffset())->GetFullPathToOpenFile((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDataRepository*) G__getstructoffset())->GetFullPathToTransferFile((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDataRepository*) G__getstructoffset())->IsRemote());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataRepository*) G__getstructoffset())->IsConnected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDataRepository*) G__getstructoffset())->CanWrite());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((KVDataRepository*) G__getstructoffset())->GetDirectoryListing((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVDataRepository*) G__getstructoffset())->GetDirectoryListing((KVDataSet*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataRepository*) G__getstructoffset())->CopyFileFromRepository((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataRepository*) G__getstructoffset())->CopyFileToRepository((const Char_t*) G__int(libp->para[0]), (KVDataSet*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataRepository*) G__getstructoffset())->CreateNewFile((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataRepository*) G__getstructoffset())->CommitFile((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDataRepository*) G__getstructoffset())->MakeSubdirectory((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDataRepository*) G__getstructoffset())->MakeSubdirectory((KVDataSet*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((KVDataRepository*) G__getstructoffset())->DeleteFile((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVDataRepository*) G__getstructoffset())->DeleteFile((KVDataSet*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataRepository*) G__getstructoffset())->GetFileTransferType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataRepository*) G__getstructoffset())->GetFileTransferExec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataRepository*) G__getstructoffset())->GetFileTransferServer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataRepository*) G__getstructoffset())->GetFileTransferUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataRepository*) G__getstructoffset())->GetRootDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataRepository*) G__getstructoffset())->GetDataSetManager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataRepository*) G__getstructoffset())->cd();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataRepository::NewRepository((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataRepository*) G__getstructoffset())->NewAvailableRunsFile((const Char_t*) G__int(libp->para[0]), (KVDataSet*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDataRepository*) G__getstructoffset())->PrintAvailableDatasetsUpdateWarning();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataRepository::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataRepository::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataRepository::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataRepository::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataRepository*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataRepository::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataRepository::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataRepository::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_291_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataRepository::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetdata_management_291_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDataRepository* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDataRepository(*(KVDataRepository*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataRepository G__TKVDataRepository;
static int G__G__KVMultiDetdata_management_291_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataRepository*) (soff+(sizeof(KVDataRepository)*i)))->~G__TKVDataRepository();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataRepository*) (soff))->~G__TKVDataRepository();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_291_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataRepository* dest = (KVDataRepository*) G__getstructoffset();
   *dest = *(KVDataRepository*) libp->para[0].ref;
   const KVDataRepository& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataAnalysisTask */
static int G__G__KVMultiDetdata_management_293_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataAnalysisTask* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataAnalysisTask[n];
     } else {
       p = new((void*) gvp) KVDataAnalysisTask[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataAnalysisTask;
     } else {
       p = new((void*) gvp) KVDataAnalysisTask;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataAnalysisTask* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDataAnalysisTask(*(KVDataAnalysisTask*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVDataAnalysisTask(*(KVDataAnalysisTask*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalysisTask*) G__getstructoffset())->SetPrereq((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataAnalysisTask*) G__getstructoffset())->GetPrereq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalysisTask*) G__getstructoffset())->SetDataAnalyser((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataAnalysisTask*) G__getstructoffset())->GetDataAnalyser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalysisTask*) G__getstructoffset())->SetUserBaseClass((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataAnalysisTask*) G__getstructoffset())->GetUserBaseClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDataAnalysisTask*) G__getstructoffset())->SetWithUserClass((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataAnalysisTask*) G__getstructoffset())->SetWithUserClass();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDataAnalysisTask*) G__getstructoffset())->WithUserClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalysisTask*) G__getstructoffset())->SetStatusUpdateInterval((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVDataAnalysisTask*) G__getstructoffset())->GetStatusUpdateInterval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataAnalysisTask*) G__getstructoffset())->CheckUserBaseClassIsLoaded());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataAnalysisTask::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataAnalysisTask::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataAnalysisTask::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataAnalysisTask::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalysisTask*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataAnalysisTask::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataAnalysisTask::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataAnalysisTask::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_293_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataAnalysisTask::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataAnalysisTask G__TKVDataAnalysisTask;
static int G__G__KVMultiDetdata_management_293_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataAnalysisTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataAnalysisTask*) (soff+(sizeof(KVDataAnalysisTask)*i)))->~G__TKVDataAnalysisTask();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataAnalysisTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataAnalysisTask*) (soff))->~G__TKVDataAnalysisTask();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_293_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataAnalysisTask* dest = (KVDataAnalysisTask*) G__getstructoffset();
   *dest = *(KVDataAnalysisTask*) libp->para[0].ref;
   const KVDataAnalysisTask& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVAvailableRunsFile */
static int G__G__KVMultiDetdata_management_295_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAvailableRunsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVAvailableRunsFile[n];
     } else {
       p = new((void*) gvp) KVAvailableRunsFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVAvailableRunsFile;
     } else {
       p = new((void*) gvp) KVAvailableRunsFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAvailableRunsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVAvailableRunsFile((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVAvailableRunsFile((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAvailableRunsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVAvailableRunsFile((const Char_t*) G__int(libp->para[0]), (KVDataSet*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) KVAvailableRunsFile((const Char_t*) G__int(libp->para[0]), (KVDataSet*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVAvailableRunsFile*) G__getstructoffset())->FileExists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVAvailableRunsFile*) G__getstructoffset())->GetDataType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVAvailableRunsFile*) G__getstructoffset())->IsRunFileName((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVAvailableRunsFile*) G__getstructoffset())->ExtractDateFromFileName((const Char_t*) G__int(libp->para[0]), *(KVDatime*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVAvailableRunsFile*) G__getstructoffset())->Update((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVAvailableRunsFile*) G__getstructoffset())->Update();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVAvailableRunsFile*) G__getstructoffset())->CheckAvailable((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVAvailableRunsFile*) G__getstructoffset())->Count((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVAvailableRunsFile*) G__getstructoffset())->GetRunInfo((Int_t) G__int(libp->para[0]), *(TDatime*) libp->para[1].ref
, *(TString*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAvailableRunsFile*) G__getstructoffset())->GetRunInfos((Int_t) G__int(libp->para[0]), (KVList*) G__int(libp->para[1])
, (KVList*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVAvailableRunsFile*) G__getstructoffset())->GetFileName((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((KVAvailableRunsFile*) G__getstructoffset())->GetListOfAvailableSystems((KVDBSystem*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((KVAvailableRunsFile*) G__getstructoffset())->GetListOfAvailableSystems());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVAvailableRunsFile*) G__getstructoffset())->GetRunList((KVDBSystem*) G__int(libp->para[0]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVAvailableRunsFile*) G__getstructoffset())->GetRunList();
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVAvailableRunsFile*) G__getstructoffset())->Remove((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVAvailableRunsFile*) G__getstructoffset())->Remove((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAvailableRunsFile*) G__getstructoffset())->UpdateInfos((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVAvailableRunsFile*) G__getstructoffset())->InfosNeedUpdate((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAvailableRunsFile*) G__getstructoffset())->Add((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVAvailableRunsFile*) G__getstructoffset())->GetDataSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAvailableRunsFile*) G__getstructoffset())->SetDataSet((KVDataSet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVAvailableRunsFile*) G__getstructoffset())->CheckMultiRunfiles();
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAvailableRunsFile*) G__getstructoffset())->RemoveDuplicateLines(*((KVNumberList*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVAvailableRunsFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAvailableRunsFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVAvailableRunsFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVAvailableRunsFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAvailableRunsFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAvailableRunsFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVAvailableRunsFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAvailableRunsFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_295_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVAvailableRunsFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVAvailableRunsFile G__TKVAvailableRunsFile;
static int G__G__KVMultiDetdata_management_295_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVAvailableRunsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVAvailableRunsFile*) (soff+(sizeof(KVAvailableRunsFile)*i)))->~G__TKVAvailableRunsFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVAvailableRunsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVAvailableRunsFile*) (soff))->~G__TKVAvailableRunsFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataSet */
static int G__G__KVMultiDetdata_management_296_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataSet*) G__getstructoffset())->GetAvailableRunsFile((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataSet[n];
     } else {
       p = new((void*) gvp) KVDataSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataSet;
     } else {
       p = new((void*) gvp) KVDataSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataSet*) G__getstructoffset())->CheckUserCanAccess());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->SetDataPathSubdir((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataSet*) G__getstructoffset())->GetDataPathSubdir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataSet*) G__getstructoffset())->GetDataTypeSubdir((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataSet*) G__getstructoffset())->GetAvailableDataTypes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->AddAvailableDataType((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->SetUserGroups((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDataSet*) G__getstructoffset())->IsAvailable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDataSet*) G__getstructoffset())->SetAvailable((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataSet*) G__getstructoffset())->SetAvailable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->CheckAvailable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataSet*) G__getstructoffset())->HasDataType((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->SetAnalysisTasks((KVSeqCollection*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataSet*) G__getstructoffset())->GetAnalysisTask((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataSet*) G__getstructoffset())->GetAnalysisTask((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataSet*) G__getstructoffset())->GetAnalysisTaskAny((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVDataSet*) G__getstructoffset())->GetNtasks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((KVDataSet*) G__getstructoffset())->GetListOfAvailableSystems((const Char_t*) G__int(libp->para[0]), (KVDBSystem*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVDataSet*) G__getstructoffset())->GetListOfAvailableSystems((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((KVDataSet*) G__getstructoffset())->GetListOfAvailableSystems((KVDataAnalysisTask*) G__int(libp->para[0]), (KVDBSystem*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVDataSet*) G__getstructoffset())->GetListOfAvailableSystems((KVDataAnalysisTask*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->cd();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataSet*) G__getstructoffset())->GetDataSetDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((KVDataSet*) G__getstructoffset())->GetDataBase((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((KVDataSet*) G__getstructoffset())->GetDataBase());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->SaveDataBase();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 67, (long) ((const KVDataSet*) G__getstructoffset())->GetDataSetEnv((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((const KVDataSet*) G__getstructoffset())->GetDataSetEnv((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVDataSet*) G__getstructoffset())->GetDataSetEnv((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDataSet*) G__getstructoffset())->GetDataSetEnv((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDataSet*) G__getstructoffset())->GetFullPathToRunfile((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDataSet*) G__getstructoffset())->GetRunfileName((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TDatime* pobj;
         TDatime xobj = ((KVDataSet*) G__getstructoffset())->GetRunfileDate((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         pobj = new TDatime(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataSet*) G__getstructoffset())->OpenRunfile((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataSet*) G__getstructoffset())->CheckRunfileAvailable((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->UpdateAvailableRuns((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataSet*) G__getstructoffset())->NewRunfile((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->CommitRunfile((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TFile*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->CopyRunfilesFromRepository((const Char_t*) G__int(libp->para[0]), *((KVNumberList*) G__int(libp->para[1]))
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((KVDataSet*) G__getstructoffset())->DeleteRunfile((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVDataSet*) G__getstructoffset())->DeleteRunfile((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((KVDataSet*) G__getstructoffset())->DeleteRunfiles((const Char_t*) G__int(libp->para[0]), *((KVNumberList*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVDataSet*) G__getstructoffset())->DeleteRunfiles((const Char_t*) G__int(libp->para[0]), *((KVNumberList*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((KVDataSet*) G__getstructoffset())->DeleteRunfiles((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList_DateSelection((const Char_t*) G__int(libp->para[0]), (TDatime*) G__int(libp->para[1])
, (TDatime*) G__int(libp->para[2]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList_DateSelection((const Char_t*) G__int(libp->para[0]), (TDatime*) G__int(libp->para[1]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList_DateSelection((const Char_t*) G__int(libp->para[0]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList_StageSelection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (KVDBSystem*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList_StageSelection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (KVDBSystem*) G__int(libp->para[2]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList_StageSelection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList_VersionSelection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (KVDBSystem*) G__int(libp->para[2]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList_VersionSelection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->SetRepository((KVDataRepository*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataSet*) G__getstructoffset())->GetRepository());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->CheckMultiRunfiles((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDataSet*) G__getstructoffset())->CleanMultiRunfiles((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDataSet*) G__getstructoffset())->CleanMultiRunfiles((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataSet*) G__getstructoffset())->CheckRunfileUpToDate((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (KVDataRepository*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataSet*) G__getstructoffset())->CheckRunfileUpToDate((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->CheckUpToDate((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetUpdatableRuns((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList((const Char_t*) G__int(libp->para[0]), (KVDBSystem*) G__int(libp->para[1]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         KVNumberList* pobj;
         KVNumberList xobj = ((KVDataSet*) G__getstructoffset())->GetRunList((const Char_t*) G__int(libp->para[0]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->MakeAnalysisClass((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataSet*) G__getstructoffset())->OpenDataSetFile((const Char_t*) G__int(libp->para[0]), *(ifstream*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataSet*) G__getstructoffset())->DataBaseNeedsUpdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataSet*) G__getstructoffset())->GetReconstructedEventClassName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_296_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataSet G__TKVDataSet;
static int G__G__KVMultiDetdata_management_296_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataSet*) (soff+(sizeof(KVDataSet)*i)))->~G__TKVDataSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataSet*) (soff))->~G__TKVDataSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDMS */
static int G__G__KVMultiDetdata_management_301_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->exit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         TString* pobj;
         TString xobj = ((KVDMS*) G__getstructoffset())->list((const Char_t*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TString* pobj;
         TString xobj = ((KVDMS*) G__getstructoffset())->list();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         TString* pobj;
         TString xobj = ((KVDMS*) G__getstructoffset())->longlist((const Char_t*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TString* pobj;
         TString xobj = ((KVDMS*) G__getstructoffset())->longlist();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->cd((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->cd());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->chmod((const Char_t*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->put((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->put((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->get((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->get((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         TString* pobj;
         TString xobj = ((KVDMS*) G__getstructoffset())->info((const Char_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TString* pobj;
         TString xobj = ((KVDMS*) G__getstructoffset())->info((const Char_t*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->forcedelete((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->mkdir((const Char_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((KVDMS*) G__getstructoffset())->mkdir((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDMS*) G__getstructoffset())->IsContainer(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((KVDMS*) G__getstructoffset())->GetFullListing((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((KVDMS*) G__getstructoffset())->GetFullListing());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((KVDMS*) G__getstructoffset())->GetListing((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((KVDMS*) G__getstructoffset())->GetListing());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((KVDMS*) G__getstructoffset())->DirectoryContains((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((KVDMS*) G__getstructoffset())->DirectoryContains((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDMS*) G__getstructoffset())->GetPathInfo((const Char_t*) G__int(libp->para[0]), *(DMSFile_t*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDMS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDMS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDMS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDMS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDMS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDMS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDMS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDMS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_301_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDMS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDMS G__TKVDMS;
static int G__G__KVMultiDetdata_management_301_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDMS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDMS*) (soff+(sizeof(KVDMS)*i)))->~G__TKVDMS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDMS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDMS*) (soff))->~G__TKVDMS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_301_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDMS* dest = (KVDMS*) G__getstructoffset();
   *dest = *(KVDMS*) libp->para[0].ref;
   const KVDMS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDMSDataRepository */
static int G__G__KVMultiDetdata_management_302_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDMSDataRepository* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDMSDataRepository[n];
     } else {
       p = new((void*) gvp) KVDMSDataRepository[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDMSDataRepository;
     } else {
       p = new((void*) gvp) KVDMSDataRepository;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_302_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDMSDataRepository::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_302_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDMSDataRepository::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_302_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDMSDataRepository::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_302_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDMSDataRepository::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_302_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDMSDataRepository*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_302_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDMSDataRepository::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_302_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDMSDataRepository::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_302_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDMSDataRepository::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_302_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDMSDataRepository::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetdata_management_302_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDMSDataRepository* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDMSDataRepository(*(KVDMSDataRepository*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDMSDataRepository G__TKVDMSDataRepository;
static int G__G__KVMultiDetdata_management_302_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDMSDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDMSDataRepository*) (soff+(sizeof(KVDMSDataRepository)*i)))->~G__TKVDMSDataRepository();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDMSDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDMSDataRepository*) (soff))->~G__TKVDMSDataRepository();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_302_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDMSDataRepository* dest = (KVDMSDataRepository*) G__getstructoffset();
   *dest = *(KVDMSDataRepository*) libp->para[0].ref;
   const KVDMSDataRepository& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DMSFile_t */
static int G__G__KVMultiDetdata_management_303_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DMSFile_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DMSFile_t[n];
     } else {
       p = new((void*) gvp) DMSFile_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DMSFile_t;
     } else {
       p = new((void*) gvp) DMSFile_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVDatime* pobj;
         const KVDatime xobj = ((const DMSFile_t*) G__getstructoffset())->GetModTime();
         pobj = new KVDatime(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DMSFile_t*) G__getstructoffset())->SetModTime(*(KVDatime*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const DMSFile_t*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DMSFile_t*) G__getstructoffset())->SetSize((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((DMSFile_t*) G__getstructoffset())->SetIsContainer((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((DMSFile_t*) G__getstructoffset())->SetIsContainer();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const DMSFile_t*) G__getstructoffset())->IsContainer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DMSFile_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DMSFile_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DMSFile_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DMSFile_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DMSFile_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DMSFile_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DMSFile_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DMSFile_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_303_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DMSFile_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetdata_management_303_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DMSFile_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DMSFile_t(*(DMSFile_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DMSFile_t G__TDMSFile_t;
static int G__G__KVMultiDetdata_management_303_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DMSFile_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DMSFile_t*) (soff+(sizeof(DMSFile_t)*i)))->~G__TDMSFile_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DMSFile_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DMSFile_t*) (soff))->~G__TDMSFile_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_303_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DMSFile_t* dest = (DMSFile_t*) G__getstructoffset();
   *dest = *(DMSFile_t*) libp->para[0].ref;
   const DMSFile_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SRB */
static int G__G__KVMultiDetdata_management_304_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SRB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SRB[n];
     } else {
       p = new((void*) gvp) SRB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SRB;
     } else {
       p = new((void*) gvp) SRB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_304_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SRB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_304_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_304_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SRB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_304_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SRB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_304_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_304_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_304_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SRB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_304_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_304_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SRB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetdata_management_304_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SRB* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SRB(*(SRB*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SRB G__TSRB;
static int G__G__KVMultiDetdata_management_304_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SRB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SRB*) (soff+(sizeof(SRB)*i)))->~G__TSRB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SRB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SRB*) (soff))->~G__TSRB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_304_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SRB* dest = (SRB*) G__getstructoffset();
   *dest = *(SRB*) libp->para[0].ref;
   const SRB& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* IRODSDataRepository */
static int G__G__KVMultiDetdata_management_305_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IRODSDataRepository* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IRODSDataRepository[n];
     } else {
       p = new((void*) gvp) IRODSDataRepository[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IRODSDataRepository;
     } else {
       p = new((void*) gvp) IRODSDataRepository;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_305_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) IRODSDataRepository::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_305_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IRODSDataRepository::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_305_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) IRODSDataRepository::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_305_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      IRODSDataRepository::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_305_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IRODSDataRepository*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_305_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IRODSDataRepository::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_305_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IRODSDataRepository::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_305_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IRODSDataRepository::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_305_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IRODSDataRepository::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetdata_management_305_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   IRODSDataRepository* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new IRODSDataRepository(*(IRODSDataRepository*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef IRODSDataRepository G__TIRODSDataRepository;
static int G__G__KVMultiDetdata_management_305_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (IRODSDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((IRODSDataRepository*) (soff+(sizeof(IRODSDataRepository)*i)))->~G__TIRODSDataRepository();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (IRODSDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((IRODSDataRepository*) (soff))->~G__TIRODSDataRepository();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_305_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IRODSDataRepository* dest = (IRODSDataRepository*) G__getstructoffset();
   *dest = *(IRODSDataRepository*) libp->para[0].ref;
   const IRODSDataRepository& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DMSAvailableRunsFile */
static int G__G__KVMultiDetdata_management_310_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DMSAvailableRunsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DMSAvailableRunsFile[n];
     } else {
       p = new((void*) gvp) DMSAvailableRunsFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DMSAvailableRunsFile;
     } else {
       p = new((void*) gvp) DMSAvailableRunsFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DMSAvailableRunsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DMSAvailableRunsFile((const Char_t*) G__int(libp->para[0]), (KVDataSet*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) DMSAvailableRunsFile((const Char_t*) G__int(libp->para[0]), (KVDataSet*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DMSAvailableRunsFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DMSAvailableRunsFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DMSAvailableRunsFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DMSAvailableRunsFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DMSAvailableRunsFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DMSAvailableRunsFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DMSAvailableRunsFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DMSAvailableRunsFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_310_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DMSAvailableRunsFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DMSAvailableRunsFile G__TDMSAvailableRunsFile;
static int G__G__KVMultiDetdata_management_310_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DMSAvailableRunsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DMSAvailableRunsFile*) (soff+(sizeof(DMSAvailableRunsFile)*i)))->~G__TDMSAvailableRunsFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DMSAvailableRunsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DMSAvailableRunsFile*) (soff))->~G__TDMSAvailableRunsFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SRBDataRepository */
static int G__G__KVMultiDetdata_management_311_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SRBDataRepository* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SRBDataRepository[n];
     } else {
       p = new((void*) gvp) SRBDataRepository[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SRBDataRepository;
     } else {
       p = new((void*) gvp) SRBDataRepository;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_311_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SRBDataRepository::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_311_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRBDataRepository::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_311_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SRBDataRepository::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_311_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SRBDataRepository::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_311_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRBDataRepository*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_311_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRBDataRepository::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_311_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SRBDataRepository::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_311_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRBDataRepository::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_311_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SRBDataRepository::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetdata_management_311_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SRBDataRepository* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SRBDataRepository(*(SRBDataRepository*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SRBDataRepository G__TSRBDataRepository;
static int G__G__KVMultiDetdata_management_311_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SRBDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SRBDataRepository*) (soff+(sizeof(SRBDataRepository)*i)))->~G__TSRBDataRepository();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SRBDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SRBDataRepository*) (soff))->~G__TSRBDataRepository();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_311_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SRBDataRepository* dest = (SRBDataRepository*) G__getstructoffset();
   *dest = *(SRBDataRepository*) libp->para[0].ref;
   const SRBDataRepository& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataRepositoryManager */
static int G__G__KVMultiDetdata_management_312_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataRepositoryManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataRepositoryManager[n];
     } else {
       p = new((void*) gvp) KVDataRepositoryManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataRepositoryManager;
     } else {
       p = new((void*) gvp) KVDataRepositoryManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepositoryManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataRepositoryManager*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataRepositoryManager*) G__getstructoffset())->GetListOfRepositories());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataRepositoryManager*) G__getstructoffset())->GetRepository((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataRepositoryManager*) G__getstructoffset())->GetDataSet((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const KVDataRepositoryManager*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const KVDataRepositoryManager*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataRepositoryManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataRepositoryManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataRepositoryManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataRepositoryManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataRepositoryManager*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataRepositoryManager*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataRepositoryManager*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataRepositoryManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataRepositoryManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataRepositoryManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataRepositoryManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_312_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataRepositoryManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataRepositoryManager G__TKVDataRepositoryManager;
static int G__G__KVMultiDetdata_management_312_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataRepositoryManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataRepositoryManager*) (soff+(sizeof(KVDataRepositoryManager)*i)))->~G__TKVDataRepositoryManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataRepositoryManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataRepositoryManager*) (soff))->~G__TKVDataRepositoryManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVRemoteAvailableRunsFile */
static int G__G__KVMultiDetdata_management_313_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVRemoteAvailableRunsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRemoteAvailableRunsFile[n];
     } else {
       p = new((void*) gvp) KVRemoteAvailableRunsFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRemoteAvailableRunsFile;
     } else {
       p = new((void*) gvp) KVRemoteAvailableRunsFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVRemoteAvailableRunsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVRemoteAvailableRunsFile((const Char_t*) G__int(libp->para[0]), (KVDataSet*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) KVRemoteAvailableRunsFile((const Char_t*) G__int(libp->para[0]), (KVDataSet*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVRemoteAvailableRunsFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRemoteAvailableRunsFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVRemoteAvailableRunsFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRemoteAvailableRunsFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRemoteAvailableRunsFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRemoteAvailableRunsFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRemoteAvailableRunsFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRemoteAvailableRunsFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_313_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRemoteAvailableRunsFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVRemoteAvailableRunsFile G__TKVRemoteAvailableRunsFile;
static int G__G__KVMultiDetdata_management_313_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVRemoteAvailableRunsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVRemoteAvailableRunsFile*) (soff+(sizeof(KVRemoteAvailableRunsFile)*i)))->~G__TKVRemoteAvailableRunsFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVRemoteAvailableRunsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVRemoteAvailableRunsFile*) (soff))->~G__TKVRemoteAvailableRunsFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* IRODS */
static int G__G__KVMultiDetdata_management_314_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IRODS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IRODS[n];
     } else {
       p = new((void*) gvp) IRODS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IRODS;
     } else {
       p = new((void*) gvp) IRODS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_314_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) IRODS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_314_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IRODS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_314_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) IRODS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_314_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      IRODS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_314_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IRODS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_314_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IRODS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_314_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IRODS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_314_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IRODS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_314_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IRODS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetdata_management_314_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   IRODS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new IRODS(*(IRODS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef IRODS G__TIRODS;
static int G__G__KVMultiDetdata_management_314_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (IRODS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((IRODS*) (soff+(sizeof(IRODS)*i)))->~G__TIRODS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (IRODS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((IRODS*) (soff))->~G__TIRODS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_314_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IRODS* dest = (IRODS*) G__getstructoffset();
   *dest = *(IRODS*) libp->para[0].ref;
   const IRODS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVRemoteDataRepository */
static int G__G__KVMultiDetdata_management_315_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVRemoteDataRepository* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRemoteDataRepository[n];
     } else {
       p = new((void*) gvp) KVRemoteDataRepository[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRemoteDataRepository;
     } else {
       p = new((void*) gvp) KVRemoteDataRepository;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_315_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVRemoteDataRepository::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_315_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRemoteDataRepository::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_315_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVRemoteDataRepository::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_315_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRemoteDataRepository::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_315_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRemoteDataRepository*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_315_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRemoteDataRepository::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_315_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRemoteDataRepository::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_315_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRemoteDataRepository::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_315_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRemoteDataRepository::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetdata_management_315_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVRemoteDataRepository* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVRemoteDataRepository(*(KVRemoteDataRepository*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVRemoteDataRepository G__TKVRemoteDataRepository;
static int G__G__KVMultiDetdata_management_315_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVRemoteDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVRemoteDataRepository*) (soff+(sizeof(KVRemoteDataRepository)*i)))->~G__TKVRemoteDataRepository();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVRemoteDataRepository*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVRemoteDataRepository*) (soff))->~G__TKVRemoteDataRepository();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_315_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVRemoteDataRepository* dest = (KVRemoteDataRepository*) G__getstructoffset();
   *dest = *(KVRemoteDataRepository*) libp->para[0].ref;
   const KVRemoteDataRepository& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVRemoteDataSetManager */
static int G__G__KVMultiDetdata_management_316_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVRemoteDataSetManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRemoteDataSetManager[n];
     } else {
       p = new((void*) gvp) KVRemoteDataSetManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVRemoteDataSetManager;
     } else {
       p = new((void*) gvp) KVRemoteDataSetManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataSetManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_316_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVRemoteDataSetManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_316_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRemoteDataSetManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_316_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVRemoteDataSetManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_316_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRemoteDataSetManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_316_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRemoteDataSetManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_316_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRemoteDataSetManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_316_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRemoteDataSetManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_316_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRemoteDataSetManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_316_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRemoteDataSetManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVRemoteDataSetManager G__TKVRemoteDataSetManager;
static int G__G__KVMultiDetdata_management_316_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVRemoteDataSetManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVRemoteDataSetManager*) (soff+(sizeof(KVRemoteDataSetManager)*i)))->~G__TKVRemoteDataSetManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVRemoteDataSetManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVRemoteDataSetManager*) (soff))->~G__TKVRemoteDataSetManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimDir */
static int G__G__KVMultiDetdata_management_317_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimDir* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimDir[n];
     } else {
       p = new((void*) gvp) KVSimDir[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimDir;
     } else {
       p = new((void*) gvp) KVSimDir;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimDir* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimDir((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) KVSimDir((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimDir* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimDir(*(KVSimDir*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVSimDir(*(KVSimDir*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimDir*) G__getstructoffset())->SetDirectory((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSimDir*) G__getstructoffset())->GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimDir*) G__getstructoffset())->AnalyseDirectory();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimDir*) G__getstructoffset())->AnalyseFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVSimDir*) G__getstructoffset())->GetSimDataList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVSimDir*) G__getstructoffset())->GetFiltDataList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimDir::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimDir::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimDir::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimDir::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimDir*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimDir::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimDir::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimDir::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_317_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimDir::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimDir G__TKVSimDir;
static int G__G__KVMultiDetdata_management_317_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimDir*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimDir*) (soff+(sizeof(KVSimDir)*i)))->~G__TKVSimDir();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimDir*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimDir*) (soff))->~G__TKVSimDir();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimFile */
static int G__G__KVMultiDetdata_management_334_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimFile[n];
     } else {
       p = new((void*) gvp) KVSimFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimFile;
     } else {
       p = new((void*) gvp) KVSimFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimFile(
(KVSimDir*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) KVSimFile(
(KVSimDir*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 12
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimFile(
(KVSimDir*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (const Char_t*) G__int(libp->para[6]), (const Char_t*) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (const Char_t*) G__int(libp->para[9])
, (const Char_t*) G__int(libp->para[10]), (const Char_t*) G__int(libp->para[11]));
   } else {
     p = new((void*) gvp) KVSimFile(
(KVSimDir*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (const Char_t*) G__int(libp->para[6]), (const Char_t*) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (const Char_t*) G__int(libp->para[9])
, (const Char_t*) G__int(libp->para[10]), (const Char_t*) G__int(libp->para[11]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimFile(*(KVSimFile*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVSimFile(*(KVSimFile*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVSimFile*) G__getstructoffset())->GetSimDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const KVSimFile*) G__getstructoffset())->GetEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSimFile*) G__getstructoffset())->GetDataSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSimFile*) G__getstructoffset())->GetSystem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSimFile*) G__getstructoffset())->GetFilterType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVSimFile*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSimFile*) G__getstructoffset())->GetGeometry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSimFile*) G__getstructoffset())->GetTreeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSimFile*) G__getstructoffset())->GetBranchName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVSimFile*) G__getstructoffset())->GetOriginalFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetdata_management_334_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimFile G__TKVSimFile;
static int G__G__KVMultiDetdata_management_334_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimFile*) (soff+(sizeof(KVSimFile)*i)))->~G__TKVSimFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimFile*) (soff))->~G__TKVSimFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetdata_management_334_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimFile* dest = (KVSimFile*) G__getstructoffset();
   *dest = *(KVSimFile*) libp->para[0].ref;
   const KVSimFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVDataSetManager */

/* KVDataRepository */

/* KVDataAnalysisTask */

/* KVAvailableRunsFile */

/* KVDataSet */

/* KVDMS */

/* KVDMSDataRepository */

/* DMSFile_t */

/* SRB */

/* IRODSDataRepository */

/* DMSAvailableRunsFile */

/* SRBDataRepository */

/* KVDataRepositoryManager */

/* KVRemoteAvailableRunsFile */

/* IRODS */

/* KVRemoteDataRepository */

/* KVRemoteDataSetManager */

/* KVSimDir */

/* KVSimFile */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVMultiDetdata_management {
 public:
  G__Sizep2memfuncG__KVMultiDetdata_management(): p(&G__Sizep2memfuncG__KVMultiDetdata_management::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVMultiDetdata_management::*p)();
};

size_t G__get_sizep2memfuncG__KVMultiDetdata_management()
{
  G__Sizep2memfuncG__KVMultiDetdata_management a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVMultiDetdata_management() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository))) {
     KVDataRepository *G__Lderived;
     G__Lderived=(KVDataRepository*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask))) {
     KVDataAnalysisTask *G__Lderived;
     G__Lderived=(KVDataAnalysisTask*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile))) {
     KVAvailableRunsFile *G__Lderived;
     G__Lderived=(KVAvailableRunsFile*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet))) {
     KVDataSet *G__Lderived;
     G__Lderived=(KVDataSet*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS))) {
     KVDMS *G__Lderived;
     G__Lderived=(KVDMS*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository))) {
     KVDMSDataRepository *G__Lderived;
     G__Lderived=(KVDMSDataRepository*)0x1000;
     {
       KVDataRepository *G__Lpbase=(KVDataRepository*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t))) {
     DMSFile_t *G__Lderived;
     G__Lderived=(DMSFile_t*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB))) {
     SRB *G__Lderived;
     G__Lderived=(SRB*)0x1000;
     {
       KVDMS *G__Lpbase=(KVDMS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository))) {
     IRODSDataRepository *G__Lderived;
     G__Lderived=(IRODSDataRepository*)0x1000;
     {
       KVDMSDataRepository *G__Lpbase=(KVDMSDataRepository*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataRepository *G__Lpbase=(KVDataRepository*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile))) {
     DMSAvailableRunsFile *G__Lderived;
     G__Lderived=(DMSAvailableRunsFile*)0x1000;
     {
       KVAvailableRunsFile *G__Lpbase=(KVAvailableRunsFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository))) {
     SRBDataRepository *G__Lderived;
     G__Lderived=(SRBDataRepository*)0x1000;
     {
       KVDMSDataRepository *G__Lpbase=(KVDMSDataRepository*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataRepository *G__Lpbase=(KVDataRepository*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile))) {
     KVRemoteAvailableRunsFile *G__Lderived;
     G__Lderived=(KVRemoteAvailableRunsFile*)0x1000;
     {
       KVAvailableRunsFile *G__Lpbase=(KVAvailableRunsFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS))) {
     IRODS *G__Lderived;
     G__Lderived=(IRODS*)0x1000;
     {
       KVDMS *G__Lpbase=(KVDMS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository))) {
     KVRemoteDataRepository *G__Lderived;
     G__Lderived=(KVRemoteDataRepository*)0x1000;
     {
       KVDataRepository *G__Lpbase=(KVDataRepository*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataSetManager))) {
     KVRemoteDataSetManager *G__Lderived;
     G__Lderived=(KVRemoteDataSetManager*)0x1000;
     {
       KVDataSetManager *G__Lpbase=(KVDataSetManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataSetManager),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir))) {
     KVSimDir *G__Lderived;
     G__Lderived=(KVSimDir*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile))) {
     KVSimFile *G__Lderived;
     G__Lderived=(KVSimFile*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile),G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVMultiDetdata_management() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVDataSetManager */
static void G__setup_memvarKVDataSetManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager));
   { KVDataSetManager *p; p=(KVDataSetManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,2,"fDatasets=",0,"for reading cached repository available datasets file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVUniqueNameList),-1,-1,2,"fDataSets=",0,"list of datasets handled by manager");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVUniqueNameList),-1,-1,2,"fTasks=",0,"list of all known analysis tasks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNavailable=",0,"number of available datasets");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIndex=",0,"array of indices of available datasets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNameValueList),-1,-1,2,"fUserGroups=",0,"list of user groups");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),-1,-1,2,"fRepository=",0,"the repository for which data sets are handled");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCacheAvailable=",0,"kTRUE if caching is activated for parent repository");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxCacheTime=",0,"maximum allowed age of cache file in seconds");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fCacheFileName=",0,"name of cache file ( = [repository name].available.datasets)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataRepository */
static void G__setup_memvarKVDataRepository(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository));
   { KVDataRepository *p; p=(KVDataRepository*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fLocalrootdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fAccessprotocol=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fReadprotocol=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fXrootdserver=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fXrootdrootdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fXRDtunnel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fXRDtunHost=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fXRDtunUser=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fXRDtunSpec=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fXRDtunRetry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fXRDtunPort=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fRfioserver=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fRfiorootdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fAccessroot=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fReadroot=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fTransfertype=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fTransferExec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fTransferserver=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fTransferuser=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCanWrite=",0,"kTRUE if new files can be created and written directly in the repository; kFALSE if they have to be written locally then copied to repository");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet),-1,-1,2,"fCommitDataSet=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fCommitDataType=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fCommitFileName=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager),-1,-1,2,"fDSM=",0,"handles datasets in repository");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TSeqCollection),-1,-1,2,"fHelpers=",0,"List of helper classes for alternative file/directory access");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataAnalysisTask */
static void G__setup_memvarKVDataAnalysisTask(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask));
   { KVDataAnalysisTask *p; p=(KVDataAnalysisTask*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVString),-1,-1,4,"fPrereq=",0,"prerequisite data directory i.e. data on which analysis task is performed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVString),-1,-1,4,"fAnalyser=",0,"name of KVDataAnalyser class used to perform analysis");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVString),-1,-1,4,"fBaseClass=",0,"base class for user analysis");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUserClass=",0,"true if analysis task requires user-supplied class (derived from fBaseClass)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBaseIsPlugin=",0,"true if base class for user analysis is in a plugin library");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVString),-1,-1,4,"fPluginURI=",0,"uri of the plugin library containing user base class");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVString),-1,-1,4,"fPluginBase=",0,"known base class extended by plugin library");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVString),-1,-1,4,"fExtraAClicIncludes=",0,"to be added to AClic include paths before compilation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStatusUpdateInterval=",0,"interval (number of events) after which batch job progress and status are updated");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVAvailableRunsFile */
static void G__setup_memvarKVAvailableRunsFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile));
   { KVAvailableRunsFile *p; p=(KVAvailableRunsFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,2,"fRunlist=",0,"for reading runlist file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVLockfile),-1,-1,2,"runlist_lock=",0,"for locking runlist file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet),-1,-1,2,"fDataSet=",0,"dataset to which this file belongs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVHashList),-1,-1,2,"fAvailableRuns=",0,"! temporary list used to store infos when updating");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataSet */
static void G__setup_memvarKVDataSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet));
   { KVDataSet *p; p=(KVDataSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),-1,-1,2,"fRepository=",0,"repository in which dataset is stored");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fDatatypes=",0,"list of types of data which are available for this dataset");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVList),-1,-1,2,"fTasks=",0,"possible data analysis tasks for this dataset");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fCalibDir=",0,"directory containing database, calibration, identification parameters etc. for dataset");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDBBuild=",0,"has the database been built by us ?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TFile),-1,-1,2,"fDBase=",0,"file containing database");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fDBName=",0,"name of database");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fDBFileName=",0,"name of file in which database is stored on disk");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataBase),-1,-1,2,"fDataBase=",0,"pointer to dataset's database");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVList),-1,-1,2,"fAvailableRuns=",0,"!list of KVAvailableRunsFile objects used to read infos on available runs");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetcLcLdA),-1,-2,2,"kAvailable=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fUserGroups=",0,"list of user groups allowed to read data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDMS */
static void G__setup_memvarKVDMS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS));
   { KVDMS *p; p=(KVDMS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,4,"fexec=",0,"string holding full path to executable");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,4,"fcmd=",0,"string holding full path to command line with arguments");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,4,"fout=",0,"string holding results of command");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDMSDataRepository */
static void G__setup_memvarKVDMSDataRepository(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository));
   { KVDMSDataRepository *p; p=(KVDMSDataRepository*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS),-1,-1,2,"fDMS=",0,"! connection to Data Management System");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DMSFile_t */
static void G__setup_memvarDMSFile_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t));
   { DMSFile_t *p; p=(DMSFile_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDatime),-1,-1,4,"fModTime=",0,"last modification");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsCont=",0,"kTRUE if is container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SRB */
static void G__setup_memvarSRB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB));
   { SRB *p; p=(SRB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* IRODSDataRepository */
static void G__setup_memvarIRODSDataRepository(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository));
   { IRODSDataRepository *p; p=(IRODSDataRepository*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DMSAvailableRunsFile */
static void G__setup_memvarDMSAvailableRunsFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile));
   { DMSAvailableRunsFile *p; p=(DMSAvailableRunsFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SRBDataRepository */
static void G__setup_memvarSRBDataRepository(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository));
   { SRBDataRepository *p; p=(SRBDataRepository*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataRepositoryManager */
static void G__setup_memvarKVDataRepositoryManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepositoryManager));
   { KVDataRepositoryManager *p; p=(KVDataRepositoryManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TList),-1,-1,4,"fRepositories=",0,"list of available repositories");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVRemoteAvailableRunsFile */
static void G__setup_memvarKVRemoteAvailableRunsFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile));
   { KVRemoteAvailableRunsFile *p; p=(KVRemoteAvailableRunsFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fFilePath=",0,"full path to copy of remote file kept in temp dir");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fCurl=",0,"full path to executable used to copy files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* IRODS */
static void G__setup_memvarIRODS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS));
   { IRODS *p; p=(IRODS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVRemoteDataRepository */
static void G__setup_memvarKVRemoteDataRepository(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository));
   { KVRemoteDataRepository *p; p=(KVRemoteDataRepository*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVRemoteDataSetManager */
static void G__setup_memvarKVRemoteDataSetManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataSetManager));
   { KVRemoteDataSetManager *p; p=(KVRemoteDataSetManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fCurl=",0,"full path to executable used to copy files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimDir */
static void G__setup_memvarKVSimDir(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir));
   { KVSimDir *p; p=(KVSimDir*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVList),-1,-1,2,"fSimData=",0,"list of simulated data files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVList),-1,-1,2,"fFiltData=",0,"list of filtered simulated data files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimFile */
static void G__setup_memvarKVSimFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile));
   { KVSimFile *p; p=(KVSimFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir),-1,-1,2,"fSimDir=",0,"parent directory");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFiltered=",0,"=kTRUE for filtered (reconstructed) simulated events");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEvents=",0,"=number of events in TTree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fDataSet=",0,"name of dataset used to filter events");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fSystem=",0,"name of system used to filter events");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRunNumber=",0,"run number used to filter events");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fGeoType=",0,"type of geometry used for filtering");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fTreeName=",0,"name of TTree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fBranchName=",0,"name of branch containing events");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fOrigFile=",0,"name of simulated events file filtered to generate this file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString),-1,-1,2,"fFiltType=",0,"type of filtering used (Geo, Geo+Thresh, or Full)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVMultiDetdata_management() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVDataSetManager(void) {
   /* KVDataSetManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager));
   G__memfunc_setup("ReadDataSetList",1470,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadTaskList",1195,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadUserGroups",1435,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewDataSet",976,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalysisTaskList",1939,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSeqCollection), -1, 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenAvailableDatasetsFile",2508,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadAvailableDatasetsFile",2486,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckCacheStatus",1590,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVDataSetManager",1538,G__G__KVMultiDetdata_management_290_0_9, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__KVMultiDetdata_management_290_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVDataRepository' - 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckAvailability",1721,G__G__KVMultiDetdata_management_290_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__G__KVMultiDetdata_management_290_0_12, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSet",966,G__G__KVMultiDetdata_management_290_0_13, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSet",966,G__G__KVMultiDetdata_management_290_0_14, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAvailableDataSet",1863,G__G__KVMultiDetdata_management_290_0_15, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNavailable",1295,G__G__KVMultiDetdata_management_290_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtotal",914,G__G__KVMultiDetdata_management_290_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserGroups",1343,G__G__KVMultiDetdata_management_290_0_18, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNameValueList), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckUser",893,G__G__KVMultiDetdata_management_290_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - groupname C - 'Char_t' 10 '\"\"' username", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTask",691,G__G__KVMultiDetdata_management_290_0_20, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__G__KVMultiDetdata_management_290_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_290_0_22, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataSetManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_290_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataSetManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_290_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataSetManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_290_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataSetManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__KVMultiDetdata_management_290_0_26, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__KVMultiDetdata_management_290_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__KVMultiDetdata_management_290_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_290_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_290_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataSetManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_290_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataSetManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_290_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataSetManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_290_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataSetManager::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDataSetManager", 1664, G__G__KVMultiDetdata_management_290_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataRepository(void) {
   /* KVDataRepository */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository));
   G__memfunc_setup("SetFullPath",1100,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'TString' - 1 - path C - 'Char_t' 10 - protocol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadProtocol",1518,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 2, 1, 
"C - 'Char_t' 10 - dataset C - 'Char_t' 10 - datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewDataSetManager",1675,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Chmod",491,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - file h - 'UInt_t' 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrepareXRDTunnel",1587,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyFile",795,G__G__KVMultiDetdata_management_291_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - f C - - 10 - t "
"g - 'Bool_t' 0 'kFALSE' overwrite", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindHelper",993,G__G__KVMultiDetdata_management_291_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TSystem), -1, 0, 2, 1, 1, 0, 
"C - - 10 - path Y - - 0 '0' dirptr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HelperIsConsistentWith",2274,G__G__KVMultiDetdata_management_291_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'TSystem' - 0 - helper C - - 10 - path "
"Y - - 0 '0' dirptr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDataRepository",1627,G__G__KVMultiDetdata_management_291_0_9, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__KVMultiDetdata_management_291_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckSubdirExists",1735,G__G__KVMultiDetdata_management_291_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - dir C - 'Char_t' 10 '0' subdir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileInfo",1068,G__G__KVMultiDetdata_management_291_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile u 'FileStat_t' - 1 - fs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckFileStatus",1506,G__G__KVMultiDetdata_management_291_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullPathToOpenFile",2069,G__G__KVMultiDetdata_management_291_0_14, 67, -1, G__defined_typename("Char_t"), 0, 3, 1, 1, 1, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullPathToTransferFile",2504,G__G__KVMultiDetdata_management_291_0_15, 67, -1, G__defined_typename("Char_t"), 0, 3, 1, 1, 1, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsRemote",808,G__G__KVMultiDetdata_management_291_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsConnected",1103,G__G__KVMultiDetdata_management_291_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CanWrite",797,G__G__KVMultiDetdata_management_291_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirectoryListing",1967,G__G__KVMultiDetdata_management_291_0_19, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVUniqueNameList), -1, 0, 2, 1, 1, 0, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 '\"\"' datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyFileFromRepository",2287,G__G__KVMultiDetdata_management_291_0_20, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - filename C - 'Char_t' 10 - destination", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyFileToRepository",2078,G__G__KVMultiDetdata_management_291_0_21, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - source U 'KVDataSet' - 0 - dataset "
"C - 'Char_t' 10 - datatype C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateNewFile",1278,G__G__KVMultiDetdata_management_291_0_22, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TFile), -1, 0, 3, 1, 1, 0, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CommitFile",1001,G__G__KVMultiDetdata_management_291_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeSubdirectory",1661,G__G__KVMultiDetdata_management_291_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 '\"\"' datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteFile",979,G__G__KVMultiDetdata_management_291_0_25, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - filename g - 'Bool_t' 0 'kTRUE' confirm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileTransferType",1927,G__G__KVMultiDetdata_management_291_0_27, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileTransferExec",1898,G__G__KVMultiDetdata_management_291_0_28, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileTransferServer",2140,G__G__KVMultiDetdata_management_291_0_29, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileTransferUser",1924,G__G__KVMultiDetdata_management_291_0_30, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRootDirectory",1657,G__G__KVMultiDetdata_management_291_0_31, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSetManager",1665,G__G__KVMultiDetdata_management_291_0_32, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,G__G__KVMultiDetdata_management_291_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewRepository",1386,G__G__KVMultiDetdata_management_291_0_34, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository), -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) G__func2void( (KVDataRepository* (*)(const Char_t*))(&KVDataRepository::NewRepository) ), 0);
   G__memfunc_setup("NewAvailableRunsFile",2003,G__G__KVMultiDetdata_management_291_0_35, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'KVDataSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintAvailableDatasetsUpdateWarning",3584,G__G__KVMultiDetdata_management_291_0_36, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_291_0_37, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataRepository::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_291_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataRepository::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_291_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataRepository::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_291_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataRepository::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_291_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_291_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataRepository::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_291_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataRepository::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_291_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataRepository::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_291_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataRepository::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDataRepository", 1627, G__G__KVMultiDetdata_management_291_0_49, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository), -1, 0, 1, 1, 1, 0, "u 'KVDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDataRepository", 1753, G__G__KVMultiDetdata_management_291_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_291_0_51, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository), -1, 1, 1, 1, 1, 0, "u 'KVDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataAnalysisTask(void) {
   /* KVDataAnalysisTask */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask));
   G__memfunc_setup("SetParametersForDataSet",2317,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'KVDataSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVDataAnalysisTask",1778,G__G__KVMultiDetdata_management_293_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDataAnalysisTask",1778,G__G__KVMultiDetdata_management_293_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask), -1, 0, 1, 1, 1, 0, "u 'KVDataAnalysisTask' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPrereq",923,G__G__KVMultiDetdata_management_293_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrereq",911,G__G__KVMultiDetdata_management_293_0_6, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataAnalyser",1509,G__G__KVMultiDetdata_management_293_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataAnalyser",1497,G__G__KVMultiDetdata_management_293_0_10, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserBaseClass",1596,G__G__KVMultiDetdata_management_293_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserBaseClass",1584,G__G__KVMultiDetdata_management_293_0_12, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWithUserClass",1629,G__G__KVMultiDetdata_management_293_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WithUserClass",1329,G__G__KVMultiDetdata_management_293_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStatusUpdateInterval",2392,G__G__KVMultiDetdata_management_293_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStatusUpdateInterval",2380,G__G__KVMultiDetdata_management_293_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckUserBaseClassIsLoaded",2547,G__G__KVMultiDetdata_management_293_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_293_0_18, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataAnalysisTask::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_293_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataAnalysisTask::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_293_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataAnalysisTask::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_293_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataAnalysisTask::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_293_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_293_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataAnalysisTask::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_293_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataAnalysisTask::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_293_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataAnalysisTask::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_293_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataAnalysisTask::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDataAnalysisTask", 1904, G__G__KVMultiDetdata_management_293_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_293_0_31, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask), -1, 1, 1, 1, 1, 0, "u 'KVDataAnalysisTask' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVAvailableRunsFile(void) {
   /* KVAvailableRunsFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile));
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunHasFileWithDateAndName",2431,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNameValueList), -1, 0, 4, 1, 2, 0, 
"i - 'Int_t' 0 - run C - 'Char_t' 10 - filename "
"u 'TDatime' - 0 - modtime i - 'Int_t' 1 - OccNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilePath",1069,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFullPathToAvailableRunsFile",2988,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckDirectoryForAvailableRunsFile",3427,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenAvailableRunsFile",2107,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseAvailableRunsFile",2207,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFileOpen",974,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVAvailableRunsFile",1866,G__G__KVMultiDetdata_management_295_0_10, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVAvailableRunsFile",1866,G__G__KVMultiDetdata_management_295_0_11, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVAvailableRunsFile",1866,G__G__KVMultiDetdata_management_295_0_12, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - type U 'KVDataSet' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FileExists",1024,G__G__KVMultiDetdata_management_295_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataType",1084,G__G__KVMultiDetdata_management_295_0_14, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRunFileName",1266,G__G__KVMultiDetdata_management_295_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExtractDateFromFileName",2286,G__G__KVMultiDetdata_management_295_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name u 'KVDatime' - 1 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__G__KVMultiDetdata_management_295_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' no_existing_file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckAvailable",1375,G__G__KVMultiDetdata_management_295_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Count",521,G__G__KVMultiDetdata_management_295_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunInfo",993,G__G__KVMultiDetdata_management_295_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - run u 'TDatime' - 1 - modtime "
"u 'TString' - 1 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunInfos",1108,G__G__KVMultiDetdata_management_295_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - run U 'KVList' - 0 - dates "
"U 'KVList' - 0 - names", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,G__G__KVMultiDetdata_management_295_0_22, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 1, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfAvailableSystems",2538,G__G__KVMultiDetdata_management_295_0_23, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TList), -1, 0, 1, 1, 1, 0, "U 'KVDBSystem' - 10 '0' systol", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunList",1009,G__G__KVMultiDetdata_management_295_0_24, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNumberList), -1, 0, 1, 1, 1, 0, "U 'KVDBSystem' - 10 '0' system", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Remove",622,G__G__KVMultiDetdata_management_295_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - run C - 'Char_t' 10 '\"\"' filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateInfos",1122,G__G__KVMultiDetdata_management_295_0_26, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - run C - 'Char_t' 10 - filename "
"C - 'Char_t' 10 - kvversion C - 'Char_t' 10 - username", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InfosNeedUpdate",1502,G__G__KVMultiDetdata_management_295_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - run C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,G__G__KVMultiDetdata_management_295_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - run C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSet",966,G__G__KVMultiDetdata_management_295_0_29, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataSet",978,G__G__KVMultiDetdata_management_295_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDataSet' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckMultiRunfiles",1841,G__G__KVMultiDetdata_management_295_0_31, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNumberList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveDuplicateLines",2052,G__G__KVMultiDetdata_management_295_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVNumberList' - 0 - lines_to_be_removed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_295_0_33, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVAvailableRunsFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_295_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAvailableRunsFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_295_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVAvailableRunsFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_295_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVAvailableRunsFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_295_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_295_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAvailableRunsFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_295_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVAvailableRunsFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_295_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAvailableRunsFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_295_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVAvailableRunsFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVAvailableRunsFile", 1992, G__G__KVMultiDetdata_management_295_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataSet(void) {
   /* KVDataSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet));
   G__memfunc_setup("GetBaseFileName",1436,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 2, 1, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenDataBase",1159,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenDBFile",920,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - full_path_to_dbfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteDBFile",1041,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - full_path_to_dbfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDBFileName",1203,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDBFileName",1191,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDBName",819,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDBName",807,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject), -1, 0, 3, 1, 2, 0, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run "
"C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFullPathToDB",1417,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 2, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAvailableRunsFile",1993,G__G__KVMultiDetdata_management_296_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDataSet",839,G__G__KVMultiDetdata_management_296_0_12, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckUserCanAccess",1761,G__G__KVMultiDetdata_management_296_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataPathSubdir",1692,G__G__KVMultiDetdata_management_296_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataPathSubdir",1680,G__G__KVMultiDetdata_management_296_0_15, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataTypeSubdir",1701,G__G__KVMultiDetdata_management_296_0_16, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 9, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAvailableDataTypes",2096,G__G__KVMultiDetdata_management_296_0_17, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddAvailableDataType",1958,G__G__KVMultiDetdata_management_296_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserGroups",1355,G__G__KVMultiDetdata_management_296_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - groups", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsAvailable",1085,G__G__KVMultiDetdata_management_296_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAvailable",1197,G__G__KVMultiDetdata_management_296_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' yes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckAvailable",1375,G__G__KVMultiDetdata_management_296_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasDataType",1080,G__G__KVMultiDetdata_management_296_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - data_type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAnalysisTasks",1654,G__G__KVMultiDetdata_management_296_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVSeqCollection' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalysisTask",1527,G__G__KVMultiDetdata_management_296_0_27, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalysisTask",1527,G__G__KVMultiDetdata_management_296_0_28, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - keywords", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalysisTaskAny",1823,G__G__KVMultiDetdata_management_296_0_29, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - keywords", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtasks",916,G__G__KVMultiDetdata_management_296_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfAvailableSystems",2538,G__G__KVMultiDetdata_management_296_0_31, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TList), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - datatype U 'KVDBSystem' - 0 '0' systol", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfAvailableSystems",2538,G__G__KVMultiDetdata_management_296_0_32, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TList), -1, 0, 2, 1, 1, 0, 
"U 'KVDataAnalysisTask' - 0 - datan U 'KVDBSystem' - 0 '0' systol", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,G__G__KVMultiDetdata_management_296_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSetDir",1253,G__G__KVMultiDetdata_management_296_0_34, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataBase",1045,G__G__KVMultiDetdata_management_296_0_36, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataBase), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveDataBase",1156,G__G__KVMultiDetdata_management_296_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSetEnv",1263,G__G__KVMultiDetdata_management_296_0_38, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 1, 9, 
"C - 'Char_t' 10 - type C - 'Char_t' 10 '\"\"' defval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSetEnv",1263,G__G__KVMultiDetdata_management_296_0_39, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - type d - 'Double_t' 0 - defval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSetEnv",1263,G__G__KVMultiDetdata_management_296_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - type g - 'Bool_t' 0 - defval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFullPathToRunfile",2008,G__G__KVMultiDetdata_management_296_0_41, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 1, 1, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunfileName",1398,G__G__KVMultiDetdata_management_296_0_42, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 1, 1, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunfileDate",1395,G__G__KVMultiDetdata_management_296_0_43, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TDatime), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenRunfile",1127,G__G__KVMultiDetdata_management_296_0_44, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TObject), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckRunfileAvailable",2100,G__G__KVMultiDetdata_management_296_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateAvailableRuns",1932,G__G__KVMultiDetdata_management_296_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewRunfile",1023,G__G__KVMultiDetdata_management_296_0_47, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TFile), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommitRunfile",1342,G__G__KVMultiDetdata_management_296_0_48, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run "
"U 'TFile' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyRunfilesFromRepository",2743,G__G__KVMultiDetdata_management_296_0_49, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - type u 'KVNumberList' - 0 - runs "
"C - 'Char_t' 10 - destdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteRunfile",1320,G__G__KVMultiDetdata_management_296_0_50, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - type i - 'Int_t' 0 - run "
"g - 'Bool_t' 0 'kTRUE' confirm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteRunfiles",1435,G__G__KVMultiDetdata_management_296_0_51, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - type u 'KVNumberList' - 0 '\"\"' lrun "
"g - 'Bool_t' 0 'kTRUE' confirm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunList_DateSelection",2420,G__G__KVMultiDetdata_management_296_0_52, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNumberList), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - type U 'TDatime' - 0 '0' min "
"U 'TDatime' - 0 '0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunList_StageSelection",2538,G__G__KVMultiDetdata_management_296_0_53, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNumberList), -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - other_type C - 'Char_t' 10 - base_type "
"U 'KVDBSystem' - 0 '0' sys g - 'Bool_t' 0 'kFALSE' OnlyCol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunList_VersionSelection",2780,G__G__KVMultiDetdata_management_296_0_54, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNumberList), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - type C - 'Char_t' 10 - version "
"U 'KVDBSystem' - 0 '0' sys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRepository",1388,G__G__KVMultiDetdata_management_296_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDataRepository' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRepository",1376,G__G__KVMultiDetdata_management_296_0_56, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckMultiRunfiles",1841,G__G__KVMultiDetdata_management_296_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - data_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanMultiRunfiles",1846,G__G__KVMultiDetdata_management_296_0_58, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - data_type g - 'Bool_t' 0 'kTRUE' confirm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckRunfileUpToDate",1977,G__G__KVMultiDetdata_management_296_0_59, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - data_type i - 'Int_t' 0 - run "
"U 'KVDataRepository' - 0 - other_repos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckRunfileUpToDate",1977,G__G__KVMultiDetdata_management_296_0_60, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - data_type i - 'Int_t' 0 - run "
"C - 'Char_t' 10 - other_repos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckUpToDate",1252,G__G__KVMultiDetdata_management_296_0_61, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - data_type C - 'Char_t' 10 - other_repos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpdatableRuns",1626,G__G__KVMultiDetdata_management_296_0_62, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNumberList), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - data_type C - 'Char_t' 10 - other_repos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunList",1009,G__G__KVMultiDetdata_management_296_0_63, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVNumberList), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - data_type U 'KVDBSystem' - 10 '0' sys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeAnalysisClass",1720,G__G__KVMultiDetdata_management_296_0_64, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - task C - 'Char_t' 10 - classname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenDataSetFile",1464,G__G__KVMultiDetdata_management_296_0_65, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - filename u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataBaseNeedsUpdate",1863,G__G__KVMultiDetdata_management_296_0_66, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetReconstructedEventClassName",3070,G__G__KVMultiDetdata_management_296_0_67, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_296_0_68, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_296_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_296_0_70, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_296_0_71, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_296_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_296_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_296_0_77, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_296_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_296_0_79, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDataSet", 965, G__G__KVMultiDetdata_management_296_0_80, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDMS(void) {
   /* KVDMS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS));
   G__memfunc_setup("buildCommand",1231,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 0, 
"C - 'Char_t' 10 - scmd C - 'Char_t' 10 '\"\"' args "
"C - 'Option_t' 10 '\"\"' opts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("execCommand",1124,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pipeCommand",1133,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtractFileInfos",1626,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"u 'TString' - 1 - - U 'DMSFile_t' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("exit",442,G__G__KVMultiDetdata_management_301_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("list",444,G__G__KVMultiDetdata_management_301_0_7, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("longlist",876,G__G__KVMultiDetdata_management_301_0_8, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("cd",199,G__G__KVMultiDetdata_management_301_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("chmod",523,G__G__KVMultiDetdata_management_301_0_10, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - path h - 'UInt_t' 0 - mode", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("put",345,G__G__KVMultiDetdata_management_301_0_11, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - source C - 'Char_t' 10 '\".\"' target", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("get",320,G__G__KVMultiDetdata_management_301_0_12, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - source C - 'Char_t' 10 '\".\"' target", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("info",428,G__G__KVMultiDetdata_management_301_0_13, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - file C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("forcedelete",1154,G__G__KVMultiDetdata_management_301_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - path", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("mkdir",535,G__G__KVMultiDetdata_management_301_0_15, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - path C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsContainer",1119,G__G__KVMultiDetdata_management_301_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullListing",1421,G__G__KVMultiDetdata_management_301_0_18, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVUniqueNameList), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListing",1018,G__G__KVMultiDetdata_management_301_0_19, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TList), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DirectoryContains",1780,G__G__KVMultiDetdata_management_301_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPathInfo",1081,G__G__KVMultiDetdata_management_301_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - path u 'DMSFile_t' - 1 - fs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_301_0_22, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDMS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_301_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDMS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_301_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDMS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_301_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDMS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_301_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_301_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDMS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_301_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDMS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_301_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDMS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_301_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDMS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDMS", 515, G__G__KVMultiDetdata_management_301_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_301_0_35, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMS), -1, 1, 1, 1, 1, 0, "u 'KVDMS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDMSDataRepository(void) {
   /* KVDMSDataRepository */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository));
   G__memfunc_setup("Chmod",491,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - file h - 'UInt_t' 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVDMSDataRepository",1855,G__G__KVMultiDetdata_management_302_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirectoryListing",1967,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVUniqueNameList), -1, 0, 2, 1, 1, 0, 
"U 'KVDataSet' - 0 - - C - 'Char_t' 10 '\"\"' datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckSubdirExists",1735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - dir C - 'Char_t' 10 '0' subdir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyFileFromRepository",2287,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"U 'KVDataSet' - 0 - - C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - filename C - 'Char_t' 10 - destination", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyFileToRepository",2078,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - source U 'KVDataSet' - 0 - - "
"C - 'Char_t' 10 - datatype C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckFileStatus",1506,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVDataSet' - 0 - - C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeSubdirectory",1661,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVDataSet' - 0 - - C - 'Char_t' 10 '\"\"' datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteFile",979,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"U 'KVDataSet' - 0 - - C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - filename g - 'Bool_t' 0 'kTRUE' confirm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileInfo",1068,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'KVDataSet' - 0 - - C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile u 'FileStat_t' - 1 - fs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_302_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDMSDataRepository::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_302_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDMSDataRepository::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_302_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDMSDataRepository::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_302_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDMSDataRepository::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_302_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_302_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDMSDataRepository::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_302_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDMSDataRepository::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_302_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDMSDataRepository::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_302_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDMSDataRepository::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDMSDataRepository", 1855, G__G__KVMultiDetdata_management_302_0_23, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository), -1, 0, 1, 1, 1, 0, "u 'KVDMSDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDMSDataRepository", 1981, G__G__KVMultiDetdata_management_302_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_302_0_25, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository), -1, 1, 1, 1, 1, 0, "u 'KVDMSDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDMSFile_t(void) {
   /* DMSFile_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t));
   G__memfunc_setup("DMSFile_t",823,G__G__KVMultiDetdata_management_303_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModTime",975,G__G__KVMultiDetdata_management_303_0_2, 117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDatime), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModTime",987,G__G__KVMultiDetdata_management_303_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVDatime' - 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__G__KVMultiDetdata_management_303_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSize",711,G__G__KVMultiDetdata_management_303_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsContainer",1419,G__G__KVMultiDetdata_management_303_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' yes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsContainer",1119,G__G__KVMultiDetdata_management_303_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_303_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DMSFile_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_303_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DMSFile_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_303_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DMSFile_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_303_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DMSFile_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_303_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_303_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DMSFile_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_303_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DMSFile_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_303_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DMSFile_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_303_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DMSFile_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DMSFile_t", 823, G__G__KVMultiDetdata_management_303_0_21, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t), -1, 0, 1, 1, 1, 0, "u 'DMSFile_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DMSFile_t", 949, G__G__KVMultiDetdata_management_303_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_303_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSFile_t), -1, 1, 1, 1, 1, 0, "u 'DMSFile_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSRB(void) {
   /* SRB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB));
   G__memfunc_setup("ExtractFileInfos",1626,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"u 'TString' - 1 - - U 'DMSFile_t' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SRB",231,G__G__KVMultiDetdata_management_304_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("exit",442,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("list",444,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("longlist",876,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("put",345,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - source C - 'Char_t' 10 '\".\"' target", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get",320,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - source C - 'Char_t' 10 '\".\"' target", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("info",428,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - file C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("forcedelete",1154,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - path", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mkdir",535,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - path C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("chmod",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_304_0_14, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SRB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_304_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_304_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SRB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_304_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SRB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_304_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_304_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_304_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SRB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_304_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_304_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SRB::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SRB", 231, G__G__KVMultiDetdata_management_304_0_26, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB), -1, 0, 1, 1, 1, 0, "u 'SRB' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SRB", 357, G__G__KVMultiDetdata_management_304_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_304_0_28, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRB), -1, 1, 1, 1, 1, 0, "u 'SRB' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncIRODSDataRepository(void) {
   /* IRODSDataRepository */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository));
   G__memfunc_setup("IRODSDataRepository",1851,G__G__KVMultiDetdata_management_305_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAvailableDatasetsUpdateWarning",3584,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_305_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&IRODSDataRepository::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_305_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IRODSDataRepository::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_305_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&IRODSDataRepository::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_305_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&IRODSDataRepository::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_305_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_305_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IRODSDataRepository::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_305_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IRODSDataRepository::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_305_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IRODSDataRepository::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_305_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IRODSDataRepository::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("IRODSDataRepository", 1851, G__G__KVMultiDetdata_management_305_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository), -1, 0, 1, 1, 1, 0, "u 'IRODSDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IRODSDataRepository", 1977, G__G__KVMultiDetdata_management_305_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_305_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository), -1, 1, 1, 1, 1, 0, "u 'IRODSDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDMSAvailableRunsFile(void) {
   /* DMSAvailableRunsFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile));
   G__memfunc_setup("DMSAvailableRunsFile",1933,G__G__KVMultiDetdata_management_310_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DMSAvailableRunsFile",1933,G__G__KVMultiDetdata_management_310_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'KVDataSet' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' no_existing_file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_310_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DMSAvailableRunsFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_310_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DMSAvailableRunsFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_310_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DMSAvailableRunsFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_310_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DMSAvailableRunsFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_310_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_310_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DMSAvailableRunsFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_310_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DMSAvailableRunsFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_310_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DMSAvailableRunsFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_310_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DMSAvailableRunsFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DMSAvailableRunsFile", 2059, G__G__KVMultiDetdata_management_310_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSRBDataRepository(void) {
   /* SRBDataRepository */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository));
   G__memfunc_setup("SRBDataRepository",1697,G__G__KVMultiDetdata_management_311_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_311_0_2, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SRBDataRepository::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_311_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRBDataRepository::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_311_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SRBDataRepository::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_311_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SRBDataRepository::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_311_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_311_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRBDataRepository::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_311_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SRBDataRepository::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_311_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRBDataRepository::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_311_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SRBDataRepository::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SRBDataRepository", 1697, G__G__KVMultiDetdata_management_311_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository), -1, 0, 1, 1, 1, 0, "u 'SRBDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SRBDataRepository", 1823, G__G__KVMultiDetdata_management_311_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_311_0_16, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_SRBDataRepository), -1, 1, 1, 1, 1, 0, "u 'SRBDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataRepositoryManager(void) {
   /* KVDataRepositoryManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepositoryManager));
   G__memfunc_setup("KVDataRepositoryManager",2326,G__G__KVMultiDetdata_management_312_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepositoryManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__G__KVMultiDetdata_management_312_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfRepositories",2169,G__G__KVMultiDetdata_management_312_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRepository",1376,G__G__KVMultiDetdata_management_312_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSet",966,G__G__KVMultiDetdata_management_312_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet), -1, 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - repository C - 'Char_t' 10 - dataset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__KVMultiDetdata_management_312_0_6, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_312_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataRepositoryManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_312_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataRepositoryManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_312_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataRepositoryManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_312_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataRepositoryManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__KVMultiDetdata_management_312_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__KVMultiDetdata_management_312_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__KVMultiDetdata_management_312_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_312_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_312_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataRepositoryManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_312_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataRepositoryManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_312_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataRepositoryManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_312_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataRepositoryManager::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDataRepositoryManager", 2452, G__G__KVMultiDetdata_management_312_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVRemoteAvailableRunsFile(void) {
   /* KVRemoteAvailableRunsFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile));
   G__memfunc_setup("OpenAvailableRunsFile",2107,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseAvailableRunsFile",2207,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVRemoteAvailableRunsFile",2486,G__G__KVMultiDetdata_management_313_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVRemoteAvailableRunsFile",2486,G__G__KVMultiDetdata_management_313_0_5, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - type U 'KVDataSet' - 0 - ds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove",622,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - C - 'Char_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_313_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVRemoteAvailableRunsFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_313_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRemoteAvailableRunsFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_313_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVRemoteAvailableRunsFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_313_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVRemoteAvailableRunsFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_313_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_313_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRemoteAvailableRunsFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_313_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRemoteAvailableRunsFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_313_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRemoteAvailableRunsFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_313_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRemoteAvailableRunsFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVRemoteAvailableRunsFile", 2612, G__G__KVMultiDetdata_management_313_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncIRODS(void) {
   /* IRODS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS));
   G__memfunc_setup("ExtractFileInfos",1626,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"u 'TString' - 1 - - U 'DMSFile_t' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IRODS",385,G__G__KVMultiDetdata_management_314_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("exit",442,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("list",444,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("longlist",876,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' directory", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("put",345,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - source C - 'Char_t' 10 '\".\"' target", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get",320,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - source C - 'Char_t' 10 '\".\"' target", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("info",428,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TString), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - file C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("forcedelete",1154,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - path", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mkdir",535,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - path C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("chmod",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - path h - 'UInt_t' 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_314_0_14, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&IRODS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_314_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IRODS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_314_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&IRODS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_314_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&IRODS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_314_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_314_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IRODS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_314_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IRODS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_314_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IRODS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_314_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IRODS::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("IRODS", 385, G__G__KVMultiDetdata_management_314_0_26, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS), -1, 0, 1, 1, 1, 0, "u 'IRODS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IRODS", 511, G__G__KVMultiDetdata_management_314_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_314_0_28, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_IRODS), -1, 1, 1, 1, 1, 0, "u 'IRODS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVRemoteDataRepository(void) {
   /* KVRemoteDataRepository */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository));
   G__memfunc_setup("NewDataSetManager",1675,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVRemoteDataRepository",2247,G__G__KVMultiDetdata_management_315_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRemote",808,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsConnected",1103,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckSubdirExists",1735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - dir C - 'Char_t' 10 '0' subdir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileInfo",1068,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'KVDataSet' - 0 - ds C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile u 'FileStat_t' - 1 - fs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckFileStatus",1506,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVDataSet' - 0 - ds C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyFileFromRepository",2287,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"U 'KVDataSet' - 0 - ds C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - filename C - 'Char_t' 10 - destination", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyFileToRepository",2078,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - source U 'KVDataSet' - 0 - ds "
"C - 'Char_t' 10 - datatype C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeSubdirectory",1661,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVDataSet' - 0 - ds C - 'Char_t' 10 '\"\"' datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirectoryListing",1967,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVUniqueNameList), -1, 0, 2, 1, 1, 0, 
"U 'KVDataSet' - 0 - ds C - 'Char_t' 10 '\"\"' datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteFile",979,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"U 'KVDataSet' - 0 - ds C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - filename g - 'Bool_t' 0 'kTRUE' confirm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullPathToTransferFile",2504,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 3, 1, 1, 1, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullPathToOpenFile",2069,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 3, 1, 1, 1, 
"U 'KVDataSet' - 0 - dataset C - 'Char_t' 10 - datatype "
"C - 'Char_t' 10 - runfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_315_0_15, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVRemoteDataRepository::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_315_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRemoteDataRepository::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_315_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVRemoteDataRepository::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_315_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVRemoteDataRepository::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_315_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_315_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRemoteDataRepository::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_315_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRemoteDataRepository::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_315_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRemoteDataRepository::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_315_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRemoteDataRepository::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVRemoteDataRepository", 2247, G__G__KVMultiDetdata_management_315_0_27, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository), -1, 0, 1, 1, 1, 0, "u 'KVRemoteDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVRemoteDataRepository", 2373, G__G__KVMultiDetdata_management_315_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_315_0_29, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository), -1, 1, 1, 1, 1, 0, "u 'KVRemoteDataRepository' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVRemoteDataSetManager(void) {
   /* KVRemoteDataSetManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataSetManager));
   G__memfunc_setup("OpenAvailableDatasetsFile",2508,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVRemoteDataSetManager",2158,G__G__KVMultiDetdata_management_316_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVRemoteDataSetManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckAvailability",1721,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_316_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVRemoteDataSetManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_316_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRemoteDataSetManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_316_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVRemoteDataSetManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_316_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVRemoteDataSetManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_316_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_316_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRemoteDataSetManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_316_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRemoteDataSetManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_316_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRemoteDataSetManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_316_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRemoteDataSetManager::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVRemoteDataSetManager", 2284, G__G__KVMultiDetdata_management_316_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimDir(void) {
   /* KVSimDir */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimDir",745,G__G__KVMultiDetdata_management_317_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimDir",745,G__G__KVMultiDetdata_management_317_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimDir",745,G__G__KVMultiDetdata_management_317_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir), -1, 0, 1, 1, 1, 0, "u 'KVSimDir' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDirectory",1249,G__G__KVMultiDetdata_management_317_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirectory",1237,G__G__KVMultiDetdata_management_317_0_7, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AnalyseDirectory",1666,G__G__KVMultiDetdata_management_317_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AnalyseFile",1101,G__G__KVMultiDetdata_management_317_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSimDataList",1375,G__G__KVMultiDetdata_management_317_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFiltDataList",1477,G__G__KVMultiDetdata_management_317_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_317_0_13, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimDir::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_317_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimDir::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_317_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimDir::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_317_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimDir::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_317_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_317_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimDir::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_317_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimDir::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_317_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimDir::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_317_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimDir::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimDir", 871, G__G__KVMultiDetdata_management_317_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimFile(void) {
   /* KVSimFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile));
   G__memfunc_setup("KVSimFile",842,G__G__KVMultiDetdata_management_334_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimFile",842,G__G__KVMultiDetdata_management_334_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile), -1, 0, 6, 1, 1, 0, 
"U 'KVSimDir' - 0 - parent C - 'Char_t' 10 - filename "
"C - 'Char_t' 10 - treeinfo n - 'Long64_t' 0 - treeEntries "
"C - 'Char_t' 10 - treename C - 'Char_t' 10 - branchname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimFile",842,G__G__KVMultiDetdata_management_334_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile), -1, 0, 12, 1, 1, 0, 
"U 'KVSimDir' - 0 - parent C - 'Char_t' 10 - filename "
"C - 'Char_t' 10 - treeinfo n - 'Long64_t' 0 - treeEntries "
"C - 'Char_t' 10 - treename C - 'Char_t' 10 - branchname "
"C - 'Char_t' 10 - dataset C - 'Char_t' 10 - system "
"i - 'Int_t' 0 - run_number C - 'Char_t' 10 - geo_type "
"C - 'Char_t' 10 - orig_file C - 'Char_t' 10 - filt_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimFile",842,G__G__KVMultiDetdata_management_334_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile), -1, 0, 1, 1, 1, 0, "u 'KVSimFile' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSimDir",872,G__G__KVMultiDetdata_management_334_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimDir), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvents",917,G__G__KVMultiDetdata_management_334_0_7, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSet",966,G__G__KVMultiDetdata_management_334_0_8, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSystem",933,G__G__KVMultiDetdata_management_334_0_9, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilterType",1320,G__G__KVMultiDetdata_management_334_0_10, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__G__KVMultiDetdata_management_334_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeometry",1132,G__G__KVMultiDetdata_management_334_0_12, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeName",1073,G__G__KVMultiDetdata_management_334_0_13, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchName",1263,G__G__KVMultiDetdata_management_334_0_14, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOriginalFile",1493,G__G__KVMultiDetdata_management_334_0_15, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetdata_management_334_0_17, 85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetdata_management_334_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetdata_management_334_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetdata_management_334_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetdata_management_334_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetdata_management_334_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetdata_management_334_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetdata_management_334_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetdata_management_334_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimFile", 968, G__G__KVMultiDetdata_management_334_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetdata_management_334_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVSimFile), -1, 1, 1, 1, 1, 0, "u 'KVSimFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVMultiDetdata_management() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gDataSet),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSet),-1,-1,1,"gDataSet=",0,(char*)NULL);
   G__memvar_setup((void*)(&gDataRepository),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepository),-1,-1,1,"gDataRepository=",0,(char*)NULL);
   G__memvar_setup((void*)(&gDataSetManager),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataSetManager),-1,-1,1,"gDataSetManager=",0,(char*)NULL);
   G__memvar_setup((void*)(&gDataRepositoryManager),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetdata_managementLN_KVDataRepositoryManager),-1,-1,1,"gDataRepositoryManager=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVMultiDetdata_management() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVMultiDetdata_management() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVString = { "KVString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVLockfile = { "KVLockfile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TSystem = { "TSystem" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_FileStat_t = { "FileStat_t" , 115 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVNumberList = { "KVNumberList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVList = { "KVList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDatime = { "KVDatime" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVSeqCollection = { "KVSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDataBase = { "KVDataBase" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDataSetManager = { "KVDataSetManager" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDataRepository = { "KVDataRepository" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDBSystem = { "KVDBSystem" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask = { "KVDataAnalysisTask" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile = { "KVAvailableRunsFile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDataSet = { "KVDataSet" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDataSetcLcLdA = { "KVDataSet::$" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVHashList = { "KVHashList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVNameValueList = { "KVNameValueList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVUniqueNameList = { "KVUniqueNameList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDMS = { "KVDMS" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDMSDataRepository = { "KVDMSDataRepository" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_DMSFile_t = { "DMSFile_t" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_SRB = { "SRB" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_IRODSDataRepository = { "IRODSDataRepository" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile = { "DMSAvailableRunsFile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_SRBDataRepository = { "SRBDataRepository" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVDataRepositoryManager = { "KVDataRepositoryManager" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile = { "KVRemoteAvailableRunsFile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_IRODS = { "IRODS" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository = { "KVRemoteDataRepository" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVRemoteDataSetManager = { "KVRemoteDataSetManager" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVSimDir = { "KVSimDir" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetdata_managementLN_KVSimFile = { "KVSimFile" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVMultiDetdata_management() {
  G__G__KVMultiDetdata_managementLN_TClass.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TBuffer.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TMemberInspector.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TObject.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TNamed.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TString.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TList.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVString.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVLockfile.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVBase.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TSystem.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TSeqCollection.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_FileStat_t.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TDatime.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVNumberList.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVList.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDatime.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_TFile.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVSeqCollection.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDataBase.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDataSetManager.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDataRepository.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDBSystem.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDataSet.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDataSetcLcLdA.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVHashList.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVNameValueList.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVUniqueNameList.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDMS.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDMSDataRepository.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_DMSFile_t.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_SRB.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_IRODSDataRepository.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_SRBDataRepository.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVDataRepositoryManager.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_IRODS.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVRemoteDataSetManager.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVSimDir.tagnum = -1 ;
  G__G__KVMultiDetdata_managementLN_KVSimFile.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVMultiDetdata_management() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVLockfile);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TSystem);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_FileStat_t);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TDatime);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVNumberList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDatime);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDataBase);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDataSetManager),sizeof(KVDataSetManager),-1,263424,"Handles datasets in a data repository",G__setup_memvarKVDataSetManager,G__setup_memfuncKVDataSetManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDataRepository),sizeof(KVDataRepository),-1,324864,"Base class handling files in data repository",G__setup_memvarKVDataRepository,G__setup_memfuncKVDataRepository);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDBSystem);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDataAnalysisTask),sizeof(KVDataAnalysisTask),-1,325376,"A data analysis task",G__setup_memvarKVDataAnalysisTask,G__setup_memfuncKVDataAnalysisTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVAvailableRunsFile),sizeof(KVAvailableRunsFile),-1,324864,"Handles text files containing list of available runs for different datasets and types of data",G__setup_memvarKVAvailableRunsFile,G__setup_memfuncKVAvailableRunsFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDataSet),sizeof(KVDataSet),-1,324864,"Describes a set of experimental data which may be analysed with KaliVeda",G__setup_memvarKVDataSet,G__setup_memfuncKVDataSet);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDataSetcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVHashList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVNameValueList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVUniqueNameList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDMS),sizeof(KVDMS),-1,324876,"Interface to Data Management Service (SRB, IRODS, etc.)",G__setup_memvarKVDMS,G__setup_memfuncKVDMS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDMSDataRepository),sizeof(KVDMSDataRepository),-1,324864,"Remote data repository using Data Management Systems",G__setup_memvarKVDMSDataRepository,G__setup_memfuncKVDMSDataRepository);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_DMSFile_t),sizeof(DMSFile_t),-1,324864,"Attributes of Data Management Service file/container",G__setup_memvarDMSFile_t,G__setup_memfuncDMSFile_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_SRB),sizeof(SRB),-1,324864,"Interface to SRB commands",G__setup_memvarSRB,G__setup_memfuncSRB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_IRODSDataRepository),sizeof(IRODSDataRepository),-1,324864,"Remote data repository using IRODS",G__setup_memvarIRODSDataRepository,G__setup_memfuncIRODSDataRepository);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_DMSAvailableRunsFile),sizeof(DMSAvailableRunsFile),-1,324864,"Handles list of available runs using Data Management Systems",G__setup_memvarDMSAvailableRunsFile,G__setup_memfuncDMSAvailableRunsFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_SRBDataRepository),sizeof(SRBDataRepository),-1,324864,"Remote data repository using SRB",G__setup_memvarSRBDataRepository,G__setup_memfuncSRBDataRepository);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVDataRepositoryManager),sizeof(KVDataRepositoryManager),-1,263424,"Handles available data repositories",G__setup_memvarKVDataRepositoryManager,G__setup_memfuncKVDataRepositoryManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVRemoteAvailableRunsFile),sizeof(KVRemoteAvailableRunsFile),-1,324864,"Access to lists of available runfiles in remote data repository via HTTP",G__setup_memvarKVRemoteAvailableRunsFile,G__setup_memfuncKVRemoteAvailableRunsFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_IRODS),sizeof(IRODS),-1,324864,"Interface to IRODS commands",G__setup_memvarIRODS,G__setup_memfuncIRODS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVRemoteDataRepository),sizeof(KVRemoteDataRepository),-1,324864,"Class handling data repositories on distant machines",G__setup_memvarKVRemoteDataRepository,G__setup_memfuncKVRemoteDataRepository);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVRemoteDataSetManager),sizeof(KVRemoteDataSetManager),-1,263424,"Handles data sets in remote data repository",G__setup_memvarKVRemoteDataSetManager,G__setup_memfuncKVRemoteDataSetManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVSimDir),sizeof(KVSimDir),-1,325376,"Handle directory containing simulated and/or filtered simulated data",G__setup_memvarKVSimDir,G__setup_memfuncKVSimDir);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetdata_managementLN_KVSimFile),sizeof(KVSimFile),-1,325376,"Handle file containing simulated or filtered simulated data",G__setup_memvarKVSimFile,G__setup_memfuncKVSimFile);
}
extern "C" void G__cpp_setupG__KVMultiDetdata_management(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVMultiDetdata_management()");
  G__set_cpp_environmentG__KVMultiDetdata_management();
  G__cpp_setup_tagtableG__KVMultiDetdata_management();

  G__cpp_setup_inheritanceG__KVMultiDetdata_management();

  G__cpp_setup_typetableG__KVMultiDetdata_management();

  G__cpp_setup_memvarG__KVMultiDetdata_management();

  G__cpp_setup_memfuncG__KVMultiDetdata_management();
  G__cpp_setup_globalG__KVMultiDetdata_management();
  G__cpp_setup_funcG__KVMultiDetdata_management();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVMultiDetdata_management();
  return;
}
class G__cpp_setup_initG__KVMultiDetdata_management {
  public:
    G__cpp_setup_initG__KVMultiDetdata_management() { G__add_setup_func("G__KVMultiDetdata_management",(G__incsetup)(&G__cpp_setupG__KVMultiDetdata_management)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVMultiDetdata_management() { G__remove_setup_func("G__KVMultiDetdata_management"); }
};
G__cpp_setup_initG__KVMultiDetdata_management G__cpp_setup_initializerG__KVMultiDetdata_management;

