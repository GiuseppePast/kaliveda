//
// File generated by rootcint at Fri Jul 17 15:49:42 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVMultiDetparticles
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVMultiDetparticles.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVNuclData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVNuclData(void *p = 0);
   static void *newArray_KVNuclData(Long_t size, void *p);
   static void delete_KVNuclData(void *p);
   static void deleteArray_KVNuclData(void *p);
   static void destruct_KVNuclData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVNuclData*)
   {
      ::KVNuclData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVNuclData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVNuclData", ::KVNuclData::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVNuclData.h", 11,
                  typeid(::KVNuclData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVNuclData::Dictionary, isa_proxy, 4,
                  sizeof(::KVNuclData) );
      instance.SetNew(&new_KVNuclData);
      instance.SetNewArray(&newArray_KVNuclData);
      instance.SetDelete(&delete_KVNuclData);
      instance.SetDeleteArray(&deleteArray_KVNuclData);
      instance.SetDestructor(&destruct_KVNuclData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVNuclData*)
   {
      return GenerateInitInstanceLocal((::KVNuclData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVNuclData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVChargeRadius_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVChargeRadius(void *p = 0);
   static void *newArray_KVChargeRadius(Long_t size, void *p);
   static void delete_KVChargeRadius(void *p);
   static void deleteArray_KVChargeRadius(void *p);
   static void destruct_KVChargeRadius(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVChargeRadius*)
   {
      ::KVChargeRadius *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVChargeRadius >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVChargeRadius", ::KVChargeRadius::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVChargeRadius.h", 10,
                  typeid(::KVChargeRadius), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVChargeRadius::Dictionary, isa_proxy, 4,
                  sizeof(::KVChargeRadius) );
      instance.SetNew(&new_KVChargeRadius);
      instance.SetNewArray(&newArray_KVChargeRadius);
      instance.SetDelete(&delete_KVChargeRadius);
      instance.SetDeleteArray(&deleteArray_KVChargeRadius);
      instance.SetDestructor(&destruct_KVChargeRadius);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVChargeRadius*)
   {
      return GenerateInitInstanceLocal((::KVChargeRadius*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVChargeRadius*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDTcLcLkey_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_NDTcLcLkey(void *p);
   static void deleteArray_NDTcLcLkey(void *p);
   static void destruct_NDTcLcLkey(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::NDT::key*)
   {
      ::NDT::key *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NDT::key >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NDT::key", ::NDT::key::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVNuclDataTable.h", 20,
                  typeid(::NDT::key), ::ROOT::DefineBehavior(ptr, ptr),
                  &::NDT::key::Dictionary, isa_proxy, 4,
                  sizeof(::NDT::key) );
      instance.SetDelete(&delete_NDTcLcLkey);
      instance.SetDeleteArray(&deleteArray_NDTcLcLkey);
      instance.SetDestructor(&destruct_NDTcLcLkey);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::NDT::key*)
   {
      return GenerateInitInstanceLocal((::NDT::key*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NDT::key*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void NDTcLcLvalue_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_NDTcLcLvalue(void *p);
   static void deleteArray_NDTcLcLvalue(void *p);
   static void destruct_NDTcLcLvalue(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::NDT::value*)
   {
      ::NDT::value *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NDT::value >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NDT::value", ::NDT::value::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVNuclDataTable.h", 29,
                  typeid(::NDT::value), ::ROOT::DefineBehavior(ptr, ptr),
                  &::NDT::value::Dictionary, isa_proxy, 4,
                  sizeof(::NDT::value) );
      instance.SetDelete(&delete_NDTcLcLvalue);
      instance.SetDeleteArray(&deleteArray_NDTcLcLvalue);
      instance.SetDestructor(&destruct_NDTcLcLvalue);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::NDT::value*)
   {
      return GenerateInitInstanceLocal((::NDT::value*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NDT::value*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVNuclDataTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVNuclDataTable(void *p);
   static void deleteArray_KVNuclDataTable(void *p);
   static void destruct_KVNuclDataTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVNuclDataTable*)
   {
      ::KVNuclDataTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVNuclDataTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVNuclDataTable", ::KVNuclDataTable::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVNuclDataTable.h", 43,
                  typeid(::KVNuclDataTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVNuclDataTable::Dictionary, isa_proxy, 4,
                  sizeof(::KVNuclDataTable) );
      instance.SetDelete(&delete_KVNuclDataTable);
      instance.SetDeleteArray(&deleteArray_KVNuclDataTable);
      instance.SetDestructor(&destruct_KVNuclDataTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVNuclDataTable*)
   {
      return GenerateInitInstanceLocal((::KVNuclDataTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVNuclDataTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVElementDensity_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVElementDensity(void *p = 0);
   static void *newArray_KVElementDensity(Long_t size, void *p);
   static void delete_KVElementDensity(void *p);
   static void deleteArray_KVElementDensity(void *p);
   static void destruct_KVElementDensity(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVElementDensity*)
   {
      ::KVElementDensity *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVElementDensity >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVElementDensity", ::KVElementDensity::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVElementDensity.h", 10,
                  typeid(::KVElementDensity), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVElementDensity::Dictionary, isa_proxy, 4,
                  sizeof(::KVElementDensity) );
      instance.SetNew(&new_KVElementDensity);
      instance.SetNewArray(&newArray_KVElementDensity);
      instance.SetDelete(&delete_KVElementDensity);
      instance.SetDeleteArray(&deleteArray_KVElementDensity);
      instance.SetDestructor(&destruct_KVElementDensity);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVElementDensity*)
   {
      return GenerateInitInstanceLocal((::KVElementDensity*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVElementDensity*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVElementDensityTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVElementDensityTable(void *p = 0);
   static void *newArray_KVElementDensityTable(Long_t size, void *p);
   static void delete_KVElementDensityTable(void *p);
   static void deleteArray_KVElementDensityTable(void *p);
   static void destruct_KVElementDensityTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVElementDensityTable*)
   {
      ::KVElementDensityTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVElementDensityTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVElementDensityTable", ::KVElementDensityTable::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVElementDensityTable.h", 12,
                  typeid(::KVElementDensityTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVElementDensityTable::Dictionary, isa_proxy, 4,
                  sizeof(::KVElementDensityTable) );
      instance.SetNew(&new_KVElementDensityTable);
      instance.SetNewArray(&newArray_KVElementDensityTable);
      instance.SetDelete(&delete_KVElementDensityTable);
      instance.SetDeleteArray(&deleteArray_KVElementDensityTable);
      instance.SetDestructor(&destruct_KVElementDensityTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVElementDensityTable*)
   {
      return GenerateInitInstanceLocal((::KVElementDensityTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVElementDensityTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVMassExcess_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVMassExcess(void *p = 0);
   static void *newArray_KVMassExcess(Long_t size, void *p);
   static void delete_KVMassExcess(void *p);
   static void deleteArray_KVMassExcess(void *p);
   static void destruct_KVMassExcess(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVMassExcess*)
   {
      ::KVMassExcess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVMassExcess >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVMassExcess", ::KVMassExcess::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVMassExcess.h", 10,
                  typeid(::KVMassExcess), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVMassExcess::Dictionary, isa_proxy, 4,
                  sizeof(::KVMassExcess) );
      instance.SetNew(&new_KVMassExcess);
      instance.SetNewArray(&newArray_KVMassExcess);
      instance.SetDelete(&delete_KVMassExcess);
      instance.SetDeleteArray(&deleteArray_KVMassExcess);
      instance.SetDestructor(&destruct_KVMassExcess);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVMassExcess*)
   {
      return GenerateInitInstanceLocal((::KVMassExcess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVMassExcess*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVMassExcessTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVMassExcessTable(void *p = 0);
   static void *newArray_KVMassExcessTable(Long_t size, void *p);
   static void delete_KVMassExcessTable(void *p);
   static void deleteArray_KVMassExcessTable(void *p);
   static void destruct_KVMassExcessTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVMassExcessTable*)
   {
      ::KVMassExcessTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVMassExcessTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVMassExcessTable", ::KVMassExcessTable::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVMassExcessTable.h", 11,
                  typeid(::KVMassExcessTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVMassExcessTable::Dictionary, isa_proxy, 4,
                  sizeof(::KVMassExcessTable) );
      instance.SetNew(&new_KVMassExcessTable);
      instance.SetNewArray(&newArray_KVMassExcessTable);
      instance.SetDelete(&delete_KVMassExcessTable);
      instance.SetDeleteArray(&deleteArray_KVMassExcessTable);
      instance.SetDestructor(&destruct_KVMassExcessTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVMassExcessTable*)
   {
      return GenerateInitInstanceLocal((::KVMassExcessTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVMassExcessTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVLifeTime_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVLifeTime(void *p = 0);
   static void *newArray_KVLifeTime(Long_t size, void *p);
   static void delete_KVLifeTime(void *p);
   static void deleteArray_KVLifeTime(void *p);
   static void destruct_KVLifeTime(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVLifeTime*)
   {
      ::KVLifeTime *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVLifeTime >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVLifeTime", ::KVLifeTime::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVLifeTime.h", 10,
                  typeid(::KVLifeTime), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVLifeTime::Dictionary, isa_proxy, 4,
                  sizeof(::KVLifeTime) );
      instance.SetNew(&new_KVLifeTime);
      instance.SetNewArray(&newArray_KVLifeTime);
      instance.SetDelete(&delete_KVLifeTime);
      instance.SetDeleteArray(&deleteArray_KVLifeTime);
      instance.SetDestructor(&destruct_KVLifeTime);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVLifeTime*)
   {
      return GenerateInitInstanceLocal((::KVLifeTime*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVLifeTime*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVLifeTimeTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVLifeTimeTable(void *p = 0);
   static void *newArray_KVLifeTimeTable(Long_t size, void *p);
   static void delete_KVLifeTimeTable(void *p);
   static void deleteArray_KVLifeTimeTable(void *p);
   static void destruct_KVLifeTimeTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVLifeTimeTable*)
   {
      ::KVLifeTimeTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVLifeTimeTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVLifeTimeTable", ::KVLifeTimeTable::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVLifeTimeTable.h", 12,
                  typeid(::KVLifeTimeTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVLifeTimeTable::Dictionary, isa_proxy, 4,
                  sizeof(::KVLifeTimeTable) );
      instance.SetNew(&new_KVLifeTimeTable);
      instance.SetNewArray(&newArray_KVLifeTimeTable);
      instance.SetDelete(&delete_KVLifeTimeTable);
      instance.SetDeleteArray(&deleteArray_KVLifeTimeTable);
      instance.SetDestructor(&destruct_KVLifeTimeTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVLifeTimeTable*)
   {
      return GenerateInitInstanceLocal((::KVLifeTimeTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVLifeTimeTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVAbundance_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVAbundance(void *p = 0);
   static void *newArray_KVAbundance(Long_t size, void *p);
   static void delete_KVAbundance(void *p);
   static void deleteArray_KVAbundance(void *p);
   static void destruct_KVAbundance(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVAbundance*)
   {
      ::KVAbundance *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVAbundance >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVAbundance", ::KVAbundance::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVAbundance.h", 10,
                  typeid(::KVAbundance), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVAbundance::Dictionary, isa_proxy, 4,
                  sizeof(::KVAbundance) );
      instance.SetNew(&new_KVAbundance);
      instance.SetNewArray(&newArray_KVAbundance);
      instance.SetDelete(&delete_KVAbundance);
      instance.SetDeleteArray(&deleteArray_KVAbundance);
      instance.SetDestructor(&destruct_KVAbundance);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVAbundance*)
   {
      return GenerateInitInstanceLocal((::KVAbundance*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVAbundance*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVNDTManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVNDTManager(void *p = 0);
   static void *newArray_KVNDTManager(Long_t size, void *p);
   static void delete_KVNDTManager(void *p);
   static void deleteArray_KVNDTManager(void *p);
   static void destruct_KVNDTManager(void *p);
   static Long64_t merge_KVNDTManager(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVNDTManager*)
   {
      ::KVNDTManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVNDTManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVNDTManager", ::KVNDTManager::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVNDTManager.h", 14,
                  typeid(::KVNDTManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVNDTManager::Dictionary, isa_proxy, 4,
                  sizeof(::KVNDTManager) );
      instance.SetNew(&new_KVNDTManager);
      instance.SetNewArray(&newArray_KVNDTManager);
      instance.SetDelete(&delete_KVNDTManager);
      instance.SetDeleteArray(&deleteArray_KVNDTManager);
      instance.SetDestructor(&destruct_KVNDTManager);
      instance.SetMerge(&merge_KVNDTManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVNDTManager*)
   {
      return GenerateInitInstanceLocal((::KVNDTManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVNDTManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVParticleCondition_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVParticleCondition(void *p = 0);
   static void *newArray_KVParticleCondition(Long_t size, void *p);
   static void delete_KVParticleCondition(void *p);
   static void deleteArray_KVParticleCondition(void *p);
   static void destruct_KVParticleCondition(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVParticleCondition*)
   {
      ::KVParticleCondition *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVParticleCondition >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVParticleCondition", ::KVParticleCondition::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVParticleCondition.h", 20,
                  typeid(::KVParticleCondition), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVParticleCondition::Dictionary, isa_proxy, 4,
                  sizeof(::KVParticleCondition) );
      instance.SetNew(&new_KVParticleCondition);
      instance.SetNewArray(&newArray_KVParticleCondition);
      instance.SetDelete(&delete_KVParticleCondition);
      instance.SetDeleteArray(&deleteArray_KVParticleCondition);
      instance.SetDestructor(&destruct_KVParticleCondition);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVParticleCondition*)
   {
      return GenerateInitInstanceLocal((::KVParticleCondition*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVParticleCondition*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVParticle(void *p = 0);
   static void *newArray_KVParticle(Long_t size, void *p);
   static void delete_KVParticle(void *p);
   static void deleteArray_KVParticle(void *p);
   static void destruct_KVParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVParticle*)
   {
      ::KVParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVParticle", ::KVParticle::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVParticle.h", 36,
                  typeid(::KVParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVParticle::Dictionary, isa_proxy, 4,
                  sizeof(::KVParticle) );
      instance.SetNew(&new_KVParticle);
      instance.SetNewArray(&newArray_KVParticle);
      instance.SetDelete(&delete_KVParticle);
      instance.SetDeleteArray(&deleteArray_KVParticle);
      instance.SetDestructor(&destruct_KVParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVParticle*)
   {
      return GenerateInitInstanceLocal((::KVParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVNucleus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVNucleus(void *p = 0);
   static void *newArray_KVNucleus(Long_t size, void *p);
   static void delete_KVNucleus(void *p);
   static void deleteArray_KVNucleus(void *p);
   static void destruct_KVNucleus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVNucleus*)
   {
      ::KVNucleus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVNucleus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVNucleus", ::KVNucleus::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVNucleus.h", 27,
                  typeid(::KVNucleus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVNucleus::Dictionary, isa_proxy, 4,
                  sizeof(::KVNucleus) );
      instance.SetNew(&new_KVNucleus);
      instance.SetNewArray(&newArray_KVNucleus);
      instance.SetDelete(&delete_KVNucleus);
      instance.SetDeleteArray(&deleteArray_KVNucleus);
      instance.SetDestructor(&destruct_KVNucleus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVNucleus*)
   {
      return GenerateInitInstanceLocal((::KVNucleus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVNucleus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVAbundanceTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVAbundanceTable(void *p = 0);
   static void *newArray_KVAbundanceTable(Long_t size, void *p);
   static void delete_KVAbundanceTable(void *p);
   static void deleteArray_KVAbundanceTable(void *p);
   static void destruct_KVAbundanceTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVAbundanceTable*)
   {
      ::KVAbundanceTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVAbundanceTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVAbundanceTable", ::KVAbundanceTable::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVAbundanceTable.h", 11,
                  typeid(::KVAbundanceTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVAbundanceTable::Dictionary, isa_proxy, 4,
                  sizeof(::KVAbundanceTable) );
      instance.SetNew(&new_KVAbundanceTable);
      instance.SetNewArray(&newArray_KVAbundanceTable);
      instance.SetDelete(&delete_KVAbundanceTable);
      instance.SetDeleteArray(&deleteArray_KVAbundanceTable);
      instance.SetDestructor(&destruct_KVAbundanceTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVAbundanceTable*)
   {
      return GenerateInitInstanceLocal((::KVAbundanceTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVAbundanceTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimNucleus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimNucleus(void *p = 0);
   static void *newArray_KVSimNucleus(Long_t size, void *p);
   static void delete_KVSimNucleus(void *p);
   static void deleteArray_KVSimNucleus(void *p);
   static void destruct_KVSimNucleus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimNucleus*)
   {
      ::KVSimNucleus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimNucleus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimNucleus", ::KVSimNucleus::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVSimNucleus.h", 13,
                  typeid(::KVSimNucleus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimNucleus::Dictionary, isa_proxy, 4,
                  sizeof(::KVSimNucleus) );
      instance.SetNew(&new_KVSimNucleus);
      instance.SetNewArray(&newArray_KVSimNucleus);
      instance.SetDelete(&delete_KVSimNucleus);
      instance.SetDeleteArray(&deleteArray_KVSimNucleus);
      instance.SetDestructor(&destruct_KVSimNucleus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimNucleus*)
   {
      return GenerateInitInstanceLocal((::KVSimNucleus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimNucleus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVChargeRadiusTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVChargeRadiusTable(void *p = 0);
   static void *newArray_KVChargeRadiusTable(Long_t size, void *p);
   static void delete_KVChargeRadiusTable(void *p);
   static void deleteArray_KVChargeRadiusTable(void *p);
   static void destruct_KVChargeRadiusTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVChargeRadiusTable*)
   {
      ::KVChargeRadiusTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVChargeRadiusTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVChargeRadiusTable", ::KVChargeRadiusTable::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/particles/KVChargeRadiusTable.h", 11,
                  typeid(::KVChargeRadiusTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVChargeRadiusTable::Dictionary, isa_proxy, 4,
                  sizeof(::KVChargeRadiusTable) );
      instance.SetNew(&new_KVChargeRadiusTable);
      instance.SetNewArray(&newArray_KVChargeRadiusTable);
      instance.SetDelete(&delete_KVChargeRadiusTable);
      instance.SetDeleteArray(&deleteArray_KVChargeRadiusTable);
      instance.SetDestructor(&destruct_KVChargeRadiusTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVChargeRadiusTable*)
   {
      return GenerateInitInstanceLocal((::KVChargeRadiusTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVChargeRadiusTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVNuclData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVNuclData::Class_Name()
{
   return "KVNuclData";
}

//______________________________________________________________________________
const char *KVNuclData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVNuclData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVNuclData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVNuclData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVNuclData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVNuclData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVNuclData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVNuclData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVChargeRadius::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVChargeRadius::Class_Name()
{
   return "KVChargeRadius";
}

//______________________________________________________________________________
const char *KVChargeRadius::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeRadius*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVChargeRadius::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeRadius*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVChargeRadius::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeRadius*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVChargeRadius::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeRadius*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace NDT {
//______________________________________________________________________________
atomic_TClass_ptr key::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *key::Class_Name()
{
   return "NDT::key";
}

//______________________________________________________________________________
const char *key::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NDT::key*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int key::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NDT::key*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void key::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NDT::key*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *key::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NDT::key*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace NDT
      namespace NDT {
//______________________________________________________________________________
atomic_TClass_ptr value::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *value::Class_Name()
{
   return "NDT::value";
}

//______________________________________________________________________________
const char *value::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NDT::value*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int value::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::NDT::value*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void value::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NDT::value*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *value::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::NDT::value*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace NDT
//______________________________________________________________________________
atomic_TClass_ptr KVNuclDataTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVNuclDataTable::Class_Name()
{
   return "KVNuclDataTable";
}

//______________________________________________________________________________
const char *KVNuclDataTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVNuclDataTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVNuclDataTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVNuclDataTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVNuclDataTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVNuclDataTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVNuclDataTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVNuclDataTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVElementDensity::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVElementDensity::Class_Name()
{
   return "KVElementDensity";
}

//______________________________________________________________________________
const char *KVElementDensity::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVElementDensity*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVElementDensity::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVElementDensity*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVElementDensity::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVElementDensity*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVElementDensity::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVElementDensity*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVElementDensityTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVElementDensityTable::Class_Name()
{
   return "KVElementDensityTable";
}

//______________________________________________________________________________
const char *KVElementDensityTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVElementDensityTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVElementDensityTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVElementDensityTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVElementDensityTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVElementDensityTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVElementDensityTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVElementDensityTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVMassExcess::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVMassExcess::Class_Name()
{
   return "KVMassExcess";
}

//______________________________________________________________________________
const char *KVMassExcess::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVMassExcess*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVMassExcess::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVMassExcess*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVMassExcess::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVMassExcess*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVMassExcess::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVMassExcess*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVMassExcessTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVMassExcessTable::Class_Name()
{
   return "KVMassExcessTable";
}

//______________________________________________________________________________
const char *KVMassExcessTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVMassExcessTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVMassExcessTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVMassExcessTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVMassExcessTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVMassExcessTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVMassExcessTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVMassExcessTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVLifeTime::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVLifeTime::Class_Name()
{
   return "KVLifeTime";
}

//______________________________________________________________________________
const char *KVLifeTime::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVLifeTime*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVLifeTime::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVLifeTime*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVLifeTime::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVLifeTime*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVLifeTime::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVLifeTime*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVLifeTimeTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVLifeTimeTable::Class_Name()
{
   return "KVLifeTimeTable";
}

//______________________________________________________________________________
const char *KVLifeTimeTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVLifeTimeTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVLifeTimeTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVLifeTimeTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVLifeTimeTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVLifeTimeTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVLifeTimeTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVLifeTimeTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVAbundance::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVAbundance::Class_Name()
{
   return "KVAbundance";
}

//______________________________________________________________________________
const char *KVAbundance::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVAbundance*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVAbundance::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVAbundance*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVAbundance::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVAbundance*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVAbundance::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVAbundance*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVNDTManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVNDTManager::Class_Name()
{
   return "KVNDTManager";
}

//______________________________________________________________________________
const char *KVNDTManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVNDTManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVNDTManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVNDTManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVNDTManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVNDTManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVNDTManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVNDTManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVParticleCondition::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVParticleCondition::Class_Name()
{
   return "KVParticleCondition";
}

//______________________________________________________________________________
const char *KVParticleCondition::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVParticleCondition*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVParticleCondition::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVParticleCondition*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVParticleCondition::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVParticleCondition*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVParticleCondition::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVParticleCondition*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVParticle::Class_Name()
{
   return "KVParticle";
}

//______________________________________________________________________________
const char *KVParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVParticle*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVNucleus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVNucleus::Class_Name()
{
   return "KVNucleus";
}

//______________________________________________________________________________
const char *KVNucleus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVNucleus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVNucleus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVNucleus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVNucleus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVNucleus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVNucleus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVNucleus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVAbundanceTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVAbundanceTable::Class_Name()
{
   return "KVAbundanceTable";
}

//______________________________________________________________________________
const char *KVAbundanceTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVAbundanceTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVAbundanceTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVAbundanceTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVAbundanceTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVAbundanceTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVAbundanceTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVAbundanceTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimNucleus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimNucleus::Class_Name()
{
   return "KVSimNucleus";
}

//______________________________________________________________________________
const char *KVSimNucleus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimNucleus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimNucleus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimNucleus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimNucleus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimNucleus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimNucleus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimNucleus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVChargeRadiusTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVChargeRadiusTable::Class_Name()
{
   return "KVChargeRadiusTable";
}

//______________________________________________________________________________
const char *KVChargeRadiusTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeRadiusTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVChargeRadiusTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeRadiusTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVChargeRadiusTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeRadiusTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVChargeRadiusTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChargeRadiusTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVSimNucleus::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimNucleus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVSimNucleus::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVSimNucleus::Class(),this);
   }
}

//______________________________________________________________________________
void KVSimNucleus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimNucleus.
      TClass *R__cl = ::KVSimNucleus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "position", &position);
      R__insp.InspectMember(position, "position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "angmom", &angmom);
      R__insp.InspectMember(angmom, "angmom.");
      KVNucleus::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimNucleus(void *p) {
      return  p ? new(p) ::KVSimNucleus : new ::KVSimNucleus;
   }
   static void *newArray_KVSimNucleus(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimNucleus[nElements] : new ::KVSimNucleus[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimNucleus(void *p) {
      delete ((::KVSimNucleus*)p);
   }
   static void deleteArray_KVSimNucleus(void *p) {
      delete [] ((::KVSimNucleus*)p);
   }
   static void destruct_KVSimNucleus(void *p) {
      typedef ::KVSimNucleus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVSimNucleus

//______________________________________________________________________________
void KVNucleus::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVNucleus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVNucleus::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVNucleus::Class(),this);
   }
}

//______________________________________________________________________________
void KVNucleus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVNucleus.
      TClass *R__cl = ::KVNucleus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA", &fA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMassFormula", &fMassFormula);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSymbolName", &fSymbolName);
      R__insp.InspectMember(fSymbolName, "fSymbolName.");
      KVParticle::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVNucleus(void *p) {
      return  p ? new(p) ::KVNucleus : new ::KVNucleus;
   }
   static void *newArray_KVNucleus(Long_t nElements, void *p) {
      return p ? new(p) ::KVNucleus[nElements] : new ::KVNucleus[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVNucleus(void *p) {
      delete ((::KVNucleus*)p);
   }
   static void deleteArray_KVNucleus(void *p) {
      delete [] ((::KVNucleus*)p);
   }
   static void destruct_KVNucleus(void *p) {
      typedef ::KVNucleus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVNucleus

//______________________________________________________________________________
void KVParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVParticle::Class(),this);
   }
}

//______________________________________________________________________________
void KVParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVParticle.
      TClass *R__cl = ::KVParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrameName", &fFrameName);
      R__insp.InspectMember(fFrameName, "fFrameName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBoosted", &fBoosted);
      R__insp.InspectMember(fBoosted, "fBoosted.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroups", &fGroups);
      R__insp.InspectMember(fGroups, "fGroups.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fE0", &fE0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParameters", &fParameters);
      R__insp.InspectMember(fParameters, "fParameters.");
      TLorentzVector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVParticle(void *p) {
      return  p ? new(p) ::KVParticle : new ::KVParticle;
   }
   static void *newArray_KVParticle(Long_t nElements, void *p) {
      return p ? new(p) ::KVParticle[nElements] : new ::KVParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVParticle(void *p) {
      delete ((::KVParticle*)p);
   }
   static void deleteArray_KVParticle(void *p) {
      delete [] ((::KVParticle*)p);
   }
   static void destruct_KVParticle(void *p) {
      typedef ::KVParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVParticle

//______________________________________________________________________________
void KVParticleCondition::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVParticleCondition.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVParticleCondition::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVParticleCondition::Class(),this);
   }
}

//______________________________________________________________________________
void KVParticleCondition::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVParticleCondition.
      TClass *R__cl = ::KVParticleCondition::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNUsing", &fNUsing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCondition", &fCondition);
      R__insp.InspectMember(fCondition, "fCondition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCondition_raw", &fCondition_raw);
      R__insp.InspectMember(fCondition_raw, "fCondition_raw.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCondition_brackets", &fCondition_brackets);
      R__insp.InspectMember(fCondition_brackets, "fCondition_brackets.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOptimal", &fOptimal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClassName", &fClassName);
      R__insp.InspectMember(fClassName, "fClassName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cf", &cf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOptOK", &fOptOK);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVParticleCondition(void *p) {
      return  p ? new(p) ::KVParticleCondition : new ::KVParticleCondition;
   }
   static void *newArray_KVParticleCondition(Long_t nElements, void *p) {
      return p ? new(p) ::KVParticleCondition[nElements] : new ::KVParticleCondition[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVParticleCondition(void *p) {
      delete ((::KVParticleCondition*)p);
   }
   static void deleteArray_KVParticleCondition(void *p) {
      delete [] ((::KVParticleCondition*)p);
   }
   static void destruct_KVParticleCondition(void *p) {
      typedef ::KVParticleCondition current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVParticleCondition

//______________________________________________________________________________
void KVNuclData::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVNuclData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVNuclData::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVNuclData::Class(),this);
   }
}

//______________________________________________________________________________
void KVNuclData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVNuclData.
      TClass *R__cl = ::KVNuclData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kValue", &kValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVNuclData(void *p) {
      return  p ? new(p) ::KVNuclData : new ::KVNuclData;
   }
   static void *newArray_KVNuclData(Long_t nElements, void *p) {
      return p ? new(p) ::KVNuclData[nElements] : new ::KVNuclData[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVNuclData(void *p) {
      delete ((::KVNuclData*)p);
   }
   static void deleteArray_KVNuclData(void *p) {
      delete [] ((::KVNuclData*)p);
   }
   static void destruct_KVNuclData(void *p) {
      typedef ::KVNuclData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVNuclData

      namespace NDT {
//______________________________________________________________________________
void value::Streamer(TBuffer &R__b)
{
   // Stream an object of class NDT::value.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(NDT::value::Class(),this);
   } else {
      R__b.WriteClassBuffer(NDT::value::Class(),this);
   }
}

} // namespace NDT
//______________________________________________________________________________
      namespace NDT {
void value::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class NDT::value.
      TClass *R__cl = ::NDT::value::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idx", &idx);
      TObject::ShowMembers(R__insp);
}

} // namespace NDT
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_NDTcLcLvalue(void *p) {
      delete ((::NDT::value*)p);
   }
   static void deleteArray_NDTcLcLvalue(void *p) {
      delete [] ((::NDT::value*)p);
   }
   static void destruct_NDTcLcLvalue(void *p) {
      typedef ::NDT::value current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::NDT::value

      namespace NDT {
//______________________________________________________________________________
void key::Streamer(TBuffer &R__b)
{
   // Stream an object of class NDT::key.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(NDT::key::Class(),this);
   } else {
      R__b.WriteClassBuffer(NDT::key::Class(),this);
   }
}

} // namespace NDT
//______________________________________________________________________________
      namespace NDT {
void key::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class NDT::key.
      TClass *R__cl = ::NDT::key::IsA();
      if (R__cl || R__insp.IsA()) { }
      TNamed::ShowMembers(R__insp);
}

} // namespace NDT
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_NDTcLcLkey(void *p) {
      delete ((::NDT::key*)p);
   }
   static void deleteArray_NDTcLcLkey(void *p) {
      delete [] ((::NDT::key*)p);
   }
   static void destruct_NDTcLcLkey(void *p) {
      typedef ::NDT::key current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::NDT::key

//______________________________________________________________________________
void KVNuclDataTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVNuclDataTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVNuclDataTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVNuclDataTable::Class(),this);
   }
}

//______________________________________________________________________________
void KVNuclDataTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVNuclDataTable.
      TClass *R__cl = ::KVNuclDataTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cl", &cl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nucMap", &nucMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "current_idx", &current_idx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbNuc", &NbNuc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kcomments", &kcomments);
      R__insp.InspectMember(kcomments, "kcomments.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kclassname", &kclassname);
      R__insp.InspectMember(kclassname, "kclassname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tobj", &tobj);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVNuclDataTable(void *p) {
      delete ((::KVNuclDataTable*)p);
   }
   static void deleteArray_KVNuclDataTable(void *p) {
      delete [] ((::KVNuclDataTable*)p);
   }
   static void destruct_KVNuclDataTable(void *p) {
      typedef ::KVNuclDataTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVNuclDataTable

//______________________________________________________________________________
void KVNDTManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVNDTManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVNDTManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVNDTManager::Class(),this);
   }
}

//______________________________________________________________________________
void KVNDTManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVNDTManager.
      TClass *R__cl = ::KVNDTManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Arange", &Arange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Zrange", &Zrange);
      KVList::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVNDTManager(void *p) {
      return  p ? new(p) ::KVNDTManager : new ::KVNDTManager;
   }
   static void *newArray_KVNDTManager(Long_t nElements, void *p) {
      return p ? new(p) ::KVNDTManager[nElements] : new ::KVNDTManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVNDTManager(void *p) {
      delete ((::KVNDTManager*)p);
   }
   static void deleteArray_KVNDTManager(void *p) {
      delete [] ((::KVNDTManager*)p);
   }
   static void destruct_KVNDTManager(void *p) {
      typedef ::KVNDTManager current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_KVNDTManager(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::KVNDTManager*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::KVNDTManager

//______________________________________________________________________________
void KVLifeTime::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVLifeTime.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVLifeTime::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVLifeTime::Class(),this);
   }
}

//______________________________________________________________________________
void KVLifeTime::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVLifeTime.
      TClass *R__cl = ::KVLifeTime::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVNuclData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVLifeTime(void *p) {
      return  p ? new(p) ::KVLifeTime : new ::KVLifeTime;
   }
   static void *newArray_KVLifeTime(Long_t nElements, void *p) {
      return p ? new(p) ::KVLifeTime[nElements] : new ::KVLifeTime[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVLifeTime(void *p) {
      delete ((::KVLifeTime*)p);
   }
   static void deleteArray_KVLifeTime(void *p) {
      delete [] ((::KVLifeTime*)p);
   }
   static void destruct_KVLifeTime(void *p) {
      typedef ::KVLifeTime current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVLifeTime

//______________________________________________________________________________
void KVAbundance::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVAbundance.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVAbundance::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVAbundance::Class(),this);
   }
}

//______________________________________________________________________________
void KVAbundance::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVAbundance.
      TClass *R__cl = ::KVAbundance::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVNuclData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVAbundance(void *p) {
      return  p ? new(p) ::KVAbundance : new ::KVAbundance;
   }
   static void *newArray_KVAbundance(Long_t nElements, void *p) {
      return p ? new(p) ::KVAbundance[nElements] : new ::KVAbundance[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVAbundance(void *p) {
      delete ((::KVAbundance*)p);
   }
   static void deleteArray_KVAbundance(void *p) {
      delete [] ((::KVAbundance*)p);
   }
   static void destruct_KVAbundance(void *p) {
      typedef ::KVAbundance current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVAbundance

//______________________________________________________________________________
void KVChargeRadius::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVChargeRadius.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVChargeRadius::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVChargeRadius::Class(),this);
   }
}

//______________________________________________________________________________
void KVChargeRadius::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVChargeRadius.
      TClass *R__cl = ::KVChargeRadius::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fError", &fError);
      KVNuclData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVChargeRadius(void *p) {
      return  p ? new(p) ::KVChargeRadius : new ::KVChargeRadius;
   }
   static void *newArray_KVChargeRadius(Long_t nElements, void *p) {
      return p ? new(p) ::KVChargeRadius[nElements] : new ::KVChargeRadius[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVChargeRadius(void *p) {
      delete ((::KVChargeRadius*)p);
   }
   static void deleteArray_KVChargeRadius(void *p) {
      delete [] ((::KVChargeRadius*)p);
   }
   static void destruct_KVChargeRadius(void *p) {
      typedef ::KVChargeRadius current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVChargeRadius

//______________________________________________________________________________
void KVElementDensity::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVElementDensity.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVElementDensity::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVElementDensity::Class(),this);
   }
}

//______________________________________________________________________________
void KVElementDensity::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVElementDensity.
      TClass *R__cl = ::KVElementDensity::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsGas", &fIsGas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSymbol", &fSymbol);
      R__insp.InspectMember(fSymbol, "fSymbol.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fElementName", &fElementName);
      R__insp.InspectMember(fElementName, "fElementName.");
      KVNuclData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVElementDensity(void *p) {
      return  p ? new(p) ::KVElementDensity : new ::KVElementDensity;
   }
   static void *newArray_KVElementDensity(Long_t nElements, void *p) {
      return p ? new(p) ::KVElementDensity[nElements] : new ::KVElementDensity[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVElementDensity(void *p) {
      delete ((::KVElementDensity*)p);
   }
   static void deleteArray_KVElementDensity(void *p) {
      delete [] ((::KVElementDensity*)p);
   }
   static void destruct_KVElementDensity(void *p) {
      typedef ::KVElementDensity current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVElementDensity

//______________________________________________________________________________
void KVMassExcess::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVMassExcess.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVMassExcess::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVMassExcess::Class(),this);
   }
}

//______________________________________________________________________________
void KVMassExcess::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVMassExcess.
      TClass *R__cl = ::KVMassExcess::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVNuclData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVMassExcess(void *p) {
      return  p ? new(p) ::KVMassExcess : new ::KVMassExcess;
   }
   static void *newArray_KVMassExcess(Long_t nElements, void *p) {
      return p ? new(p) ::KVMassExcess[nElements] : new ::KVMassExcess[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVMassExcess(void *p) {
      delete ((::KVMassExcess*)p);
   }
   static void deleteArray_KVMassExcess(void *p) {
      delete [] ((::KVMassExcess*)p);
   }
   static void destruct_KVMassExcess(void *p) {
      typedef ::KVMassExcess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVMassExcess

//______________________________________________________________________________
void KVLifeTimeTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVLifeTimeTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVLifeTimeTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVLifeTimeTable::Class(),this);
   }
}

//______________________________________________________________________________
void KVLifeTimeTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVLifeTimeTable.
      TClass *R__cl = ::KVLifeTimeTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kNu_t", &kNu_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "conversion_t[15][15]", conversion_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kNu_e", &kNu_e);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "conversion_e[15][15]", conversion_e);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "list_t", &list_t);
      R__insp.InspectMember(list_t, "list_t.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "list_vt", &list_vt);
      R__insp.InspectMember(list_vt, "list_vt.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "list_e", &list_e);
      R__insp.InspectMember(list_e, "list_e.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "list_ve", &list_ve);
      R__insp.InspectMember(list_ve, "list_ve.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lu_t", &lu_t);
      R__insp.InspectMember(lu_t, "lu_t.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lu_e", &lu_e);
      R__insp.InspectMember(lu_e, "lu_e.");
      KVNuclDataTable::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVLifeTimeTable(void *p) {
      return  p ? new(p) ::KVLifeTimeTable : new ::KVLifeTimeTable;
   }
   static void *newArray_KVLifeTimeTable(Long_t nElements, void *p) {
      return p ? new(p) ::KVLifeTimeTable[nElements] : new ::KVLifeTimeTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVLifeTimeTable(void *p) {
      delete ((::KVLifeTimeTable*)p);
   }
   static void deleteArray_KVLifeTimeTable(void *p) {
      delete [] ((::KVLifeTimeTable*)p);
   }
   static void destruct_KVLifeTimeTable(void *p) {
      typedef ::KVLifeTimeTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVLifeTimeTable

//______________________________________________________________________________
void KVAbundanceTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVAbundanceTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVAbundanceTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVAbundanceTable::Class(),this);
   }
}

//______________________________________________________________________________
void KVAbundanceTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVAbundanceTable.
      TClass *R__cl = ::KVAbundanceTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVNuclDataTable::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVAbundanceTable(void *p) {
      return  p ? new(p) ::KVAbundanceTable : new ::KVAbundanceTable;
   }
   static void *newArray_KVAbundanceTable(Long_t nElements, void *p) {
      return p ? new(p) ::KVAbundanceTable[nElements] : new ::KVAbundanceTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVAbundanceTable(void *p) {
      delete ((::KVAbundanceTable*)p);
   }
   static void deleteArray_KVAbundanceTable(void *p) {
      delete [] ((::KVAbundanceTable*)p);
   }
   static void destruct_KVAbundanceTable(void *p) {
      typedef ::KVAbundanceTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVAbundanceTable

//______________________________________________________________________________
void KVMassExcessTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVMassExcessTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVMassExcessTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVMassExcessTable::Class(),this);
   }
}

//______________________________________________________________________________
void KVMassExcessTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVMassExcessTable.
      TClass *R__cl = ::KVMassExcessTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVNuclDataTable::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVMassExcessTable(void *p) {
      return  p ? new(p) ::KVMassExcessTable : new ::KVMassExcessTable;
   }
   static void *newArray_KVMassExcessTable(Long_t nElements, void *p) {
      return p ? new(p) ::KVMassExcessTable[nElements] : new ::KVMassExcessTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVMassExcessTable(void *p) {
      delete ((::KVMassExcessTable*)p);
   }
   static void deleteArray_KVMassExcessTable(void *p) {
      delete [] ((::KVMassExcessTable*)p);
   }
   static void destruct_KVMassExcessTable(void *p) {
      typedef ::KVMassExcessTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVMassExcessTable

//______________________________________________________________________________
void KVElementDensityTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVElementDensityTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVElementDensityTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVElementDensityTable::Class(),this);
   }
}

//______________________________________________________________________________
void KVElementDensityTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVElementDensityTable.
      TClass *R__cl = ::KVElementDensityTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVNuclDataTable::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVElementDensityTable(void *p) {
      return  p ? new(p) ::KVElementDensityTable : new ::KVElementDensityTable;
   }
   static void *newArray_KVElementDensityTable(Long_t nElements, void *p) {
      return p ? new(p) ::KVElementDensityTable[nElements] : new ::KVElementDensityTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVElementDensityTable(void *p) {
      delete ((::KVElementDensityTable*)p);
   }
   static void deleteArray_KVElementDensityTable(void *p) {
      delete [] ((::KVElementDensityTable*)p);
   }
   static void destruct_KVElementDensityTable(void *p) {
      typedef ::KVElementDensityTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVElementDensityTable

//______________________________________________________________________________
void KVChargeRadiusTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVChargeRadiusTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVChargeRadiusTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVChargeRadiusTable::Class(),this);
   }
}

//______________________________________________________________________________
void KVChargeRadiusTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVChargeRadiusTable.
      TClass *R__cl = ::KVChargeRadiusTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVNuclDataTable::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVChargeRadiusTable(void *p) {
      return  p ? new(p) ::KVChargeRadiusTable : new ::KVChargeRadiusTable;
   }
   static void *newArray_KVChargeRadiusTable(Long_t nElements, void *p) {
      return p ? new(p) ::KVChargeRadiusTable[nElements] : new ::KVChargeRadiusTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVChargeRadiusTable(void *p) {
      delete ((::KVChargeRadiusTable*)p);
   }
   static void deleteArray_KVChargeRadiusTable(void *p) {
      delete [] ((::KVChargeRadiusTable*)p);
   }
   static void destruct_KVChargeRadiusTable(void *p) {
      typedef ::KVChargeRadiusTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVChargeRadiusTable

/********************************************************
* G__KVMultiDetparticles.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVMultiDetparticles();

extern "C" void G__set_cpp_environmentG__KVMultiDetparticles() {
  G__cpp_reset_tagtableG__KVMultiDetparticles();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVMultiDetparticles() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVNuclData */
static int G__G__KVMultiDetparticles_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNuclData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNuclData[n];
     } else {
       p = new((void*) gvp) KVNuclData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNuclData;
     } else {
       p = new((void*) gvp) KVNuclData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNuclData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVNuclData((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVNuclData((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNuclData*) G__getstructoffset())->SetName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNuclData*) G__getstructoffset())->SetValue((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVNuclData*) G__getstructoffset())->GetValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVNuclData*) G__getstructoffset())->GetUnit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNuclData*) G__getstructoffset())->SetMeasured((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVNuclData*) G__getstructoffset())->IsMeasured());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVNuclData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNuclData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVNuclData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVNuclData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNuclData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNuclData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNuclData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNuclData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_184_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNuclData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_184_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVNuclData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVNuclData(*(KVNuclData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVNuclData G__TKVNuclData;
static int G__G__KVMultiDetparticles_184_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVNuclData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVNuclData*) (soff+(sizeof(KVNuclData)*i)))->~G__TKVNuclData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVNuclData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVNuclData*) (soff))->~G__TKVNuclData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_184_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNuclData* dest = (KVNuclData*) G__getstructoffset();
   *dest = *(KVNuclData*) libp->para[0].ref;
   const KVNuclData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVChargeRadius */
static int G__G__KVMultiDetparticles_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChargeRadius* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChargeRadius[n];
     } else {
       p = new((void*) gvp) KVChargeRadius[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChargeRadius;
     } else {
       p = new((void*) gvp) KVChargeRadius;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChargeRadius* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVChargeRadius((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVChargeRadius((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChargeRadius*) G__getstructoffset())->SetError((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVChargeRadius*) G__getstructoffset())->GetError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVChargeRadius::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChargeRadius::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVChargeRadius::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVChargeRadius::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChargeRadius*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChargeRadius::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChargeRadius::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChargeRadius::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChargeRadius::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVChargeRadius* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVChargeRadius(*(KVChargeRadius*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVChargeRadius G__TKVChargeRadius;
static int G__G__KVMultiDetparticles_186_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVChargeRadius*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVChargeRadius*) (soff+(sizeof(KVChargeRadius)*i)))->~G__TKVChargeRadius();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVChargeRadius*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVChargeRadius*) (soff))->~G__TKVChargeRadius();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_186_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChargeRadius* dest = (KVChargeRadius*) G__getstructoffset();
   *dest = *(KVChargeRadius*) libp->para[0].ref;
   const KVChargeRadius& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* NDT::key */
static int G__G__KVMultiDetparticles_440_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NDT::key* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new NDT::key((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) NDT::key((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_440_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NDT::key::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_440_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NDT::key::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_440_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NDT::key::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_440_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NDT::key::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_440_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NDT::key*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_440_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NDT::key::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_440_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NDT::key::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_440_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NDT::key::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_440_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NDT::key::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_440_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NDT::key* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NDT::key(*(NDT::key*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NDT::key G__TNDTcLcLkey;
static int G__G__KVMultiDetparticles_440_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NDT::key*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NDT::key*) (soff+(sizeof(NDT::key)*i)))->~G__TNDTcLcLkey();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NDT::key*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NDT::key*) (soff))->~G__TNDTcLcLkey();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_440_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NDT::key* dest = (NDT::key*) G__getstructoffset();
   *dest = *(NDT::key*) libp->para[0].ref;
   const NDT::key& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* NDT::value */
static int G__G__KVMultiDetparticles_441_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NDT::value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new NDT::value((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) NDT::value((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const NDT::value*) G__getstructoffset())->Index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NDT::value::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NDT::value::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NDT::value::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NDT::value::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NDT::value*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NDT::value::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NDT::value::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NDT::value::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_441_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NDT::value::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_441_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NDT::value* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NDT::value(*(NDT::value*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NDT::value G__TNDTcLcLvalue;
static int G__G__KVMultiDetparticles_441_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NDT::value*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NDT::value*) (soff+(sizeof(NDT::value)*i)))->~G__TNDTcLcLvalue();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NDT::value*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NDT::value*) (soff))->~G__TNDTcLcLvalue();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_441_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NDT::value* dest = (NDT::value*) G__getstructoffset();
   *dest = *(NDT::value*) libp->para[0].ref;
   const NDT::value& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVNuclDataTable */
static int G__G__KVMultiDetparticles_442_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNuclDataTable*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNuclDataTable*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNuclDataTable*) G__getstructoffset())->GiveIndexToNucleus((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVNuclDataTable*) G__getstructoffset())->IsInTable((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVNuclDataTable*) G__getstructoffset())->GetData((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVNuclDataTable*) G__getstructoffset())->GetValue((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVNuclDataTable*) G__getstructoffset())->GetUnit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVNuclDataTable*) G__getstructoffset())->IsMeasured((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVNuclDataTable*) G__getstructoffset())->GetNumberOfNuclei());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVNuclDataTable*) G__getstructoffset())->GetReadFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVString* pobj;
         const KVString xobj = ((const KVNuclDataTable*) G__getstructoffset())->GetCommentsFromFile();
         pobj = new KVString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVNuclDataTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNuclDataTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVNuclDataTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVNuclDataTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNuclDataTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNuclDataTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNuclDataTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNuclDataTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_442_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNuclDataTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVNuclDataTable G__TKVNuclDataTable;
static int G__G__KVMultiDetparticles_442_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVNuclDataTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVNuclDataTable*) (soff+(sizeof(KVNuclDataTable)*i)))->~G__TKVNuclDataTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVNuclDataTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVNuclDataTable*) (soff))->~G__TKVNuclDataTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_442_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNuclDataTable* dest = (KVNuclDataTable*) G__getstructoffset();
   *dest = *(KVNuclDataTable*) libp->para[0].ref;
   const KVNuclDataTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVElementDensity */
static int G__G__KVMultiDetparticles_443_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElementDensity* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVElementDensity[n];
     } else {
       p = new((void*) gvp) KVElementDensity[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVElementDensity;
     } else {
       p = new((void*) gvp) KVElementDensity;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElementDensity* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVElementDensity((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVElementDensity((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElementDensity* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVElementDensity(*(KVElementDensity*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVElementDensity(*(KVElementDensity*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElementDensity*) G__getstructoffset())->SetZ((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVElementDensity*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVElementDensity*) G__getstructoffset())->SetIsGas((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVElementDensity*) G__getstructoffset())->SetIsGas();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVElementDensity*) G__getstructoffset())->IsGas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElementDensity*) G__getstructoffset())->SetElementSymbol((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVElementDensity*) G__getstructoffset())->GetElementSymbol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElementDensity*) G__getstructoffset())->SetElementName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVElementDensity*) G__getstructoffset())->GetElementName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVElementDensity::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElementDensity::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVElementDensity::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVElementDensity::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElementDensity*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElementDensity::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVElementDensity::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElementDensity::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_443_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVElementDensity::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVElementDensity G__TKVElementDensity;
static int G__G__KVMultiDetparticles_443_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVElementDensity*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVElementDensity*) (soff+(sizeof(KVElementDensity)*i)))->~G__TKVElementDensity();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVElementDensity*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVElementDensity*) (soff))->~G__TKVElementDensity();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_443_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElementDensity* dest = (KVElementDensity*) G__getstructoffset();
   *dest = *(KVElementDensity*) libp->para[0].ref;
   const KVElementDensity& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVElementDensityTable */
static int G__G__KVMultiDetparticles_444_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElementDensityTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVElementDensityTable[n];
     } else {
       p = new((void*) gvp) KVElementDensityTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVElementDensityTable;
     } else {
       p = new((void*) gvp) KVElementDensityTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElementDensityTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVElementDensityTable(*(KVElementDensityTable*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVElementDensityTable(*(KVElementDensityTable*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElementDensityTable*) G__getstructoffset())->FindElementByName((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVElementDensityTable*) G__getstructoffset())->FindElementBySymbol((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVElementDensityTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElementDensityTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVElementDensityTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVElementDensityTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVElementDensityTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElementDensityTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVElementDensityTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVElementDensityTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_444_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVElementDensityTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVElementDensityTable G__TKVElementDensityTable;
static int G__G__KVMultiDetparticles_444_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVElementDensityTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVElementDensityTable*) (soff+(sizeof(KVElementDensityTable)*i)))->~G__TKVElementDensityTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVElementDensityTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVElementDensityTable*) (soff))->~G__TKVElementDensityTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_444_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVElementDensityTable* dest = (KVElementDensityTable*) G__getstructoffset();
   *dest = *(KVElementDensityTable*) libp->para[0].ref;
   const KVElementDensityTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVMassExcess */
static int G__G__KVMultiDetparticles_445_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVMassExcess* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVMassExcess[n];
     } else {
       p = new((void*) gvp) KVMassExcess[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVMassExcess;
     } else {
       p = new((void*) gvp) KVMassExcess;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVMassExcess* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVMassExcess((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVMassExcess((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVMassExcess::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVMassExcess::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVMassExcess::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVMassExcess::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMassExcess*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVMassExcess::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVMassExcess::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVMassExcess::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_445_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVMassExcess::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_445_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVMassExcess* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVMassExcess(*(KVMassExcess*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVMassExcess G__TKVMassExcess;
static int G__G__KVMultiDetparticles_445_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVMassExcess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVMassExcess*) (soff+(sizeof(KVMassExcess)*i)))->~G__TKVMassExcess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVMassExcess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVMassExcess*) (soff))->~G__TKVMassExcess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_445_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVMassExcess* dest = (KVMassExcess*) G__getstructoffset();
   *dest = *(KVMassExcess*) libp->para[0].ref;
   const KVMassExcess& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVMassExcessTable */
static int G__G__KVMultiDetparticles_446_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVMassExcessTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVMassExcessTable[n];
     } else {
       p = new((void*) gvp) KVMassExcessTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVMassExcessTable;
     } else {
       p = new((void*) gvp) KVMassExcessTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVMassExcessTable*) G__getstructoffset())->GetMassExcess((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVMassExcessTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVMassExcessTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVMassExcessTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVMassExcessTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVMassExcessTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVMassExcessTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVMassExcessTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVMassExcessTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_446_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVMassExcessTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_446_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVMassExcessTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVMassExcessTable(*(KVMassExcessTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVMassExcessTable G__TKVMassExcessTable;
static int G__G__KVMultiDetparticles_446_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVMassExcessTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVMassExcessTable*) (soff+(sizeof(KVMassExcessTable)*i)))->~G__TKVMassExcessTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVMassExcessTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVMassExcessTable*) (soff))->~G__TKVMassExcessTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_446_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVMassExcessTable* dest = (KVMassExcessTable*) G__getstructoffset();
   *dest = *(KVMassExcessTable*) libp->para[0].ref;
   const KVMassExcessTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVLifeTime */
static int G__G__KVMultiDetparticles_488_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVLifeTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVLifeTime[n];
     } else {
       p = new((void*) gvp) KVLifeTime[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVLifeTime;
     } else {
       p = new((void*) gvp) KVLifeTime;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVLifeTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVLifeTime((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVLifeTime((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVLifeTime*) G__getstructoffset())->SetResonnance((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVLifeTime*) G__getstructoffset())->IsAResonnance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVLifeTime::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLifeTime::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVLifeTime::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVLifeTime::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVLifeTime*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLifeTime::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVLifeTime::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLifeTime::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_488_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVLifeTime::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_488_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVLifeTime* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVLifeTime(*(KVLifeTime*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVLifeTime G__TKVLifeTime;
static int G__G__KVMultiDetparticles_488_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVLifeTime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVLifeTime*) (soff+(sizeof(KVLifeTime)*i)))->~G__TKVLifeTime();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVLifeTime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVLifeTime*) (soff))->~G__TKVLifeTime();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_488_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVLifeTime* dest = (KVLifeTime*) G__getstructoffset();
   *dest = *(KVLifeTime*) libp->para[0].ref;
   const KVLifeTime& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVLifeTimeTable */
static int G__G__KVMultiDetparticles_490_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVLifeTimeTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVLifeTimeTable[n];
     } else {
       p = new((void*) gvp) KVLifeTimeTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVLifeTimeTable;
     } else {
       p = new((void*) gvp) KVLifeTimeTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTimeTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVLifeTimeTable*) G__getstructoffset())->GetLifeTime((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVLifeTimeTable*) G__getstructoffset())->IsAResonnance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVLifeTimeTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLifeTimeTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVLifeTimeTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVLifeTimeTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVLifeTimeTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLifeTimeTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVLifeTimeTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLifeTimeTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_490_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVLifeTimeTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVLifeTimeTable G__TKVLifeTimeTable;
static int G__G__KVMultiDetparticles_490_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVLifeTimeTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVLifeTimeTable*) (soff+(sizeof(KVLifeTimeTable)*i)))->~G__TKVLifeTimeTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVLifeTimeTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVLifeTimeTable*) (soff))->~G__TKVLifeTimeTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVAbundance */
static int G__G__KVMultiDetparticles_491_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAbundance* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVAbundance[n];
     } else {
       p = new((void*) gvp) KVAbundance[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVAbundance;
     } else {
       p = new((void*) gvp) KVAbundance;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAbundance* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVAbundance((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVAbundance((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVAbundance::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAbundance::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVAbundance::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVAbundance::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAbundance*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAbundance::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVAbundance::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAbundance::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_491_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVAbundance::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_491_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVAbundance* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVAbundance(*(KVAbundance*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVAbundance G__TKVAbundance;
static int G__G__KVMultiDetparticles_491_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVAbundance*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVAbundance*) (soff+(sizeof(KVAbundance)*i)))->~G__TKVAbundance();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVAbundance*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVAbundance*) (soff))->~G__TKVAbundance();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_491_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAbundance* dest = (KVAbundance*) G__getstructoffset();
   *dest = *(KVAbundance*) libp->para[0].ref;
   const KVAbundance& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVNDTManager */
static int G__G__KVMultiDetparticles_493_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNDTManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNDTManager[n];
     } else {
       p = new((void*) gvp) KVNDTManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNDTManager;
     } else {
       p = new((void*) gvp) KVNDTManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVNDTManager*) G__getstructoffset())->GetTable((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVNDTManager*) G__getstructoffset())->IsInTable((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVNDTManager*) G__getstructoffset())->GetValue((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVNDTManager*) G__getstructoffset())->GetData((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVNDTManager*) G__getstructoffset())->IsMeasured((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVNDTManager*) G__getstructoffset())->GetUnit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVNDTManager*) G__getstructoffset())->PrintTables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVNDTManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNDTManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVNDTManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVNDTManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNDTManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNDTManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNDTManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNDTManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_493_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNDTManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVNDTManager G__TKVNDTManager;
static int G__G__KVMultiDetparticles_493_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVNDTManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVNDTManager*) (soff+(sizeof(KVNDTManager)*i)))->~G__TKVNDTManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVNDTManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVNDTManager*) (soff))->~G__TKVNDTManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVParticleCondition */
static int G__G__KVMultiDetparticles_552_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVParticleCondition* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVParticleCondition[n];
     } else {
       p = new((void*) gvp) KVParticleCondition[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVParticleCondition;
     } else {
       p = new((void*) gvp) KVParticleCondition;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVParticleCondition* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVParticleCondition(*(KVParticleCondition*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVParticleCondition(*(KVParticleCondition*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVParticleCondition* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVParticleCondition((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVParticleCondition((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticleCondition*) G__getstructoffset())->Set((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVParticleCondition*) G__getstructoffset())->Test((KVNucleus*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticleCondition*) G__getstructoffset())->SetParticleClassName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticleCondition*) G__getstructoffset())->AddExtraInclude((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVParticleCondition& obj = ((KVParticleCondition*) G__getstructoffset())->operator=(*(KVParticleCondition*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVParticleCondition& obj = ((KVParticleCondition*) G__getstructoffset())->operator=((const Char_t*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVParticleCondition* pobj;
         KVParticleCondition xobj = ((KVParticleCondition*) G__getstructoffset())->operator&&(*(KVParticleCondition*) libp->para[0].ref);
         pobj = new KVParticleCondition(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVParticleCondition* pobj;
         KVParticleCondition xobj = ((KVParticleCondition*) G__getstructoffset())->operator||(*(KVParticleCondition*) libp->para[0].ref);
         pobj = new KVParticleCondition(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVParticleCondition::PrintOptimizedList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVParticleCondition::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVParticleCondition::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVParticleCondition::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVParticleCondition::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticleCondition*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVParticleCondition::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVParticleCondition::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVParticleCondition::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_552_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVParticleCondition::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVParticleCondition G__TKVParticleCondition;
static int G__G__KVMultiDetparticles_552_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVParticleCondition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVParticleCondition*) (soff+(sizeof(KVParticleCondition)*i)))->~G__TKVParticleCondition();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVParticleCondition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVParticleCondition*) (soff))->~G__TKVParticleCondition();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVParticle */
static int G__G__KVMultiDetparticles_553_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVParticle*) G__getstructoffset())->HasFrame((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVParticle*) G__getstructoffset())->GetNumberOfDefinedFrames());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVParticle*) G__getstructoffset())->GetNumberOfDefinedGroups());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVParticle*) G__getstructoffset())->GetGroups());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVParticle::C());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVParticle[n];
     } else {
       p = new((void*) gvp) KVParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVParticle;
     } else {
       p = new((void*) gvp) KVParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVParticle((Double_t) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) KVParticle((Double_t) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) KVParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVParticle(*(KVParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVParticle(*(KVParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetMomentum((TVector3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((KVParticle*) G__getstructoffset())->SetMomentum((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Option_t*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVParticle*) G__getstructoffset())->SetMomentum((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetMomentum((Double_t) G__double(libp->para[0]), *((TVector3*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((KVParticle*) G__getstructoffset())->SetRandomMomentum((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Option_t*) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((KVParticle*) G__getstructoffset())->SetRandomMomentum((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->Set4Mom(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetE((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetKE((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetVelocity(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const KVParticle*) G__getstructoffset())->GetMomentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetKE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetTransverseEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetEtran());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetRTransverseEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetREtran());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const KVParticle*) G__getstructoffset())->GetVelocity();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const KVParticle*) G__getstructoffset())->GetV();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetVpar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetVperp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVParticle*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVParticle*) G__getstructoffset())->IsOK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVParticle*) G__getstructoffset())->SetIsOK((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVParticle*) G__getstructoffset())->SetIsOK();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->ResetIsOK();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVParticle*) G__getstructoffset())->GetListOfFrames());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVParticle*) G__getstructoffset())->SetE0((TVector3*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVParticle*) G__getstructoffset())->SetE0();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVParticle*) G__getstructoffset())->GetPInitial());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetIsDetected();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVParticle*) G__getstructoffset())->IsDetected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVParticle& obj = ((KVParticle*) G__getstructoffset())->operator=(*(KVParticle*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->ResetEnergy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVParticle*) G__getstructoffset())->AddGroup((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVParticle*) G__getstructoffset())->AddGroup((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->AddGroup((const Char_t*) G__int(libp->para[0]), (KVParticleCondition*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVParticle*) G__getstructoffset())->BelongsToGroup((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->RemoveGroup((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->RemoveAllGroups();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVParticle*) G__getstructoffset())->ListGroups();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), *(TLorentzRotation*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), *(TRotation*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref
, *(TRotation*) libp->para[2].ref, (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref
, *(TRotation*) libp->para[2].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, *(TLorentzRotation*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, *(TRotation*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TRotation*) libp->para[3].ref
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((KVParticle*) G__getstructoffset())->SetFrame((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TRotation*) libp->para[3].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVParticle*) G__getstructoffset())->GetFrame((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVParticle*) G__getstructoffset())->GetFrameName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->SetFrameName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVParticle*) G__getstructoffset())->GetParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_553_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVParticle G__TKVParticle;
static int G__G__KVMultiDetparticles_553_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVParticle*) (soff+(sizeof(KVParticle)*i)))->~G__TKVParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVParticle*) (soff))->~G__TKVParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVNucleus */
static int G__G__KVMultiDetparticles_558_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVNucleus::u());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->SetMassFormula((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVNucleus*) G__getstructoffset())->GetMassFormula());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNucleus[n];
     } else {
       p = new((void*) gvp) KVNucleus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNucleus;
     } else {
       p = new((void*) gvp) KVNucleus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVNucleus(*(KVNucleus*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVNucleus(*(KVNucleus*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNucleus(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) KVNucleus(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNucleus((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVNucleus((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNucleus((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVNucleus((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVNucleus(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(TVector3*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) KVNucleus(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(TVector3*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVNucleus(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TVector3*) G__int(libp->para[2])));
   } else {
     p = new((void*) gvp) KVNucleus(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TVector3*) G__int(libp->para[2])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNucleus((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) KVNucleus((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVNucleus((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVNucleus((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNucleus::GetAFromZ((Double_t) G__double(libp->para[0]), (Char_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNucleus::GetNFromZ((Double_t) G__double(libp->para[0]), (Char_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVNucleus::GetRealAFromZ((Double_t) G__double(libp->para[0]), (Char_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVNucleus::GetRealNFromZ((Double_t) G__double(libp->para[0]), (Char_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((const KVNucleus*) G__getstructoffset())->GetSymbol((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((const KVNucleus*) G__getstructoffset())->GetSymbol());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNucleus::GetZFromSymbol((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->SetZFromSymbol((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->Set((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNucleus::IsMassGiven((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVNucleus*) G__getstructoffset())->SetZ((Int_t) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVNucleus*) G__getstructoffset())->SetZ((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->SetA((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->SetN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->SetZandA((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->SetZandN((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->SetZAandE((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVNucleus*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVNucleus*) G__getstructoffset())->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVNucleus*) G__getstructoffset())->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetAsurZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetNsurZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetChargeAsymetry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVNucleus*) G__getstructoffset())->GetEnergyPerNucleon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVNucleus*) G__getstructoffset())->GetAMeV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVNucleus*) G__getstructoffset())->CheckZAndA(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetMassExcess((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetMassExcess((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetMassExcess());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetExtraMassExcess((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetExtraMassExcess((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetExtraMassExcess());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetMassExcessPtr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetMassExcessPtr((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetMassExcessPtr());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetAtomicMass((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetAtomicMass((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetAtomicMass());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetNaturalA((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetNaturalA());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetBindingEnergy((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetBindingEnergy((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetBindingEnergy());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetBindingEnergyPerNucleon((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetBindingEnergyPerNucleon((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetBindingEnergyPerNucleon());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const KVNumberList* pobj;
         const KVNumberList xobj = ((const KVNucleus*) G__getstructoffset())->GetKnownARange((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const KVNumberList* pobj;
         const KVNumberList xobj = ((const KVNucleus*) G__getstructoffset())->GetKnownARange((Int_t) G__int(libp->para[0]));
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const KVNumberList* pobj;
         const KVNumberList xobj = ((const KVNucleus*) G__getstructoffset())->GetKnownARange();
         pobj = new KVNumberList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 67, (long) ((const KVNucleus*) G__getstructoffset())->GetIsotopesList((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((const KVNucleus*) G__getstructoffset())->GetIsotopesList((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((KVNucleus*) G__getstructoffset())->GetAWithMaxBindingEnergy((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((KVNucleus*) G__getstructoffset())->GetAWithMaxBindingEnergy());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVNucleus::LiquidDrop_BrackGuet((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const KVNucleus*) G__getstructoffset())->IsKnown((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const KVNucleus*) G__getstructoffset())->IsKnown((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const KVNucleus*) G__getstructoffset())->IsKnown());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((const KVNucleus*) G__getstructoffset())->IsStable((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const KVNucleus*) G__getstructoffset())->IsStable());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVNucleus*) G__getstructoffset())->IsResonance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->SetExcitEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetExcitEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetMassGS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetLifeTime((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetLifeTime((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetLifeTime());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetLifeTimePtr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetLifeTimePtr((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetLifeTimePtr());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetAbundance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetAbundance((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetAbundance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetAbundancePtr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetAbundancePtr((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetAbundancePtr());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const KVNucleus*) G__getstructoffset())->GetMostAbundantA((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const KVNucleus*) G__getstructoffset())->GetMostAbundantA());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetChargeRadius((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetChargeRadius((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetChargeRadius());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetChargeRadiusPtr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetChargeRadiusPtr((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const KVNucleus*) G__getstructoffset())->GetChargeRadiusPtr());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetExtraChargeRadius((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetExtraChargeRadius((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetExtraChargeRadius((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVNucleus*) G__getstructoffset())->GetExtraChargeRadius());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVNucleus& obj = ((KVNucleus*) G__getstructoffset())->operator=(*(KVNucleus*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVNucleus* pobj;
         KVNucleus xobj = ((KVNucleus*) G__getstructoffset())->operator+(*(KVNucleus*) libp->para[0].ref);
         pobj = new KVNucleus(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVNucleus* pobj;
         KVNucleus xobj = ((KVNucleus*) G__getstructoffset())->operator-(*(KVNucleus*) libp->para[0].ref);
         pobj = new KVNucleus(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVNucleus& obj = ((KVNucleus*) G__getstructoffset())->operator+=(*(KVNucleus*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVNucleus& obj = ((KVNucleus*) G__getstructoffset())->operator-=(*(KVNucleus*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((KVNucleus*) G__getstructoffset())->DeduceEincFromBrho((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((KVNucleus*) G__getstructoffset())->DeduceEincFromBrho((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVNucleus*) G__getstructoffset())->GetRelativeVelocity((KVNucleus*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((KVNucleus*) G__getstructoffset())->GetViolaVelocity((KVNucleus*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((KVNucleus*) G__getstructoffset())->GetViolaVelocity((KVNucleus*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVNucleus*) G__getstructoffset())->GetViolaVelocity());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVNucleus::vrelHinde1987((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVNucleus::vrelViola1985((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVNucleus::vrelViola1966((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVNucleus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNucleus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVNucleus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVNucleus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVNucleus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNucleus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNucleus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVNucleus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_558_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVNucleus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVNucleus G__TKVNucleus;
static int G__G__KVMultiDetparticles_558_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVNucleus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVNucleus*) (soff+(sizeof(KVNucleus)*i)))->~G__TKVNucleus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVNucleus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVNucleus*) (soff))->~G__TKVNucleus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVAbundanceTable */
static int G__G__KVMultiDetparticles_562_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAbundanceTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVAbundanceTable[n];
     } else {
       p = new((void*) gvp) KVAbundanceTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVAbundanceTable;
     } else {
       p = new((void*) gvp) KVAbundanceTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVAbundanceTable*) G__getstructoffset())->GetAbundance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVAbundanceTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAbundanceTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVAbundanceTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVAbundanceTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAbundanceTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAbundanceTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVAbundanceTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAbundanceTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_562_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVAbundanceTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_562_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVAbundanceTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVAbundanceTable(*(KVAbundanceTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVAbundanceTable G__TKVAbundanceTable;
static int G__G__KVMultiDetparticles_562_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVAbundanceTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVAbundanceTable*) (soff+(sizeof(KVAbundanceTable)*i)))->~G__TKVAbundanceTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVAbundanceTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVAbundanceTable*) (soff))->~G__TKVAbundanceTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_562_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAbundanceTable* dest = (KVAbundanceTable*) G__getstructoffset();
   *dest = *(KVAbundanceTable*) libp->para[0].ref;
   const KVAbundanceTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimNucleus */
static int G__G__KVMultiDetparticles_563_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimNucleus[n];
     } else {
       p = new((void*) gvp) KVSimNucleus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimNucleus;
     } else {
       p = new((void*) gvp) KVSimNucleus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimNucleus(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) KVSimNucleus(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimNucleus((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVSimNucleus((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimNucleus((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVSimNucleus((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimNucleus(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(TVector3*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) KVSimNucleus(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(TVector3*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimNucleus(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TVector3*) G__int(libp->para[2])));
   } else {
     p = new((void*) gvp) KVSimNucleus(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TVector3*) G__int(libp->para[2])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimNucleus* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimNucleus((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVSimNucleus((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimNucleus*) G__getstructoffset())->SetPosition((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVSimNucleus*) G__getstructoffset())->GetPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimNucleus*) G__getstructoffset())->SetAngMom((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVSimNucleus*) G__getstructoffset())->GetAngMom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimNucleus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimNucleus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimNucleus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimNucleus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimNucleus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimNucleus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimNucleus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimNucleus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_563_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimNucleus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimNucleus G__TKVSimNucleus;
static int G__G__KVMultiDetparticles_563_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimNucleus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimNucleus*) (soff+(sizeof(KVSimNucleus)*i)))->~G__TKVSimNucleus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimNucleus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimNucleus*) (soff))->~G__TKVSimNucleus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVChargeRadiusTable */
static int G__G__KVMultiDetparticles_564_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChargeRadiusTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChargeRadiusTable[n];
     } else {
       p = new((void*) gvp) KVChargeRadiusTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChargeRadiusTable;
     } else {
       p = new((void*) gvp) KVChargeRadiusTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVChargeRadiusTable*) G__getstructoffset())->GetChargeRadius((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVChargeRadiusTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChargeRadiusTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVChargeRadiusTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVChargeRadiusTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChargeRadiusTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChargeRadiusTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChargeRadiusTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChargeRadiusTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetparticles_564_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChargeRadiusTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetparticles_564_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVChargeRadiusTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVChargeRadiusTable(*(KVChargeRadiusTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVChargeRadiusTable G__TKVChargeRadiusTable;
static int G__G__KVMultiDetparticles_564_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVChargeRadiusTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVChargeRadiusTable*) (soff+(sizeof(KVChargeRadiusTable)*i)))->~G__TKVChargeRadiusTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVChargeRadiusTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVChargeRadiusTable*) (soff))->~G__TKVChargeRadiusTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetparticles_564_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChargeRadiusTable* dest = (KVChargeRadiusTable*) G__getstructoffset();
   *dest = *(KVChargeRadiusTable*) libp->para[0].ref;
   const KVChargeRadiusTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVNuclData */

/* KVChargeRadius */

/* NDT::key */

/* NDT::value */

/* KVNuclDataTable */

/* KVElementDensity */

/* KVElementDensityTable */

/* KVMassExcess */

/* KVMassExcessTable */

/* KVLifeTime */

/* KVLifeTimeTable */

/* KVAbundance */

/* KVNDTManager */

/* KVParticleCondition */

/* KVParticle */

/* KVNucleus */

/* KVAbundanceTable */

/* KVSimNucleus */

/* KVChargeRadiusTable */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVMultiDetparticles {
 public:
  G__Sizep2memfuncG__KVMultiDetparticles(): p(&G__Sizep2memfuncG__KVMultiDetparticles::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVMultiDetparticles::*p)();
};

size_t G__get_sizep2memfuncG__KVMultiDetparticles()
{
  G__Sizep2memfuncG__KVMultiDetparticles a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVMultiDetparticles() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData))) {
     KVNuclData *G__Lderived;
     G__Lderived=(KVNuclData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius))) {
     KVChargeRadius *G__Lderived;
     G__Lderived=(KVChargeRadius*)0x1000;
     {
       KVNuclData *G__Lpbase=(KVNuclData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey))) {
     NDT::key *G__Lderived;
     G__Lderived=(NDT::key*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue))) {
     NDT::value *G__Lderived;
     G__Lderived=(NDT::value*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable))) {
     KVNuclDataTable *G__Lderived;
     G__Lderived=(KVNuclDataTable*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity))) {
     KVElementDensity *G__Lderived;
     G__Lderived=(KVElementDensity*)0x1000;
     {
       KVNuclData *G__Lpbase=(KVNuclData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable))) {
     KVElementDensityTable *G__Lderived;
     G__Lderived=(KVElementDensityTable*)0x1000;
     {
       KVNuclDataTable *G__Lpbase=(KVNuclDataTable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess))) {
     KVMassExcess *G__Lderived;
     G__Lderived=(KVMassExcess*)0x1000;
     {
       KVNuclData *G__Lpbase=(KVNuclData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable))) {
     KVMassExcessTable *G__Lderived;
     G__Lderived=(KVMassExcessTable*)0x1000;
     {
       KVNuclDataTable *G__Lpbase=(KVNuclDataTable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime))) {
     KVLifeTime *G__Lderived;
     G__Lderived=(KVLifeTime*)0x1000;
     {
       KVNuclData *G__Lpbase=(KVNuclData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTimeTable))) {
     KVLifeTimeTable *G__Lderived;
     G__Lderived=(KVLifeTimeTable*)0x1000;
     {
       KVNuclDataTable *G__Lpbase=(KVNuclDataTable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTimeTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTimeTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTimeTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance))) {
     KVAbundance *G__Lderived;
     G__Lderived=(KVAbundance*)0x1000;
     {
       KVNuclData *G__Lpbase=(KVNuclData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager))) {
     KVNDTManager *G__Lderived;
     G__Lderived=(KVNDTManager*)0x1000;
     {
       KVList *G__Lpbase=(KVList*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVList),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVSeqCollection *G__Lpbase=(KVSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TSeqCollection *G__Lpbase=(TSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCollection *G__Lpbase=(TCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition))) {
     KVParticleCondition *G__Lderived;
     G__Lderived=(KVParticleCondition*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle))) {
     KVParticle *G__Lderived;
     G__Lderived=(KVParticle*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus))) {
     KVNucleus *G__Lderived;
     G__Lderived=(KVNucleus*)0x1000;
     {
       KVParticle *G__Lpbase=(KVParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable))) {
     KVAbundanceTable *G__Lderived;
     G__Lderived=(KVAbundanceTable*)0x1000;
     {
       KVNuclDataTable *G__Lpbase=(KVNuclDataTable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus))) {
     KVSimNucleus *G__Lderived;
     G__Lderived=(KVSimNucleus*)0x1000;
     {
       KVNucleus *G__Lpbase=(KVNucleus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVParticle *G__Lpbase=(KVParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable))) {
     KVChargeRadiusTable *G__Lderived;
     G__Lderived=(KVChargeRadiusTable*)0x1000;
     {
       KVNuclDataTable *G__Lpbase=(KVNuclDataTable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable),G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVMultiDetparticles() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVNuclData */
static void G__setup_memvarKVNuclData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData));
   { KVNuclData *p; p=(KVNuclData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"kValue=",0,"numerical value");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TString),-1,-1,4,"fName=",0,"name of the object");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDatacLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kMeasured=%lldLL",(long long)KVNuclData::kMeasured).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVChargeRadius */
static void G__setup_memvarKVChargeRadius(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius));
   { KVChargeRadius *p; p=(KVChargeRadius*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fError=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* NDT::key */
static void G__setup_memvarNDTcLcLkey(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey));
   { NDT::key *p; p=(NDT::key*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* NDT::value */
static void G__setup_memvarNDTcLcLvalue(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue));
   { NDT::value *p; p=(NDT::value*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"idx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVNuclDataTable */
static void G__setup_memvarKVNuclDataTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable));
   { KVNuclDataTable *p; p=(KVNuclDataTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),-1,-1,2,"cl=",0,"pointeur pour gerer les heritages de classes de KVNuclData");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TMap),-1,-1,2,"nucMap=",0,"mapping (Z,A) -> nucleus index");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"current_idx=",0,"current index");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"NbNuc=",0,"nbre de noyaux presents dans la table");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"kcomments=",0,"Commentaire provenant de la lecture fichier");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"kclassname=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObjArray),-1,-1,2,"tobj=",0,"! array where all nucldata objects are");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVElementDensity */
static void G__setup_memvarKVElementDensity(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity));
   { KVElementDensity *p; p=(KVElementDensity*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsGas=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TString),-1,-1,4,"fSymbol=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TString),-1,-1,4,"fElementName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVElementDensityTable */
static void G__setup_memvarKVElementDensityTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable));
   { KVElementDensityTable *p; p=(KVElementDensityTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVMassExcess */
static void G__setup_memvarKVMassExcess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess));
   { KVMassExcess *p; p=(KVMassExcess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVMassExcessTable */
static void G__setup_memvarKVMassExcessTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable));
   { KVMassExcessTable *p; p=(KVMassExcessTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVLifeTime */
static void G__setup_memvarKVLifeTime(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime));
   { KVLifeTime *p; p=(KVLifeTime*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTimecLcLEStatusBits),-1,-2,1,G__FastAllocString(2048).Format("kResonnance=%lldLL",(long long)KVLifeTime::kResonnance).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVLifeTimeTable */
static void G__setup_memvarKVLifeTimeTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTimeTable));
   { KVLifeTimeTable *p; p=(KVLifeTimeTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kNu_t=",0,"!number of possible time units");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"conversion_t[15][15]=",0,"matrice kNu_t*kNu_t to convert a life time from one unit to an other one");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kNu_e=",0,"!number of possible energy units (resonnance)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"conversion_e[15][15]=",0,"matrice kNu_e*kNu_e to convert");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"list_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"list_vt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"list_e=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"list_ve=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNameValueList),-1,-1,2,"lu_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNameValueList),-1,-1,2,"lu_e=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVAbundance */
static void G__setup_memvarKVAbundance(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance));
   { KVAbundance *p; p=(KVAbundance*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVNDTManager */
static void G__setup_memvarKVNDTManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager));
   { KVNDTManager *p; p=(KVNDTManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObjArray),-1,-1,2,"Arange=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TObjArray),-1,-1,2,"Zrange=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVParticleCondition */
static void G__setup_memvarKVParticleCondition(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition));
   { KVParticleCondition *p; p=(KVParticleCondition*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVHashList),-1,-2,4,"fgOptimized=",0,"list of optimized particle conditions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNUsing=",0,"! number of classes using this as an optimized condition");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"fCondition=",0,"string containing selection criteria with \";\" at end");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"fCondition_raw=",0,"'raw' condition, i.e. no ';'");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"fCondition_brackets=",0,"condition with '(' and ')' around it");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition),-1,-1,2,"fOptimal=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString),-1,-1,2,"fClassName=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVClassFactory),-1,-1,2,"cf=",0,"! used to generate code for optimisation");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fOptOK=",0,"!false if optimisation failed (can't load generated code)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVParticle */
static void G__setup_memvarKVParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle));
   { KVParticle *p; p=(KVParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TString),-1,-1,4,"fName=",0,"!non-persistent name field - Is useful");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TString),-1,-1,4,"fFrameName=",0,"!non-persistent frame name field, sets when calling SetFrame method");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVList),-1,-1,4,"fBoosted=",0,"!list of momenta of the particle in different Lorentz-boosted frames");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVUniqueNameList),-1,-1,4,"fGroups=",0,"!list of TObjString for manage different group name");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"kSpeedOfLight=",0,"speed of light in cm/ns");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVector3),-1,-1,2,"fE0=",0,"the momentum of the particle before it is slowed/stopped by an absorber");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNameValueList),-1,-1,2,"fParameters=",0,"a general-purpose list of parameters associated with this particle");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticlecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsOK=%lldLL",(long long)KVParticle::kIsOK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticlecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsOKSet=%lldLL",(long long)KVParticle::kIsOKSet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticlecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsDetected=%lldLL",(long long)KVParticle::kIsDetected).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVNucleus */
static void G__setup_memvarKVNucleus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus));
   { KVNucleus *p; p=(KVNucleus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"fA=",0,"nuclear mass number");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"fZ=",0,"nuclear charge number (atomic number)");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"fMassFormula=",0,"mass formula for calculating A from Z");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-2,4,"fNb_nuc=",0,"!counts number of existing KVNucleus objects");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-2,4,"fElements[][3]=",0,"!symbols of chemical elements");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TString),-1,-1,4,"fSymbolName=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,4,"kIsHeavy=131072LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kBetaMass=%lldLL",(long long)KVNucleus::kBetaMass).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kVedaMass=%lldLL",(long long)KVNucleus::kVedaMass).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kEALMass=%lldLL",(long long)KVNucleus::kEALMass).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kEALResMass=%lldLL",(long long)KVNucleus::kEALResMass).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kEPAXMass=%lldLL",(long long)KVNucleus::kEPAXMass).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kLDModel=%lldLL",(long long)KVNucleus::kLDModel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kEMPFunc=%lldLL",(long long)KVNucleus::kEMPFunc).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kELTON=%lldLL",(long long)KVNucleus::kELTON).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kDefaultFormula=%lldLL",(long long)KVNucleus::kDefaultFormula).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kHinde1987=%lldLL",(long long)KVNucleus::kHinde1987).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kViola1985=%lldLL",(long long)KVNucleus::kViola1985).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kViola1966=%lldLL",(long long)KVNucleus::kViola1966).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&KVNucleus::kAMU),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"kAMU=",0,"atomic mass unit in MeV");
   G__memvar_setup((void*)(&KVNucleus::kMe),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"kMe=",0,"electron mass in MeV/c2");
   G__memvar_setup((void*)(&KVNucleus::hbar),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"hbar=",0,"hbar*c in MeV.fm");
   G__memvar_setup((void*)(&KVNucleus::e2),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"e2=",0,"e^2/(4.pi.epsilon_0) in MeV.fm");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVAbundanceTable */
static void G__setup_memvarKVAbundanceTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable));
   { KVAbundanceTable *p; p=(KVAbundanceTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimNucleus */
static void G__setup_memvarKVSimNucleus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus));
   { KVSimNucleus *p; p=(KVSimNucleus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVector3),-1,-1,2,"position=",0,"vector position of the particle in fm");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVector3),-1,-1,2,"angmom=",0,"angular momentum of the particle in ???");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVChargeRadiusTable */
static void G__setup_memvarKVChargeRadiusTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable));
   { KVChargeRadiusTable *p; p=(KVChargeRadiusTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVMultiDetparticles() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVNuclData(void) {
   /* KVNuclData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVNuclData",941,G__G__KVMultiDetparticles_184_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVNuclData",941,G__G__KVMultiDetparticles_184_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__G__KVMultiDetparticles_184_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__G__KVMultiDetparticles_184_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,G__G__KVMultiDetparticles_184_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnit",704,G__G__KVMultiDetparticles_184_0_8, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMeasured",1122,G__G__KVMultiDetparticles_184_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - measured", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMeasured",1010,G__G__KVMultiDetparticles_184_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_184_0_12, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVNuclData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_184_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNuclData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_184_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVNuclData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_184_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVNuclData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_184_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_184_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNuclData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_184_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVNuclData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_184_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNuclData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_184_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVNuclData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVNuclData", 941, G__G__KVMultiDetparticles_184_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData), -1, 0, 1, 1, 1, 0, "u 'KVNuclData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVNuclData", 1067, G__G__KVMultiDetparticles_184_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_184_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData), -1, 1, 1, 1, 1, 0, "u 'KVNuclData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVChargeRadius(void) {
   /* KVChargeRadius */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVChargeRadius",1363,G__G__KVMultiDetparticles_186_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVChargeRadius",1363,G__G__KVMultiDetparticles_186_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetError",822,G__G__KVMultiDetparticles_186_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetError",810,G__G__KVMultiDetparticles_186_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnit",704,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_186_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVChargeRadius::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_186_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChargeRadius::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_186_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVChargeRadius::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_186_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVChargeRadius::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_186_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_186_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChargeRadius::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_186_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChargeRadius::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_186_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChargeRadius::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_186_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChargeRadius::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVChargeRadius", 1363, G__G__KVMultiDetparticles_186_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius), -1, 0, 1, 1, 1, 0, "u 'KVChargeRadius' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVChargeRadius", 1489, G__G__KVMultiDetparticles_186_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_186_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius), -1, 1, 1, 1, 1, 0, "u 'KVChargeRadius' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDTcLcLkey(void) {
   /* NDT::key */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey));
   G__memfunc_setup("key",329,G__G__KVMultiDetparticles_440_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey), -1, 0, 2, 1, 1, 0, 
"i - - 0 - z i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_440_0_2, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&NDT::key::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_440_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NDT::key::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_440_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&NDT::key::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_440_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&NDT::key::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_440_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_440_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NDT::key::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_440_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NDT::key::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_440_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NDT::key::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_440_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NDT::key::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("key", 329, G__G__KVMultiDetparticles_440_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey), -1, 0, 1, 1, 1, 0, "u 'NDT::key' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~key", 455, G__G__KVMultiDetparticles_440_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_440_0_16, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLkey), -1, 1, 1, 1, 1, 0, "u 'NDT::key' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDTcLcLvalue(void) {
   /* NDT::value */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue));
   G__memfunc_setup("value",541,G__G__KVMultiDetparticles_441_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Index",504,G__G__KVMultiDetparticles_441_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_441_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&NDT::value::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_441_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NDT::value::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_441_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&NDT::value::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_441_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&NDT::value::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_441_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_441_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NDT::value::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_441_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NDT::value::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_441_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NDT::value::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_441_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NDT::value::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("value", 541, G__G__KVMultiDetparticles_441_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue), -1, 0, 1, 1, 1, 0, "u 'NDT::value' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~value", 667, G__G__KVMultiDetparticles_441_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_441_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue), -1, 1, 1, 1, 1, 0, "u 'NDT::value' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVNuclDataTable(void) {
   /* KVNuclDataTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable));
   G__memfunc_setup("GetCurrent",1027,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateTable",1084,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - ntot", "Creation of the table", (void*) NULL, 0);
   G__memfunc_setup("CreateElement",1310,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - idx", "a new KVNuclData pointeur is created and added", (void*) NULL, 0);
   G__memfunc_setup("InfoOnMeasured",1407,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNDTvalue",1091,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue), -1, 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,G__G__KVMultiDetparticles_442_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__G__KVMultiDetparticles_442_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GiveIndexToNucleus",1829,G__G__KVMultiDetparticles_442_0_10, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa "
"i - 'Int_t' 0 - ntot", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInTable",859,G__G__KVMultiDetparticles_442_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__G__KVMultiDetparticles_442_0_12, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,G__G__KVMultiDetparticles_442_0_13, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnit",704,G__G__KVMultiDetparticles_442_0_14, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 1, 9, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMeasured",1010,G__G__KVMultiDetparticles_442_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfNuclei",1694,G__G__KVMultiDetparticles_442_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadFileName",1437,G__G__KVMultiDetparticles_442_0_17, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCommentsFromFile",1914,G__G__KVMultiDetparticles_442_0_18, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_442_0_19, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVNuclDataTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_442_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNuclDataTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_442_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVNuclDataTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_442_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVNuclDataTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_442_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_442_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNuclDataTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_442_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVNuclDataTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_442_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNuclDataTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_442_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVNuclDataTable::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVNuclDataTable", 1555, G__G__KVMultiDetparticles_442_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_442_0_32, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable), -1, 1, 1, 1, 1, 0, "u 'KVNuclDataTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVElementDensity(void) {
   /* KVElementDensity */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity));
   G__memfunc_setup("KVElementDensity",1611,G__G__KVMultiDetparticles_443_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVElementDensity",1611,G__G__KVMultiDetparticles_443_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVElementDensity",1611,G__G__KVMultiDetparticles_443_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity), -1, 0, 1, 1, 1, 0, "u 'KVElementDensity' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZ",390,G__G__KVMultiDetparticles_443_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__G__KVMultiDetparticles_443_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsGas",771,G__G__KVMultiDetparticles_443_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGas",471,G__G__KVMultiDetparticles_443_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetElementSymbol",1644,G__G__KVMultiDetparticles_443_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetElementSymbol",1632,G__G__KVMultiDetparticles_443_0_10, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetElementName",1399,G__G__KVMultiDetparticles_443_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - en", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetElementName",1387,G__G__KVMultiDetparticles_443_0_12, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_443_0_14, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVElementDensity::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_443_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElementDensity::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_443_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVElementDensity::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_443_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVElementDensity::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_443_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_443_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElementDensity::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_443_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVElementDensity::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_443_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElementDensity::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_443_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVElementDensity::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVElementDensity", 1737, G__G__KVMultiDetparticles_443_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_443_0_27, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity), -1, 1, 1, 1, 1, 0, "u 'KVElementDensity' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVElementDensityTable(void) {
   /* KVElementDensityTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable));
   G__memfunc_setup("getNDTvalue",1091,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue), -1, 0, 2, 1, 4, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVElementDensityTable",2099,G__G__KVMultiDetparticles_444_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVElementDensityTable",2099,G__G__KVMultiDetparticles_444_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable), -1, 0, 1, 1, 1, 0, "u 'KVElementDensityTable' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GiveIndexToNucleus",1829,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa "
"i - 'Int_t' 0 - ntot", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindElementByName",1671,G__G__KVMultiDetparticles_444_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindElementBySymbol",1916,G__G__KVMultiDetparticles_444_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensity), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_444_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVElementDensityTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_444_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElementDensityTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_444_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVElementDensityTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_444_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVElementDensityTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_444_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_444_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElementDensityTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_444_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVElementDensityTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_444_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVElementDensityTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_444_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVElementDensityTable::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVElementDensityTable", 2225, G__G__KVMultiDetparticles_444_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_444_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVElementDensityTable), -1, 1, 1, 1, 1, 0, "u 'KVElementDensityTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVMassExcess(void) {
   /* KVMassExcess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "do nothing", (void*) NULL, 0);
   G__memfunc_setup("KVMassExcess",1184,G__G__KVMultiDetparticles_445_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVMassExcess",1184,G__G__KVMultiDetparticles_445_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnit",704,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_445_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVMassExcess::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_445_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVMassExcess::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_445_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVMassExcess::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_445_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVMassExcess::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_445_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_445_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVMassExcess::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_445_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVMassExcess::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_445_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVMassExcess::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_445_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVMassExcess::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVMassExcess", 1184, G__G__KVMultiDetparticles_445_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess), -1, 0, 1, 1, 1, 0, "u 'KVMassExcess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVMassExcess", 1310, G__G__KVMultiDetparticles_445_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_445_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess), -1, 1, 1, 1, 1, 0, "u 'KVMassExcess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVMassExcessTable(void) {
   /* KVMassExcessTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVMassExcessTable",1672,G__G__KVMultiDetparticles_446_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMassExcess",1311,G__G__KVMultiDetparticles_446_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_446_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVMassExcessTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_446_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVMassExcessTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_446_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVMassExcessTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_446_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVMassExcessTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_446_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_446_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVMassExcessTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_446_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVMassExcessTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_446_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVMassExcessTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_446_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVMassExcessTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVMassExcessTable", 1672, G__G__KVMultiDetparticles_446_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable), -1, 0, 1, 1, 1, 0, "u 'KVMassExcessTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVMassExcessTable", 1798, G__G__KVMultiDetparticles_446_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_446_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcessTable), -1, 1, 1, 1, 1, 0, "u 'KVMassExcessTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVLifeTime(void) {
   /* KVLifeTime */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVLifeTime",944,G__G__KVMultiDetparticles_488_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVLifeTime",944,G__G__KVMultiDetparticles_488_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnit",704,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetResonnance",1336,G__G__KVMultiDetparticles_488_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - resonnance", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAResonnance",1289,G__G__KVMultiDetparticles_488_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_488_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVLifeTime::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_488_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLifeTime::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_488_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVLifeTime::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_488_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVLifeTime::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_488_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_488_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLifeTime::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_488_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVLifeTime::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_488_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLifeTime::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_488_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVLifeTime::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVLifeTime", 944, G__G__KVMultiDetparticles_488_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime), -1, 0, 1, 1, 1, 0, "u 'KVLifeTime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVLifeTime", 1070, G__G__KVMultiDetparticles_488_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_488_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime), -1, 1, 1, 1, 1, 0, "u 'KVLifeTime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVLifeTimeTable(void) {
   /* KVLifeTimeTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTimeTable));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ToMeV",459,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 0, "u 'TString' - 0 - unit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToSecond",799,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 0, "u 'TString' - 0 - unit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVLifeTimeTable",1432,G__G__KVMultiDetparticles_490_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTimeTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLifeTime",1071,G__G__KVMultiDetparticles_490_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAResonnance",1289,G__G__KVMultiDetparticles_490_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_490_0_8, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVLifeTimeTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_490_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLifeTimeTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_490_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVLifeTimeTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_490_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVLifeTimeTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_490_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_490_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLifeTimeTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_490_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVLifeTimeTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_490_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLifeTimeTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_490_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVLifeTimeTable::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVLifeTimeTable", 1558, G__G__KVMultiDetparticles_490_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVAbundance(void) {
   /* KVAbundance */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVAbundance",1058,G__G__KVMultiDetparticles_491_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVAbundance",1058,G__G__KVMultiDetparticles_491_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnit",704,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_491_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVAbundance::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_491_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAbundance::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_491_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVAbundance::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_491_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVAbundance::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_491_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_491_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAbundance::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_491_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVAbundance::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_491_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAbundance::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_491_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVAbundance::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVAbundance", 1058, G__G__KVMultiDetparticles_491_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance), -1, 0, 1, 1, 1, 0, "u 'KVAbundance' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVAbundance", 1184, G__G__KVMultiDetparticles_491_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_491_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance), -1, 1, 1, 1, 1, 0, "u 'KVAbundance' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVNDTManager(void) {
   /* KVNDTManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVNDTManager",1090,G__G__KVMultiDetparticles_493_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTable",776,G__G__KVMultiDetparticles_493_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclDataTable), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInTable",859,G__G__KVMultiDetparticles_493_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa "
"C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,G__G__KVMultiDetparticles_493_0_5, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa "
"C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__G__KVMultiDetparticles_493_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNuclData), -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa "
"C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMeasured",1010,G__G__KVMultiDetparticles_493_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa "
"C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnit",704,G__G__KVMultiDetparticles_493_0_8, 67, -1, G__defined_typename("Char_t"), 0, 3, 1, 1, 9, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa "
"C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintTables",1128,G__G__KVMultiDetparticles_493_0_9, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_493_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVNDTManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_493_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNDTManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_493_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVNDTManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_493_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVNDTManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_493_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_493_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNDTManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_493_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVNDTManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_493_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNDTManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_493_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVNDTManager::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVNDTManager", 1216, G__G__KVMultiDetparticles_493_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVParticleCondition(void) {
   /* KVParticleCondition */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition));
   G__memfunc_setup("Optimize",849,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateClassFactory",1826,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClassFactory",1530,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'KVClassFactory' - 0 - CF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVParticleCondition",1916,G__G__KVMultiDetparticles_552_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVParticleCondition",1916,G__G__KVMultiDetparticles_552_0_5, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition), -1, 0, 1, 1, 1, 0, "u 'KVParticleCondition' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVParticleCondition",1916,G__G__KVMultiDetparticles_552_0_6, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - cond", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__KVMultiDetparticles_552_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Test",416,G__G__KVMultiDetparticles_552_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleClassName",2007,G__G__KVMultiDetparticles_552_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddExtraInclude",1489,G__G__KVMultiDetparticles_552_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - inc_file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__G__KVMultiDetparticles_552_0_12, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition), -1, 1, 1, 1, 1, 0, "u 'KVParticleCondition' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__KVMultiDetparticles_552_0_13, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition), -1, 1, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator&&",952,G__G__KVMultiDetparticles_552_0_14, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition), -1, 0, 1, 1, 1, 0, "u 'KVParticleCondition' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator||",1124,G__G__KVMultiDetparticles_552_0_15, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticleCondition), -1, 0, 1, 1, 1, 0, "u 'KVParticleCondition' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintOptimizedList",1886,G__G__KVMultiDetparticles_552_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVParticleCondition::PrintOptimizedList) ), 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_552_0_18, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVParticleCondition::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_552_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVParticleCondition::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_552_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVParticleCondition::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_552_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVParticleCondition::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_552_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_552_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVParticleCondition::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_552_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVParticleCondition::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_552_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVParticleCondition::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_552_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVParticleCondition::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVParticleCondition", 2042, G__G__KVMultiDetparticles_552_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVParticle(void) {
   /* KVParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle));
   G__memfunc_setup("AddGroup_Withcondition",2264,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - - U 'KVParticleCondition' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddGroup_Sanscondition",2257,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - groupname C - 'Char_t' 10 '\"\"' from", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateGroups",1236,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGroups",940,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'KVUniqueNameList' - 0 - un", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGroups",905,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'KVUniqueNameList' - 0 - un", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasFrame",775,G__G__KVMultiDetparticles_553_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - frame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfDefinedFrames",2379,G__G__KVMultiDetparticles_553_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfDefinedGroups",2413,G__G__KVMultiDetparticles_553_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroups",928,G__G__KVMultiDetparticles_553_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVUniqueNameList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("C",67,G__G__KVMultiDetparticles_553_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&KVParticle::C) ), 0);
   G__memfunc_setup("KVParticle",981,G__G__KVMultiDetparticles_553_0_11, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVParticle",981,G__G__KVMultiDetparticles_553_0_12, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - m u 'TVector3' - 1 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVParticle",981,G__G__KVMultiDetparticles_553_0_13, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - m d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVParticle",981,G__G__KVMultiDetparticles_553_0_14, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle), -1, 0, 1, 1, 1, 0, "u 'KVParticle' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVMultiDetparticles_553_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMass",704,G__G__KVMultiDetparticles_553_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMass",692,G__G__KVMultiDetparticles_553_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__G__KVMultiDetparticles_553_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__G__KVMultiDetparticles_553_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVector3' - 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__G__KVMultiDetparticles_553_0_22, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz C - 'Option_t' 10 '\"cart\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__G__KVMultiDetparticles_553_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - T u 'TVector3' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRandomMomentum",1759,G__G__KVMultiDetparticles_553_0_24, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - T d - 'Double_t' 0 - thmin "
"d - 'Double_t' 0 - thmax d - 'Double_t' 0 - phmin "
"d - 'Double_t' 0 - phmax C - 'Option_t' 10 '\"isotropic\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set4Mom",649,G__G__KVMultiDetparticles_553_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__G__KVMultiDetparticles_553_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKE",444,G__G__KVMultiDetparticles_553_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ecin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__G__KVMultiDetparticles_553_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVelocity",1147,G__G__KVMultiDetparticles_553_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__G__KVMultiDetparticles_553_0_31, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKE",432,G__G__KVMultiDetparticles_553_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__KVMultiDetparticles_553_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransverseEnergy",1975,G__G__KVMultiDetparticles_553_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEtran",794,G__G__KVMultiDetparticles_553_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRTransverseEnergy",2057,G__G__KVMultiDetparticles_553_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetREtran",876,G__G__KVMultiDetparticles_553_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__G__KVMultiDetparticles_553_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVelocity",1135,G__G__KVMultiDetparticles_553_0_39, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV",374,G__G__KVMultiDetparticles_553_0_40, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVpar",697,G__G__KVMultiDetparticles_553_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVperp",813,G__G__KVMultiDetparticles_553_0_42, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__G__KVMultiDetparticles_553_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__KVMultiDetparticles_553_0_44, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__G__KVMultiDetparticles_553_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__G__KVMultiDetparticles_553_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOK",342,G__G__KVMultiDetparticles_553_0_47, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIsOK",642,G__G__KVMultiDetparticles_553_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetIsOK",857,G__G__KVMultiDetparticles_553_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfFrames",1487,G__G__KVMultiDetparticles_553_0_50, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE0",417,G__G__KVMultiDetparticles_553_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVector3' - 0 '0' e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPInitial",1082,G__G__KVMultiDetparticles_553_0_52, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsDetected",1290,G__G__KVMultiDetparticles_553_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDetected",990,G__G__KVMultiDetparticles_553_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__KVMultiDetparticles_553_0_55, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle), -1, 1, 1, 1, 1, 0, "u 'KVParticle' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetEnergy",1133,G__G__KVMultiDetparticles_553_0_56, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,G__G__KVMultiDetparticles_553_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - nom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGroup",790,G__G__KVMultiDetparticles_553_0_59, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - groupname C - 'Char_t' 10 '\"\"' from", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGroup",790,G__G__KVMultiDetparticles_553_0_60, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - groupname U 'KVParticleCondition' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BelongsToGroup",1434,G__G__KVMultiDetparticles_553_0_61, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - 'Char_t' 10 - groupname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveGroup",1147,G__G__KVMultiDetparticles_553_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - groupname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveAllGroups",1543,G__G__KVMultiDetparticles_553_0_63, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ListGroups",1052,G__G__KVMultiDetparticles_553_0_64, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrame",791,G__G__KVMultiDetparticles_553_0_65, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - frame u 'TVector3' - 11 - boost "
"g - 'Bool_t' 0 'kFALSE' beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrame",791,G__G__KVMultiDetparticles_553_0_66, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - frame u 'TLorentzRotation' - 11 - rot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrame",791,G__G__KVMultiDetparticles_553_0_67, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - frame u 'TRotation' - 11 - rot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrame",791,G__G__KVMultiDetparticles_553_0_68, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - frame u 'TVector3' - 11 - boost "
"u 'TRotation' - 1 - rot g - 'Bool_t' 0 'kFALSE' beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrame",791,G__G__KVMultiDetparticles_553_0_69, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - newframe C - 'Char_t' 10 - oldframe "
"u 'TVector3' - 11 - boost g - 'Bool_t' 0 'kFALSE' beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrame",791,G__G__KVMultiDetparticles_553_0_70, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - newframe C - 'Char_t' 10 - oldframe "
"u 'TLorentzRotation' - 11 - rot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrame",791,G__G__KVMultiDetparticles_553_0_71, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - newframe C - 'Char_t' 10 - oldframe "
"u 'TRotation' - 11 - rot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrame",791,G__G__KVMultiDetparticles_553_0_72, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - newframe C - 'Char_t' 10 - oldframe "
"u 'TVector3' - 11 - boost u 'TRotation' - 1 - rot "
"g - 'Bool_t' 0 'kFALSE' beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrame",779,G__G__KVMultiDetparticles_553_0_73, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVParticle), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - frame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrameName",1164,G__G__KVMultiDetparticles_553_0_74, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrameName",1176,G__G__KVMultiDetparticles_553_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - framename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameters",1332,G__G__KVMultiDetparticles_553_0_76, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNameValueList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_553_0_77, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_553_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_553_0_79, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_553_0_80, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_553_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_553_0_85, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_553_0_86, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_553_0_87, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_553_0_88, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVParticle", 1107, G__G__KVMultiDetparticles_553_0_89, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVNucleus(void) {
   /* KVNucleus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus));
   G__memfunc_setup("AddGroup_Withcondition",2264,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - groupname U 'KVParticleCondition' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("u",117,G__G__KVMultiDetparticles_558_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&KVNucleus::u) ), 0);
   G__memfunc_setup("SetMassFormula",1430,G__G__KVMultiDetparticles_558_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - mt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassFormula",1418,G__G__KVMultiDetparticles_558_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVMultiDetparticles_558_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVNucleus",896,G__G__KVMultiDetparticles_558_0_6, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVNucleus",896,G__G__KVMultiDetparticles_558_0_7, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 0, 1, 1, 1, 0, "u 'KVNucleus' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVNucleus",896,G__G__KVMultiDetparticles_558_0_9, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - z i - 'Int_t' 0 '0' a "
"d - 'Double_t' 0 '0' ekin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVNucleus",896,G__G__KVMultiDetparticles_558_0_10, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - z d - 'Double_t' 0 - t "
"u 'TVector3' - 1 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVNucleus",896,G__G__KVMultiDetparticles_558_0_11, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - z i - 'Int_t' 0 - a "
"u 'TVector3' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVNucleus",896,G__G__KVMultiDetparticles_558_0_12, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - d - 'Double_t' 0 '0' EperA", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAFromZ",847,G__G__KVMultiDetparticles_558_0_16, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - - c - 'Char_t' 0 - mt", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Char_t))(&KVNucleus::GetAFromZ) ), 0);
   G__memfunc_setup("GetNFromZ",860,G__G__KVMultiDetparticles_558_0_17, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - - c - 'Char_t' 0 - mt", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Char_t))(&KVNucleus::GetNFromZ) ), 0);
   G__memfunc_setup("GetRealAFromZ",1235,G__G__KVMultiDetparticles_558_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - - c - 'Char_t' 0 - mt", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Char_t))(&KVNucleus::GetRealAFromZ) ), 0);
   G__memfunc_setup("GetRealNFromZ",1248,G__G__KVMultiDetparticles_558_0_19, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - - c - 'Char_t' 0 - mt", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Char_t))(&KVNucleus::GetRealNFromZ) ), 0);
   G__memfunc_setup("GetSymbol",918,G__G__KVMultiDetparticles_558_0_20, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 9, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZFromSymbol",1412,G__G__KVMultiDetparticles_558_0_21, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) G__func2void( (Int_t (*)(const Char_t*))(&KVNucleus::GetZFromSymbol) ), 0);
   G__memfunc_setup("SetZFromSymbol",1424,G__G__KVMultiDetparticles_558_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__KVMultiDetparticles_558_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMassGiven",1097,G__G__KVMultiDetparticles_558_0_24, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) G__func2void( (Int_t (*)(const Char_t*))(&KVNucleus::IsMassGiven) ), 0);
   G__memfunc_setup("SetZ",390,G__G__KVMultiDetparticles_558_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - z c - 'Char_t' 0 '-1' mt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetA",365,G__G__KVMultiDetparticles_558_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetN",378,G__G__KVMultiDetparticles_558_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZandA",762,G__G__KVMultiDetparticles_558_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - z i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZandN",775,G__G__KVMultiDetparticles_558_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - z i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZAandE",831,G__G__KVMultiDetparticles_558_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - z i - 'Int_t' 0 - a "
"d - 'Double_t' 0 - ekin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZ",378,G__G__KVMultiDetparticles_558_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__G__KVMultiDetparticles_558_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__G__KVMultiDetparticles_558_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAsurZ",789,G__G__KVMultiDetparticles_558_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNsurZ",802,G__G__KVMultiDetparticles_558_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeAsymetry",1736,G__G__KVMultiDetparticles_558_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyPerNucleon",1925,G__G__KVMultiDetparticles_558_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAMeV",617,G__G__KVMultiDetparticles_558_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckZAndA",908,G__G__KVMultiDetparticles_558_0_40, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 1 - z i - 'Int_t' 1 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassExcess",1311,G__G__KVMultiDetparticles_558_0_41, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExtraMassExcess",1827,G__G__KVMultiDetparticles_558_0_42, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassExcessPtr",1621,G__G__KVMultiDetparticles_558_0_43, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVMassExcess), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAtomicMass",1297,G__G__KVMultiDetparticles_558_0_44, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' zz i - 'Int_t' 0 '-1' aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNaturalA",1080,G__G__KVMultiDetparticles_558_0_45, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '-1' zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBindingEnergy",1605,G__G__KVMultiDetparticles_558_0_46, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBindingEnergyPerNucleon",2624,G__G__KVMultiDetparticles_558_0_47, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKnownARange",1371,G__G__KVMultiDetparticles_558_0_48, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNumberList), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z d - 'Double_t' 0 '0' tmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsotopesList",1554,G__G__KVMultiDetparticles_558_0_49, 67, -1, G__defined_typename("Char_t"), 0, 3, 1, 1, 9, 
"i - 'Int_t' 0 - zmin i - 'Int_t' 0 - zmax "
"d - 'Double_t' 0 '0' tmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAWithMaxBindingEnergy",2376,G__G__KVMultiDetparticles_558_0_50, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LiquidDrop_BrackGuet",2004,G__G__KVMultiDetparticles_558_0_51, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"h - 'UInt_t' 0 - A h - 'UInt_t' 0 - Z", (char*)NULL, (void*) G__func2void( (Double_t (*)(UInt_t, UInt_t))(&KVNucleus::LiquidDrop_BrackGuet) ), 0);
   G__memfunc_setup("IsKnown",713,G__G__KVMultiDetparticles_558_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - - 0 '-1' z i - - 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsStable",791,G__G__KVMultiDetparticles_558_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 '1.0e+15' min_lifetime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsResonance",1114,G__G__KVMultiDetparticles_558_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__G__KVMultiDetparticles_558_0_55, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExcitEnergy",1427,G__G__KVMultiDetparticles_558_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExcitEnergy",1415,G__G__KVMultiDetparticles_558_0_57, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassGS",846,G__G__KVMultiDetparticles_558_0_58, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLifeTime",1071,G__G__KVMultiDetparticles_558_0_59, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLifeTimePtr",1381,G__G__KVMultiDetparticles_558_0_60, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVLifeTime), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbundance",1185,G__G__KVMultiDetparticles_558_0_61, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbundancePtr",1495,G__G__KVMultiDetparticles_558_0_62, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMostAbundantA",1585,G__G__KVMultiDetparticles_558_0_63, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '-1' z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeRadius",1490,G__G__KVMultiDetparticles_558_0_64, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeRadiusPtr",1800,G__G__KVMultiDetparticles_558_0_65, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExtraChargeRadius",2006,G__G__KVMultiDetparticles_558_0_66, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 '-1' z i - 'Int_t' 0 '-1' a "
"i - 'Int_t' 0 '2' rct", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__KVMultiDetparticles_558_0_67, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 1, 1, 1, 1, 0, "u 'KVNucleus' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__G__KVMultiDetparticles_558_0_68, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 0, 1, 1, 1, 0, "u 'KVNucleus' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__G__KVMultiDetparticles_558_0_69, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 0, 1, 1, 1, 0, "u 'KVNucleus' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__KVMultiDetparticles_558_0_70, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 1, 1, 1, 1, 0, "u 'KVNucleus' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__KVMultiDetparticles_558_0_71, 117, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNucleus), -1, 1, 1, 1, 1, 0, "u 'KVNucleus' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeduceEincFromBrho",1768,G__G__KVMultiDetparticles_558_0_72, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - Brho i - 'Int_t' 0 '0' ChargeState", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRelativeVelocity",1963,G__G__KVMultiDetparticles_558_0_73, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - nuc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetViolaVelocity",1642,G__G__KVMultiDetparticles_558_0_74, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'KVNucleus' - 0 '0' nuc i - 'Int_t' 0 'kDefaultFormula' formula", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vrelHinde1987",1146,G__G__KVMultiDetparticles_558_0_75, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - z1 d - 'Double_t' 0 - a1 "
"d - 'Double_t' 0 - z2 d - 'Double_t' 0 - a2", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t))(&KVNucleus::vrelHinde1987) ), 0);
   G__memfunc_setup("vrelViola1985",1163,G__G__KVMultiDetparticles_558_0_76, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - z d - 'Double_t' 0 - a", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&KVNucleus::vrelViola1985) ), 0);
   G__memfunc_setup("vrelViola1966",1162,G__G__KVMultiDetparticles_558_0_77, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - z d - 'Double_t' 0 - a", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&KVNucleus::vrelViola1966) ), 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_558_0_78, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVNucleus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_558_0_79, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNucleus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_558_0_80, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVNucleus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_558_0_81, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVNucleus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_558_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_558_0_86, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNucleus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_558_0_87, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVNucleus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_558_0_88, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVNucleus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_558_0_89, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVNucleus::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVNucleus", 1022, G__G__KVMultiDetparticles_558_0_90, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVAbundanceTable(void) {
   /* KVAbundanceTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVAbundanceTable",1546,G__G__KVMultiDetparticles_562_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAbundance",1185,G__G__KVMultiDetparticles_562_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundance), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_562_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVAbundanceTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_562_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAbundanceTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_562_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVAbundanceTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_562_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVAbundanceTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_562_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_562_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAbundanceTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_562_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVAbundanceTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_562_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAbundanceTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_562_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVAbundanceTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVAbundanceTable", 1546, G__G__KVMultiDetparticles_562_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable), -1, 0, 1, 1, 1, 0, "u 'KVAbundanceTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVAbundanceTable", 1672, G__G__KVMultiDetparticles_562_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_562_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVAbundanceTable), -1, 1, 1, 1, 1, 0, "u 'KVAbundanceTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimNucleus(void) {
   /* KVSimNucleus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus));
   G__memfunc_setup("KVSimNucleus",1193,G__G__KVMultiDetparticles_563_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimNucleus",1193,G__G__KVMultiDetparticles_563_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - z i - 'Int_t' 0 '0' a "
"d - 'Double_t' 0 '0' ekin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimNucleus",1193,G__G__KVMultiDetparticles_563_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - z d - 'Double_t' 0 - t "
"u 'TVector3' - 1 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimNucleus",1193,G__G__KVMultiDetparticles_563_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - z i - 'Int_t' 0 - a "
"u 'TVector3' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimNucleus",1193,G__G__KVMultiDetparticles_563_0_5, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVSimNucleus), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - sym", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__G__KVMultiDetparticles_563_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - rx d - 'Double_t' 0 - ry "
"d - 'Double_t' 0 - rz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__G__KVMultiDetparticles_563_0_8, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAngMom",875,G__G__KVMultiDetparticles_563_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - lx d - 'Double_t' 0 - ly "
"d - 'Double_t' 0 - lz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngMom",863,G__G__KVMultiDetparticles_563_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_563_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimNucleus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_563_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimNucleus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_563_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimNucleus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_563_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimNucleus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_563_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_563_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimNucleus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_563_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimNucleus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_563_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimNucleus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_563_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimNucleus::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimNucleus", 1319, G__G__KVMultiDetparticles_563_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVChargeRadiusTable(void) {
   /* KVChargeRadiusTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVChargeRadiusTable",1851,G__G__KVMultiDetparticles_564_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChargeRadius",1490,G__G__KVMultiDetparticles_564_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadius), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - zz i - 'Int_t' 0 - aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetparticles_564_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVChargeRadiusTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetparticles_564_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChargeRadiusTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetparticles_564_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVChargeRadiusTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetparticles_564_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVChargeRadiusTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetparticles_564_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetparticles_564_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChargeRadiusTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetparticles_564_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChargeRadiusTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetparticles_564_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChargeRadiusTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetparticles_564_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChargeRadiusTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVChargeRadiusTable", 1851, G__G__KVMultiDetparticles_564_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable), -1, 0, 1, 1, 1, 0, "u 'KVChargeRadiusTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVChargeRadiusTable", 1977, G__G__KVMultiDetparticles_564_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetparticles_564_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable), -1, 1, 1, 1, 1, 0, "u 'KVChargeRadiusTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVMultiDetparticles() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)(&gNDTManager),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetparticlesLN_KVNDTManager),-1,-1,1,"gNDTManager=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVMultiDetparticles() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVMultiDetparticles() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVMultiDetparticlesLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVNuclData = { "KVNuclData" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVNuclDatacLcLEStatusBits = { "KVNuclData::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVChargeRadius = { "KVChargeRadius" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVString = { "KVString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_NDT = { "NDT" , 110 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_NDTcLcLkey = { "NDT::key" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_NDTcLcLvalue = { "NDT::value" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVNuclDataTable = { "KVNuclDataTable" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVElementDensity = { "KVElementDensity" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVElementDensityTable = { "KVElementDensityTable" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVMassExcess = { "KVMassExcess" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVMassExcessTable = { "KVMassExcessTable" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVSeqCollection = { "KVSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVHashList = { "KVHashList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVNameValueList = { "KVNameValueList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVLifeTime = { "KVLifeTime" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVLifeTimecLcLEStatusBits = { "KVLifeTime::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVLifeTimeTable = { "KVLifeTimeTable" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVAbundance = { "KVAbundance" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVList = { "KVList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVNDTManager = { "KVNDTManager" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TRotation = { "TRotation" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TLorentzRotation = { "TLorentzRotation" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVUniqueNameList = { "KVUniqueNameList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVParticleCondition = { "KVParticleCondition" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVParticle = { "KVParticle" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVParticlecLcLdA = { "KVParticle::$" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVNumberList = { "KVNumberList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVNucleus = { "KVNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVClassFactory = { "KVClassFactory" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA = { "KVNucleus::$" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVAbundanceTable = { "KVAbundanceTable" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVSimNucleus = { "KVSimNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetparticlesLN_KVChargeRadiusTable = { "KVChargeRadiusTable" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVMultiDetparticles() {
  G__G__KVMultiDetparticlesLN_TClass.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TBuffer.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMemberInspector.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TObject.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TNamed.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TCollection.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TString.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TObjArray.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVNuclData.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVNuclDatacLcLEStatusBits.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVChargeRadius.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMap.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TSeqCollection.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVString.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_NDT.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_NDTcLcLkey.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_NDTcLcLvalue.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVNuclDataTable.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVElementDensity.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVElementDensityTable.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVMassExcess.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVMassExcessTable.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVSeqCollection.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVHashList.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVNameValueList.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVLifeTime.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVLifeTimecLcLEStatusBits.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVLifeTimeTable.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVAbundance.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVList.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVNDTManager.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TRotation.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TVector3.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TLorentzRotation.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_TLorentzVector.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVBase.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVUniqueNameList.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVParticleCondition.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVParticle.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVParticlecLcLdA.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVNumberList.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVNucleus.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVClassFactory.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVAbundanceTable.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVSimNucleus.tagnum = -1 ;
  G__G__KVMultiDetparticlesLN_KVChargeRadiusTable.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVMultiDetparticles() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TCollection);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVNuclData),sizeof(KVNuclData),-1,324864,"Simple abstract class to store value related to nuclear data",G__setup_memvarKVNuclData,G__setup_memfuncKVNuclData);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVNuclDatacLcLEStatusBits);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVChargeRadius),sizeof(KVChargeRadius),-1,324864,"//Simple class for store charge radius information of nucleus",G__setup_memvarKVChargeRadius,G__setup_memfuncKVChargeRadius);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMap);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_NDT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_NDTcLcLkey),sizeof(NDT::key),-1,324608,(char*)NULL,G__setup_memvarNDTcLcLkey,G__setup_memfuncNDTcLcLkey);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_NDTcLcLvalue),sizeof(NDT::value),-1,324608,(char*)NULL,G__setup_memvarNDTcLcLvalue,G__setup_memfuncNDTcLcLvalue);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVNuclDataTable),sizeof(KVNuclDataTable),-1,324865,"Store information on nuclei",G__setup_memvarKVNuclDataTable,G__setup_memfuncKVNuclDataTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVElementDensity),sizeof(KVElementDensity),-1,325376,"Atomic element with name, symbol and density",G__setup_memvarKVElementDensity,G__setup_memfuncKVElementDensity);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVElementDensityTable),sizeof(KVElementDensityTable),-1,325376,"Table of atomic elements",G__setup_memvarKVElementDensityTable,G__setup_memfuncKVElementDensityTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVMassExcess),sizeof(KVMassExcess),-1,324864,"Simple class to store mass information of nucleus",G__setup_memvarKVMassExcess,G__setup_memfuncKVMassExcess);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVMassExcessTable),sizeof(KVMassExcessTable),-1,324864,"manage mass excess data for nuclei",G__setup_memvarKVMassExcessTable,G__setup_memfuncKVMassExcessTable);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVHashList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVNameValueList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVLifeTime),sizeof(KVLifeTime),-1,324864,"Simple class for store life time information of nucleus",G__setup_memvarKVLifeTime,G__setup_memfuncKVLifeTime);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVLifeTimecLcLEStatusBits);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVLifeTimeTable),sizeof(KVLifeTimeTable),-1,324864,"Store life time information of nuclei",G__setup_memvarKVLifeTimeTable,G__setup_memfuncKVLifeTimeTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVAbundance),sizeof(KVAbundance),-1,324864,"Value of the relative abundance",G__setup_memvarKVAbundance,G__setup_memfuncKVAbundance);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVNDTManager),sizeof(KVNDTManager),-1,324864,"Allow to navigate between different tables of nuclear data",G__setup_memvarKVNDTManager,G__setup_memfuncKVNDTManager);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TRotation);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TVector3);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TLorentzRotation);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVUniqueNameList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVParticleCondition),sizeof(KVParticleCondition),-1,327424,"Implements parser of particle selection criteria",G__setup_memvarKVParticleCondition,G__setup_memfuncKVParticleCondition);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVParticle),sizeof(KVParticle),-1,327424,"General base class for all massive particles",G__setup_memvarKVParticle,G__setup_memfuncKVParticle);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVParticlecLcLdA);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVNumberList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVNucleus),sizeof(KVNucleus),-1,327424,"Class describing atomic nuclei",G__setup_memvarKVNucleus,G__setup_memfuncKVNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVClassFactory);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVNucleuscLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVAbundanceTable),sizeof(KVAbundanceTable),-1,324864,"Store available values of the relative abundance",G__setup_memvarKVAbundanceTable,G__setup_memfuncKVAbundanceTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVSimNucleus),sizeof(KVSimNucleus),-1,324864,"Nuclear particle in a simulated event",G__setup_memvarKVSimNucleus,G__setup_memfuncKVSimNucleus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetparticlesLN_KVChargeRadiusTable),sizeof(KVChargeRadiusTable),-1,324864,"//Store charge radius information for nuclei",G__setup_memvarKVChargeRadiusTable,G__setup_memfuncKVChargeRadiusTable);
}
extern "C" void G__cpp_setupG__KVMultiDetparticles(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVMultiDetparticles()");
  G__set_cpp_environmentG__KVMultiDetparticles();
  G__cpp_setup_tagtableG__KVMultiDetparticles();

  G__cpp_setup_inheritanceG__KVMultiDetparticles();

  G__cpp_setup_typetableG__KVMultiDetparticles();

  G__cpp_setup_memvarG__KVMultiDetparticles();

  G__cpp_setup_memfuncG__KVMultiDetparticles();
  G__cpp_setup_globalG__KVMultiDetparticles();
  G__cpp_setup_funcG__KVMultiDetparticles();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVMultiDetparticles();
  return;
}
class G__cpp_setup_initG__KVMultiDetparticles {
  public:
    G__cpp_setup_initG__KVMultiDetparticles() { G__add_setup_func("G__KVMultiDetparticles",(G__incsetup)(&G__cpp_setupG__KVMultiDetparticles)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVMultiDetparticles() { G__remove_setup_func("G__KVMultiDetparticles"); }
};
G__cpp_setup_initG__KVMultiDetparticles G__cpp_setup_initializerG__KVMultiDetparticles;

