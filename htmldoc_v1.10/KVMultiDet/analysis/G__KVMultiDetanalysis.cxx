//
// File generated by rootcint at Fri Jul 17 15:51:05 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVMultiDetanalysis
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVMultiDetanalysis.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVAutoFit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVAutoFit(void *p = 0);
   static void *newArray_KVAutoFit(Long_t size, void *p);
   static void delete_KVAutoFit(void *p);
   static void deleteArray_KVAutoFit(void *p);
   static void destruct_KVAutoFit(void *p);
   static void streamer_KVAutoFit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVAutoFit*)
   {
      ::KVAutoFit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVAutoFit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVAutoFit", ::KVAutoFit::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVAutoFit.h", 21,
                  typeid(::KVAutoFit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVAutoFit::Dictionary, isa_proxy, 0,
                  sizeof(::KVAutoFit) );
      instance.SetNew(&new_KVAutoFit);
      instance.SetNewArray(&newArray_KVAutoFit);
      instance.SetDelete(&delete_KVAutoFit);
      instance.SetDeleteArray(&deleteArray_KVAutoFit);
      instance.SetDestructor(&destruct_KVAutoFit);
      instance.SetStreamerFunc(&streamer_KVAutoFit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVAutoFit*)
   {
      return GenerateInitInstanceLocal((::KVAutoFit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVAutoFit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVGaus1D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVGaus1D(void *p = 0);
   static void *newArray_KVGaus1D(Long_t size, void *p);
   static void delete_KVGaus1D(void *p);
   static void deleteArray_KVGaus1D(void *p);
   static void destruct_KVGaus1D(void *p);
   static void streamer_KVGaus1D(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGaus1D*)
   {
      ::KVGaus1D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGaus1D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGaus1D", ::KVGaus1D::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVGaus1D.h", 10,
                  typeid(::KVGaus1D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGaus1D::Dictionary, isa_proxy, 0,
                  sizeof(::KVGaus1D) );
      instance.SetNew(&new_KVGaus1D);
      instance.SetNewArray(&newArray_KVGaus1D);
      instance.SetDelete(&delete_KVGaus1D);
      instance.SetDeleteArray(&deleteArray_KVGaus1D);
      instance.SetDestructor(&destruct_KVGaus1D);
      instance.SetStreamerFunc(&streamer_KVGaus1D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGaus1D*)
   {
      return GenerateInitInstanceLocal((::KVGaus1D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGaus1D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataAnalyser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataAnalyser(void *p = 0);
   static void *newArray_KVDataAnalyser(Long_t size, void *p);
   static void delete_KVDataAnalyser(void *p);
   static void deleteArray_KVDataAnalyser(void *p);
   static void destruct_KVDataAnalyser(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataAnalyser*)
   {
      ::KVDataAnalyser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataAnalyser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataAnalyser", ::KVDataAnalyser::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVDataAnalyser.h", 23,
                  typeid(::KVDataAnalyser), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataAnalyser::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataAnalyser) );
      instance.SetNew(&new_KVDataAnalyser);
      instance.SetNewArray(&newArray_KVDataAnalyser);
      instance.SetDelete(&delete_KVDataAnalyser);
      instance.SetDeleteArray(&deleteArray_KVDataAnalyser);
      instance.SetDestructor(&destruct_KVDataAnalyser);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataAnalyser*)
   {
      return GenerateInitInstanceLocal((::KVDataAnalyser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataAnalyser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVBatchSystem_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVBatchSystem(void *p);
   static void deleteArray_KVBatchSystem(void *p);
   static void destruct_KVBatchSystem(void *p);
   static void streamer_KVBatchSystem(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVBatchSystem*)
   {
      ::KVBatchSystem *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVBatchSystem >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVBatchSystem", ::KVBatchSystem::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVBatchSystem.h", 22,
                  typeid(::KVBatchSystem), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVBatchSystem::Dictionary, isa_proxy, 0,
                  sizeof(::KVBatchSystem) );
      instance.SetDelete(&delete_KVBatchSystem);
      instance.SetDeleteArray(&deleteArray_KVBatchSystem);
      instance.SetDestructor(&destruct_KVBatchSystem);
      instance.SetStreamerFunc(&streamer_KVBatchSystem);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVBatchSystem*)
   {
      return GenerateInitInstanceLocal((::KVBatchSystem*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVBatchSystem*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVRootBatch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVRootBatch(void *p);
   static void deleteArray_KVRootBatch(void *p);
   static void destruct_KVRootBatch(void *p);
   static void streamer_KVRootBatch(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVRootBatch*)
   {
      ::KVRootBatch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVRootBatch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVRootBatch", ::KVRootBatch::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVRootBatch.h", 15,
                  typeid(::KVRootBatch), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVRootBatch::Dictionary, isa_proxy, 0,
                  sizeof(::KVRootBatch) );
      instance.SetDelete(&delete_KVRootBatch);
      instance.SetDeleteArray(&deleteArray_KVRootBatch);
      instance.SetDestructor(&destruct_KVRootBatch);
      instance.SetStreamerFunc(&streamer_KVRootBatch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVRootBatch*)
   {
      return GenerateInitInstanceLocal((::KVRootBatch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVRootBatch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVLinuxBatch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVLinuxBatch(void *p);
   static void deleteArray_KVLinuxBatch(void *p);
   static void destruct_KVLinuxBatch(void *p);
   static void streamer_KVLinuxBatch(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVLinuxBatch*)
   {
      ::KVLinuxBatch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVLinuxBatch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVLinuxBatch", ::KVLinuxBatch::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVLinuxBatch.h", 15,
                  typeid(::KVLinuxBatch), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVLinuxBatch::Dictionary, isa_proxy, 0,
                  sizeof(::KVLinuxBatch) );
      instance.SetDelete(&delete_KVLinuxBatch);
      instance.SetDeleteArray(&deleteArray_KVLinuxBatch);
      instance.SetDestructor(&destruct_KVLinuxBatch);
      instance.SetStreamerFunc(&streamer_KVLinuxBatch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVLinuxBatch*)
   {
      return GenerateInitInstanceLocal((::KVLinuxBatch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVLinuxBatch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KV_CCIN2P3_BQS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KV_CCIN2P3_BQS(void *p);
   static void deleteArray_KV_CCIN2P3_BQS(void *p);
   static void destruct_KV_CCIN2P3_BQS(void *p);
   static void streamer_KV_CCIN2P3_BQS(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KV_CCIN2P3_BQS*)
   {
      ::KV_CCIN2P3_BQS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KV_CCIN2P3_BQS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KV_CCIN2P3_BQS", ::KV_CCIN2P3_BQS::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KV_CCIN2P3_BQS.h", 15,
                  typeid(::KV_CCIN2P3_BQS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KV_CCIN2P3_BQS::Dictionary, isa_proxy, 0,
                  sizeof(::KV_CCIN2P3_BQS) );
      instance.SetDelete(&delete_KV_CCIN2P3_BQS);
      instance.SetDeleteArray(&deleteArray_KV_CCIN2P3_BQS);
      instance.SetDestructor(&destruct_KV_CCIN2P3_BQS);
      instance.SetStreamerFunc(&streamer_KV_CCIN2P3_BQS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KV_CCIN2P3_BQS*)
   {
      return GenerateInitInstanceLocal((::KV_CCIN2P3_BQS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KV_CCIN2P3_BQS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimReader(void *p = 0);
   static void *newArray_KVSimReader(Long_t size, void *p);
   static void delete_KVSimReader(void *p);
   static void deleteArray_KVSimReader(void *p);
   static void destruct_KVSimReader(void *p);
   static void streamer_KVSimReader(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimReader*)
   {
      ::KVSimReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimReader", ::KVSimReader::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVSimReader.h", 26,
                  typeid(::KVSimReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimReader::Dictionary, isa_proxy, 0,
                  sizeof(::KVSimReader) );
      instance.SetNew(&new_KVSimReader);
      instance.SetNewArray(&newArray_KVSimReader);
      instance.SetDelete(&delete_KVSimReader);
      instance.SetDeleteArray(&deleteArray_KVSimReader);
      instance.SetDestructor(&destruct_KVSimReader);
      instance.SetStreamerFunc(&streamer_KVSimReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimReader*)
   {
      return GenerateInitInstanceLocal((::KVSimReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimReader_SMF_asym_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimReader_SMF_asym(void *p = 0);
   static void *newArray_KVSimReader_SMF_asym(Long_t size, void *p);
   static void delete_KVSimReader_SMF_asym(void *p);
   static void deleteArray_KVSimReader_SMF_asym(void *p);
   static void destruct_KVSimReader_SMF_asym(void *p);
   static void streamer_KVSimReader_SMF_asym(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimReader_SMF_asym*)
   {
      ::KVSimReader_SMF_asym *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimReader_SMF_asym >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimReader_SMF_asym", ::KVSimReader_SMF_asym::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVSimReader_SMF_asym.h", 10,
                  typeid(::KVSimReader_SMF_asym), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimReader_SMF_asym::Dictionary, isa_proxy, 0,
                  sizeof(::KVSimReader_SMF_asym) );
      instance.SetNew(&new_KVSimReader_SMF_asym);
      instance.SetNewArray(&newArray_KVSimReader_SMF_asym);
      instance.SetDelete(&delete_KVSimReader_SMF_asym);
      instance.SetDeleteArray(&deleteArray_KVSimReader_SMF_asym);
      instance.SetDestructor(&destruct_KVSimReader_SMF_asym);
      instance.SetStreamerFunc(&streamer_KVSimReader_SMF_asym);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimReader_SMF_asym*)
   {
      return GenerateInitInstanceLocal((::KVSimReader_SMF_asym*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimReader_SMF_asym*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVEventSelector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVEventSelector(void *p = 0);
   static void *newArray_KVEventSelector(Long_t size, void *p);
   static void delete_KVEventSelector(void *p);
   static void deleteArray_KVEventSelector(void *p);
   static void destruct_KVEventSelector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVEventSelector*)
   {
      ::KVEventSelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVEventSelector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVEventSelector", ::KVEventSelector::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVEventSelector.h", 27,
                  typeid(::KVEventSelector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVEventSelector::Dictionary, isa_proxy, 4,
                  sizeof(::KVEventSelector) );
      instance.SetNew(&new_KVEventSelector);
      instance.SetNewArray(&newArray_KVEventSelector);
      instance.SetDelete(&delete_KVEventSelector);
      instance.SetDeleteArray(&deleteArray_KVEventSelector);
      instance.SetDestructor(&destruct_KVEventSelector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVEventSelector*)
   {
      return GenerateInitInstanceLocal((::KVEventSelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVEventSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimReader_HIPSE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimReader_HIPSE(void *p = 0);
   static void *newArray_KVSimReader_HIPSE(Long_t size, void *p);
   static void delete_KVSimReader_HIPSE(void *p);
   static void deleteArray_KVSimReader_HIPSE(void *p);
   static void destruct_KVSimReader_HIPSE(void *p);
   static void streamer_KVSimReader_HIPSE(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimReader_HIPSE*)
   {
      ::KVSimReader_HIPSE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimReader_HIPSE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimReader_HIPSE", ::KVSimReader_HIPSE::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVSimReader_HIPSE.h", 11,
                  typeid(::KVSimReader_HIPSE), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimReader_HIPSE::Dictionary, isa_proxy, 0,
                  sizeof(::KVSimReader_HIPSE) );
      instance.SetNew(&new_KVSimReader_HIPSE);
      instance.SetNewArray(&newArray_KVSimReader_HIPSE);
      instance.SetDelete(&delete_KVSimReader_HIPSE);
      instance.SetDeleteArray(&deleteArray_KVSimReader_HIPSE);
      instance.SetDestructor(&destruct_KVSimReader_HIPSE);
      instance.SetStreamerFunc(&streamer_KVSimReader_HIPSE);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimReader_HIPSE*)
   {
      return GenerateInitInstanceLocal((::KVSimReader_HIPSE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimReader_HIPSE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimReader_HIPSE_asym_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimReader_HIPSE_asym(void *p = 0);
   static void *newArray_KVSimReader_HIPSE_asym(Long_t size, void *p);
   static void delete_KVSimReader_HIPSE_asym(void *p);
   static void deleteArray_KVSimReader_HIPSE_asym(void *p);
   static void destruct_KVSimReader_HIPSE_asym(void *p);
   static void streamer_KVSimReader_HIPSE_asym(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimReader_HIPSE_asym*)
   {
      ::KVSimReader_HIPSE_asym *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimReader_HIPSE_asym >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimReader_HIPSE_asym", ::KVSimReader_HIPSE_asym::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVSimReader_HIPSE_asym.h", 14,
                  typeid(::KVSimReader_HIPSE_asym), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimReader_HIPSE_asym::Dictionary, isa_proxy, 0,
                  sizeof(::KVSimReader_HIPSE_asym) );
      instance.SetNew(&new_KVSimReader_HIPSE_asym);
      instance.SetNewArray(&newArray_KVSimReader_HIPSE_asym);
      instance.SetDelete(&delete_KVSimReader_HIPSE_asym);
      instance.SetDeleteArray(&deleteArray_KVSimReader_HIPSE_asym);
      instance.SetDestructor(&destruct_KVSimReader_HIPSE_asym);
      instance.SetStreamerFunc(&streamer_KVSimReader_HIPSE_asym);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimReader_HIPSE_asym*)
   {
      return GenerateInitInstanceLocal((::KVSimReader_HIPSE_asym*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimReader_HIPSE_asym*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimReader_ELIE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimReader_ELIE(void *p = 0);
   static void *newArray_KVSimReader_ELIE(Long_t size, void *p);
   static void delete_KVSimReader_ELIE(void *p);
   static void deleteArray_KVSimReader_ELIE(void *p);
   static void destruct_KVSimReader_ELIE(void *p);
   static void streamer_KVSimReader_ELIE(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimReader_ELIE*)
   {
      ::KVSimReader_ELIE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimReader_ELIE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimReader_ELIE", ::KVSimReader_ELIE::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVSimReader_ELIE.h", 10,
                  typeid(::KVSimReader_ELIE), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimReader_ELIE::Dictionary, isa_proxy, 0,
                  sizeof(::KVSimReader_ELIE) );
      instance.SetNew(&new_KVSimReader_ELIE);
      instance.SetNewArray(&newArray_KVSimReader_ELIE);
      instance.SetDelete(&delete_KVSimReader_ELIE);
      instance.SetDeleteArray(&deleteArray_KVSimReader_ELIE);
      instance.SetDestructor(&destruct_KVSimReader_ELIE);
      instance.SetStreamerFunc(&streamer_KVSimReader_ELIE);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimReader_ELIE*)
   {
      return GenerateInitInstanceLocal((::KVSimReader_ELIE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimReader_ELIE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataTransfer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVDataTransfer(void *p);
   static void deleteArray_KVDataTransfer(void *p);
   static void destruct_KVDataTransfer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataTransfer*)
   {
      ::KVDataTransfer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataTransfer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataTransfer", ::KVDataTransfer::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVDataTransfer.h", 18,
                  typeid(::KVDataTransfer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataTransfer::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataTransfer) );
      instance.SetDelete(&delete_KVDataTransfer);
      instance.SetDeleteArray(&deleteArray_KVDataTransfer);
      instance.SetDestructor(&destruct_KVDataTransfer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataTransfer*)
   {
      return GenerateInitInstanceLocal((::KVDataTransfer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataTransfer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataTransferSFTP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVDataTransferSFTP(void *p);
   static void deleteArray_KVDataTransferSFTP(void *p);
   static void destruct_KVDataTransferSFTP(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataTransferSFTP*)
   {
      ::KVDataTransferSFTP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataTransferSFTP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataTransferSFTP", ::KVDataTransferSFTP::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVDataTransferSFTP.h", 15,
                  typeid(::KVDataTransferSFTP), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataTransferSFTP::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataTransferSFTP) );
      instance.SetDelete(&delete_KVDataTransferSFTP);
      instance.SetDeleteArray(&deleteArray_KVDataTransferSFTP);
      instance.SetDestructor(&destruct_KVDataTransferSFTP);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataTransferSFTP*)
   {
      return GenerateInitInstanceLocal((::KVDataTransferSFTP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataTransferSFTP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimReader_MMM_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimReader_MMM(void *p = 0);
   static void *newArray_KVSimReader_MMM(Long_t size, void *p);
   static void delete_KVSimReader_MMM(void *p);
   static void deleteArray_KVSimReader_MMM(void *p);
   static void destruct_KVSimReader_MMM(void *p);
   static void streamer_KVSimReader_MMM(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimReader_MMM*)
   {
      ::KVSimReader_MMM *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimReader_MMM >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimReader_MMM", ::KVSimReader_MMM::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVSimReader_MMM.h", 10,
                  typeid(::KVSimReader_MMM), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimReader_MMM::Dictionary, isa_proxy, 0,
                  sizeof(::KVSimReader_MMM) );
      instance.SetNew(&new_KVSimReader_MMM);
      instance.SetNewArray(&newArray_KVSimReader_MMM);
      instance.SetDelete(&delete_KVSimReader_MMM);
      instance.SetDeleteArray(&deleteArray_KVSimReader_MMM);
      instance.SetDestructor(&destruct_KVSimReader_MMM);
      instance.SetStreamerFunc(&streamer_KVSimReader_MMM);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimReader_MMM*)
   {
      return GenerateInitInstanceLocal((::KVSimReader_MMM*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimReader_MMM*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVBatchJob_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVBatchJob(void *p = 0);
   static void *newArray_KVBatchJob(Long_t size, void *p);
   static void delete_KVBatchJob(void *p);
   static void deleteArray_KVBatchJob(void *p);
   static void destruct_KVBatchJob(void *p);
   static void streamer_KVBatchJob(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVBatchJob*)
   {
      ::KVBatchJob *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVBatchJob >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVBatchJob", ::KVBatchJob::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVBatchJob.h", 11,
                  typeid(::KVBatchJob), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVBatchJob::Dictionary, isa_proxy, 0,
                  sizeof(::KVBatchJob) );
      instance.SetNew(&new_KVBatchJob);
      instance.SetNewArray(&newArray_KVBatchJob);
      instance.SetDelete(&delete_KVBatchJob);
      instance.SetDeleteArray(&deleteArray_KVBatchJob);
      instance.SetDestructor(&destruct_KVBatchJob);
      instance.SetStreamerFunc(&streamer_KVBatchJob);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVBatchJob*)
   {
      return GenerateInitInstanceLocal((::KVBatchJob*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVBatchJob*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataTransferBBFTP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataTransferBBFTP(void *p = 0);
   static void *newArray_KVDataTransferBBFTP(Long_t size, void *p);
   static void delete_KVDataTransferBBFTP(void *p);
   static void deleteArray_KVDataTransferBBFTP(void *p);
   static void destruct_KVDataTransferBBFTP(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataTransferBBFTP*)
   {
      ::KVDataTransferBBFTP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataTransferBBFTP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataTransferBBFTP", ::KVDataTransferBBFTP::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVDataTransferBBFTP.h", 15,
                  typeid(::KVDataTransferBBFTP), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataTransferBBFTP::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataTransferBBFTP) );
      instance.SetNew(&new_KVDataTransferBBFTP);
      instance.SetNewArray(&newArray_KVDataTransferBBFTP);
      instance.SetDelete(&delete_KVDataTransferBBFTP);
      instance.SetDeleteArray(&deleteArray_KVDataTransferBBFTP);
      instance.SetDestructor(&destruct_KVDataTransferBBFTP);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataTransferBBFTP*)
   {
      return GenerateInitInstanceLocal((::KVDataTransferBBFTP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataTransferBBFTP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimReader_SMF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimReader_SMF(void *p = 0);
   static void *newArray_KVSimReader_SMF(Long_t size, void *p);
   static void delete_KVSimReader_SMF(void *p);
   static void deleteArray_KVSimReader_SMF(void *p);
   static void destruct_KVSimReader_SMF(void *p);
   static void streamer_KVSimReader_SMF(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimReader_SMF*)
   {
      ::KVSimReader_SMF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimReader_SMF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimReader_SMF", ::KVSimReader_SMF::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVSimReader_SMF.h", 10,
                  typeid(::KVSimReader_SMF), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimReader_SMF::Dictionary, isa_proxy, 0,
                  sizeof(::KVSimReader_SMF) );
      instance.SetNew(&new_KVSimReader_SMF);
      instance.SetNewArray(&newArray_KVSimReader_SMF);
      instance.SetDelete(&delete_KVSimReader_SMF);
      instance.SetDeleteArray(&deleteArray_KVSimReader_SMF);
      instance.SetDestructor(&destruct_KVSimReader_SMF);
      instance.SetStreamerFunc(&streamer_KVSimReader_SMF);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimReader_SMF*)
   {
      return GenerateInitInstanceLocal((::KVSimReader_SMF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimReader_SMF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataPatch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVDataPatch(void *p);
   static void deleteArray_KVDataPatch(void *p);
   static void destruct_KVDataPatch(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataPatch*)
   {
      ::KVDataPatch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataPatch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataPatch", ::KVDataPatch::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVDataPatch.h", 11,
                  typeid(::KVDataPatch), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataPatch::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataPatch) );
      instance.SetDelete(&delete_KVDataPatch);
      instance.SetDeleteArray(&deleteArray_KVDataPatch);
      instance.SetDestructor(&destruct_KVDataPatch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataPatch*)
   {
      return GenerateInitInstanceLocal((::KVDataPatch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataPatch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KV_CCIN2P3_GE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KV_CCIN2P3_GE(void *p);
   static void deleteArray_KV_CCIN2P3_GE(void *p);
   static void destruct_KV_CCIN2P3_GE(void *p);
   static void streamer_KV_CCIN2P3_GE(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KV_CCIN2P3_GE*)
   {
      ::KV_CCIN2P3_GE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KV_CCIN2P3_GE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KV_CCIN2P3_GE", ::KV_CCIN2P3_GE::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KV_CCIN2P3_GE.h", 9,
                  typeid(::KV_CCIN2P3_GE), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KV_CCIN2P3_GE::Dictionary, isa_proxy, 0,
                  sizeof(::KV_CCIN2P3_GE) );
      instance.SetDelete(&delete_KV_CCIN2P3_GE);
      instance.SetDeleteArray(&deleteArray_KV_CCIN2P3_GE);
      instance.SetDestructor(&destruct_KV_CCIN2P3_GE);
      instance.SetStreamerFunc(&streamer_KV_CCIN2P3_GE);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KV_CCIN2P3_GE*)
   {
      return GenerateInitInstanceLocal((::KV_CCIN2P3_GE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KV_CCIN2P3_GE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVGaxis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVGaxis(void *p = 0);
   static void *newArray_KVGaxis(Long_t size, void *p);
   static void delete_KVGaxis(void *p);
   static void deleteArray_KVGaxis(void *p);
   static void destruct_KVGaxis(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGaxis*)
   {
      ::KVGaxis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGaxis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGaxis", ::KVGaxis::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVGaxis.h", 12,
                  typeid(::KVGaxis), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGaxis::Dictionary, isa_proxy, 4,
                  sizeof(::KVGaxis) );
      instance.SetNew(&new_KVGaxis);
      instance.SetNewArray(&newArray_KVGaxis);
      instance.SetDelete(&delete_KVGaxis);
      instance.SetDeleteArray(&deleteArray_KVGaxis);
      instance.SetDestructor(&destruct_KVGaxis);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGaxis*)
   {
      return GenerateInitInstanceLocal((::KVGaxis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGaxis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSimReader_MMM_asym_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSimReader_MMM_asym(void *p = 0);
   static void *newArray_KVSimReader_MMM_asym(Long_t size, void *p);
   static void delete_KVSimReader_MMM_asym(void *p);
   static void deleteArray_KVSimReader_MMM_asym(void *p);
   static void destruct_KVSimReader_MMM_asym(void *p);
   static void streamer_KVSimReader_MMM_asym(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSimReader_MMM_asym*)
   {
      ::KVSimReader_MMM_asym *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSimReader_MMM_asym >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSimReader_MMM_asym", ::KVSimReader_MMM_asym::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVSimReader_MMM_asym.h", 10,
                  typeid(::KVSimReader_MMM_asym), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSimReader_MMM_asym::Dictionary, isa_proxy, 0,
                  sizeof(::KVSimReader_MMM_asym) );
      instance.SetNew(&new_KVSimReader_MMM_asym);
      instance.SetNewArray(&newArray_KVSimReader_MMM_asym);
      instance.SetDelete(&delete_KVSimReader_MMM_asym);
      instance.SetDeleteArray(&deleteArray_KVSimReader_MMM_asym);
      instance.SetDestructor(&destruct_KVSimReader_MMM_asym);
      instance.SetStreamerFunc(&streamer_KVSimReader_MMM_asym);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSimReader_MMM_asym*)
   {
      return GenerateInitInstanceLocal((::KVSimReader_MMM_asym*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSimReader_MMM_asym*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVGraph_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVGraph(void *p = 0);
   static void *newArray_KVGraph(Long_t size, void *p);
   static void delete_KVGraph(void *p);
   static void deleteArray_KVGraph(void *p);
   static void destruct_KVGraph(void *p);
   static Long64_t merge_KVGraph(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGraph*)
   {
      ::KVGraph *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGraph >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGraph", ::KVGraph::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVGraph.h", 10,
                  typeid(::KVGraph), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGraph::Dictionary, isa_proxy, 4,
                  sizeof(::KVGraph) );
      instance.SetNew(&new_KVGraph);
      instance.SetNewArray(&newArray_KVGraph);
      instance.SetDelete(&delete_KVGraph);
      instance.SetDeleteArray(&deleteArray_KVGraph);
      instance.SetDestructor(&destruct_KVGraph);
      instance.SetMerge(&merge_KVGraph);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGraph*)
   {
      return GenerateInitInstanceLocal((::KVGraph*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGraph*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataTransferXRD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataTransferXRD(void *p = 0);
   static void *newArray_KVDataTransferXRD(Long_t size, void *p);
   static void delete_KVDataTransferXRD(void *p);
   static void deleteArray_KVDataTransferXRD(void *p);
   static void destruct_KVDataTransferXRD(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataTransferXRD*)
   {
      ::KVDataTransferXRD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataTransferXRD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataTransferXRD", ::KVDataTransferXRD::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVDataTransferXRD.h", 10,
                  typeid(::KVDataTransferXRD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataTransferXRD::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataTransferXRD) );
      instance.SetNew(&new_KVDataTransferXRD);
      instance.SetNewArray(&newArray_KVDataTransferXRD);
      instance.SetDelete(&delete_KVDataTransferXRD);
      instance.SetDeleteArray(&deleteArray_KVDataTransferXRD);
      instance.SetDestructor(&destruct_KVDataTransferXRD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataTransferXRD*)
   {
      return GenerateInitInstanceLocal((::KVDataTransferXRD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataTransferXRD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVBatchSystemManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVBatchSystemManager(void *p = 0);
   static void *newArray_KVBatchSystemManager(Long_t size, void *p);
   static void delete_KVBatchSystemManager(void *p);
   static void deleteArray_KVBatchSystemManager(void *p);
   static void destruct_KVBatchSystemManager(void *p);
   static void streamer_KVBatchSystemManager(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVBatchSystemManager*)
   {
      ::KVBatchSystemManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVBatchSystemManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVBatchSystemManager", ::KVBatchSystemManager::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVBatchSystemManager.h", 18,
                  typeid(::KVBatchSystemManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVBatchSystemManager::Dictionary, isa_proxy, 0,
                  sizeof(::KVBatchSystemManager) );
      instance.SetNew(&new_KVBatchSystemManager);
      instance.SetNewArray(&newArray_KVBatchSystemManager);
      instance.SetDelete(&delete_KVBatchSystemManager);
      instance.SetDeleteArray(&deleteArray_KVBatchSystemManager);
      instance.SetDestructor(&destruct_KVBatchSystemManager);
      instance.SetStreamerFunc(&streamer_KVBatchSystemManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVBatchSystemManager*)
   {
      return GenerateInitInstanceLocal((::KVBatchSystemManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVBatchSystemManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVGaus2D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVGaus2D(void *p = 0);
   static void *newArray_KVGaus2D(Long_t size, void *p);
   static void delete_KVGaus2D(void *p);
   static void deleteArray_KVGaus2D(void *p);
   static void destruct_KVGaus2D(void *p);
   static void streamer_KVGaus2D(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGaus2D*)
   {
      ::KVGaus2D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGaus2D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGaus2D", ::KVGaus2D::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVGaus2D.h", 11,
                  typeid(::KVGaus2D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGaus2D::Dictionary, isa_proxy, 0,
                  sizeof(::KVGaus2D) );
      instance.SetNew(&new_KVGaus2D);
      instance.SetNewArray(&newArray_KVGaus2D);
      instance.SetDelete(&delete_KVGaus2D);
      instance.SetDeleteArray(&deleteArray_KVGaus2D);
      instance.SetDestructor(&destruct_KVGaus2D);
      instance.SetStreamerFunc(&streamer_KVGaus2D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGaus2D*)
   {
      return GenerateInitInstanceLocal((::KVGaus2D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGaus2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVGumbelDistribution_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVGumbelDistribution(void *p = 0);
   static void *newArray_KVGumbelDistribution(Long_t size, void *p);
   static void delete_KVGumbelDistribution(void *p);
   static void deleteArray_KVGumbelDistribution(void *p);
   static void destruct_KVGumbelDistribution(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGumbelDistribution*)
   {
      ::KVGumbelDistribution *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGumbelDistribution >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGumbelDistribution", ::KVGumbelDistribution::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVGumbelDistribution.h", 10,
                  typeid(::KVGumbelDistribution), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGumbelDistribution::Dictionary, isa_proxy, 4,
                  sizeof(::KVGumbelDistribution) );
      instance.SetNew(&new_KVGumbelDistribution);
      instance.SetNewArray(&newArray_KVGumbelDistribution);
      instance.SetDelete(&delete_KVGumbelDistribution);
      instance.SetDeleteArray(&deleteArray_KVGumbelDistribution);
      instance.SetDestructor(&destruct_KVGumbelDistribution);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGumbelDistribution*)
   {
      return GenerateInitInstanceLocal((::KVGumbelDistribution*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGumbelDistribution*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVGumGumDistribution_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVGumGumDistribution(void *p = 0);
   static void *newArray_KVGumGumDistribution(Long_t size, void *p);
   static void delete_KVGumGumDistribution(void *p);
   static void deleteArray_KVGumGumDistribution(void *p);
   static void destruct_KVGumGumDistribution(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGumGumDistribution*)
   {
      ::KVGumGumDistribution *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGumGumDistribution >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGumGumDistribution", ::KVGumGumDistribution::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVGumGumDistribution.h", 11,
                  typeid(::KVGumGumDistribution), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGumGumDistribution::Dictionary, isa_proxy, 4,
                  sizeof(::KVGumGumDistribution) );
      instance.SetNew(&new_KVGumGumDistribution);
      instance.SetNewArray(&newArray_KVGumGumDistribution);
      instance.SetDelete(&delete_KVGumGumDistribution);
      instance.SetDeleteArray(&deleteArray_KVGumGumDistribution);
      instance.SetDestructor(&destruct_KVGumGumDistribution);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGumGumDistribution*)
   {
      return GenerateInitInstanceLocal((::KVGumGumDistribution*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGumGumDistribution*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVGEBatchJob_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVGEBatchJob(void *p = 0);
   static void *newArray_KVGEBatchJob(Long_t size, void *p);
   static void delete_KVGEBatchJob(void *p);
   static void deleteArray_KVGEBatchJob(void *p);
   static void destruct_KVGEBatchJob(void *p);
   static void streamer_KVGEBatchJob(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGEBatchJob*)
   {
      ::KVGEBatchJob *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGEBatchJob >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGEBatchJob", ::KVGEBatchJob::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVGEBatchJob.h", 10,
                  typeid(::KVGEBatchJob), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGEBatchJob::Dictionary, isa_proxy, 0,
                  sizeof(::KVGEBatchJob) );
      instance.SetNew(&new_KVGEBatchJob);
      instance.SetNewArray(&newArray_KVGEBatchJob);
      instance.SetDelete(&delete_KVGEBatchJob);
      instance.SetDeleteArray(&deleteArray_KVGEBatchJob);
      instance.SetDestructor(&destruct_KVGEBatchJob);
      instance.SetStreamerFunc(&streamer_KVGEBatchJob);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGEBatchJob*)
   {
      return GenerateInitInstanceLocal((::KVGEBatchJob*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGEBatchJob*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataPatchList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataPatchList(void *p = 0);
   static void *newArray_KVDataPatchList(Long_t size, void *p);
   static void delete_KVDataPatchList(void *p);
   static void deleteArray_KVDataPatchList(void *p);
   static void destruct_KVDataPatchList(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataPatchList*)
   {
      ::KVDataPatchList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataPatchList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataPatchList", ::KVDataPatchList::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVDataPatchList.h", 12,
                  typeid(::KVDataPatchList), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataPatchList::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataPatchList) );
      instance.SetNew(&new_KVDataPatchList);
      instance.SetNewArray(&newArray_KVDataPatchList);
      instance.SetDelete(&delete_KVDataPatchList);
      instance.SetDeleteArray(&deleteArray_KVDataPatchList);
      instance.SetDestructor(&destruct_KVDataPatchList);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataPatchList*)
   {
      return GenerateInitInstanceLocal((::KVDataPatchList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataPatchList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVGausGumDistribution_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVGausGumDistribution(void *p = 0);
   static void *newArray_KVGausGumDistribution(Long_t size, void *p);
   static void delete_KVGausGumDistribution(void *p);
   static void deleteArray_KVGausGumDistribution(void *p);
   static void destruct_KVGausGumDistribution(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVGausGumDistribution*)
   {
      ::KVGausGumDistribution *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVGausGumDistribution >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVGausGumDistribution", ::KVGausGumDistribution::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVGausGumDistribution.h", 11,
                  typeid(::KVGausGumDistribution), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVGausGumDistribution::Dictionary, isa_proxy, 4,
                  sizeof(::KVGausGumDistribution) );
      instance.SetNew(&new_KVGausGumDistribution);
      instance.SetNewArray(&newArray_KVGausGumDistribution);
      instance.SetDelete(&delete_KVGausGumDistribution);
      instance.SetDeleteArray(&deleteArray_KVGausGumDistribution);
      instance.SetDestructor(&destruct_KVGausGumDistribution);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVGausGumDistribution*)
   {
      return GenerateInitInstanceLocal((::KVGausGumDistribution*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVGausGumDistribution*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVImpactParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVImpactParameter(void *p);
   static void deleteArray_KVImpactParameter(void *p);
   static void destruct_KVImpactParameter(void *p);
   static void streamer_KVImpactParameter(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVImpactParameter*)
   {
      ::KVImpactParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVImpactParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVImpactParameter", ::KVImpactParameter::Class_Version(), "/home/john/software/sources/kaliveda.git/KVMultiDet/analysis/KVImpactParameter.h", 14,
                  typeid(::KVImpactParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVImpactParameter::Dictionary, isa_proxy, 0,
                  sizeof(::KVImpactParameter) );
      instance.SetDelete(&delete_KVImpactParameter);
      instance.SetDeleteArray(&deleteArray_KVImpactParameter);
      instance.SetDestructor(&destruct_KVImpactParameter);
      instance.SetStreamerFunc(&streamer_KVImpactParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVImpactParameter*)
   {
      return GenerateInitInstanceLocal((::KVImpactParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVImpactParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVAutoFit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVAutoFit::Class_Name()
{
   return "KVAutoFit";
}

//______________________________________________________________________________
const char *KVAutoFit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVAutoFit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVAutoFit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVAutoFit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVAutoFit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVAutoFit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVAutoFit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVAutoFit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVGaus1D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGaus1D::Class_Name()
{
   return "KVGaus1D";
}

//______________________________________________________________________________
const char *KVGaus1D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaus1D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGaus1D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaus1D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGaus1D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaus1D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGaus1D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaus1D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataAnalyser::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataAnalyser::Class_Name()
{
   return "KVDataAnalyser";
}

//______________________________________________________________________________
const char *KVDataAnalyser::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataAnalyser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataAnalyser::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataAnalyser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataAnalyser::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataAnalyser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataAnalyser::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataAnalyser*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVBatchSystem::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVBatchSystem::Class_Name()
{
   return "KVBatchSystem";
}

//______________________________________________________________________________
const char *KVBatchSystem::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchSystem*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVBatchSystem::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchSystem*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVBatchSystem::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchSystem*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVBatchSystem::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchSystem*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVRootBatch::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVRootBatch::Class_Name()
{
   return "KVRootBatch";
}

//______________________________________________________________________________
const char *KVRootBatch::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRootBatch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVRootBatch::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVRootBatch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVRootBatch::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRootBatch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVRootBatch::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVRootBatch*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVLinuxBatch::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVLinuxBatch::Class_Name()
{
   return "KVLinuxBatch";
}

//______________________________________________________________________________
const char *KVLinuxBatch::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVLinuxBatch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVLinuxBatch::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVLinuxBatch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVLinuxBatch::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVLinuxBatch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVLinuxBatch::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVLinuxBatch*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KV_CCIN2P3_BQS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KV_CCIN2P3_BQS::Class_Name()
{
   return "KV_CCIN2P3_BQS";
}

//______________________________________________________________________________
const char *KV_CCIN2P3_BQS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KV_CCIN2P3_BQS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KV_CCIN2P3_BQS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KV_CCIN2P3_BQS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KV_CCIN2P3_BQS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KV_CCIN2P3_BQS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KV_CCIN2P3_BQS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KV_CCIN2P3_BQS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimReader::Class_Name()
{
   return "KVSimReader";
}

//______________________________________________________________________________
const char *KVSimReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimReader_SMF_asym::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimReader_SMF_asym::Class_Name()
{
   return "KVSimReader_SMF_asym";
}

//______________________________________________________________________________
const char *KVSimReader_SMF_asym::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_SMF_asym*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimReader_SMF_asym::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_SMF_asym*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimReader_SMF_asym::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_SMF_asym*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimReader_SMF_asym::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_SMF_asym*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVEventSelector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVEventSelector::Class_Name()
{
   return "KVEventSelector";
}

//______________________________________________________________________________
const char *KVEventSelector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVEventSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVEventSelector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVEventSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVEventSelector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVEventSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVEventSelector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVEventSelector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimReader_HIPSE::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimReader_HIPSE::Class_Name()
{
   return "KVSimReader_HIPSE";
}

//______________________________________________________________________________
const char *KVSimReader_HIPSE::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_HIPSE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimReader_HIPSE::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_HIPSE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimReader_HIPSE::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_HIPSE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimReader_HIPSE::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_HIPSE*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimReader_HIPSE_asym::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimReader_HIPSE_asym::Class_Name()
{
   return "KVSimReader_HIPSE_asym";
}

//______________________________________________________________________________
const char *KVSimReader_HIPSE_asym::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_HIPSE_asym*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimReader_HIPSE_asym::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_HIPSE_asym*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimReader_HIPSE_asym::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_HIPSE_asym*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimReader_HIPSE_asym::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_HIPSE_asym*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimReader_ELIE::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimReader_ELIE::Class_Name()
{
   return "KVSimReader_ELIE";
}

//______________________________________________________________________________
const char *KVSimReader_ELIE::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_ELIE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimReader_ELIE::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_ELIE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimReader_ELIE::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_ELIE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimReader_ELIE::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_ELIE*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataTransfer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataTransfer::Class_Name()
{
   return "KVDataTransfer";
}

//______________________________________________________________________________
const char *KVDataTransfer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransfer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataTransfer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransfer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataTransfer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransfer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataTransfer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransfer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataTransferSFTP::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataTransferSFTP::Class_Name()
{
   return "KVDataTransferSFTP";
}

//______________________________________________________________________________
const char *KVDataTransferSFTP::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferSFTP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataTransferSFTP::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferSFTP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataTransferSFTP::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferSFTP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataTransferSFTP::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferSFTP*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimReader_MMM::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimReader_MMM::Class_Name()
{
   return "KVSimReader_MMM";
}

//______________________________________________________________________________
const char *KVSimReader_MMM::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_MMM*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimReader_MMM::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_MMM*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimReader_MMM::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_MMM*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimReader_MMM::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_MMM*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVBatchJob::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVBatchJob::Class_Name()
{
   return "KVBatchJob";
}

//______________________________________________________________________________
const char *KVBatchJob::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchJob*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVBatchJob::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchJob*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVBatchJob::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchJob*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVBatchJob::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchJob*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataTransferBBFTP::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataTransferBBFTP::Class_Name()
{
   return "KVDataTransferBBFTP";
}

//______________________________________________________________________________
const char *KVDataTransferBBFTP::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferBBFTP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataTransferBBFTP::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferBBFTP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataTransferBBFTP::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferBBFTP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataTransferBBFTP::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferBBFTP*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimReader_SMF::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimReader_SMF::Class_Name()
{
   return "KVSimReader_SMF";
}

//______________________________________________________________________________
const char *KVSimReader_SMF::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_SMF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimReader_SMF::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_SMF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimReader_SMF::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_SMF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimReader_SMF::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_SMF*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataPatch::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataPatch::Class_Name()
{
   return "KVDataPatch";
}

//______________________________________________________________________________
const char *KVDataPatch::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataPatch::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataPatch::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataPatch::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KV_CCIN2P3_GE::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KV_CCIN2P3_GE::Class_Name()
{
   return "KV_CCIN2P3_GE";
}

//______________________________________________________________________________
const char *KV_CCIN2P3_GE::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KV_CCIN2P3_GE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KV_CCIN2P3_GE::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KV_CCIN2P3_GE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KV_CCIN2P3_GE::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KV_CCIN2P3_GE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KV_CCIN2P3_GE::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KV_CCIN2P3_GE*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVGaxis::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGaxis::Class_Name()
{
   return "KVGaxis";
}

//______________________________________________________________________________
const char *KVGaxis::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaxis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGaxis::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaxis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGaxis::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaxis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGaxis::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaxis*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSimReader_MMM_asym::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSimReader_MMM_asym::Class_Name()
{
   return "KVSimReader_MMM_asym";
}

//______________________________________________________________________________
const char *KVSimReader_MMM_asym::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_MMM_asym*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSimReader_MMM_asym::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_MMM_asym*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSimReader_MMM_asym::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_MMM_asym*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSimReader_MMM_asym::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSimReader_MMM_asym*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVGraph::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGraph::Class_Name()
{
   return "KVGraph";
}

//______________________________________________________________________________
const char *KVGraph::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGraph*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGraph::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGraph*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGraph::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGraph*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGraph::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGraph*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataTransferXRD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataTransferXRD::Class_Name()
{
   return "KVDataTransferXRD";
}

//______________________________________________________________________________
const char *KVDataTransferXRD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferXRD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataTransferXRD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferXRD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataTransferXRD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferXRD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataTransferXRD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataTransferXRD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVBatchSystemManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVBatchSystemManager::Class_Name()
{
   return "KVBatchSystemManager";
}

//______________________________________________________________________________
const char *KVBatchSystemManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchSystemManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVBatchSystemManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchSystemManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVBatchSystemManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchSystemManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVBatchSystemManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVBatchSystemManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVGaus2D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGaus2D::Class_Name()
{
   return "KVGaus2D";
}

//______________________________________________________________________________
const char *KVGaus2D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaus2D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGaus2D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaus2D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGaus2D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaus2D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGaus2D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGaus2D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVGumbelDistribution::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGumbelDistribution::Class_Name()
{
   return "KVGumbelDistribution";
}

//______________________________________________________________________________
const char *KVGumbelDistribution::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGumbelDistribution*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGumbelDistribution::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGumbelDistribution*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGumbelDistribution::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGumbelDistribution*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGumbelDistribution::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGumbelDistribution*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVGumGumDistribution::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGumGumDistribution::Class_Name()
{
   return "KVGumGumDistribution";
}

//______________________________________________________________________________
const char *KVGumGumDistribution::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGumGumDistribution*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGumGumDistribution::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGumGumDistribution*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGumGumDistribution::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGumGumDistribution*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGumGumDistribution::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGumGumDistribution*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVGEBatchJob::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGEBatchJob::Class_Name()
{
   return "KVGEBatchJob";
}

//______________________________________________________________________________
const char *KVGEBatchJob::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGEBatchJob*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGEBatchJob::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGEBatchJob*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGEBatchJob::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGEBatchJob*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGEBatchJob::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGEBatchJob*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataPatchList::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataPatchList::Class_Name()
{
   return "KVDataPatchList";
}

//______________________________________________________________________________
const char *KVDataPatchList::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatchList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataPatchList::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatchList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataPatchList::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatchList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataPatchList::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatchList*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVGausGumDistribution::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVGausGumDistribution::Class_Name()
{
   return "KVGausGumDistribution";
}

//______________________________________________________________________________
const char *KVGausGumDistribution::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGausGumDistribution*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVGausGumDistribution::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVGausGumDistribution*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVGausGumDistribution::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGausGumDistribution*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVGausGumDistribution::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVGausGumDistribution*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVImpactParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVImpactParameter::Class_Name()
{
   return "KVImpactParameter";
}

//______________________________________________________________________________
const char *KVImpactParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVImpactParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVImpactParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVImpactParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVImpactParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVImpactParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVImpactParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVImpactParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVBatchSystem::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVBatchSystem.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBase::Streamer(R__b);
      R__b >> fAnalyser;
      fParList.Streamer(R__b);
      fJobName.Streamer(R__b);
      fJobSubCmd.Streamer(R__b);
      fJobScript.Streamer(R__b);
      fDefOpt.Streamer(R__b);
      R__b >> fMultiJobs;
      R__b >> fRunsPerJob;
      fCurrJobName.Streamer(R__b);
      fCurrJobRunList.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVBatchSystem::IsA());
   } else {
      R__c = R__b.WriteVersion(KVBatchSystem::IsA(), kTRUE);
      KVBase::Streamer(R__b);
      R__b << fAnalyser;
      fParList.Streamer(R__b);
      fJobName.Streamer(R__b);
      fJobSubCmd.Streamer(R__b);
      fJobScript.Streamer(R__b);
      fDefOpt.Streamer(R__b);
      R__b << fMultiJobs;
      R__b << fRunsPerJob;
      fCurrJobName.Streamer(R__b);
      fCurrJobRunList.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVBatchSystem::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVBatchSystem.
      TClass *R__cl = ::KVBatchSystem::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnalyser", &fAnalyser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParList", &fParList);
      R__insp.InspectMember(fParList, "fParList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fJobName", &fJobName);
      R__insp.InspectMember(fJobName, "fJobName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fJobSubCmd", &fJobSubCmd);
      R__insp.InspectMember(fJobSubCmd, "fJobSubCmd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fJobScript", &fJobScript);
      R__insp.InspectMember(fJobScript, "fJobScript.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefOpt", &fDefOpt);
      R__insp.InspectMember(fDefOpt, "fDefOpt.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiJobs", &fMultiJobs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunsPerJob", &fRunsPerJob);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrJobName", &fCurrJobName);
      R__insp.InspectMember(fCurrJobName, "fCurrJobName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrJobRunList", &fCurrJobRunList);
      R__insp.InspectMember(fCurrJobRunList, "fCurrJobRunList.");
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVBatchSystem(void *p) {
      delete ((::KVBatchSystem*)p);
   }
   static void deleteArray_KVBatchSystem(void *p) {
      delete [] ((::KVBatchSystem*)p);
   }
   static void destruct_KVBatchSystem(void *p) {
      typedef ::KVBatchSystem current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVBatchSystem(TBuffer &buf, void *obj) {
      ((::KVBatchSystem*)obj)->::KVBatchSystem::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVBatchSystem

//______________________________________________________________________________
void KVBatchSystemManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVBatchSystemManager.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      fBatchSystems.Streamer(R__b);
      R__b >> fDefault;
      R__b.CheckByteCount(R__s, R__c, KVBatchSystemManager::IsA());
   } else {
      R__c = R__b.WriteVersion(KVBatchSystemManager::IsA(), kTRUE);
      fBatchSystems.Streamer(R__b);
      R__b << fDefault;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVBatchSystemManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVBatchSystemManager.
      TClass *R__cl = ::KVBatchSystemManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBatchSystems", &fBatchSystems);
      R__insp.InspectMember(fBatchSystems, "fBatchSystems.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDefault", &fDefault);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVBatchSystemManager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVBatchSystemManager : new ::KVBatchSystemManager;
   }
   static void *newArray_KVBatchSystemManager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVBatchSystemManager[nElements] : new ::KVBatchSystemManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVBatchSystemManager(void *p) {
      delete ((::KVBatchSystemManager*)p);
   }
   static void deleteArray_KVBatchSystemManager(void *p) {
      delete [] ((::KVBatchSystemManager*)p);
   }
   static void destruct_KVBatchSystemManager(void *p) {
      typedef ::KVBatchSystemManager current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVBatchSystemManager(TBuffer &buf, void *obj) {
      ((::KVBatchSystemManager*)obj)->::KVBatchSystemManager::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVBatchSystemManager

//______________________________________________________________________________
void KVBatchJob::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVBatchJob.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBase::Streamer(R__b);
      submitted.Streamer(R__b);
      R__b >> cpu_used;
      mem_used.Streamer(R__b);
      R__b >> cpu_max;
      mem_max.Streamer(R__b);
      disk_max.Streamer(R__b);
      disk_used.Streamer(R__b);
      R__b >> events_total;
      R__b >> events_read;
      R__b.CheckByteCount(R__s, R__c, KVBatchJob::IsA());
   } else {
      R__c = R__b.WriteVersion(KVBatchJob::IsA(), kTRUE);
      KVBase::Streamer(R__b);
      submitted.Streamer(R__b);
      R__b << cpu_used;
      mem_used.Streamer(R__b);
      R__b << cpu_max;
      mem_max.Streamer(R__b);
      disk_max.Streamer(R__b);
      disk_used.Streamer(R__b);
      R__b << events_total;
      R__b << events_read;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVBatchJob::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVBatchJob.
      TClass *R__cl = ::KVBatchJob::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "submitted", &submitted);
      R__insp.InspectMember(submitted, "submitted.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cpu_used", &cpu_used);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mem_used", &mem_used);
      R__insp.InspectMember(mem_used, "mem_used.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cpu_max", &cpu_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mem_max", &mem_max);
      R__insp.InspectMember(mem_max, "mem_max.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "disk_max", &disk_max);
      R__insp.InspectMember(disk_max, "disk_max.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "disk_used", &disk_used);
      R__insp.InspectMember(disk_used, "disk_used.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "events_total", &events_total);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "events_read", &events_read);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVBatchJob(void *p) {
      return  p ? new(p) ::KVBatchJob : new ::KVBatchJob;
   }
   static void *newArray_KVBatchJob(Long_t nElements, void *p) {
      return p ? new(p) ::KVBatchJob[nElements] : new ::KVBatchJob[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVBatchJob(void *p) {
      delete ((::KVBatchJob*)p);
   }
   static void deleteArray_KVBatchJob(void *p) {
      delete [] ((::KVBatchJob*)p);
   }
   static void destruct_KVBatchJob(void *p) {
      typedef ::KVBatchJob current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVBatchJob(TBuffer &buf, void *obj) {
      ((::KVBatchJob*)obj)->::KVBatchJob::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVBatchJob

//______________________________________________________________________________
void KVGEBatchJob::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGEBatchJob.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBatchJob::Streamer(R__b);
      resources.Streamer(R__b);
      R__b >> cpu_scaling_factor;
      R__b.CheckByteCount(R__s, R__c, KVGEBatchJob::IsA());
   } else {
      R__c = R__b.WriteVersion(KVGEBatchJob::IsA(), kTRUE);
      KVBatchJob::Streamer(R__b);
      resources.Streamer(R__b);
      R__b << cpu_scaling_factor;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVGEBatchJob::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGEBatchJob.
      TClass *R__cl = ::KVGEBatchJob::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resources", &resources);
      R__insp.InspectMember(resources, "resources.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cpu_scaling_factor", &cpu_scaling_factor);
      KVBatchJob::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVGEBatchJob(void *p) {
      return  p ? new(p) ::KVGEBatchJob : new ::KVGEBatchJob;
   }
   static void *newArray_KVGEBatchJob(Long_t nElements, void *p) {
      return p ? new(p) ::KVGEBatchJob[nElements] : new ::KVGEBatchJob[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVGEBatchJob(void *p) {
      delete ((::KVGEBatchJob*)p);
   }
   static void deleteArray_KVGEBatchJob(void *p) {
      delete [] ((::KVGEBatchJob*)p);
   }
   static void destruct_KVGEBatchJob(void *p) {
      typedef ::KVGEBatchJob current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVGEBatchJob(TBuffer &buf, void *obj) {
      ((::KVGEBatchJob*)obj)->::KVGEBatchJob::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVGEBatchJob

//______________________________________________________________________________
void KV_CCIN2P3_BQS::Streamer(TBuffer &R__b)
{
   // Stream an object of class KV_CCIN2P3_BQS.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBatchSystem::Streamer(R__b);
      R__b >> fDefJobTime;
      fDefJobMem.Streamer(R__b);
      fDefJobDisk.Streamer(R__b);
      R__b >> fTimeSet;
      R__b >> fDiskSet;
      R__b >> fMemSet;
      R__b.CheckByteCount(R__s, R__c, KV_CCIN2P3_BQS::IsA());
   } else {
      R__c = R__b.WriteVersion(KV_CCIN2P3_BQS::IsA(), kTRUE);
      KVBatchSystem::Streamer(R__b);
      R__b << fDefJobTime;
      fDefJobMem.Streamer(R__b);
      fDefJobDisk.Streamer(R__b);
      R__b << fTimeSet;
      R__b << fDiskSet;
      R__b << fMemSet;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KV_CCIN2P3_BQS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KV_CCIN2P3_BQS.
      TClass *R__cl = ::KV_CCIN2P3_BQS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefJobTime", &fDefJobTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefJobMem", &fDefJobMem);
      R__insp.InspectMember(fDefJobMem, "fDefJobMem.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefJobDisk", &fDefJobDisk);
      R__insp.InspectMember(fDefJobDisk, "fDefJobDisk.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeSet", &fTimeSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiskSet", &fDiskSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMemSet", &fMemSet);
      KVBatchSystem::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KV_CCIN2P3_BQS(void *p) {
      delete ((::KV_CCIN2P3_BQS*)p);
   }
   static void deleteArray_KV_CCIN2P3_BQS(void *p) {
      delete [] ((::KV_CCIN2P3_BQS*)p);
   }
   static void destruct_KV_CCIN2P3_BQS(void *p) {
      typedef ::KV_CCIN2P3_BQS current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KV_CCIN2P3_BQS(TBuffer &buf, void *obj) {
      ((::KV_CCIN2P3_BQS*)obj)->::KV_CCIN2P3_BQS::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KV_CCIN2P3_BQS

//______________________________________________________________________________
void KV_CCIN2P3_GE::Streamer(TBuffer &R__b)
{
   // Stream an object of class KV_CCIN2P3_GE.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBatchSystem::Streamer(R__b);
      R__b >> fDefJobTime;
      fDefJobMem.Streamer(R__b);
      fDefJobDisk.Streamer(R__b);
      R__b >> fTimeSet;
      R__b >> fDiskSet;
      R__b >> fMemSet;
      R__b.CheckByteCount(R__s, R__c, KV_CCIN2P3_GE::IsA());
   } else {
      R__c = R__b.WriteVersion(KV_CCIN2P3_GE::IsA(), kTRUE);
      KVBatchSystem::Streamer(R__b);
      R__b << fDefJobTime;
      fDefJobMem.Streamer(R__b);
      fDefJobDisk.Streamer(R__b);
      R__b << fTimeSet;
      R__b << fDiskSet;
      R__b << fMemSet;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KV_CCIN2P3_GE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KV_CCIN2P3_GE.
      TClass *R__cl = ::KV_CCIN2P3_GE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefJobTime", &fDefJobTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefJobMem", &fDefJobMem);
      R__insp.InspectMember(fDefJobMem, "fDefJobMem.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefJobDisk", &fDefJobDisk);
      R__insp.InspectMember(fDefJobDisk, "fDefJobDisk.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeSet", &fTimeSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiskSet", &fDiskSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMemSet", &fMemSet);
      KVBatchSystem::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KV_CCIN2P3_GE(void *p) {
      delete ((::KV_CCIN2P3_GE*)p);
   }
   static void deleteArray_KV_CCIN2P3_GE(void *p) {
      delete [] ((::KV_CCIN2P3_GE*)p);
   }
   static void destruct_KV_CCIN2P3_GE(void *p) {
      typedef ::KV_CCIN2P3_GE current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KV_CCIN2P3_GE(TBuffer &buf, void *obj) {
      ((::KV_CCIN2P3_GE*)obj)->::KV_CCIN2P3_GE::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KV_CCIN2P3_GE

//______________________________________________________________________________
void KVRootBatch::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVRootBatch.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBatchSystem::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVRootBatch::IsA());
   } else {
      R__c = R__b.WriteVersion(KVRootBatch::IsA(), kTRUE);
      KVBatchSystem::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVRootBatch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVRootBatch.
      TClass *R__cl = ::KVRootBatch::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVBatchSystem::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVRootBatch(void *p) {
      delete ((::KVRootBatch*)p);
   }
   static void deleteArray_KVRootBatch(void *p) {
      delete [] ((::KVRootBatch*)p);
   }
   static void destruct_KVRootBatch(void *p) {
      typedef ::KVRootBatch current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVRootBatch(TBuffer &buf, void *obj) {
      ((::KVRootBatch*)obj)->::KVRootBatch::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVRootBatch

//______________________________________________________________________________
void KVLinuxBatch::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVLinuxBatch.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVRootBatch::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVLinuxBatch::IsA());
   } else {
      R__c = R__b.WriteVersion(KVLinuxBatch::IsA(), kTRUE);
      KVRootBatch::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVLinuxBatch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVLinuxBatch.
      TClass *R__cl = ::KVLinuxBatch::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVRootBatch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVLinuxBatch(void *p) {
      delete ((::KVLinuxBatch*)p);
   }
   static void deleteArray_KVLinuxBatch(void *p) {
      delete [] ((::KVLinuxBatch*)p);
   }
   static void destruct_KVLinuxBatch(void *p) {
      typedef ::KVLinuxBatch current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVLinuxBatch(TBuffer &buf, void *obj) {
      ((::KVLinuxBatch*)obj)->::KVLinuxBatch::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVLinuxBatch

//______________________________________________________________________________
void KVDataAnalyser::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataAnalyser.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataAnalyser::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataAnalyser::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataAnalyser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataAnalyser.
      TClass *R__cl = ::KVDataAnalyser::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTask", &fTask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataType", &fDataType);
      R__insp.InspectMember(fDataType, "fDataType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBatch", &fBatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBatchName", &fBatchName);
      R__insp.InspectMember(fBatchName, "fBatchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSystem", &fSystem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunList", &fRunList);
      R__insp.InspectMember(fRunList, "fRunList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataSet", &fDataSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbEventToRead", &nbEventToRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMenus", &fMenus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQuit", &fQuit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChoozDataSet", &fChoozDataSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChoozTask", &fChoozTask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChoozSystem", &fChoozSystem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChoozRuns", &fChoozRuns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubmit", &fSubmit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIncludes", &fIncludes);
      R__insp.InspectMember(fIncludes, "fIncludes.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLibraries", &fLibraries);
      R__insp.InspectMember(fLibraries, "fLibraries.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserClass", &fUserClass);
      R__insp.InspectMember(fUserClass, "fUserClass.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserClassImp", &fUserClassImp);
      R__insp.InspectMember(fUserClassImp, "fUserClassImp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserClassDec", &fUserClassDec);
      R__insp.InspectMember(fUserClassDec, "fUserClassDec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserClassIsOK", &fUserClassIsOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserClassOptions", &fUserClassOptions);
      R__insp.InspectMember(fUserClassOptions, "fUserClassOptions.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBatchEnv", &fBatchEnv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBatchSystem", &fBatchSystem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChoseRunMode", &fChoseRunMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWorkDirInit", &fWorkDirInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWorkDirEnd", &fWorkDirEnd);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataAnalyser(void *p) {
      return  p ? new(p) ::KVDataAnalyser : new ::KVDataAnalyser;
   }
   static void *newArray_KVDataAnalyser(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataAnalyser[nElements] : new ::KVDataAnalyser[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataAnalyser(void *p) {
      delete ((::KVDataAnalyser*)p);
   }
   static void deleteArray_KVDataAnalyser(void *p) {
      delete [] ((::KVDataAnalyser*)p);
   }
   static void destruct_KVDataAnalyser(void *p) {
      typedef ::KVDataAnalyser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataAnalyser

//______________________________________________________________________________
void KVDataPatch::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataPatch.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataPatch::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataPatch::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataPatch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataPatch.
      TClass *R__cl = ::KVDataPatch::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVDataPatch(void *p) {
      delete ((::KVDataPatch*)p);
   }
   static void deleteArray_KVDataPatch(void *p) {
      delete [] ((::KVDataPatch*)p);
   }
   static void destruct_KVDataPatch(void *p) {
      typedef ::KVDataPatch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataPatch

//______________________________________________________________________________
void KVDataPatchList::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataPatchList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataPatchList::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataPatchList::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataPatchList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataPatchList.
      TClass *R__cl = ::KVDataPatchList::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fActiveEventPatches", &fActiveEventPatches);
      R__insp.InspectMember(fActiveEventPatches, "fActiveEventPatches.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fActiveParticlePatches", &fActiveParticlePatches);
      R__insp.InspectMember(fActiveParticlePatches, "fActiveParticlePatches.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventPatches", &fEventPatches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParticlePatches", &fParticlePatches);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataPatchList(void *p) {
      return  p ? new(p) ::KVDataPatchList : new ::KVDataPatchList;
   }
   static void *newArray_KVDataPatchList(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataPatchList[nElements] : new ::KVDataPatchList[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataPatchList(void *p) {
      delete ((::KVDataPatchList*)p);
   }
   static void deleteArray_KVDataPatchList(void *p) {
      delete [] ((::KVDataPatchList*)p);
   }
   static void destruct_KVDataPatchList(void *p) {
      typedef ::KVDataPatchList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataPatchList

//______________________________________________________________________________
void KVEventSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVEventSelector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVEventSelector::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVEventSelector::Class(),this);
   }
}

//______________________________________________________________________________
void KVEventSelector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVEventSelector.
      TClass *R__cl = ::KVEventSelector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Event", &Event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_Event", &b_Event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gvlist", &gvlist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchName", &fBranchName);
      R__insp.InspectMember(fBranchName, "fBranchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartCond", &fPartCond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirstEvent", &fFirstEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventsRead", &fEventsRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventsReadInterval", &fEventsReadInterval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTreeEntry", &fTreeEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lhisto", &lhisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ltree", &ltree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNotifyCalled", &fNotifyCalled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCombinedOutputFile", &fCombinedOutputFile);
      R__insp.InspectMember(fCombinedOutputFile, "fCombinedOutputFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOptionList", &fOptionList);
      R__insp.InspectMember(fOptionList, "fOptionList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*writeFile", &writeFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mergeFile", &mergeFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tree_file_name", &tree_file_name);
      R__insp.InspectMember(tree_file_name, "tree_file_name.");
      TSelector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVEventSelector(void *p) {
      return  p ? new(p) ::KVEventSelector : new ::KVEventSelector;
   }
   static void *newArray_KVEventSelector(Long_t nElements, void *p) {
      return p ? new(p) ::KVEventSelector[nElements] : new ::KVEventSelector[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVEventSelector(void *p) {
      delete ((::KVEventSelector*)p);
   }
   static void deleteArray_KVEventSelector(void *p) {
      delete [] ((::KVEventSelector*)p);
   }
   static void destruct_KVEventSelector(void *p) {
      typedef ::KVEventSelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVEventSelector

//______________________________________________________________________________
void KVSimReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimReader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVFileReader::Streamer(R__b);
      R__b >> nevt;
      tree_name.Streamer(R__b);
      tree_title.Streamer(R__b);
      branch_name.Streamer(R__b);
      root_file_name.Streamer(R__b);
      R__b >> kmode;
      R__b >> linked_info;
      R__b >> linked_objects;
      R__b >> nv;
      R__b.CheckByteCount(R__s, R__c, KVSimReader::IsA());
   } else {
      R__c = R__b.WriteVersion(KVSimReader::IsA(), kTRUE);
      KVFileReader::Streamer(R__b);
      R__b << nevt;
      tree_name.Streamer(R__b);
      tree_title.Streamer(R__b);
      branch_name.Streamer(R__b);
      root_file_name.Streamer(R__b);
      R__b << kmode;
      R__b << linked_info;
      R__b << linked_objects;
      R__b << nv;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVSimReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimReader.
      TClass *R__cl = ::KVSimReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree", &tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evt", &evt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nuc", &nuc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nevt", &nevt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tree_name", &tree_name);
      R__insp.InspectMember(tree_name, "tree_name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tree_title", &tree_title);
      R__insp.InspectMember(tree_title, "tree_title.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "branch_name", &branch_name);
      R__insp.InspectMember(branch_name, "branch_name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "root_file_name", &root_file_name);
      R__insp.InspectMember(root_file_name, "root_file_name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kmode", &kmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*linked_info", &linked_info);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*linked_objects", &linked_objects);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nv", &nv);
      KVFileReader::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimReader(void *p) {
      return  p ? new(p) ::KVSimReader : new ::KVSimReader;
   }
   static void *newArray_KVSimReader(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimReader[nElements] : new ::KVSimReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimReader(void *p) {
      delete ((::KVSimReader*)p);
   }
   static void deleteArray_KVSimReader(void *p) {
      delete [] ((::KVSimReader*)p);
   }
   static void destruct_KVSimReader(void *p) {
      typedef ::KVSimReader current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSimReader(TBuffer &buf, void *obj) {
      ((::KVSimReader*)obj)->::KVSimReader::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSimReader

//______________________________________________________________________________
void KVSimReader_HIPSE::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimReader_HIPSE.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVSimReader::Streamer(R__b);
      R__b >> h1;
      R__b.CheckByteCount(R__s, R__c, KVSimReader_HIPSE::IsA());
   } else {
      R__c = R__b.WriteVersion(KVSimReader_HIPSE::IsA(), kTRUE);
      KVSimReader::Streamer(R__b);
      R__b << (TObject*)h1;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVSimReader_HIPSE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimReader_HIPSE.
      TClass *R__cl = ::KVSimReader_HIPSE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h1", &h1);
      KVSimReader::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimReader_HIPSE(void *p) {
      return  p ? new(p) ::KVSimReader_HIPSE : new ::KVSimReader_HIPSE;
   }
   static void *newArray_KVSimReader_HIPSE(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimReader_HIPSE[nElements] : new ::KVSimReader_HIPSE[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimReader_HIPSE(void *p) {
      delete ((::KVSimReader_HIPSE*)p);
   }
   static void deleteArray_KVSimReader_HIPSE(void *p) {
      delete [] ((::KVSimReader_HIPSE*)p);
   }
   static void destruct_KVSimReader_HIPSE(void *p) {
      typedef ::KVSimReader_HIPSE current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSimReader_HIPSE(TBuffer &buf, void *obj) {
      ((::KVSimReader_HIPSE*)obj)->::KVSimReader_HIPSE::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSimReader_HIPSE

//______________________________________________________________________________
void KVSimReader_HIPSE_asym::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimReader_HIPSE_asym.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVSimReader_HIPSE::Streamer(R__b);
      R__b >> h1;
      R__b.CheckByteCount(R__s, R__c, KVSimReader_HIPSE_asym::IsA());
   } else {
      R__c = R__b.WriteVersion(KVSimReader_HIPSE_asym::IsA(), kTRUE);
      KVSimReader_HIPSE::Streamer(R__b);
      R__b << (TObject*)h1;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVSimReader_HIPSE_asym::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimReader_HIPSE_asym.
      TClass *R__cl = ::KVSimReader_HIPSE_asym::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h1", &h1);
      KVSimReader_HIPSE::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimReader_HIPSE_asym(void *p) {
      return  p ? new(p) ::KVSimReader_HIPSE_asym : new ::KVSimReader_HIPSE_asym;
   }
   static void *newArray_KVSimReader_HIPSE_asym(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimReader_HIPSE_asym[nElements] : new ::KVSimReader_HIPSE_asym[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimReader_HIPSE_asym(void *p) {
      delete ((::KVSimReader_HIPSE_asym*)p);
   }
   static void deleteArray_KVSimReader_HIPSE_asym(void *p) {
      delete [] ((::KVSimReader_HIPSE_asym*)p);
   }
   static void destruct_KVSimReader_HIPSE_asym(void *p) {
      typedef ::KVSimReader_HIPSE_asym current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSimReader_HIPSE_asym(TBuffer &buf, void *obj) {
      ((::KVSimReader_HIPSE_asym*)obj)->::KVSimReader_HIPSE_asym::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSimReader_HIPSE_asym

//______________________________________________________________________________
void KVSimReader_SMF::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimReader_SMF.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVSimReader::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVSimReader_SMF::IsA());
   } else {
      R__c = R__b.WriteVersion(KVSimReader_SMF::IsA(), kTRUE);
      KVSimReader::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVSimReader_SMF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimReader_SMF.
      TClass *R__cl = ::KVSimReader_SMF::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVSimReader::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimReader_SMF(void *p) {
      return  p ? new(p) ::KVSimReader_SMF : new ::KVSimReader_SMF;
   }
   static void *newArray_KVSimReader_SMF(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimReader_SMF[nElements] : new ::KVSimReader_SMF[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimReader_SMF(void *p) {
      delete ((::KVSimReader_SMF*)p);
   }
   static void deleteArray_KVSimReader_SMF(void *p) {
      delete [] ((::KVSimReader_SMF*)p);
   }
   static void destruct_KVSimReader_SMF(void *p) {
      typedef ::KVSimReader_SMF current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSimReader_SMF(TBuffer &buf, void *obj) {
      ((::KVSimReader_SMF*)obj)->::KVSimReader_SMF::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSimReader_SMF

//______________________________________________________________________________
void KVSimReader_SMF_asym::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimReader_SMF_asym.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVSimReader::Streamer(R__b);
      R__b >> ndes;
      R__b.CheckByteCount(R__s, R__c, KVSimReader_SMF_asym::IsA());
   } else {
      R__c = R__b.WriteVersion(KVSimReader_SMF_asym::IsA(), kTRUE);
      KVSimReader::Streamer(R__b);
      R__b << ndes;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVSimReader_SMF_asym::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimReader_SMF_asym.
      TClass *R__cl = ::KVSimReader_SMF_asym::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndes", &ndes);
      KVSimReader::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimReader_SMF_asym(void *p) {
      return  p ? new(p) ::KVSimReader_SMF_asym : new ::KVSimReader_SMF_asym;
   }
   static void *newArray_KVSimReader_SMF_asym(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimReader_SMF_asym[nElements] : new ::KVSimReader_SMF_asym[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimReader_SMF_asym(void *p) {
      delete ((::KVSimReader_SMF_asym*)p);
   }
   static void deleteArray_KVSimReader_SMF_asym(void *p) {
      delete [] ((::KVSimReader_SMF_asym*)p);
   }
   static void destruct_KVSimReader_SMF_asym(void *p) {
      typedef ::KVSimReader_SMF_asym current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSimReader_SMF_asym(TBuffer &buf, void *obj) {
      ((::KVSimReader_SMF_asym*)obj)->::KVSimReader_SMF_asym::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSimReader_SMF_asym

//______________________________________________________________________________
void KVSimReader_MMM::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimReader_MMM.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVSimReader::Streamer(R__b);
      R__b >> idx;
      R__b.CheckByteCount(R__s, R__c, KVSimReader_MMM::IsA());
   } else {
      R__c = R__b.WriteVersion(KVSimReader_MMM::IsA(), kTRUE);
      KVSimReader::Streamer(R__b);
      R__b << idx;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVSimReader_MMM::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimReader_MMM.
      TClass *R__cl = ::KVSimReader_MMM::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idx", &idx);
      KVSimReader::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimReader_MMM(void *p) {
      return  p ? new(p) ::KVSimReader_MMM : new ::KVSimReader_MMM;
   }
   static void *newArray_KVSimReader_MMM(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimReader_MMM[nElements] : new ::KVSimReader_MMM[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimReader_MMM(void *p) {
      delete ((::KVSimReader_MMM*)p);
   }
   static void deleteArray_KVSimReader_MMM(void *p) {
      delete [] ((::KVSimReader_MMM*)p);
   }
   static void destruct_KVSimReader_MMM(void *p) {
      typedef ::KVSimReader_MMM current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSimReader_MMM(TBuffer &buf, void *obj) {
      ((::KVSimReader_MMM*)obj)->::KVSimReader_MMM::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSimReader_MMM

//______________________________________________________________________________
void KVSimReader_MMM_asym::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimReader_MMM_asym.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVSimReader::Streamer(R__b);
      R__b >> idx;
      R__b.CheckByteCount(R__s, R__c, KVSimReader_MMM_asym::IsA());
   } else {
      R__c = R__b.WriteVersion(KVSimReader_MMM_asym::IsA(), kTRUE);
      KVSimReader::Streamer(R__b);
      R__b << idx;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVSimReader_MMM_asym::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimReader_MMM_asym.
      TClass *R__cl = ::KVSimReader_MMM_asym::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idx", &idx);
      KVSimReader::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimReader_MMM_asym(void *p) {
      return  p ? new(p) ::KVSimReader_MMM_asym : new ::KVSimReader_MMM_asym;
   }
   static void *newArray_KVSimReader_MMM_asym(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimReader_MMM_asym[nElements] : new ::KVSimReader_MMM_asym[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimReader_MMM_asym(void *p) {
      delete ((::KVSimReader_MMM_asym*)p);
   }
   static void deleteArray_KVSimReader_MMM_asym(void *p) {
      delete [] ((::KVSimReader_MMM_asym*)p);
   }
   static void destruct_KVSimReader_MMM_asym(void *p) {
      typedef ::KVSimReader_MMM_asym current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSimReader_MMM_asym(TBuffer &buf, void *obj) {
      ((::KVSimReader_MMM_asym*)obj)->::KVSimReader_MMM_asym::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSimReader_MMM_asym

//______________________________________________________________________________
void KVSimReader_ELIE::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSimReader_ELIE.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVSimReader::Streamer(R__b);
      proj.Streamer(R__b);
      targ.Streamer(R__b);
      R__b >> ebeam;
      R__b.CheckByteCount(R__s, R__c, KVSimReader_ELIE::IsA());
   } else {
      R__c = R__b.WriteVersion(KVSimReader_ELIE::IsA(), kTRUE);
      KVSimReader::Streamer(R__b);
      proj.Streamer(R__b);
      targ.Streamer(R__b);
      R__b << ebeam;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVSimReader_ELIE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSimReader_ELIE.
      TClass *R__cl = ::KVSimReader_ELIE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "proj", &proj);
      R__insp.InspectMember(proj, "proj.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "targ", &targ);
      R__insp.InspectMember(targ, "targ.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ebeam", &ebeam);
      KVSimReader::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSimReader_ELIE(void *p) {
      return  p ? new(p) ::KVSimReader_ELIE : new ::KVSimReader_ELIE;
   }
   static void *newArray_KVSimReader_ELIE(Long_t nElements, void *p) {
      return p ? new(p) ::KVSimReader_ELIE[nElements] : new ::KVSimReader_ELIE[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSimReader_ELIE(void *p) {
      delete ((::KVSimReader_ELIE*)p);
   }
   static void deleteArray_KVSimReader_ELIE(void *p) {
      delete [] ((::KVSimReader_ELIE*)p);
   }
   static void destruct_KVSimReader_ELIE(void *p) {
      typedef ::KVSimReader_ELIE current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSimReader_ELIE(TBuffer &buf, void *obj) {
      ((::KVSimReader_ELIE*)obj)->::KVSimReader_ELIE::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSimReader_ELIE

//______________________________________________________________________________
void KVAutoFit::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVAutoFit.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBase::Streamer(R__b);
      R__b >> lfunc;
      R__b >> f1Dfit;
      R__b >> f2Dfit;
      R__b >> hfit;
      R__b >> hclone;
      R__b >> c1;
      R__b >> XminSet;
      R__b >> XmaxSet;
      R__b >> Xmin;
      R__b >> Xmax;
      R__b >> Ymin;
      R__b >> Ymax;
      R__b >> lplabel;
      R__b >> lhisto;
      R__b >> nhisto;
      R__b >> userdefined;
      koption.Streamer(R__b);
      R__b >> is2D;
      R__b.CheckByteCount(R__s, R__c, KVAutoFit::IsA());
   } else {
      R__c = R__b.WriteVersion(KVAutoFit::IsA(), kTRUE);
      KVBase::Streamer(R__b);
      R__b << lfunc;
      R__b << f1Dfit;
      R__b << f2Dfit;
      R__b << hfit;
      R__b << hclone;
      R__b << c1;
      R__b << XminSet;
      R__b << XmaxSet;
      R__b << Xmin;
      R__b << Xmax;
      R__b << Ymin;
      R__b << Ymax;
      R__b << lplabel;
      R__b << lhisto;
      R__b << nhisto;
      R__b << userdefined;
      koption.Streamer(R__b);
      R__b << is2D;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVAutoFit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVAutoFit.
      TClass *R__cl = ::KVAutoFit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lfunc", &lfunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f1Dfit", &f1Dfit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f2Dfit", &f2Dfit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hfit", &hfit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hclone", &hclone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1", &c1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XminSet", &XminSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XmaxSet", &XmaxSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xmin", &Xmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xmax", &Xmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ymin", &Ymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ymax", &Ymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lplabel", &lplabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lhisto", &lhisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhisto", &nhisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "userdefined", &userdefined);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "koption", &koption);
      R__insp.InspectMember(koption, "koption.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is2D", &is2D);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVAutoFit(void *p) {
      return  p ? new(p) ::KVAutoFit : new ::KVAutoFit;
   }
   static void *newArray_KVAutoFit(Long_t nElements, void *p) {
      return p ? new(p) ::KVAutoFit[nElements] : new ::KVAutoFit[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVAutoFit(void *p) {
      delete ((::KVAutoFit*)p);
   }
   static void deleteArray_KVAutoFit(void *p) {
      delete [] ((::KVAutoFit*)p);
   }
   static void destruct_KVAutoFit(void *p) {
      typedef ::KVAutoFit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVAutoFit(TBuffer &buf, void *obj) {
      ((::KVAutoFit*)obj)->::KVAutoFit::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVAutoFit

//______________________________________________________________________________
void KVGaus1D::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGaus1D.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVAutoFit::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVGaus1D::IsA());
   } else {
      R__c = R__b.WriteVersion(KVGaus1D::IsA(), kTRUE);
      KVAutoFit::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVGaus1D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGaus1D.
      TClass *R__cl = ::KVGaus1D::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVAutoFit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVGaus1D(void *p) {
      return  p ? new(p) ::KVGaus1D : new ::KVGaus1D;
   }
   static void *newArray_KVGaus1D(Long_t nElements, void *p) {
      return p ? new(p) ::KVGaus1D[nElements] : new ::KVGaus1D[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVGaus1D(void *p) {
      delete ((::KVGaus1D*)p);
   }
   static void deleteArray_KVGaus1D(void *p) {
      delete [] ((::KVGaus1D*)p);
   }
   static void destruct_KVGaus1D(void *p) {
      typedef ::KVGaus1D current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVGaus1D(TBuffer &buf, void *obj) {
      ((::KVGaus1D*)obj)->::KVGaus1D::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVGaus1D

//______________________________________________________________________________
void KVGaus2D::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGaus2D.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVAutoFit::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVGaus2D::IsA());
   } else {
      R__c = R__b.WriteVersion(KVGaus2D::IsA(), kTRUE);
      KVAutoFit::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVGaus2D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGaus2D.
      TClass *R__cl = ::KVGaus2D::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVAutoFit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVGaus2D(void *p) {
      return  p ? new(p) ::KVGaus2D : new ::KVGaus2D;
   }
   static void *newArray_KVGaus2D(Long_t nElements, void *p) {
      return p ? new(p) ::KVGaus2D[nElements] : new ::KVGaus2D[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVGaus2D(void *p) {
      delete ((::KVGaus2D*)p);
   }
   static void deleteArray_KVGaus2D(void *p) {
      delete [] ((::KVGaus2D*)p);
   }
   static void destruct_KVGaus2D(void *p) {
      typedef ::KVGaus2D current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVGaus2D(TBuffer &buf, void *obj) {
      ((::KVGaus2D*)obj)->::KVGaus2D::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVGaus2D

//______________________________________________________________________________
void KVGumbelDistribution::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGumbelDistribution.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVGumbelDistribution::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVGumbelDistribution::Class(),this);
   }
}

//______________________________________________________________________________
void KVGumbelDistribution::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGumbelDistribution.
      TClass *R__cl = ::KVGumbelDistribution::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRank", &fRank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fkFac", &fkFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormalised", &fNormalised);
      TF1::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVGumbelDistribution(void *p) {
      return  p ? new(p) ::KVGumbelDistribution : new ::KVGumbelDistribution;
   }
   static void *newArray_KVGumbelDistribution(Long_t nElements, void *p) {
      return p ? new(p) ::KVGumbelDistribution[nElements] : new ::KVGumbelDistribution[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVGumbelDistribution(void *p) {
      delete ((::KVGumbelDistribution*)p);
   }
   static void deleteArray_KVGumbelDistribution(void *p) {
      delete [] ((::KVGumbelDistribution*)p);
   }
   static void destruct_KVGumbelDistribution(void *p) {
      typedef ::KVGumbelDistribution current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVGumbelDistribution

//______________________________________________________________________________
void KVGausGumDistribution::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGausGumDistribution.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVGausGumDistribution::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVGausGumDistribution::Class(),this);
   }
}

//______________________________________________________________________________
void KVGausGumDistribution::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGausGumDistribution.
      TClass *R__cl = ::KVGausGumDistribution::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRank", &fRank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fkFac", &fkFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fkGaussNor", &fkGaussNor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGaussComp", &fGaussComp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGumbelComp", &fGumbelComp);
      TF1::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVGausGumDistribution(void *p) {
      return  p ? new(p) ::KVGausGumDistribution : new ::KVGausGumDistribution;
   }
   static void *newArray_KVGausGumDistribution(Long_t nElements, void *p) {
      return p ? new(p) ::KVGausGumDistribution[nElements] : new ::KVGausGumDistribution[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVGausGumDistribution(void *p) {
      delete ((::KVGausGumDistribution*)p);
   }
   static void deleteArray_KVGausGumDistribution(void *p) {
      delete [] ((::KVGausGumDistribution*)p);
   }
   static void destruct_KVGausGumDistribution(void *p) {
      typedef ::KVGausGumDistribution current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVGausGumDistribution

//______________________________________________________________________________
void KVGumGumDistribution::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGumGumDistribution.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVGumGumDistribution::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVGumGumDistribution::Class(),this);
   }
}

//______________________________________________________________________________
void KVGumGumDistribution::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGumGumDistribution.
      TClass *R__cl = ::KVGumGumDistribution::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRank", &fRank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fkFac", &fkFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fkGaussNor", &fkGaussNor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFirstGumbel", &fFirstGumbel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLastGumbel", &fLastGumbel);
      TF1::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVGumGumDistribution(void *p) {
      return  p ? new(p) ::KVGumGumDistribution : new ::KVGumGumDistribution;
   }
   static void *newArray_KVGumGumDistribution(Long_t nElements, void *p) {
      return p ? new(p) ::KVGumGumDistribution[nElements] : new ::KVGumGumDistribution[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVGumGumDistribution(void *p) {
      delete ((::KVGumGumDistribution*)p);
   }
   static void deleteArray_KVGumGumDistribution(void *p) {
      delete [] ((::KVGumGumDistribution*)p);
   }
   static void destruct_KVGumGumDistribution(void *p) {
      typedef ::KVGumGumDistribution current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVGumGumDistribution

//______________________________________________________________________________
void KVGraph::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGraph.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVGraph::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVGraph::Class(),this);
   }
}

//______________________________________________________________________________
void KVGraph::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGraph.
      TClass *R__cl = ::KVGraph::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDisplayDivX", &fDisplayDivX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDisplayDivY", &fDisplayDivY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDivX", &fNDivX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDivY", &fNDivY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseX", &fUseX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseY", &fUseY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCropMode", &fCropMode);
      TGraphErrors::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVGraph(void *p) {
      return  p ? new(p) ::KVGraph : new ::KVGraph;
   }
   static void *newArray_KVGraph(Long_t nElements, void *p) {
      return p ? new(p) ::KVGraph[nElements] : new ::KVGraph[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVGraph(void *p) {
      delete ((::KVGraph*)p);
   }
   static void deleteArray_KVGraph(void *p) {
      delete [] ((::KVGraph*)p);
   }
   static void destruct_KVGraph(void *p) {
      typedef ::KVGraph current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_KVGraph(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::KVGraph*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::KVGraph

//______________________________________________________________________________
void KVGaxis::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVGaxis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVGaxis::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVGaxis::Class(),this);
   }
}

//______________________________________________________________________________
void KVGaxis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVGaxis.
      TClass *R__cl = ::KVGaxis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbins", &fNbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBins", &fBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFormat", &fFormat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLabels", &fLabels);
      TGaxis::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVGaxis(void *p) {
      return  p ? new(p) ::KVGaxis : new ::KVGaxis;
   }
   static void *newArray_KVGaxis(Long_t nElements, void *p) {
      return p ? new(p) ::KVGaxis[nElements] : new ::KVGaxis[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVGaxis(void *p) {
      delete ((::KVGaxis*)p);
   }
   static void deleteArray_KVGaxis(void *p) {
      delete [] ((::KVGaxis*)p);
   }
   static void destruct_KVGaxis(void *p) {
      typedef ::KVGaxis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVGaxis

//______________________________________________________________________________
void KVDataTransfer::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataTransfer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataTransfer::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataTransfer::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataTransfer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataTransfer.
      TClass *R__cl = ::KVDataTransfer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSourceRep", &fSourceRep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTargetRep", &fTargetRep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCmdFile", &fCmdFile);
      R__insp.InspectMember(fCmdFile, "fCmdFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTransferExec", &fTransferExec);
      R__insp.InspectMember(fTransferExec, "fTransferExec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOK", &fOK);
      KVDataAnalyser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVDataTransfer(void *p) {
      delete ((::KVDataTransfer*)p);
   }
   static void deleteArray_KVDataTransfer(void *p) {
      delete [] ((::KVDataTransfer*)p);
   }
   static void destruct_KVDataTransfer(void *p) {
      typedef ::KVDataTransfer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataTransfer

//______________________________________________________________________________
void KVDataTransferSFTP::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataTransferSFTP.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataTransferSFTP::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataTransferSFTP::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataTransferSFTP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataTransferSFTP.
      TClass *R__cl = ::KVDataTransferSFTP::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDataTransfer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVDataTransferSFTP(void *p) {
      delete ((::KVDataTransferSFTP*)p);
   }
   static void deleteArray_KVDataTransferSFTP(void *p) {
      delete [] ((::KVDataTransferSFTP*)p);
   }
   static void destruct_KVDataTransferSFTP(void *p) {
      typedef ::KVDataTransferSFTP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataTransferSFTP

//______________________________________________________________________________
void KVDataTransferBBFTP::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataTransferBBFTP.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataTransferBBFTP::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataTransferBBFTP::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataTransferBBFTP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataTransferBBFTP.
      TClass *R__cl = ::KVDataTransferBBFTP::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fServer", &fServer);
      KVDataTransfer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataTransferBBFTP(void *p) {
      return  p ? new(p) ::KVDataTransferBBFTP : new ::KVDataTransferBBFTP;
   }
   static void *newArray_KVDataTransferBBFTP(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataTransferBBFTP[nElements] : new ::KVDataTransferBBFTP[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataTransferBBFTP(void *p) {
      delete ((::KVDataTransferBBFTP*)p);
   }
   static void deleteArray_KVDataTransferBBFTP(void *p) {
      delete [] ((::KVDataTransferBBFTP*)p);
   }
   static void destruct_KVDataTransferBBFTP(void *p) {
      typedef ::KVDataTransferBBFTP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataTransferBBFTP

//______________________________________________________________________________
void KVDataTransferXRD::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataTransferXRD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataTransferXRD::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataTransferXRD::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataTransferXRD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataTransferXRD.
      TClass *R__cl = ::KVDataTransferXRD::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDataTransfer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataTransferXRD(void *p) {
      return  p ? new(p) ::KVDataTransferXRD : new ::KVDataTransferXRD;
   }
   static void *newArray_KVDataTransferXRD(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataTransferXRD[nElements] : new ::KVDataTransferXRD[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataTransferXRD(void *p) {
      delete ((::KVDataTransferXRD*)p);
   }
   static void deleteArray_KVDataTransferXRD(void *p) {
      delete [] ((::KVDataTransferXRD*)p);
   }
   static void destruct_KVDataTransferXRD(void *p) {
      typedef ::KVDataTransferXRD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataTransferXRD

//______________________________________________________________________________
void KVImpactParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVImpactParameter.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBase::Streamer(R__b);
      R__b >> fData;
      fEvol.Streamer(R__b);
      R__b >> fIPScale;
      R__b >> fXSecScale;
      R__b >> fObsTransform;
      R__b >> fObsTransformXSec;
      HM.Streamer(R__b);
      R__b >> Bmax;
      R__b >> Smax;
      R__b.CheckByteCount(R__s, R__c, KVImpactParameter::IsA());
   } else {
      R__c = R__b.WriteVersion(KVImpactParameter::IsA(), kTRUE);
      KVBase::Streamer(R__b);
      R__b << fData;
      fEvol.Streamer(R__b);
      R__b << fIPScale;
      R__b << fXSecScale;
      R__b << fObsTransform;
      R__b << fObsTransformXSec;
      HM.Streamer(R__b);
      R__b << Bmax;
      R__b << Smax;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVImpactParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVImpactParameter.
      TClass *R__cl = ::KVImpactParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvol", &fEvol);
      R__insp.InspectMember(fEvol, "fEvol.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIPScale", &fIPScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fXSecScale", &fXSecScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObsTransform", &fObsTransform);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObsTransformXSec", &fObsTransformXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HM", &HM);
      R__insp.InspectMember(HM, "HM.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Bmax", &Bmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Smax", &Smax);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVImpactParameter(void *p) {
      delete ((::KVImpactParameter*)p);
   }
   static void deleteArray_KVImpactParameter(void *p) {
      delete [] ((::KVImpactParameter*)p);
   }
   static void destruct_KVImpactParameter(void *p) {
      typedef ::KVImpactParameter current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVImpactParameter(TBuffer &buf, void *obj) {
      ((::KVImpactParameter*)obj)->::KVImpactParameter::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVImpactParameter

/********************************************************
* G__KVMultiDetanalysis.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVMultiDetanalysis();

extern "C" void G__set_cpp_environmentG__KVMultiDetanalysis() {
  G__cpp_reset_tagtableG__KVMultiDetanalysis();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVMultiDetanalysis() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVAutoFit */
static int G__G__KVMultiDetanalysis_346_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAutoFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVAutoFit[n];
     } else {
       p = new((void*) gvp) KVAutoFit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVAutoFit;
     } else {
       p = new((void*) gvp) KVAutoFit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAutoFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVAutoFit(*(KVAutoFit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVAutoFit(*(KVAutoFit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVAutoFit*) G__getstructoffset())->GetFunctions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVAutoFit*) G__getstructoffset())->SetHistos((KVHashList*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((KVAutoFit*) G__getstructoffset())->SetHistos((KVHashList*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAutoFit*) G__getstructoffset())->SetHisto((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAutoFit*) G__getstructoffset())->GetInterval();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAutoFit*) G__getstructoffset())->Recommence();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAutoFit*) G__getstructoffset())->Gather();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAutoFit*) G__getstructoffset())->Save();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAutoFit*) G__getstructoffset())->Relecture((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVAutoFit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAutoFit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVAutoFit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVAutoFit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVAutoFit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAutoFit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVAutoFit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVAutoFit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_346_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVAutoFit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVAutoFit G__TKVAutoFit;
static int G__G__KVMultiDetanalysis_346_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVAutoFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVAutoFit*) (soff+(sizeof(KVAutoFit)*i)))->~G__TKVAutoFit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVAutoFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVAutoFit*) (soff))->~G__TKVAutoFit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_346_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVAutoFit* dest = (KVAutoFit*) G__getstructoffset();
   *dest = *(KVAutoFit*) libp->para[0].ref;
   const KVAutoFit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVGaus1D */
static int G__G__KVMultiDetanalysis_347_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaus1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaus1D[n];
     } else {
       p = new((void*) gvp) KVGaus1D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaus1D;
     } else {
       p = new((void*) gvp) KVGaus1D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaus1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVGaus1D(*(KVGaus1D*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVGaus1D(*(KVGaus1D*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGaus1D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGaus1D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGaus1D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGaus1D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGaus1D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGaus1D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGaus1D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGaus1D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_347_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGaus1D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGaus1D G__TKVGaus1D;
static int G__G__KVMultiDetanalysis_347_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGaus1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGaus1D*) (soff+(sizeof(KVGaus1D)*i)))->~G__TKVGaus1D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGaus1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGaus1D*) (soff))->~G__TKVGaus1D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_347_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaus1D* dest = (KVGaus1D*) G__getstructoffset();
   *dest = *(KVGaus1D*) libp->para[0].ref;
   const KVGaus1D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataAnalyser */
static int G__G__KVMultiDetanalysis_354_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataAnalyser* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataAnalyser[n];
     } else {
       p = new((void*) gvp) KVDataAnalyser[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataAnalyser;
     } else {
       p = new((void*) gvp) KVDataAnalyser;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDataAnalyser*) G__getstructoffset())->SetUserClass((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->SetUserClass((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDataAnalyser*) G__getstructoffset())->GetUserClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDataAnalyser*) G__getstructoffset())->IsUserClassValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->Run();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->RunMenus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->ChooseDataSet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->ChooseDataType();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->ChooseAnalysisTask();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->ChooseSystem((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataAnalyser*) G__getstructoffset())->ChooseSystem();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDataAnalyser*) G__getstructoffset())->ChooseRuns((KVDBSystem*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->ChooseRuns((KVDBSystem*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataAnalyser*) G__getstructoffset())->ChooseRuns();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->ChooseUserClass();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->ChooseRunningMode();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->SubmitTask();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataAnalyser*) G__getstructoffset())->CheckTaskVariables());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataAnalyser*) G__getstructoffset())->DoUserClassFilesExist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->SetBatchMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataAnalyser*) G__getstructoffset())->SetBatchMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDataAnalyser*) G__getstructoffset())->BatchMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->SetBatchName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDataAnalyser*) G__getstructoffset())->GetBatchName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->SetBatchSystem((KVBatchSystem*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataAnalyser*) G__getstructoffset())->GetBatchSystem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataAnalyser*) G__getstructoffset())->RunningInLaunchDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDataAnalyser*) G__getstructoffset())->SystemBatchName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataAnalyser*) G__getstructoffset())->GetLaunchDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDataAnalyser*) G__getstructoffset())->GetBatchStatusFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDataAnalyser*) G__getstructoffset())->UpdateBatchStatusFile((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDataAnalyser*) G__getstructoffset())->DeleteBatchStatusFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const KVDataAnalyser*) G__getstructoffset())->GetTotalEntriesToRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDataAnalyser*) G__getstructoffset())->CheckStatusUpdateInterval((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDataAnalyser*) G__getstructoffset())->DoStatusUpdate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataAnalyser*) G__getstructoffset())->GetAnalysisTask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVString& obj = ((KVDataAnalyser*) G__getstructoffset())->GetDataType();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataAnalyser*) G__getstructoffset())->GetSystem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVNumberList& obj = ((KVDataAnalyser*) G__getstructoffset())->GetRunList();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataAnalyser*) G__getstructoffset())->GetDataSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVString& obj = ((KVDataAnalyser*) G__getstructoffset())->GetUserIncludes();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVString& obj = ((KVDataAnalyser*) G__getstructoffset())->GetUserLibraries();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->SetNbEventToRead((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataAnalyser*) G__getstructoffset())->SetNbEventToRead();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((KVDataAnalyser*) G__getstructoffset())->GetNbEventToRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->ChooseNbEventToRead();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->SetDataSet((KVDataSet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->SetDataSet((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->SetAnalysisTask((KVDataAnalysisTask*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->SetDataType((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->SetSystem((KVDBSystem*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDataAnalyser*) G__getstructoffset())->SetRuns(*(KVNumberList*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->SetRuns(*(KVNumberList*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDataAnalyser*) G__getstructoffset())->SetRuns((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->SetRuns((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->SetUserIncludes((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataAnalyser*) G__getstructoffset())->SetUserIncludes();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->SetUserLibraries((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataAnalyser*) G__getstructoffset())->SetUserLibraries();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->ClearRunList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->SetParent((KVDataAnalyser*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVDataAnalyser*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataAnalyser::GetAnalyser((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataAnalyser*) G__getstructoffset())->ReadBatchEnvFile((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVDataAnalyser*) G__getstructoffset())->WriteBatchEnvFile((const Char_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->WriteBatchEnvFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVDataAnalyser*) G__getstructoffset())->ExpandAutoBatchName((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->preInitAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->postInitAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->preInitRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->postInitRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->preAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->postAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->preEndRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->postEndRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->preEndAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->postEndAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->WriteBatchInfo((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVDataAnalyser*) G__getstructoffset())->GetRunNumberFromFileName((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->RegisterUserClass((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDataAnalyser*) G__getstructoffset())->SetUserClassOptions((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataAnalyser*) G__getstructoffset())->SetUserClassOptions();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVString& obj = ((const KVDataAnalyser*) G__getstructoffset())->GetUserClassOptions();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      KVDataAnalyser::RunAnalyser((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      KVDataAnalyser::RunAnalyser();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataAnalyser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataAnalyser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataAnalyser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataAnalyser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataAnalyser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataAnalyser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataAnalyser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataAnalyser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_354_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataAnalyser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetanalysis_354_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDataAnalyser* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDataAnalyser(*(KVDataAnalyser*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataAnalyser G__TKVDataAnalyser;
static int G__G__KVMultiDetanalysis_354_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataAnalyser*) (soff+(sizeof(KVDataAnalyser)*i)))->~G__TKVDataAnalyser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataAnalyser*) (soff))->~G__TKVDataAnalyser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_354_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataAnalyser* dest = (KVDataAnalyser*) G__getstructoffset();
   *dest = *(KVDataAnalyser*) libp->para[0].ref;
   const KVDataAnalyser& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVBatchSystem */
static int G__G__KVMultiDetanalysis_357_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVBatchSystem* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVBatchSystem((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVBatchSystem((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVNameValueList& obj = ((KVBatchSystem*) G__getstructoffset())->GetParameters();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVBatchSystem*) G__getstructoffset())->GetJobSubCmd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->SubmitTask((KVDataAnalyser*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->SubmitJob();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVBatchSystem*) G__getstructoffset())->PrintJobs((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVBatchSystem*) G__getstructoffset())->PrintJobs();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVBatchSystem*) G__getstructoffset())->CheckJobParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->Run();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->SetJobScript((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->SetDefaultJobOptions((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVBatchSystem*) G__getstructoffset())->GetDefaultJobOptions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->SetJobName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVBatchSystem*) G__getstructoffset())->GetJobName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVBatchSystem*) G__getstructoffset())->GetJobSubCmdLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVBatchSystem::GetBatchSystem((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->cd();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVBatchSystem*) G__getstructoffset())->SetMultiJobsMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVBatchSystem*) G__getstructoffset())->SetMultiJobsMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVBatchSystem*) G__getstructoffset())->MultiJobsMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->SetRunsPerJob((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVBatchSystem*) G__getstructoffset())->GetRunsPerJob());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->WriteBatchEnvFile((TEnv*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->ReadBatchEnvFile((TEnv*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->SetAnalyser((KVDataAnalyser*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         TString* pobj;
         TString xobj = ((KVBatchSystem*) G__getstructoffset())->BQS_Request(*((KVString*) G__int(libp->para[0])), *((KVString*) G__int(libp->para[1])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TString* pobj;
         TString xobj = ((KVBatchSystem*) G__getstructoffset())->BQS_Request(*((KVString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVBatchSystem*) G__getstructoffset())->SetJobTimeString((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVBatchSystem*) G__getstructoffset())->SetJobTimeString();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((KVBatchSystem*) G__getstructoffset())->SetJobTime((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVBatchSystem*) G__getstructoffset())->SetJobTime((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVBatchSystem*) G__getstructoffset())->SetJobTime((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVBatchSystem*) G__getstructoffset())->SetJobMemory((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVBatchSystem*) G__getstructoffset())->SetJobMemory();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVBatchSystem*) G__getstructoffset())->SetJobDisk((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVBatchSystem*) G__getstructoffset())->SetJobDisk();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->SanitizeJobName();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVBatchSystem*) G__getstructoffset())->GetListOfJobs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->AlterJobs((TGWindow*) G__int(libp->para[0]), (TList*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVBatchSystem::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBatchSystem::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVBatchSystem::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVBatchSystem::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystem*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBatchSystem::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVBatchSystem::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBatchSystem::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_357_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVBatchSystem::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVBatchSystem G__TKVBatchSystem;
static int G__G__KVMultiDetanalysis_357_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVBatchSystem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVBatchSystem*) (soff+(sizeof(KVBatchSystem)*i)))->~G__TKVBatchSystem();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVBatchSystem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVBatchSystem*) (soff))->~G__TKVBatchSystem();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVRootBatch */
static int G__G__KVMultiDetanalysis_358_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVRootBatch* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVRootBatch((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVRootBatch((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_358_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVRootBatch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_358_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRootBatch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_358_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVRootBatch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_358_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVRootBatch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_358_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVRootBatch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_358_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRootBatch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_358_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRootBatch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_358_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVRootBatch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_358_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVRootBatch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVRootBatch G__TKVRootBatch;
static int G__G__KVMultiDetanalysis_358_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVRootBatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVRootBatch*) (soff+(sizeof(KVRootBatch)*i)))->~G__TKVRootBatch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVRootBatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVRootBatch*) (soff))->~G__TKVRootBatch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVLinuxBatch */
static int G__G__KVMultiDetanalysis_359_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVLinuxBatch* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVLinuxBatch((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVLinuxBatch((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_359_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVLinuxBatch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_359_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLinuxBatch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_359_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVLinuxBatch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_359_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVLinuxBatch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_359_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVLinuxBatch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_359_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLinuxBatch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_359_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVLinuxBatch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_359_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLinuxBatch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_359_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVLinuxBatch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVLinuxBatch G__TKVLinuxBatch;
static int G__G__KVMultiDetanalysis_359_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVLinuxBatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVLinuxBatch*) (soff+(sizeof(KVLinuxBatch)*i)))->~G__TKVLinuxBatch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVLinuxBatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVLinuxBatch*) (soff))->~G__TKVLinuxBatch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KV_CCIN2P3_BQS */
static int G__G__KVMultiDetanalysis_360_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KV_CCIN2P3_BQS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KV_CCIN2P3_BQS((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KV_CCIN2P3_BQS((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KV_CCIN2P3_BQS*) G__getstructoffset())->GetJobTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KV_CCIN2P3_BQS*) G__getstructoffset())->GetJobMemory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KV_CCIN2P3_BQS*) G__getstructoffset())->GetJobDisk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KV_CCIN2P3_BQS*) G__getstructoffset())->ChooseJobTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KV_CCIN2P3_BQS*) G__getstructoffset())->ChooseJobMemory();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KV_CCIN2P3_BQS*) G__getstructoffset())->ChooseJobDisk();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KV_CCIN2P3_BQS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KV_CCIN2P3_BQS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KV_CCIN2P3_BQS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KV_CCIN2P3_BQS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KV_CCIN2P3_BQS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KV_CCIN2P3_BQS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KV_CCIN2P3_BQS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KV_CCIN2P3_BQS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_360_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KV_CCIN2P3_BQS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KV_CCIN2P3_BQS G__TKV_CCIN2P3_BQS;
static int G__G__KVMultiDetanalysis_360_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KV_CCIN2P3_BQS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KV_CCIN2P3_BQS*) (soff+(sizeof(KV_CCIN2P3_BQS)*i)))->~G__TKV_CCIN2P3_BQS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KV_CCIN2P3_BQS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KV_CCIN2P3_BQS*) (soff))->~G__TKV_CCIN2P3_BQS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimReader */
static int G__G__KVMultiDetanalysis_744_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader[n];
     } else {
       p = new((void*) gvp) KVSimReader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader;
     } else {
       p = new((void*) gvp) KVSimReader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimReader(*((KVString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) KVSimReader(*((KVString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->CleanAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         KVString* pobj;
         KVString xobj = ((KVSimReader*) G__getstructoffset())->GetDate();
         pobj = new KVString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVSimReader*) G__getstructoffset())->SetFillingMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVSimReader*) G__getstructoffset())->SetFillingMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->DeclareTree(*((KVString*) G__int(libp->para[0])), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSimReader*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->FillTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVSimReader*) G__getstructoffset())->HasToFill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->SaveTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVSimReader*) G__getstructoffset())->Run(*((KVString*) G__int(libp->para[0])), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVSimReader*) G__getstructoffset())->Run(*((KVString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((KVSimReader*) G__getstructoffset())->Run();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSimReader*) G__getstructoffset())->GetLinkedObjects());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->AddObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->WriteObjects();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->CreateObjectList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSimReader*) G__getstructoffset())->GetSimuInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->AddInfo((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->AddInfo((TNamed*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->WriteInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->CreateInfoList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->ReadFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVSimReader*) G__getstructoffset())->ReadHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVSimReader*) G__getstructoffset())->ReadEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVSimReader*) G__getstructoffset())->ReadNucleus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVSimReader*) G__getstructoffset())->GetNumberOfEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->SetTreeName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->SetTreeTitle((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->SetROOTFileName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->SetBranchName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_744_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimReader G__TKVSimReader;
static int G__G__KVMultiDetanalysis_744_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimReader*) (soff+(sizeof(KVSimReader)*i)))->~G__TKVSimReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimReader*) (soff))->~G__TKVSimReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimReader_SMF_asym */
static int G__G__KVMultiDetanalysis_745_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_SMF_asym* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_SMF_asym[n];
     } else {
       p = new((void*) gvp) KVSimReader_SMF_asym[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_SMF_asym;
     } else {
       p = new((void*) gvp) KVSimReader_SMF_asym;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_SMF_asym* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimReader_SMF_asym(*((KVString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) KVSimReader_SMF_asym(*((KVString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimReader_SMF_asym::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_SMF_asym::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimReader_SMF_asym::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimReader_SMF_asym::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_SMF_asym*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_SMF_asym::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_SMF_asym::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_SMF_asym::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_745_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_SMF_asym::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimReader_SMF_asym G__TKVSimReader_SMF_asym;
static int G__G__KVMultiDetanalysis_745_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimReader_SMF_asym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimReader_SMF_asym*) (soff+(sizeof(KVSimReader_SMF_asym)*i)))->~G__TKVSimReader_SMF_asym();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimReader_SMF_asym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimReader_SMF_asym*) (soff))->~G__TKVSimReader_SMF_asym();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVEventSelector */
static int G__G__KVMultiDetanalysis_779_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((KVEventSelector*) G__getstructoffset())->CreateTreeFile((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((KVEventSelector*) G__getstructoffset())->CreateTreeFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->ParseOptions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVEventSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVEventSelector((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVEventSelector((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVEventSelector[n];
       } else {
         p = new((void*) gvp) KVEventSelector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVEventSelector;
       } else {
         p = new((void*) gvp) KVEventSelector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEventSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->SetEventsReadInterval((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->SetBranchName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVEventSelector*) G__getstructoffset())->GetBranchName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->SetAnalysisFrame();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVEventSelector*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->InitAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->InitRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVEventSelector*) G__getstructoffset())->Analysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->EndRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->EndAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->SetGVList((KVGVList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVEventSelector*) G__getstructoffset())->GetGVList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->AddGV((KVVarGlob*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVEventSelector*) G__getstructoffset())->AddGV((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVEventSelector*) G__getstructoffset())->GetGV((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->RecalculateGlobalVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVEventSelector*) G__getstructoffset())->AtEndOfRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->SetParticleConditions(*(KVParticleCondition*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->AddHisto((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->AddTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((KVEventSelector*) G__getstructoffset())->FillHisto((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((KVEventSelector*) G__getstructoffset())->FillHisto((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVEventSelector*) G__getstructoffset())->FillHisto((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVEventSelector*) G__getstructoffset())->FillHisto((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVEventSelector*) G__getstructoffset())->FillTree((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVEventSelector*) G__getstructoffset())->FillTree();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVEventSelector*) G__getstructoffset())->GetHistoList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVEventSelector*) G__getstructoffset())->GetTreeList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVEventSelector*) G__getstructoffset())->GetHisto((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVEventSelector*) G__getstructoffset())->GetTree((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((KVEventSelector*) G__getstructoffset())->SaveHistos((const Char_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVEventSelector*) G__getstructoffset())->SaveHistos((const Char_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVEventSelector*) G__getstructoffset())->SaveHistos((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVEventSelector*) G__getstructoffset())->SaveHistos();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->SetOpt((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVEventSelector*) G__getstructoffset())->IsOptGiven((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const KVEventSelector*) G__getstructoffset())->GetOpt((const Char_t*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->UnsetOpt((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->SetAdditionalBranchAddress();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVEventSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVEventSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVEventSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVEventSelector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVEventSelector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVEventSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVEventSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVEventSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_779_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVEventSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVEventSelector G__TKVEventSelector;
static int G__G__KVMultiDetanalysis_779_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVEventSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVEventSelector*) (soff+(sizeof(KVEventSelector)*i)))->~G__TKVEventSelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVEventSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVEventSelector*) (soff))->~G__TKVEventSelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimReader_HIPSE */
static int G__G__KVMultiDetanalysis_781_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_HIPSE* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_HIPSE[n];
     } else {
       p = new((void*) gvp) KVSimReader_HIPSE[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_HIPSE;
     } else {
       p = new((void*) gvp) KVSimReader_HIPSE;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_HIPSE* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimReader_HIPSE(*((KVString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) KVSimReader_HIPSE(*((KVString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_HIPSE*) G__getstructoffset())->SetPotentialHardness((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_HIPSE*) G__getstructoffset())->SetExchangePercentage((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_HIPSE*) G__getstructoffset())->SetNNCollisionPercentage((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimReader_HIPSE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_HIPSE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimReader_HIPSE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimReader_HIPSE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_HIPSE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_HIPSE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_HIPSE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_HIPSE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_781_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_HIPSE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimReader_HIPSE G__TKVSimReader_HIPSE;
static int G__G__KVMultiDetanalysis_781_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimReader_HIPSE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimReader_HIPSE*) (soff+(sizeof(KVSimReader_HIPSE)*i)))->~G__TKVSimReader_HIPSE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimReader_HIPSE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimReader_HIPSE*) (soff))->~G__TKVSimReader_HIPSE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimReader_HIPSE_asym */
static int G__G__KVMultiDetanalysis_782_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_HIPSE_asym* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_HIPSE_asym[n];
     } else {
       p = new((void*) gvp) KVSimReader_HIPSE_asym[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_HIPSE_asym;
     } else {
       p = new((void*) gvp) KVSimReader_HIPSE_asym;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_HIPSE_asym* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimReader_HIPSE_asym(*((KVString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) KVSimReader_HIPSE_asym(*((KVString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimReader_HIPSE_asym::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_HIPSE_asym::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimReader_HIPSE_asym::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimReader_HIPSE_asym::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_HIPSE_asym*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_HIPSE_asym::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_HIPSE_asym::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_HIPSE_asym::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_782_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_HIPSE_asym::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimReader_HIPSE_asym G__TKVSimReader_HIPSE_asym;
static int G__G__KVMultiDetanalysis_782_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimReader_HIPSE_asym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimReader_HIPSE_asym*) (soff+(sizeof(KVSimReader_HIPSE_asym)*i)))->~G__TKVSimReader_HIPSE_asym();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimReader_HIPSE_asym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimReader_HIPSE_asym*) (soff))->~G__TKVSimReader_HIPSE_asym();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimReader_ELIE */
static int G__G__KVMultiDetanalysis_786_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_ELIE* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_ELIE[n];
     } else {
       p = new((void*) gvp) KVSimReader_ELIE[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_ELIE;
     } else {
       p = new((void*) gvp) KVSimReader_ELIE;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_ELIE* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimReader_ELIE(*((KVString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) KVSimReader_ELIE(*((KVString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimReader_ELIE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_ELIE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimReader_ELIE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimReader_ELIE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_ELIE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_ELIE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_ELIE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_ELIE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_786_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_ELIE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimReader_ELIE G__TKVSimReader_ELIE;
static int G__G__KVMultiDetanalysis_786_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimReader_ELIE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimReader_ELIE*) (soff+(sizeof(KVSimReader_ELIE)*i)))->~G__TKVSimReader_ELIE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimReader_ELIE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimReader_ELIE*) (soff))->~G__TKVSimReader_ELIE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataTransfer */
static int G__G__KVMultiDetanalysis_788_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataTransfer*) G__getstructoffset())->TransferRuns();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataTransfer::NewTransfer((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataTransfer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransfer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataTransfer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataTransfer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataTransfer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransfer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataTransfer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransfer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_788_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataTransfer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataTransfer G__TKVDataTransfer;
static int G__G__KVMultiDetanalysis_788_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataTransfer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataTransfer*) (soff+(sizeof(KVDataTransfer)*i)))->~G__TKVDataTransfer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataTransfer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataTransfer*) (soff))->~G__TKVDataTransfer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_788_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataTransfer* dest = (KVDataTransfer*) G__getstructoffset();
   *dest = *(KVDataTransfer*) libp->para[0].ref;
   const KVDataTransfer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataTransferSFTP */
static int G__G__KVMultiDetanalysis_789_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataTransferSFTP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_789_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransferSFTP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_789_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataTransferSFTP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_789_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataTransferSFTP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_789_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataTransferSFTP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_789_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransferSFTP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_789_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataTransferSFTP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_789_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransferSFTP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_789_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataTransferSFTP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataTransferSFTP G__TKVDataTransferSFTP;
static int G__G__KVMultiDetanalysis_789_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataTransferSFTP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataTransferSFTP*) (soff+(sizeof(KVDataTransferSFTP)*i)))->~G__TKVDataTransferSFTP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataTransferSFTP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataTransferSFTP*) (soff))->~G__TKVDataTransferSFTP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_789_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataTransferSFTP* dest = (KVDataTransferSFTP*) G__getstructoffset();
   *dest = *(KVDataTransferSFTP*) libp->para[0].ref;
   const KVDataTransferSFTP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimReader_MMM */
static int G__G__KVMultiDetanalysis_790_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_MMM* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_MMM[n];
     } else {
       p = new((void*) gvp) KVSimReader_MMM[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_MMM;
     } else {
       p = new((void*) gvp) KVSimReader_MMM;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_MMM* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimReader_MMM(*((KVString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) KVSimReader_MMM(*((KVString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimReader_MMM::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_MMM::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimReader_MMM::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimReader_MMM::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_MMM*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_MMM::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_MMM::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_MMM::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_790_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_MMM::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimReader_MMM G__TKVSimReader_MMM;
static int G__G__KVMultiDetanalysis_790_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimReader_MMM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimReader_MMM*) (soff+(sizeof(KVSimReader_MMM)*i)))->~G__TKVSimReader_MMM();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimReader_MMM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimReader_MMM*) (soff))->~G__TKVSimReader_MMM();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVBatchJob */
static int G__G__KVMultiDetanalysis_793_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVBatchJob* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVBatchJob[n];
     } else {
       p = new((void*) gvp) KVBatchJob[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVBatchJob;
     } else {
       p = new((void*) gvp) KVBatchJob;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVBatchJob*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetStatus((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVDatime& obj = ((const KVBatchJob*) G__getstructoffset())->GetSubmitted();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetSubmitted(*(KVDatime*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVBatchJob*) G__getstructoffset())->GetJobID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetJobID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetCPUusage((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVBatchJob*) G__getstructoffset())->GetCPUusage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetMemUsed((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVBatchJob*) G__getstructoffset())->GetMemUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetCPUmax((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVBatchJob*) G__getstructoffset())->GetCPUmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetMemMax((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVBatchJob*) G__getstructoffset())->GetMemMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetDiskMax((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVBatchJob*) G__getstructoffset())->GetDiskMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetDiskUsed((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVBatchJob*) G__getstructoffset())->GetDiskUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetEventsTotal((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVBatchJob*) G__getstructoffset())->GetEventsTotal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->SetEventsRead((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVBatchJob*) G__getstructoffset())->GetEventsRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVBatchJob*) G__getstructoffset())->GetPercentageComplete());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->DeleteJob();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->UpdateDiskUsedEventsRead();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVBatchJob::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBatchJob::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVBatchJob::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVBatchJob::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchJob*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBatchJob::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVBatchJob::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBatchJob::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_793_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVBatchJob::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetanalysis_793_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVBatchJob* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVBatchJob(*(KVBatchJob*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVBatchJob G__TKVBatchJob;
static int G__G__KVMultiDetanalysis_793_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVBatchJob*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVBatchJob*) (soff+(sizeof(KVBatchJob)*i)))->~G__TKVBatchJob();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVBatchJob*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVBatchJob*) (soff))->~G__TKVBatchJob();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_793_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVBatchJob* dest = (KVBatchJob*) G__getstructoffset();
   *dest = *(KVBatchJob*) libp->para[0].ref;
   const KVBatchJob& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataTransferBBFTP */
static int G__G__KVMultiDetanalysis_794_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataTransferBBFTP* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataTransferBBFTP[n];
     } else {
       p = new((void*) gvp) KVDataTransferBBFTP[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataTransferBBFTP;
     } else {
       p = new((void*) gvp) KVDataTransferBBFTP;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_794_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataTransferBBFTP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_794_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransferBBFTP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_794_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataTransferBBFTP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_794_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataTransferBBFTP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_794_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataTransferBBFTP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_794_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransferBBFTP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_794_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataTransferBBFTP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_794_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransferBBFTP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_794_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataTransferBBFTP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetanalysis_794_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDataTransferBBFTP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDataTransferBBFTP(*(KVDataTransferBBFTP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataTransferBBFTP G__TKVDataTransferBBFTP;
static int G__G__KVMultiDetanalysis_794_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataTransferBBFTP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataTransferBBFTP*) (soff+(sizeof(KVDataTransferBBFTP)*i)))->~G__TKVDataTransferBBFTP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataTransferBBFTP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataTransferBBFTP*) (soff))->~G__TKVDataTransferBBFTP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_794_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataTransferBBFTP* dest = (KVDataTransferBBFTP*) G__getstructoffset();
   *dest = *(KVDataTransferBBFTP*) libp->para[0].ref;
   const KVDataTransferBBFTP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimReader_SMF */
static int G__G__KVMultiDetanalysis_795_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_SMF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_SMF[n];
     } else {
       p = new((void*) gvp) KVSimReader_SMF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_SMF;
     } else {
       p = new((void*) gvp) KVSimReader_SMF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_SMF* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimReader_SMF(*((KVString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) KVSimReader_SMF(*((KVString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_SMF*) G__getstructoffset())->SetTimeBranching((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimReader_SMF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_SMF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimReader_SMF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimReader_SMF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_SMF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_SMF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_SMF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_SMF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_795_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_SMF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimReader_SMF G__TKVSimReader_SMF;
static int G__G__KVMultiDetanalysis_795_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimReader_SMF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimReader_SMF*) (soff+(sizeof(KVSimReader_SMF)*i)))->~G__TKVSimReader_SMF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimReader_SMF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimReader_SMF*) (soff))->~G__TKVSimReader_SMF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataPatch */
static int G__G__KVMultiDetanalysis_796_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataPatch*) G__getstructoffset())->IsRequired(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), (TList*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataPatch*) G__getstructoffset())->IsEventPatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataPatch*) G__getstructoffset())->IsParticlePatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataPatch*) G__getstructoffset())->ApplyToEvent((KVEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataPatch*) G__getstructoffset())->ApplyToParticle((KVNucleus*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVDataPatch*) G__getstructoffset())->PrintPatchInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataPatch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataPatch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataPatch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataPatch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataPatch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_796_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataPatch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataPatch G__TKVDataPatch;
static int G__G__KVMultiDetanalysis_796_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataPatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataPatch*) (soff+(sizeof(KVDataPatch)*i)))->~G__TKVDataPatch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataPatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataPatch*) (soff))->~G__TKVDataPatch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_796_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataPatch* dest = (KVDataPatch*) G__getstructoffset();
   *dest = *(KVDataPatch*) libp->para[0].ref;
   const KVDataPatch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KV_CCIN2P3_GE */
static int G__G__KVMultiDetanalysis_797_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KV_CCIN2P3_GE* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KV_CCIN2P3_GE((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KV_CCIN2P3_GE((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KV_CCIN2P3_GE*) G__getstructoffset())->GetJobTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KV_CCIN2P3_GE*) G__getstructoffset())->GetJobMemory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KV_CCIN2P3_GE*) G__getstructoffset())->GetJobDisk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KV_CCIN2P3_GE*) G__getstructoffset())->ChooseJobTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KV_CCIN2P3_GE*) G__getstructoffset())->ChooseJobMemory();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KV_CCIN2P3_GE*) G__getstructoffset())->ChooseJobDisk();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KV_CCIN2P3_GE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KV_CCIN2P3_GE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KV_CCIN2P3_GE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KV_CCIN2P3_GE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KV_CCIN2P3_GE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KV_CCIN2P3_GE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KV_CCIN2P3_GE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KV_CCIN2P3_GE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_797_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KV_CCIN2P3_GE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KV_CCIN2P3_GE G__TKV_CCIN2P3_GE;
static int G__G__KVMultiDetanalysis_797_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KV_CCIN2P3_GE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KV_CCIN2P3_GE*) (soff+(sizeof(KV_CCIN2P3_GE)*i)))->~G__TKV_CCIN2P3_GE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KV_CCIN2P3_GE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KV_CCIN2P3_GE*) (soff))->~G__TKV_CCIN2P3_GE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVGaxis */
static int G__G__KVMultiDetanalysis_801_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaxis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis[n];
     } else {
       p = new((void*) gvp) KVGaxis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis;
     } else {
       p = new((void*) gvp) KVGaxis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaxis* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Option_t*) G__int(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Option_t*) G__int(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Option_t*) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Option_t*) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaxis* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Option_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (char**) G__int(libp->para[11]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Option_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (char**) G__int(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Option_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Option_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Option_t*) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Option_t*) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaxis* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Option_t*) G__int(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Option_t*) G__int(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Option_t*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Option_t*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) KVGaxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVGaxis*) G__getstructoffset())->SetFormat((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVGaxis*) G__getstructoffset())->SetFormat();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGaxis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGaxis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGaxis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGaxis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGaxis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGaxis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGaxis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGaxis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_801_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGaxis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetanalysis_801_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVGaxis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVGaxis(*(KVGaxis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGaxis G__TKVGaxis;
static int G__G__KVMultiDetanalysis_801_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGaxis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGaxis*) (soff+(sizeof(KVGaxis)*i)))->~G__TKVGaxis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGaxis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGaxis*) (soff))->~G__TKVGaxis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSimReader_MMM_asym */
static int G__G__KVMultiDetanalysis_802_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_MMM_asym* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_MMM_asym[n];
     } else {
       p = new((void*) gvp) KVSimReader_MMM_asym[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSimReader_MMM_asym;
     } else {
       p = new((void*) gvp) KVSimReader_MMM_asym;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSimReader_MMM_asym* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSimReader_MMM_asym(*((KVString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) KVSimReader_MMM_asym(*((KVString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSimReader_MMM_asym::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_MMM_asym::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSimReader_MMM_asym::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSimReader_MMM_asym::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSimReader_MMM_asym*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_MMM_asym::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_MMM_asym::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSimReader_MMM_asym::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_802_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSimReader_MMM_asym::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSimReader_MMM_asym G__TKVSimReader_MMM_asym;
static int G__G__KVMultiDetanalysis_802_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSimReader_MMM_asym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSimReader_MMM_asym*) (soff+(sizeof(KVSimReader_MMM_asym)*i)))->~G__TKVSimReader_MMM_asym();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSimReader_MMM_asym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSimReader_MMM_asym*) (soff))->~G__TKVSimReader_MMM_asym();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVGraph */
static int G__G__KVMultiDetanalysis_807_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGraph* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGraph[n];
     } else {
       p = new((void*) gvp) KVGraph[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGraph;
     } else {
       p = new((void*) gvp) KVGraph;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGraph* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVGraph((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVGraph((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVGraph*) G__getstructoffset())->SetDisplayDivX((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVGraph*) G__getstructoffset())->SetDisplayDivX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVGraph*) G__getstructoffset())->SetDisplayDivY((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVGraph*) G__getstructoffset())->SetDisplayDivY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVGraph*) G__getstructoffset())->SetCropMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVGraph*) G__getstructoffset())->SetCropMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVGraph*) G__getstructoffset())->SetUseX((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVGraph*) G__getstructoffset())->SetUseX();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVGraph*) G__getstructoffset())->SetUseY((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVGraph*) G__getstructoffset())->SetUseY();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGraph::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGraph::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGraph::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGraph::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGraph*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGraph::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGraph::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGraph::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_807_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGraph::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetanalysis_807_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVGraph* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVGraph(*(KVGraph*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGraph G__TKVGraph;
static int G__G__KVMultiDetanalysis_807_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGraph*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGraph*) (soff+(sizeof(KVGraph)*i)))->~G__TKVGraph();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGraph*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGraph*) (soff))->~G__TKVGraph();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_807_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGraph* dest = (KVGraph*) G__getstructoffset();
   *dest = *(KVGraph*) libp->para[0].ref;
   const KVGraph& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataTransferXRD */
static int G__G__KVMultiDetanalysis_809_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataTransferXRD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataTransferXRD[n];
     } else {
       p = new((void*) gvp) KVDataTransferXRD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataTransferXRD;
     } else {
       p = new((void*) gvp) KVDataTransferXRD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_809_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataTransferXRD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_809_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransferXRD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_809_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataTransferXRD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_809_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataTransferXRD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_809_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataTransferXRD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_809_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransferXRD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_809_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataTransferXRD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_809_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataTransferXRD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_809_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataTransferXRD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetanalysis_809_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDataTransferXRD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDataTransferXRD(*(KVDataTransferXRD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataTransferXRD G__TKVDataTransferXRD;
static int G__G__KVMultiDetanalysis_809_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataTransferXRD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataTransferXRD*) (soff+(sizeof(KVDataTransferXRD)*i)))->~G__TKVDataTransferXRD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataTransferXRD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataTransferXRD*) (soff))->~G__TKVDataTransferXRD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_809_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataTransferXRD* dest = (KVDataTransferXRD*) G__getstructoffset();
   *dest = *(KVDataTransferXRD*) libp->para[0].ref;
   const KVDataTransferXRD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVBatchSystemManager */
static int G__G__KVMultiDetanalysis_810_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVBatchSystemManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVBatchSystemManager[n];
     } else {
       p = new((void*) gvp) KVBatchSystemManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVBatchSystemManager;
     } else {
       p = new((void*) gvp) KVBatchSystemManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystemManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVBatchSystemManager*) G__getstructoffset())->GetBatchSystem((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVBatchSystemManager*) G__getstructoffset())->GetBatchSystem((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVBatchSystemManager*) G__getstructoffset())->GetDefaultBatchSystem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const KVBatchSystemManager*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const KVBatchSystemManager*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVBatchSystemManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBatchSystemManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVBatchSystemManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVBatchSystemManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVBatchSystemManager*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystemManager*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystemManager*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBatchSystemManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBatchSystemManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVBatchSystemManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBatchSystemManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_810_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVBatchSystemManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVBatchSystemManager G__TKVBatchSystemManager;
static int G__G__KVMultiDetanalysis_810_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVBatchSystemManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVBatchSystemManager*) (soff+(sizeof(KVBatchSystemManager)*i)))->~G__TKVBatchSystemManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVBatchSystemManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVBatchSystemManager*) (soff))->~G__TKVBatchSystemManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVGaus2D */
static int G__G__KVMultiDetanalysis_811_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaus2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaus2D[n];
     } else {
       p = new((void*) gvp) KVGaus2D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGaus2D;
     } else {
       p = new((void*) gvp) KVGaus2D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaus2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVGaus2D(*(KVGaus2D*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVGaus2D(*(KVGaus2D*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGaus2D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGaus2D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGaus2D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGaus2D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGaus2D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGaus2D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGaus2D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGaus2D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_811_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGaus2D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGaus2D G__TKVGaus2D;
static int G__G__KVMultiDetanalysis_811_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGaus2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGaus2D*) (soff+(sizeof(KVGaus2D)*i)))->~G__TKVGaus2D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGaus2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGaus2D*) (soff))->~G__TKVGaus2D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_811_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGaus2D* dest = (KVGaus2D*) G__getstructoffset();
   *dest = *(KVGaus2D*) libp->para[0].ref;
   const KVGaus2D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVGumbelDistribution */
static int G__G__KVMultiDetanalysis_812_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGumbelDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumbelDistribution[n];
     } else {
       p = new((void*) gvp) KVGumbelDistribution[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumbelDistribution;
     } else {
       p = new((void*) gvp) KVGumbelDistribution;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGumbelDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumbelDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) KVGumbelDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumbelDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) KVGumbelDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumbelDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) KVGumbelDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumbelDistribution((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVGumbelDistribution((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumbelDistribution((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVGumbelDistribution((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGumbelDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVGumbelDistribution(*(KVGumbelDistribution*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVGumbelDistribution(*(KVGumbelDistribution*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVGumbelDistribution*) G__getstructoffset())->GDk((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGumbelDistribution::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGumbelDistribution::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGumbelDistribution::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGumbelDistribution::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGumbelDistribution*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGumbelDistribution::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGumbelDistribution::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGumbelDistribution::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_812_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGumbelDistribution::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGumbelDistribution G__TKVGumbelDistribution;
static int G__G__KVMultiDetanalysis_812_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGumbelDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGumbelDistribution*) (soff+(sizeof(KVGumbelDistribution)*i)))->~G__TKVGumbelDistribution();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGumbelDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGumbelDistribution*) (soff))->~G__TKVGumbelDistribution();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVGumGumDistribution */
static int G__G__KVMultiDetanalysis_813_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGumGumDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumGumDistribution[n];
     } else {
       p = new((void*) gvp) KVGumGumDistribution[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumGumDistribution;
     } else {
       p = new((void*) gvp) KVGumGumDistribution;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGumGumDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumGumDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) KVGumGumDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumGumDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) KVGumGumDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumGumDistribution((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVGumGumDistribution((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGumGumDistribution((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVGumGumDistribution((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGumGumDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVGumGumDistribution(*(KVGumGumDistribution*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVGumGumDistribution(*(KVGumGumDistribution*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVGumGumDistribution*) G__getstructoffset())->GDk((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGumGumDistribution::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGumGumDistribution::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGumGumDistribution::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGumGumDistribution::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGumGumDistribution*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGumGumDistribution::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGumGumDistribution::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGumGumDistribution::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_813_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGumGumDistribution::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGumGumDistribution G__TKVGumGumDistribution;
static int G__G__KVMultiDetanalysis_813_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGumGumDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGumGumDistribution*) (soff+(sizeof(KVGumGumDistribution)*i)))->~G__TKVGumGumDistribution();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGumGumDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGumGumDistribution*) (soff))->~G__TKVGumGumDistribution();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVGEBatchJob */
static int G__G__KVMultiDetanalysis_814_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGEBatchJob* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGEBatchJob[n];
     } else {
       p = new((void*) gvp) KVGEBatchJob[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGEBatchJob;
     } else {
       p = new((void*) gvp) KVGEBatchJob;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGEBatchJob*) G__getstructoffset())->SetResources(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVGEBatchJob*) G__getstructoffset())->GetResources());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGEBatchJob*) G__getstructoffset())->SetCPUscalingFactor((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGEBatchJob*) G__getstructoffset())->AlterResources(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGEBatchJob::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGEBatchJob::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGEBatchJob::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGEBatchJob::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGEBatchJob*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGEBatchJob::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGEBatchJob::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGEBatchJob::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_814_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGEBatchJob::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetanalysis_814_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVGEBatchJob* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVGEBatchJob(*(KVGEBatchJob*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGEBatchJob G__TKVGEBatchJob;
static int G__G__KVMultiDetanalysis_814_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGEBatchJob*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGEBatchJob*) (soff+(sizeof(KVGEBatchJob)*i)))->~G__TKVGEBatchJob();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGEBatchJob*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGEBatchJob*) (soff))->~G__TKVGEBatchJob();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_814_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGEBatchJob* dest = (KVGEBatchJob*) G__getstructoffset();
   *dest = *(KVGEBatchJob*) libp->para[0].ref;
   const KVGEBatchJob& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataPatchList */
static int G__G__KVMultiDetanalysis_815_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataPatchList* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataPatchList[n];
     } else {
       p = new((void*) gvp) KVDataPatchList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataPatchList;
     } else {
       p = new((void*) gvp) KVDataPatchList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataPatchList* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataPatchList((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVDataPatchList((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataPatchList((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVDataPatchList((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataPatchList*) G__getstructoffset())->InitializePatchList(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), (TList*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataPatchList*) G__getstructoffset())->Apply((KVEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDataPatchList*) G__getstructoffset())->HasActivePatches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataPatchList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatchList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataPatchList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataPatchList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataPatchList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatchList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataPatchList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatchList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_815_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataPatchList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataPatchList G__TKVDataPatchList;
static int G__G__KVMultiDetanalysis_815_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataPatchList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataPatchList*) (soff+(sizeof(KVDataPatchList)*i)))->~G__TKVDataPatchList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataPatchList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataPatchList*) (soff))->~G__TKVDataPatchList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVGausGumDistribution */
static int G__G__KVMultiDetanalysis_816_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGausGumDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGausGumDistribution[n];
     } else {
       p = new((void*) gvp) KVGausGumDistribution[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGausGumDistribution;
     } else {
       p = new((void*) gvp) KVGausGumDistribution;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGausGumDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGausGumDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) KVGausGumDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGausGumDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) KVGausGumDistribution(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGausGumDistribution((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVGausGumDistribution((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVGausGumDistribution((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVGausGumDistribution((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVGausGumDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVGausGumDistribution(*(KVGausGumDistribution*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVGausGumDistribution(*(KVGausGumDistribution*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVGausGumDistribution*) G__getstructoffset())->GDk((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVGausGumDistribution::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGausGumDistribution::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVGausGumDistribution::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVGausGumDistribution::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVGausGumDistribution*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGausGumDistribution::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGausGumDistribution::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVGausGumDistribution::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_816_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVGausGumDistribution::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVGausGumDistribution G__TKVGausGumDistribution;
static int G__G__KVMultiDetanalysis_816_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVGausGumDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVGausGumDistribution*) (soff+(sizeof(KVGausGumDistribution)*i)))->~G__TKVGausGumDistribution();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVGausGumDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVGausGumDistribution*) (soff))->~G__TKVGausGumDistribution();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVImpactParameter */
static int G__G__KVMultiDetanalysis_820_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVImpactParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVImpactParameter((TH1*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVImpactParameter((TH1*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVImpactParameter((TH1*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVImpactParameter((TH1*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVImpactParameter*) G__getstructoffset())->MakeScale((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVImpactParameter*) G__getstructoffset())->MakeScale((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVImpactParameter*) G__getstructoffset())->MakeScale();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVImpactParameter*) G__getstructoffset())->MakeAbsoluteScale((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVImpactParameter*) G__getstructoffset())->MakeAbsoluteScale((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVImpactParameter*) G__getstructoffset())->MakeAbsoluteScale();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVImpactParameter*) G__getstructoffset())->GetScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVImpactParameter*) G__getstructoffset())->GetXSecScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVImpactParameter*) G__getstructoffset())->BTransform((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVImpactParameter*) G__getstructoffset())->XTransform((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVImpactParameter*) G__getstructoffset())->GetTransFunc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVImpactParameter*) G__getstructoffset())->GetXSecTransFunc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVImpactParameter*) G__getstructoffset())->GetImpactParameter((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVImpactParameter*) G__getstructoffset())->GetCrossSection((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVImpactParameter*) G__getstructoffset())->GetObservable((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVImpactParameter*) G__getstructoffset())->GetObservableXSec((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetIPDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetIPDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetIPDistribution((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetIPEvolution((TH2*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetIPEvolution((TH2*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetXSecDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetXSecDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetXSecDistribution((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetXSecEvolution((TH2*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 85, (long) ((KVImpactParameter*) G__getstructoffset())->GetXSecEvolution((TH2*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVImpactParameter::GetXSecFromIP((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) KVImpactParameter::GetIPFromXSec((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVImpactParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVImpactParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVImpactParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVImpactParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVImpactParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVImpactParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVImpactParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVImpactParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVMultiDetanalysis_820_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVImpactParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVMultiDetanalysis_820_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVImpactParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVImpactParameter(*(KVImpactParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVImpactParameter G__TKVImpactParameter;
static int G__G__KVMultiDetanalysis_820_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVImpactParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVImpactParameter*) (soff+(sizeof(KVImpactParameter)*i)))->~G__TKVImpactParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVImpactParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVImpactParameter*) (soff))->~G__TKVImpactParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVMultiDetanalysis_820_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVImpactParameter* dest = (KVImpactParameter*) G__getstructoffset();
   *dest = *(KVImpactParameter*) libp->para[0].ref;
   const KVImpactParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVAutoFit */

/* KVGaus1D */

/* KVDataAnalyser */

/* KVBatchSystem */

/* KVRootBatch */

/* KVLinuxBatch */

/* KV_CCIN2P3_BQS */

/* KVSimReader */

/* KVSimReader_SMF_asym */

/* KVEventSelector */

/* KVSimReader_HIPSE */

/* KVSimReader_HIPSE_asym */

/* KVSimReader_ELIE */

/* KVDataTransfer */

/* KVDataTransferSFTP */

/* KVSimReader_MMM */

/* KVBatchJob */

/* KVDataTransferBBFTP */

/* KVSimReader_SMF */

/* KVDataPatch */

/* KV_CCIN2P3_GE */

/* KVGaxis */

/* KVSimReader_MMM_asym */

/* KVGraph */

/* KVDataTransferXRD */

/* KVBatchSystemManager */

/* KVGaus2D */

/* KVGumbelDistribution */

/* KVGumGumDistribution */

/* KVGEBatchJob */

/* KVDataPatchList */

/* KVGausGumDistribution */

/* KVImpactParameter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVMultiDetanalysis {
 public:
  G__Sizep2memfuncG__KVMultiDetanalysis(): p(&G__Sizep2memfuncG__KVMultiDetanalysis::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVMultiDetanalysis::*p)();
};

size_t G__get_sizep2memfuncG__KVMultiDetanalysis()
{
  G__Sizep2memfuncG__KVMultiDetanalysis a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVMultiDetanalysis() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit))) {
     KVAutoFit *G__Lderived;
     G__Lderived=(KVAutoFit*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D))) {
     KVGaus1D *G__Lderived;
     G__Lderived=(KVGaus1D*)0x1000;
     {
       KVAutoFit *G__Lpbase=(KVAutoFit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser))) {
     KVDataAnalyser *G__Lderived;
     G__Lderived=(KVDataAnalyser*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem))) {
     KVBatchSystem *G__Lderived;
     G__Lderived=(KVBatchSystem*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch))) {
     KVRootBatch *G__Lderived;
     G__Lderived=(KVRootBatch*)0x1000;
     {
       KVBatchSystem *G__Lpbase=(KVBatchSystem*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch))) {
     KVLinuxBatch *G__Lderived;
     G__Lderived=(KVLinuxBatch*)0x1000;
     {
       KVRootBatch *G__Lpbase=(KVRootBatch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBatchSystem *G__Lpbase=(KVBatchSystem*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS))) {
     KV_CCIN2P3_BQS *G__Lderived;
     G__Lderived=(KV_CCIN2P3_BQS*)0x1000;
     {
       KVBatchSystem *G__Lpbase=(KVBatchSystem*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader))) {
     KVSimReader *G__Lderived;
     G__Lderived=(KVSimReader*)0x1000;
     {
       KVFileReader *G__Lpbase=(KVFileReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVFileReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym))) {
     KVSimReader_SMF_asym *G__Lderived;
     G__Lderived=(KVSimReader_SMF_asym*)0x1000;
     {
       KVSimReader *G__Lpbase=(KVSimReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVFileReader *G__Lpbase=(KVFileReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVFileReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEventSelector))) {
     KVEventSelector *G__Lderived;
     G__Lderived=(KVEventSelector*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEventSelector),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEventSelector),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE))) {
     KVSimReader_HIPSE *G__Lderived;
     G__Lderived=(KVSimReader_HIPSE*)0x1000;
     {
       KVSimReader *G__Lpbase=(KVSimReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVFileReader *G__Lpbase=(KVFileReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVFileReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym))) {
     KVSimReader_HIPSE_asym *G__Lderived;
     G__Lderived=(KVSimReader_HIPSE_asym*)0x1000;
     {
       KVSimReader_HIPSE *G__Lpbase=(KVSimReader_HIPSE*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVSimReader *G__Lpbase=(KVSimReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVFileReader *G__Lpbase=(KVFileReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVFileReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE))) {
     KVSimReader_ELIE *G__Lderived;
     G__Lderived=(KVSimReader_ELIE*)0x1000;
     {
       KVSimReader *G__Lpbase=(KVSimReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVFileReader *G__Lpbase=(KVFileReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVFileReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer))) {
     KVDataTransfer *G__Lderived;
     G__Lderived=(KVDataTransfer*)0x1000;
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferSFTP))) {
     KVDataTransferSFTP *G__Lderived;
     G__Lderived=(KVDataTransferSFTP*)0x1000;
     {
       KVDataTransfer *G__Lpbase=(KVDataTransfer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferSFTP),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferSFTP),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferSFTP),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM))) {
     KVSimReader_MMM *G__Lderived;
     G__Lderived=(KVSimReader_MMM*)0x1000;
     {
       KVSimReader *G__Lpbase=(KVSimReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVFileReader *G__Lpbase=(KVFileReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVFileReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob))) {
     KVBatchJob *G__Lderived;
     G__Lderived=(KVBatchJob*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP))) {
     KVDataTransferBBFTP *G__Lderived;
     G__Lderived=(KVDataTransferBBFTP*)0x1000;
     {
       KVDataTransfer *G__Lpbase=(KVDataTransfer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF))) {
     KVSimReader_SMF *G__Lderived;
     G__Lderived=(KVSimReader_SMF*)0x1000;
     {
       KVSimReader *G__Lpbase=(KVSimReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVFileReader *G__Lpbase=(KVFileReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVFileReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatch))) {
     KVDataPatch *G__Lderived;
     G__Lderived=(KVDataPatch*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatch),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE))) {
     KV_CCIN2P3_GE *G__Lderived;
     G__Lderived=(KV_CCIN2P3_GE*)0x1000;
     {
       KVBatchSystem *G__Lpbase=(KVBatchSystem*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis))) {
     KVGaxis *G__Lderived;
     G__Lderived=(KVGaxis*)0x1000;
     {
       TGaxis *G__Lpbase=(TGaxis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TGaxis),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLine *G__Lpbase=(TLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox2D *G__Lpbase=(TAttBBox2D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttBBox2D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym))) {
     KVSimReader_MMM_asym *G__Lderived;
     G__Lderived=(KVSimReader_MMM_asym*)0x1000;
     {
       KVSimReader *G__Lpbase=(KVSimReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVFileReader *G__Lpbase=(KVFileReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVFileReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph))) {
     KVGraph *G__Lderived;
     G__Lderived=(KVGraph*)0x1000;
     {
       TGraphErrors *G__Lpbase=(TGraphErrors*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TGraphErrors),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD))) {
     KVDataTransferXRD *G__Lderived;
     G__Lderived=(KVDataTransferXRD*)0x1000;
     {
       KVDataTransfer *G__Lpbase=(KVDataTransfer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D))) {
     KVGaus2D *G__Lderived;
     G__Lderived=(KVGaus2D*)0x1000;
     {
       KVAutoFit *G__Lpbase=(KVAutoFit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution))) {
     KVGumbelDistribution *G__Lderived;
     G__Lderived=(KVGumbelDistribution*)0x1000;
     {
       TF1 *G__Lpbase=(TF1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFormula *G__Lpbase=(TFormula*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TFormula),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution))) {
     KVGumGumDistribution *G__Lderived;
     G__Lderived=(KVGumGumDistribution*)0x1000;
     {
       TF1 *G__Lpbase=(TF1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFormula *G__Lpbase=(TFormula*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TFormula),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob))) {
     KVGEBatchJob *G__Lderived;
     G__Lderived=(KVGEBatchJob*)0x1000;
     {
       KVBatchJob *G__Lpbase=(KVBatchJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList))) {
     KVDataPatchList *G__Lderived;
     G__Lderived=(KVDataPatchList*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution))) {
     KVGausGumDistribution *G__Lderived;
     G__Lderived=(KVGausGumDistribution*)0x1000;
     {
       TF1 *G__Lpbase=(TF1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFormula *G__Lpbase=(TFormula*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TFormula),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter))) {
     KVImpactParameter *G__Lderived;
     G__Lderived=(KVImpactParameter*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter),G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVMultiDetanalysis() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVAutoFit */
static void G__setup_memvarKVAutoFit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit));
   { KVAutoFit *p; p=(KVAutoFit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVHashList),-1,-1,2,"lfunc=",0,"liste des fonctions de fit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1),-1,-1,2,"f1Dfit=",0,"fonction de fit une dimension");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF2),-1,-1,2,"f2Dfit=",0,"fonction de fit deux dimensions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TH1),-1,-1,2,"hfit=",0,"histogramme analyse");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TH1),-1,-1,2,"hclone=",0,"clone de histogramme analyse");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TCanvas),-1,-1,2,"c1=",0,"Canvas ou est trace l histo a analyse");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"XminSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"XmaxSet=",0,"Indique que l intervalle du fit est defini");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Xmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Xmax=",0,"Borne en X du fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Ymin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"Ymax=",0,"Borne en Y du fit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVHashList),-1,-1,2,"lplabel=",0,"contient la liste des TPaveLabel constituant le menu contextuel");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVHashList),-1,-1,2,"lhisto=",0,"liste des histos initialise via SetHistos method");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nhisto=",0,"nombre d'histo traites");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"userdefined=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,2,"koption=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->is2D)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"is2D=",0,"histogramme analyse herite de TH1 ou TH2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVGaus1D */
static void G__setup_memvarKVGaus1D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D));
   { KVGaus1D *p; p=(KVGaus1D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataAnalyser */
static void G__setup_memvarKVDataAnalyser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser));
   { KVDataAnalyser *p; p=(KVDataAnalyser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalysisTask),-1,-1,2,"fTask=",0,"task chosen by user");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fDataType=",0,"datatype chosen by user");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBatch=",0,"set to kTRUE when used in a non-interactive environment");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fBatchName=",0,"name of batch job when used in a non-interactive environment");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDBSystem),-1,-1,2,"fSystem=",0,"system chosen by user");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNumberList),-1,-1,2,"fRunList=",0,"list of runs to analyse");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataSet),-1,-1,2,"fDataSet=",0,"dataset chosen by user");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"nbEventToRead=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMenus=",0,"set to kTRUE in menu-driven mode");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fQuit=",0,"set to kTRUE when user wants to quit");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fChoozDataSet=",0,"set to kTRUE when user wants to choose a dataset");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fChoozTask=",0,"set to kTRUE when user wants to choose analysis task");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fChoozSystem=",0,"set to kTRUE when user wants to choose a system");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fChoozRuns=",0,"set to kTRUE when user wants to choose runs");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSubmit=",0,"set to kTRUE when user wants to submit task");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fIncludes=",0,"user's include directories");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fLibraries=",0,"user's libraries");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fUserClass=",0,"user's analysis class");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fUserClassImp=",0,"user's analysis class implementation file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fUserClassDec=",0,"user's analysis class header file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUserClassIsOK=",0,"set once user class has been validated");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fUserClassOptions=",0,"options to be passed to user analysis class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser),-1,-1,2,"fParent=",0,"holds address of parent analyser which created this one");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TEnv),-1,-1,2,"fBatchEnv=",0,"batch environment file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),-1,-1,2,"fBatchSystem=",0,"batch system to use for submission of job");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fChoseRunMode=",0,"set to kTRUE once running mode has been set/chosen");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TList),-1,-1,2,"fWorkDirInit=",0,"list of files in working directory before task runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TList),-1,-1,2,"fWorkDirEnd=",0,"list of files in working directory after task runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVBatchSystem */
static void G__setup_memvarKVBatchSystem(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem));
   { KVBatchSystem *p; p=(KVBatchSystem*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser),-1,-1,2,"fAnalyser=",0,"the analyser object which requests job submission, it has all details on the job");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNameValueList),-1,-1,2,"fParList=",0,"list of parameters/switches to be passed on job submission command line");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fJobName=",0,"base job name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fJobSubCmd=",0,"shell command for submitting job");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fJobScript=",0,"full path of shell script to be executed by batch system");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fDefOpt=",0,"default options for job submission command");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMultiJobs=",0,"set to kTRUE if several jobs are to be submitted for the runlist set in fAnalyser");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRunsPerJob=",0,"number of runs per job submitted in multi job mode (default=1)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fCurrJobName=",0,"name of current job being submitted");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNumberList),-1,-1,2,"fCurrJobRunList=",0,"runlist for (multi job mode) job being submitted");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVRootBatch */
static void G__setup_memvarKVRootBatch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch));
   { KVRootBatch *p; p=(KVRootBatch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVLinuxBatch */
static void G__setup_memvarKVLinuxBatch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch));
   { KVLinuxBatch *p; p=(KVLinuxBatch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KV_CCIN2P3_BQS */
static void G__setup_memvarKV_CCIN2P3_BQS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS));
   { KV_CCIN2P3_BQS *p; p=(KV_CCIN2P3_BQS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDefJobTime=",0,"default job length (in seconds)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fDefJobMem=",0,"default job memory allocation (with units, e.g. \"512MB\")");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fDefJobDisk=",0,"default job disk space (with units, e.g. \"1GB\")");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTimeSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDiskSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMemSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimReader */
static void G__setup_memvarKVSimReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader));
   { KVSimReader *p; p=(KVSimReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TTree),-1,-1,2,"tree=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TFile),-1,-1,2,"file=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimEvent),-1,-1,2,"evt=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimNucleus),-1,-1,2,"nuc=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nevt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"tree_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"tree_title=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"branch_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"root_file_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVList),-1,-1,2,"linked_info=",0,"Liste d'info (TNamed) enregistree dans l arbre");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVList),-1,-1,2,"linked_objects=",0,"liste d'objets a enregistree avec l'arbre");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNameValueList),-1,-1,2,"nv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimReader_SMF_asym */
static void G__setup_memvarKVSimReader_SMF_asym(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym));
   { KVSimReader_SMF_asym *p; p=(KVSimReader_SMF_asym*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ndes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVEventSelector */
static void G__setup_memvarKVEventSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEventSelector));
   { KVEventSelector *p; p=(KVEventSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEventSelectorcLcLdA),-1,-2,2,"kDeleteGVList=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TTree),-1,-1,2,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEvent),-1,-1,2,"Event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TBranch),-1,-1,2,"b_Event=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGVList),-1,-1,2,"gvlist=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fBranchName=",0,"name of branch which contains events to analyse");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVParticleCondition),-1,-1,2,"fPartCond=",0,"(optional) conditions for selecting particles");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFirstEvent=",0,"set to kFALSE after first event is read");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEventsRead=",0,"number of events read");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEventsReadInterval=",0,"interval at which to print number of events read");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTreeEntry=",0,"current tree entry number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVHashList),-1,-1,2,"lhisto=",0,"->!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVHashList),-1,-1,2,"ltree=",0,"->!");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fNotifyCalled=",0,"avoid multiple calls to Notify/InitRun");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fCombinedOutputFile=",0,"optional name for single results file with trees and histos");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNameValueList),-1,-1,2,"fOptionList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->writeFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TFile),-1,-1,1,"writeFile=",0,"!");
   G__memvar_setup((void*)((long)(&p->mergeFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TProofOutputFile),-1,-1,1,"mergeFile=",0,"! for merging with PROOF");
   G__memvar_setup((void*)((long)(&p->tree_file_name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,1,"tree_file_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimReader_HIPSE */
static void G__setup_memvarKVSimReader_HIPSE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE));
   { KVSimReader_HIPSE *p; p=(KVSimReader_HIPSE*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TH1F),-1,-1,2,"h1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimReader_HIPSE_asym */
static void G__setup_memvarKVSimReader_HIPSE_asym(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym));
   { KVSimReader_HIPSE_asym *p; p=(KVSimReader_HIPSE_asym*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TH1F),-1,-1,2,"h1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimReader_ELIE */
static void G__setup_memvarKVSimReader_ELIE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE));
   { KVSimReader_ELIE *p; p=(KVSimReader_ELIE*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNucleus),-1,-1,4,"proj=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNucleus),-1,-1,4,"targ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ebeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataTransfer */
static void G__setup_memvarKVDataTransfer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer));
   { KVDataTransfer *p; p=(KVDataTransfer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataRepository),-1,-1,2,"fSourceRep=",0,"repository containing source files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataRepository),-1,-1,2,"fTargetRep=",0,"repository where files will be copied");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,2,"fCmdFile=",0,"name of command file given to transfer agent");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,2,"fTransferExec=",0,"full path to transfer client executable");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fOK=",0,"may be set to kFALSE by init(), in which case Run() will abort");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataTransferSFTP */
static void G__setup_memvarKVDataTransferSFTP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferSFTP));
   { KVDataTransferSFTP *p; p=(KVDataTransferSFTP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimReader_MMM */
static void G__setup_memvarKVSimReader_MMM(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM));
   { KVSimReader_MMM *p; p=(KVSimReader_MMM*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"idx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVBatchJob */
static void G__setup_memvarKVBatchJob(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob));
   { KVBatchJob *p; p=(KVBatchJob*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDatime),-1,-1,2,"submitted=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"cpu_used=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,2,"mem_used=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"cpu_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,2,"mem_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,2,"disk_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,2,"disk_used=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"events_total=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"events_read=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataTransferBBFTP */
static void G__setup_memvarKVDataTransferBBFTP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP));
   { KVDataTransferBBFTP *p; p=(KVDataTransferBBFTP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataRepository),-1,-1,4,"fServer=",0,"data repository with BBFTP server");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimReader_SMF */
static void G__setup_memvarKVSimReader_SMF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF));
   { KVSimReader_SMF *p; p=(KVSimReader_SMF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataPatch */
static void G__setup_memvarKVDataPatch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatch));
   { KVDataPatch *p; p=(KVDataPatch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KV_CCIN2P3_GE */
static void G__setup_memvarKV_CCIN2P3_GE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE));
   { KV_CCIN2P3_GE *p; p=(KV_CCIN2P3_GE*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDefJobTime=",0,"default job length (in seconds)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fDefJobMem=",0,"default job memory allocation (with units, e.g. \"512MB\")");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString),-1,-1,2,"fDefJobDisk=",0,"default job disk space (with units, e.g. \"1GB\")");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTimeSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDiskSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMemSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVGaxis */
static void G__setup_memvarKVGaxis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis));
   { KVGaxis *p; p=(KVGaxis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbins=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,2,"fFormat=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,2,0,-1,-1,-1,2,"fLabels=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSimReader_MMM_asym */
static void G__setup_memvarKVSimReader_MMM_asym(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym));
   { KVSimReader_MMM_asym *p; p=(KVSimReader_MMM_asym*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"idx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVGraph */
static void G__setup_memvarKVGraph(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph));
   { KVGraph *p; p=(KVGraph*)0x1000; if (p) { }
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDisplayDivX=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDisplayDivY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDivX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDivY=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseX=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCropMode=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraphcLcLCropOption),-1,-2,1,G__FastAllocString(2048).Format("kNoCrop=%lldLL",(long long)KVGraph::kNoCrop).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraphcLcLCropOption),-1,-2,1,G__FastAllocString(2048).Format("kCropOnDiv=%lldLL",(long long)KVGraph::kCropOnDiv).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraphcLcLCropOption),-1,-2,1,G__FastAllocString(2048).Format("kCropOnGraph=%lldLL",(long long)KVGraph::kCropOnGraph).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraphcLcLCropOption),-1,-2,1,G__FastAllocString(2048).Format("kCropMin=%lldLL",(long long)KVGraph::kCropMin).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataTransferXRD */
static void G__setup_memvarKVDataTransferXRD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD));
   { KVDataTransferXRD *p; p=(KVDataTransferXRD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVBatchSystemManager */
static void G__setup_memvarKVBatchSystemManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystemManager));
   { KVBatchSystemManager *p; p=(KVBatchSystemManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVList),-1,-1,4,"fBatchSystems=",0,"list of available batch systems");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),-1,-1,4,"fDefault=",0,"default batch system");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVGaus2D */
static void G__setup_memvarKVGaus2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D));
   { KVGaus2D *p; p=(KVGaus2D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVGumbelDistribution */
static void G__setup_memvarKVGumbelDistribution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution));
   { KVGumbelDistribution *p; p=(KVGumbelDistribution*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRank=",0,"rank of distribution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fkFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fNormalised=",0,"=kTRUE if distribution is normalised");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVGumGumDistribution */
static void G__setup_memvarKVGumGumDistribution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution));
   { KVGumGumDistribution *p; p=(KVGumGumDistribution*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRank=",0,"rank of Gumbel distribution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fkFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fkGaussNor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),-1,-1,2,"fFirstGumbel=",0,"! non-persistent (not written to disk)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),-1,-1,2,"fLastGumbel=",0,"! non-persistent (not written to disk)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVGEBatchJob */
static void G__setup_memvarKVGEBatchJob(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob));
   { KVGEBatchJob *p; p=(KVGEBatchJob*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,4,"resources=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"cpu_scaling_factor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataPatchList */
static void G__setup_memvarKVDataPatchList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList));
   { KVDataPatchList *p; p=(KVDataPatchList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVUniqueNameList),-1,-2,4,"fPatchList=",0,"list of all defined patches");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVUniqueNameList),-1,-1,2,"fActiveEventPatches=",0,"list of currently active event-level patches");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVUniqueNameList),-1,-1,2,"fActiveParticlePatches=",0,"list of currently active particle-level patches");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEventPatches=",0,"=kTRUE if there are event-level patches");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fParticlePatches=",0,"=kTRUE if there are particle-level patches");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVGausGumDistribution */
static void G__setup_memvarKVGausGumDistribution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution));
   { KVGausGumDistribution *p; p=(KVGausGumDistribution*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRank=",0,"rank of Gumbel distribution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fkFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fkGaussNor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1),-1,-1,4,"fGaussComp=",0,"! non-persistent (not written to disk)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),-1,-1,4,"fGumbelComp=",0,"! non-persistent (not written to disk)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVImpactParameter */
static void G__setup_memvarKVImpactParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter));
   { KVImpactParameter *p; p=(KVImpactParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TH1),-1,-1,4,"fData=",0,"histogram containing distribution of ip-related observable");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString),-1,-1,4,"fEvol=",0,"how the observable evolves with b");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TGraph),-1,-1,4,"fIPScale=",0,"derived relation between observable and impact-parameter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TGraph),-1,-1,4,"fXSecScale=",0,"derived relation between observable and cross-section");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1),-1,-1,4,"fObsTransform=",0,"function for transforming observable into impact parameter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1),-1,-1,4,"fObsTransformXSec=",0,"function for transforming observable into cross-section");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVHistoManipulator),-1,-1,4,"HM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Bmax=",0,"maximum of ip scale");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Smax=",0,"maximum of cross-section scale");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVMultiDetanalysis() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVAutoFit(void) {
   /* KVAutoFit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearRange",980,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewFunction",1136,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewFunction_1D",1348,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewFunction_2D",1349,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReloadFunction",1437,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1), -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReloadFunction_1D",1649,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1), -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReloadFunction_2D",1650,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1), -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("f2D",220,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 0, 
"D - 'Double_t' 0 - xx D - 'Double_t' 0 - para", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("f1D",219,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 0, 
"D - 'Double_t' 0 - xx D - 'Double_t' 0 - para", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextHisto",934,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsKnown",713,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVAutoFit",861,G__G__KVMultiDetanalysis_346_0_13, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVAutoFit",861,G__G__KVMultiDetanalysis_346_0_14, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit), -1, 0, 1, 1, 1, 0, "u 'KVAutoFit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFunctions",1241,G__G__KVMultiDetanalysis_346_0_18, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVHashList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistos",934,G__G__KVMultiDetanalysis_346_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVHashList' - 0 - lh u 'TString' - 0 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHisto",819,G__G__KVMultiDetanalysis_346_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - hh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInterval",1125,G__G__KVMultiDetanalysis_346_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Recommence",1022,G__G__KVMultiDetanalysis_346_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gather",603,G__G__KVMultiDetanalysis_346_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Save",399,G__G__KVMultiDetanalysis_346_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Relecture",939,G__G__KVMultiDetanalysis_346_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_346_0_26, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVAutoFit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_346_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAutoFit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_346_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVAutoFit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_346_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVAutoFit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_346_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_346_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAutoFit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_346_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVAutoFit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_346_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVAutoFit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_346_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVAutoFit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVAutoFit", 987, G__G__KVMultiDetanalysis_346_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_346_0_39, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVAutoFit), -1, 1, 1, 1, 1, 0, "u 'KVAutoFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVGaus1D(void) {
   /* KVGaus1D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D));
   G__memfunc_setup("NewFunction_1D",1348,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVGaus1D",678,G__G__KVMultiDetanalysis_347_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGaus1D",678,G__G__KVMultiDetanalysis_347_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D), -1, 0, 1, 1, 1, 0, "u 'KVGaus1D' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gather",603,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_347_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGaus1D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_347_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGaus1D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_347_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGaus1D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_347_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGaus1D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_347_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_347_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGaus1D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_347_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGaus1D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_347_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGaus1D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_347_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGaus1D::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVGaus1D", 804, G__G__KVMultiDetanalysis_347_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_347_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus1D), -1, 1, 1, 1, 1, 0, "u 'KVGaus1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataAnalyser(void) {
   /* KVDataAnalyser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser));
   G__memfunc_setup("ScanWorkingDirectory",2075,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TList' - 2 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyAnalysisResultsToLaunchDirectory",3748,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAvailableRuns",1846,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNumberList), -1, 0, 1, 1, 2, 0, "u 'KVString' - 1 - datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckIfUserClassIsValid",2254,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInstanceOfUserClass",2207,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TObject), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintSplashScreen",1752,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetACliCMode",1089,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 2, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVDataAnalyser",1370,G__G__KVMultiDetanalysis_354_0_8, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUserClass",1217,G__G__KVMultiDetanalysis_354_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - kvs g - 'Bool_t' 0 'kTRUE' check", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserClass",1205,G__G__KVMultiDetanalysis_354_0_10, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsUserClassValid",1601,G__G__KVMultiDetanalysis_354_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__G__KVMultiDetanalysis_354_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RunMenus",829,G__G__KVMultiDetanalysis_354_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseDataSet",1287,G__G__KVMultiDetanalysis_354_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseDataType",1405,G__G__KVMultiDetanalysis_354_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseAnalysisTask",1848,G__G__KVMultiDetanalysis_354_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseSystem",1254,G__G__KVMultiDetanalysis_354_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' data_type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseRuns",1033,G__G__KVMultiDetanalysis_354_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVDBSystem' - 0 '0' system C - 'Char_t' 10 '\"\"' data_type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseUserClass",1526,G__G__KVMultiDetanalysis_354_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseRunningMode",1735,G__G__KVMultiDetanalysis_354_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SubmitTask",1031,G__G__KVMultiDetanalysis_354_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckTaskVariables",1802,G__G__KVMultiDetanalysis_354_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoUserClassFilesExist",2120,G__G__KVMultiDetanalysis_354_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBatchMode",1171,G__G__KVMultiDetanalysis_354_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BatchMode",871,G__G__KVMultiDetanalysis_354_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBatchName",1167,G__G__KVMultiDetanalysis_354_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - batchname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBatchName",1155,G__G__KVMultiDetanalysis_354_0_27, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBatchSystem",1427,G__G__KVMultiDetanalysis_354_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVBatchSystem' - 0 - bs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBatchSystem",1415,G__G__KVMultiDetanalysis_354_0_29, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RunningInLaunchDirectory",2472,G__G__KVMultiDetanalysis_354_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SystemBatchName",1512,G__G__KVMultiDetanalysis_354_0_31, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLaunchDirectory",1840,G__G__KVMultiDetanalysis_354_0_32, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBatchStatusFileName",2183,G__G__KVMultiDetanalysis_354_0_33, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateBatchStatusFile",2121,G__G__KVMultiDetanalysis_354_0_34, 121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - totev i - 'Int_t' 0 - evread "
"u 'TString' - 0 - disk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteBatchStatusFile",2105,G__G__KVMultiDetanalysis_354_0_35, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalEntriesToRead",2109,G__G__KVMultiDetanalysis_354_0_36, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckStatusUpdateInterval",2570,G__G__KVMultiDetanalysis_354_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - nevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoStatusUpdate",1434,G__G__KVMultiDetanalysis_354_0_38, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - nevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnalysisTask",1527,G__G__KVMultiDetanalysis_354_0_39, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalysisTask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataType",1084,G__G__KVMultiDetanalysis_354_0_40, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSystem",933,G__G__KVMultiDetanalysis_354_0_41, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDBSystem), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunList",1009,G__G__KVMultiDetanalysis_354_0_42, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNumberList), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSet",966,G__G__KVMultiDetanalysis_354_0_43, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserIncludes",1526,G__G__KVMultiDetanalysis_354_0_44, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserLibraries",1628,G__G__KVMultiDetanalysis_354_0_45, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNbEventToRead",1565,G__G__KVMultiDetanalysis_354_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '0' nb", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNbEventToRead",1553,G__G__KVMultiDetanalysis_354_0_47, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseNbEventToRead",1874,G__G__KVMultiDetanalysis_354_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataSet",978,G__G__KVMultiDetanalysis_354_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDataSet' - 0 - ds", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataSet",978,G__G__KVMultiDetanalysis_354_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAnalysisTask",1539,G__G__KVMultiDetanalysis_354_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDataAnalysisTask' - 0 - at", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataType",1096,G__G__KVMultiDetanalysis_354_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSystem",945,G__G__KVMultiDetanalysis_354_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBSystem' - 0 - syst", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRuns",724,G__G__KVMultiDetanalysis_354_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'KVNumberList' - 1 - nl g - 'Bool_t' 0 'kTRUE' check", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRuns",724,G__G__KVMultiDetanalysis_354_0_55, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - g - 'Bool_t' 0 'kTRUE' check", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserIncludes",1538,G__G__KVMultiDetanalysis_354_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '0' incDirs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserLibraries",1640,G__G__KVMultiDetanalysis_354_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '0' libs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearRunList",1208,G__G__KVMultiDetanalysis_354_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__G__KVMultiDetanalysis_354_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParent",918,G__G__KVMultiDetanalysis_354_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDataAnalyser' - 0 - da", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParent",906,G__G__KVMultiDetanalysis_354_0_61, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalyser",1119,G__G__KVMultiDetanalysis_354_0_62, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser), -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 - plugin", (char*)NULL, (void*) G__func2void( (KVDataAnalyser* (*)(const Char_t*))(&KVDataAnalyser::GetAnalyser) ), 0);
   G__memfunc_setup("ReadBatchEnvFile",1543,G__G__KVMultiDetanalysis_354_0_63, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBatchEnvFile",1686,G__G__KVMultiDetanalysis_354_0_64, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - g - 'Bool_t' 0 'kTRUE' sav", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExpandAutoBatchName",1884,G__G__KVMultiDetanalysis_354_0_65, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 1, "C - 'Char_t' 10 - format", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preInitAnalysis",1567,G__G__KVMultiDetanalysis_354_0_66, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("postInitAnalysis",1694,G__G__KVMultiDetanalysis_354_0_67, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preInitRun",1040,G__G__KVMultiDetanalysis_354_0_68, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("postInitRun",1167,G__G__KVMultiDetanalysis_354_0_69, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preAnalysis",1163,G__G__KVMultiDetanalysis_354_0_70, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("postAnalysis",1290,G__G__KVMultiDetanalysis_354_0_71, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preEndRun",915,G__G__KVMultiDetanalysis_354_0_72, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("postEndRun",1042,G__G__KVMultiDetanalysis_354_0_73, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preEndAnalysis",1442,G__G__KVMultiDetanalysis_354_0_74, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("postEndAnalysis",1569,G__G__KVMultiDetanalysis_354_0_75, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBatchInfo",1401,G__G__KVMultiDetanalysis_354_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunNumberFromFileName",2387,G__G__KVMultiDetanalysis_354_0_77, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RegisterUserClass",1754,G__G__KVMultiDetanalysis_354_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserClassOptions",1965,G__G__KVMultiDetanalysis_354_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUserClassOptions",1953,G__G__KVMultiDetanalysis_354_0_80, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunAnalyser",1140,G__G__KVMultiDetanalysis_354_0_81, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 '\"\"' plugin", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*))(&KVDataAnalyser::RunAnalyser) ), 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_354_0_82, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataAnalyser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_354_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataAnalyser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_354_0_84, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataAnalyser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_354_0_85, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataAnalyser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_354_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_354_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataAnalyser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_354_0_91, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataAnalyser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_354_0_92, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataAnalyser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_354_0_93, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataAnalyser::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDataAnalyser", 1370, G__G__KVMultiDetanalysis_354_0_94, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser), -1, 0, 1, 1, 1, 0, "u 'KVDataAnalyser' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDataAnalyser", 1496, G__G__KVMultiDetanalysis_354_0_95, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_354_0_96, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataAnalyser), -1, 1, 1, 1, 1, 0, "u 'KVDataAnalyser' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVBatchSystem(void) {
   /* KVBatchSystem */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem));
   G__memfunc_setup("ChangeDefJobOpt",1443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'KVDataAnalyser' - 0 - da", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVBatchSystem",1288,G__G__KVMultiDetanalysis_357_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameters",1332,G__G__KVMultiDetanalysis_357_0_3, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVNameValueList), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJobSubCmd",1145,G__G__KVMultiDetanalysis_357_0_4, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SubmitTask",1031,G__G__KVMultiDetanalysis_357_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDataAnalyser' - 0 - da", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SubmitJob",911,G__G__KVMultiDetanalysis_357_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintJobs",923,G__G__KVMultiDetanalysis_357_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckJobParameters",1805,G__G__KVMultiDetanalysis_357_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__G__KVMultiDetanalysis_357_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetJobScript",1212,G__G__KVMultiDetanalysis_357_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - path", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDefaultJobOptions",2040,G__G__KVMultiDetanalysis_357_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDefaultJobOptions",2028,G__G__KVMultiDetanalysis_357_0_12, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetJobName",968,G__G__KVMultiDetanalysis_357_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJobName",956,G__G__KVMultiDetanalysis_357_0_14, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJobSubCmdLine",1537,G__G__KVMultiDetanalysis_357_0_15, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBatchSystem",1415,G__G__KVMultiDetanalysis_357_0_17, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem), -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 - plugin", (char*)NULL, (void*) G__func2void( (KVBatchSystem* (*)(const Char_t*))(&KVBatchSystem::GetBatchSystem) ), 0);
   G__memfunc_setup("cd",199,G__G__KVMultiDetanalysis_357_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMultiJobsMode",1610,G__G__KVMultiDetanalysis_357_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MultiJobsMode",1310,G__G__KVMultiDetanalysis_357_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunsPerJob",1302,G__G__KVMultiDetanalysis_357_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunsPerJob",1290,G__G__KVMultiDetanalysis_357_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBatchEnvFile",1686,G__G__KVMultiDetanalysis_357_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEnv' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBatchEnvFile",1543,G__G__KVMultiDetanalysis_357_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEnv' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAnalyser",1131,G__G__KVMultiDetanalysis_357_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDataAnalyser' - 0 - da", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BQS_Request",1070,G__G__KVMultiDetanalysis_357_0_27, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'KVString' - 0 - - u 'KVString' - 0 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetJobTimeString",1613,G__G__KVMultiDetanalysis_357_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetJobTime",982,G__G__KVMultiDetanalysis_357_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 '0' - "
"i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetJobMemory",1216,G__G__KVMultiDetanalysis_357_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetJobDisk",978,G__G__KVMultiDetanalysis_357_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SanitizeJobName",1507,G__G__KVMultiDetanalysis_357_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfJobs",1279,G__G__KVMultiDetanalysis_357_0_33, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AlterJobs",902,G__G__KVMultiDetanalysis_357_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGWindow' - 0 - - U 'TList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_357_0_35, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVBatchSystem::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_357_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBatchSystem::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_357_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVBatchSystem::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_357_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVBatchSystem::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_357_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_357_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBatchSystem::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_357_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVBatchSystem::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_357_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBatchSystem::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_357_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVBatchSystem::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVBatchSystem", 1414, G__G__KVMultiDetanalysis_357_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVRootBatch(void) {
   /* KVRootBatch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch));
   G__memfunc_setup("KVRootBatch",1063,G__G__KVMultiDetanalysis_358_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVRootBatch), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintJobs",923,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_358_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVRootBatch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_358_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRootBatch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_358_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVRootBatch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_358_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVRootBatch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_358_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_358_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRootBatch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_358_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRootBatch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_358_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVRootBatch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_358_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVRootBatch::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVRootBatch", 1189, G__G__KVMultiDetanalysis_358_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVLinuxBatch(void) {
   /* KVLinuxBatch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch));
   G__memfunc_setup("KVLinuxBatch",1171,G__G__KVMultiDetanalysis_359_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVLinuxBatch), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_359_0_2, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVLinuxBatch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_359_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLinuxBatch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_359_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVLinuxBatch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_359_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVLinuxBatch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_359_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_359_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLinuxBatch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_359_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVLinuxBatch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_359_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLinuxBatch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_359_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVLinuxBatch::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVLinuxBatch", 1297, G__G__KVMultiDetanalysis_359_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKV_CCIN2P3_BQS(void) {
   /* KV_CCIN2P3_BQS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS));
   G__memfunc_setup("ChangeDefJobOpt",1443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'KVDataAnalyser' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KV_CCIN2P3_BQS",1047,G__G__KVMultiDetanalysis_360_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJobTimeString",1613,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' h", "Set CPU time for batch job */", (void*) NULL, 1);
   G__memfunc_setup("SetJobTime",982,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 '0' - "
"i - 'Int_t' 0 '0' -", "Set CPU time for batch job */", (void*) NULL, 1);
   G__memfunc_setup("SetJobMemory",1216,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' h", "Set max memory for batch job */", (void*) NULL, 1);
   G__memfunc_setup("SetJobDisk",978,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' h", "Set max disk space for batch job */", (void*) NULL, 1);
   G__memfunc_setup("PrintJobs",923,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", "Print list of all jobs submitted to system */", (void*) NULL, 1);
   G__memfunc_setup("CheckJobParameters",1805,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "Checks job parameters */", (void*) NULL, 1);
   G__memfunc_setup("GetJobTime",970,G__G__KVMultiDetanalysis_360_0_9, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", "Get CPU time for batch job */", (void*) NULL, 1);
   G__memfunc_setup("GetJobMemory",1204,G__G__KVMultiDetanalysis_360_0_10, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", "Get max memory for batch job */", (void*) NULL, 1);
   G__memfunc_setup("GetJobDisk",966,G__G__KVMultiDetanalysis_360_0_11, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", "Get max disk space for batch job */", (void*) NULL, 1);
   G__memfunc_setup("ChooseJobTime",1291,G__G__KVMultiDetanalysis_360_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "Choose CPU time for batch job */", (void*) NULL, 1);
   G__memfunc_setup("ChooseJobMemory",1525,G__G__KVMultiDetanalysis_360_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "Choose max memory for batch job */", (void*) NULL, 1);
   G__memfunc_setup("ChooseJobDisk",1287,G__G__KVMultiDetanalysis_360_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "Choose max disk space for batch job */", (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBatchEnvFile",1686,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TEnv' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBatchEnvFile",1543,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TEnv' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BQS_Request",1070,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'KVString' - 0 - value u 'KVString' - 0 '\"\"' jobname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_360_0_20, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KV_CCIN2P3_BQS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_360_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KV_CCIN2P3_BQS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_360_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KV_CCIN2P3_BQS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_360_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KV_CCIN2P3_BQS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_360_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_360_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KV_CCIN2P3_BQS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_360_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KV_CCIN2P3_BQS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_360_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KV_CCIN2P3_BQS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_360_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KV_CCIN2P3_BQS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KV_CCIN2P3_BQS", 1173, G__G__KVMultiDetanalysis_360_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimReader(void) {
   /* KVSimReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader));
   G__memfunc_setup("KVSimReader",1053,G__G__KVMultiDetanalysis_744_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimReader",1053,G__G__KVMultiDetanalysis_744_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader), -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CleanAll",764,G__G__KVMultiDetanalysis_744_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDate",670,G__G__KVMultiDetanalysis_744_0_5, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFillingMode",1398,G__G__KVMultiDetanalysis_744_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclareTree",1088,G__G__KVMultiDetanalysis_744_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'KVString' - 0 - filename C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTree",688,G__G__KVMultiDetanalysis_744_0_8, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTree",791,G__G__KVMultiDetanalysis_744_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasToFill",870,G__G__KVMultiDetanalysis_744_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveTree",799,G__G__KVMultiDetanalysis_744_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__G__KVMultiDetanalysis_744_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'KVString' - 0 '\"Output.root\"' filename C - 'Option_t' 10 '\"recreate\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLinkedObjects",1601,G__G__KVMultiDetanalysis_744_0_13, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__G__KVMultiDetanalysis_744_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteObjects",1237,G__G__KVMultiDetanalysis_744_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateObjectList",1607,G__G__KVMultiDetanalysis_744_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSimuInfo",1098,G__G__KVMultiDetanalysis_744_0_17, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInfo",661,G__G__KVMultiDetanalysis_744_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInfo",661,G__G__KVMultiDetanalysis_744_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TNamed' - 0 - named", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteInfo",919,G__G__KVMultiDetanalysis_744_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateInfoList",1404,G__G__KVMultiDetanalysis_744_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__G__KVMultiDetanalysis_744_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadHeader",965,G__G__KVMultiDetanalysis_744_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,G__G__KVMultiDetanalysis_744_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNucleus",1115,G__G__KVMultiDetanalysis_744_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfEvents",1715,G__G__KVMultiDetanalysis_744_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeName",1085,G__G__KVMultiDetanalysis_744_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeTitle",1214,G__G__KVMultiDetanalysis_744_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetROOTFileName",1393,G__G__KVMultiDetanalysis_744_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchName",1275,G__G__KVMultiDetanalysis_744_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_744_0_31, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_744_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_744_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_744_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_744_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_744_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_744_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_744_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_744_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimReader", 1179, G__G__KVMultiDetanalysis_744_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimReader_SMF_asym(void) {
   /* KVSimReader_SMF_asym */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym));
   G__memfunc_setup("KVSimReader_SMF_asym",1915,G__G__KVMultiDetanalysis_745_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimReader_SMF_asym",1915,G__G__KVMultiDetanalysis_745_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym), -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadHeader",965,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNucleus",1115,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_745_0_8, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimReader_SMF_asym::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_745_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_SMF_asym::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_745_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimReader_SMF_asym::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_745_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimReader_SMF_asym::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_745_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_745_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_SMF_asym::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_745_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_SMF_asym::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_745_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_SMF_asym::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_745_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_SMF_asym::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimReader_SMF_asym", 2041, G__G__KVMultiDetanalysis_745_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVEventSelector(void) {
   /* KVEventSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEventSelector));
   G__memfunc_setup("FillTH1",596,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'TH1' - 0 - h1 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTProfile",1196,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"U 'TProfile' - 0 - h1 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two d - 'Double_t' 0 - three", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTH2",597,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"U 'TH2' - 0 - h2 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two d - 'Double_t' 0 - three", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTProfile2D",1314,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"U 'TProfile2D' - 0 - h2 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two d - 'Double_t' 0 - three "
"d - 'Double_t' 0 - four", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTH3",598,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"U 'TH3' - 0 - h3 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two d - 'Double_t' 0 - three "
"d - 'Double_t' 0 - four", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateTreeFile",1380,G__G__KVMultiDetanalysis_779_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseOptions",1255,G__G__KVMultiDetanalysis_779_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVEventSelector",1508,G__G__KVMultiDetanalysis_779_0_8, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEventSelector), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventsReadInterval",2146,G__G__KVMultiDetanalysis_779_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - N", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Version",742,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetObject",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInputList",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOutputList",1357,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveTerminate",1444,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBranchName",1275,G__G__KVMultiDetanalysis_779_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchName",1263,G__G__KVMultiDetanalysis_779_0_23, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAnalysisFrame",1627,G__G__KVMultiDetanalysis_779_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvent",802,G__G__KVMultiDetanalysis_779_0_25, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitAnalysis",1240,G__G__KVMultiDetanalysis_779_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,G__G__KVMultiDetanalysis_779_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,G__G__KVMultiDetanalysis_779_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,G__G__KVMultiDetanalysis_779_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndAnalysis",1115,G__G__KVMultiDetanalysis_779_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGVList",869,G__G__KVMultiDetanalysis_779_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVGVList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGVList",857,G__G__KVMultiDetanalysis_779_0_32, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGVList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddGV",422,G__G__KVMultiDetanalysis_779_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVVarGlob' - 0 - vg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddGV",422,G__G__KVMultiDetanalysis_779_0_34, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVVarGlob), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - class_name C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGV",445,G__G__KVMultiDetanalysis_779_0_35, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVVarGlob), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecalculateGlobalVariables",2639,G__G__KVMultiDetanalysis_779_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfRun",950,G__G__KVMultiDetanalysis_779_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleConditions",2170,G__G__KVMultiDetanalysis_779_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVParticleCondition' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddHisto",784,G__G__KVMultiDetanalysis_779_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - histo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTree",665,G__G__KVMultiDetanalysis_779_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHisto",910,G__G__KVMultiDetanalysis_779_0_41, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - sname d - 'Double_t' 0 - one "
"d - 'Double_t' 0 '1' two d - 'Double_t' 0 '1' three "
"d - 'Double_t' 0 '1' four", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTree",791,G__G__KVMultiDetanalysis_779_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' sname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistoList",1219,G__G__KVMultiDetanalysis_779_0_43, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVHashList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeList",1100,G__G__KVMultiDetanalysis_779_0_44, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVHashList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHisto",807,G__G__KVMultiDetanalysis_779_0_45, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TH1), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__G__KVMultiDetanalysis_779_0_46, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TTree), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveHistos",1033,G__G__KVMultiDetanalysis_779_0_47, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' filename C - 'Option_t' 10 '\"recreate\"' option "
"g - 'Bool_t' 0 'kFALSE' onlyfilled", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOpt",607,G__G__KVMultiDetanalysis_779_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - option C - 'Char_t' 10 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOptGiven",1000,G__G__KVMultiDetanalysis_779_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOpt",595,G__G__KVMultiDetanalysis_779_0_50, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TString), -1, 1, 1, 1, 1, 9, "C - 'Char_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UnsetOpt",834,G__G__KVMultiDetanalysis_779_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAdditionalBranchAddress",2617,G__G__KVMultiDetanalysis_779_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_779_0_53, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVEventSelector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_779_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVEventSelector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_779_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVEventSelector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_779_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVEventSelector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_779_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_779_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVEventSelector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_779_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVEventSelector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_779_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVEventSelector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_779_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVEventSelector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVEventSelector", 1634, G__G__KVMultiDetanalysis_779_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimReader_HIPSE(void) {
   /* KVSimReader_HIPSE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE));
   G__memfunc_setup("KVSimReader_HIPSE",1525,G__G__KVMultiDetanalysis_781_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimReader_HIPSE",1525,G__G__KVMultiDetanalysis_781_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE), -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadHeader",965,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNucleus",1115,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPotentialHardness",2068,G__G__KVMultiDetanalysis_781_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetExchangePercentage",2125,G__G__KVMultiDetanalysis_781_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNNCollisionPercentage",2418,G__G__KVMultiDetanalysis_781_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_781_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimReader_HIPSE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_781_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_HIPSE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_781_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimReader_HIPSE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_781_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimReader_HIPSE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_781_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_781_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_HIPSE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_781_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_HIPSE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_781_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_HIPSE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_781_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_HIPSE::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimReader_HIPSE", 1651, G__G__KVMultiDetanalysis_781_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimReader_HIPSE_asym(void) {
   /* KVSimReader_HIPSE_asym */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym));
   G__memfunc_setup("KVSimReader_HIPSE_asym",2062,G__G__KVMultiDetanalysis_782_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimReader_HIPSE_asym",2062,G__G__KVMultiDetanalysis_782_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym), -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNucleus",1115,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_782_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimReader_HIPSE_asym::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_782_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_HIPSE_asym::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_782_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimReader_HIPSE_asym::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_782_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimReader_HIPSE_asym::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_782_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_782_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_HIPSE_asym::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_782_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_HIPSE_asym::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_782_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_HIPSE_asym::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_782_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_HIPSE_asym::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimReader_HIPSE_asym", 2188, G__G__KVMultiDetanalysis_782_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimReader_ELIE(void) {
   /* KVSimReader_ELIE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVSimReader_ELIE",1435,G__G__KVMultiDetanalysis_786_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimReader_ELIE",1435,G__G__KVMultiDetanalysis_786_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE), -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadHeader",965,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNucleus",1115,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_786_0_8, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimReader_ELIE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_786_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_ELIE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_786_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimReader_ELIE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_786_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimReader_ELIE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_786_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_786_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_ELIE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_786_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_ELIE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_786_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_ELIE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_786_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_ELIE::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimReader_ELIE", 1561, G__G__KVMultiDetanalysis_786_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataTransfer(void) {
   /* KVDataTransfer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer));
   G__memfunc_setup("SetTransferExec",1526,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - path", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseAnalysisTask",1848,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SubmitTask",1031,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteCommand",1426,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("WriteTransferScript",1989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CheckTargetRepository",2181,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TransferRuns",1261,G__G__KVMultiDetanalysis_788_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataSet",978,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDataSet' - 0 - ds", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataSet",978,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewTransfer",1135,G__G__KVMultiDetanalysis_788_0_13, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer), -1, 0, 2, 3, 1, 0, 
"C - 'Char_t' 10 - source_rep C - 'Char_t' 10 - target_rep", (char*)NULL, (void*) G__func2void( (KVDataTransfer* (*)(const Char_t*, const Char_t*))(&KVDataTransfer::NewTransfer) ), 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_788_0_14, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataTransfer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_788_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransfer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_788_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataTransfer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_788_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataTransfer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_788_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_788_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransfer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_788_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataTransfer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_788_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransfer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_788_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataTransfer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDataTransfer", 1502, G__G__KVMultiDetanalysis_788_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_788_0_27, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransfer), -1, 1, 1, 1, 1, 0, "u 'KVDataTransfer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataTransferSFTP(void) {
   /* KVDataTransferSFTP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferSFTP));
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_789_0_2, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataTransferSFTP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_789_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransferSFTP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_789_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataTransferSFTP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_789_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataTransferSFTP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_789_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_789_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransferSFTP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_789_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataTransferSFTP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_789_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransferSFTP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_789_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataTransferSFTP::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDataTransferSFTP", 1819, G__G__KVMultiDetanalysis_789_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_789_0_15, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferSFTP), -1, 1, 1, 1, 1, 0, "u 'KVDataTransferSFTP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimReader_MMM(void) {
   /* KVSimReader_MMM */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM));
   G__memfunc_setup("KVSimReader_MMM",1379,G__G__KVMultiDetanalysis_790_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimReader_MMM",1379,G__G__KVMultiDetanalysis_790_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM), -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNucleus",1115,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_790_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimReader_MMM::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_790_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_MMM::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_790_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimReader_MMM::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_790_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimReader_MMM::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_790_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_790_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_MMM::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_790_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_MMM::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_790_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_MMM::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_790_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_MMM::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimReader_MMM", 1505, G__G__KVMultiDetanalysis_790_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVBatchJob(void) {
   /* KVBatchJob */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob));
   G__memfunc_setup("KVBatchJob",926,G__G__KVMultiDetanalysis_793_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatus",932,G__G__KVMultiDetanalysis_793_0_2, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatus",944,G__G__KVMultiDetanalysis_793_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubmitted",1233,G__G__KVMultiDetanalysis_793_0_4, 117, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDatime), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSubmitted",1245,G__G__KVMultiDetanalysis_793_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVDatime' - 1 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJobID",712,G__G__KVMultiDetanalysis_793_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJobID",724,G__G__KVMultiDetanalysis_793_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCPUusage",1065,G__G__KVMultiDetanalysis_793_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCPUusage",1053,G__G__KVMultiDetanalysis_793_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMemUsed",988,G__G__KVMultiDetanalysis_793_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMemUsed",976,G__G__KVMultiDetanalysis_793_0_11, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCPUmax",858,G__G__KVMultiDetanalysis_793_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCPUmax",846,G__G__KVMultiDetanalysis_793_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMemMax",881,G__G__KVMultiDetanalysis_793_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMemMax",869,G__G__KVMultiDetanalysis_793_0_15, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiskMax",989,G__G__KVMultiDetanalysis_793_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiskMax",977,G__G__KVMultiDetanalysis_793_0_17, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiskUsed",1096,G__G__KVMultiDetanalysis_793_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiskUsed",1084,G__G__KVMultiDetanalysis_793_0_19, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventsTotal",1445,G__G__KVMultiDetanalysis_793_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventsTotal",1433,G__G__KVMultiDetanalysis_793_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventsRead",1309,G__G__KVMultiDetanalysis_793_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventsRead",1297,G__G__KVMultiDetanalysis_793_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPercentageComplete",2135,G__G__KVMultiDetanalysis_793_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteJob",878,G__G__KVMultiDetanalysis_793_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateDiskUsedEventsRead",2416,G__G__KVMultiDetanalysis_793_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_793_0_28, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVBatchJob::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_793_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBatchJob::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_793_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVBatchJob::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_793_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVBatchJob::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_793_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_793_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBatchJob::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_793_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVBatchJob::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_793_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBatchJob::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_793_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVBatchJob::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVBatchJob", 926, G__G__KVMultiDetanalysis_793_0_40, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob), -1, 0, 1, 1, 1, 0, "u 'KVBatchJob' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVBatchJob", 1052, G__G__KVMultiDetanalysis_793_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_793_0_42, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchJob), -1, 1, 1, 1, 1, 0, "u 'KVBatchJob' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataTransferBBFTP(void) {
   /* KVDataTransferBBFTP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP));
   G__memfunc_setup("KVDataTransferBBFTP",1742,G__G__KVMultiDetanalysis_794_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteCommand",1426,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteTransferScript",1989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_794_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataTransferBBFTP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_794_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransferBBFTP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_794_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataTransferBBFTP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_794_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataTransferBBFTP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_794_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_794_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransferBBFTP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_794_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataTransferBBFTP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_794_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransferBBFTP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_794_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataTransferBBFTP::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDataTransferBBFTP", 1742, G__G__KVMultiDetanalysis_794_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP), -1, 0, 1, 1, 1, 0, "u 'KVDataTransferBBFTP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDataTransferBBFTP", 1868, G__G__KVMultiDetanalysis_794_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_794_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP), -1, 1, 1, 1, 1, 0, "u 'KVDataTransferBBFTP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimReader_SMF(void) {
   /* KVSimReader_SMF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF));
   G__memfunc_setup("KVSimReader_SMF",1378,G__G__KVMultiDetanalysis_795_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimReader_SMF",1378,G__G__KVMultiDetanalysis_795_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF), -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadHeader",965,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNucleus",1115,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimeBranching",1607,G__G__KVMultiDetanalysis_795_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_795_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimReader_SMF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_795_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_SMF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_795_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimReader_SMF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_795_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimReader_SMF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_795_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_795_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_SMF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_795_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_SMF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_795_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_SMF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_795_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_SMF::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimReader_SMF", 1504, G__G__KVMultiDetanalysis_795_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataPatch(void) {
   /* KVDataPatch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatch));
   G__memfunc_setup("IsRequired",1021,G__G__KVMultiDetanalysis_796_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"u 'TString' - 0 - dataset u 'TString' - 0 - datatype "
"i - 'Int_t' 0 - runnumber u 'TString' - 0 - dataseries "
"i - 'Int_t' 0 - datareleasenumber U 'TList' - 10 - streamerinfolist", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsEventPatch",1198,G__G__KVMultiDetanalysis_796_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsParticlePatch",1504,G__G__KVMultiDetanalysis_796_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ApplyToEvent",1227,G__G__KVMultiDetanalysis_796_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVEvent' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ApplyToParticle",1533,G__G__KVMultiDetanalysis_796_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintPatchInfo",1417,G__G__KVMultiDetanalysis_796_0_8, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_796_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataPatch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_796_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_796_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataPatch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_796_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataPatch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_796_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_796_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_796_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataPatch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_796_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_796_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataPatch::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDataPatch", 1161, G__G__KVMultiDetanalysis_796_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_796_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatch), -1, 1, 1, 1, 1, 0, "u 'KVDataPatch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKV_CCIN2P3_GE(void) {
   /* KV_CCIN2P3_GE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE));
   G__memfunc_setup("ChangeDefJobOpt",1443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'KVDataAnalyser' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KV_CCIN2P3_GE",957,G__G__KVMultiDetanalysis_797_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJobTimeString",1613,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' h", "Set CPU time for batch job */", (void*) NULL, 1);
   G__memfunc_setup("SetJobTime",982,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 '0' - "
"i - 'Int_t' 0 '0' -", "Set CPU time for batch job */", (void*) NULL, 1);
   G__memfunc_setup("SetJobMemory",1216,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' h", "Set max memory for batch job */", (void*) NULL, 1);
   G__memfunc_setup("SetJobDisk",978,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' h", "Set max disk space for batch job */", (void*) NULL, 1);
   G__memfunc_setup("PrintJobs",923,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", "Print list of all jobs submitted to system */", (void*) NULL, 1);
   G__memfunc_setup("CheckJobParameters",1805,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "Checks job parameters */", (void*) NULL, 1);
   G__memfunc_setup("GetJobTime",970,G__G__KVMultiDetanalysis_797_0_9, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", "Get CPU time for batch job */", (void*) NULL, 1);
   G__memfunc_setup("GetJobMemory",1204,G__G__KVMultiDetanalysis_797_0_10, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", "Get max memory for batch job */", (void*) NULL, 1);
   G__memfunc_setup("GetJobDisk",966,G__G__KVMultiDetanalysis_797_0_11, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", "Get max disk space for batch job */", (void*) NULL, 1);
   G__memfunc_setup("ChooseJobTime",1291,G__G__KVMultiDetanalysis_797_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "Choose CPU time for batch job */", (void*) NULL, 1);
   G__memfunc_setup("ChooseJobMemory",1525,G__G__KVMultiDetanalysis_797_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "Choose max memory for batch job */", (void*) NULL, 1);
   G__memfunc_setup("ChooseJobDisk",1287,G__G__KVMultiDetanalysis_797_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "Choose max disk space for batch job */", (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBatchEnvFile",1686,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TEnv' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBatchEnvFile",1543,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TEnv' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SanitizeJobName",1507,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfJobs",1279,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_797_0_21, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KV_CCIN2P3_GE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_797_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KV_CCIN2P3_GE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_797_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KV_CCIN2P3_GE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_797_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KV_CCIN2P3_GE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_797_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_797_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KV_CCIN2P3_GE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_797_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KV_CCIN2P3_GE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_797_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KV_CCIN2P3_GE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_797_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KV_CCIN2P3_GE::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KV_CCIN2P3_GE", 1083, G__G__KVMultiDetanalysis_797_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVGaxis(void) {
   /* KVGaxis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis));
   G__memfunc_setup("KVGaxis",669,G__G__KVMultiDetanalysis_801_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGaxis",669,G__G__KVMultiDetanalysis_801_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax "
"d - 'Double_t' 0 - wmin d - 'Double_t' 0 - wmax "
"i - 'Int_t' 0 '510' ndiv C - 'Option_t' 10 '\"\"' chopt "
"d - 'Double_t' 0 '0' gridlength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGaxis",669,G__G__KVMultiDetanalysis_801_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis), -1, 0, 12, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax "
"i - 'Int_t' 0 - nbins D - 'Double_t' 0 - bins "
"d - 'Double_t' 0 '0' wmin d - 'Double_t' 0 '0' wmax "
"i - 'Int_t' 0 '510' ndiv C - 'Option_t' 10 '\"\"' chopt "
"d - 'Double_t' 0 '0' gridlength C - - 2 '0' labels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGaxis",669,G__G__KVMultiDetanalysis_801_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis), -1, 0, 8, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax "
"C - - 10 - funcname i - 'Int_t' 0 '510' ndiv "
"C - 'Option_t' 10 '\"\"' chopt d - 'Double_t' 0 '0' gridlength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintAxis",913,(G__InterfaceMethod) NULL,121, -1, -1, 0, 10, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax "
"d - 'Double_t' 1 - wmin d - 'Double_t' 1 - wmax "
"i - 'Int_t' 1 - ndiv C - 'Option_t' 10 '\"\"' chopt "
"d - 'Double_t' 0 '0' gridlength g - 'Bool_t' 0 'kFALSE' drawGridOnly", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFormat",917,G__G__KVMultiDetanalysis_801_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"%lf\"' form", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_801_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGaxis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_801_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGaxis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_801_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGaxis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_801_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGaxis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_801_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_801_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGaxis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_801_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGaxis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_801_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGaxis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_801_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGaxis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVGaxis", 669, G__G__KVMultiDetanalysis_801_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaxis), -1, 0, 1, 1, 1, 0, "u 'KVGaxis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVGaxis", 795, G__G__KVMultiDetanalysis_801_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSimReader_MMM_asym(void) {
   /* KVSimReader_MMM_asym */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym));
   G__memfunc_setup("KVSimReader_MMM_asym",1916,G__G__KVMultiDetanalysis_802_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSimReader_MMM_asym",1916,G__G__KVMultiDetanalysis_802_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym), -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNucleus",1115,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_802_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSimReader_MMM_asym::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_802_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_MMM_asym::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_802_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSimReader_MMM_asym::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_802_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSimReader_MMM_asym::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_802_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_802_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_MMM_asym::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_802_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_MMM_asym::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_802_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSimReader_MMM_asym::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_802_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSimReader_MMM_asym::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSimReader_MMM_asym", 2042, G__G__KVMultiDetanalysis_802_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVGraph(void) {
   /* KVGraph */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HideAxis",783,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TAxis' - 0 - ax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinArray",1080,(G__InterfaceMethod) NULL, 68, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 1 - nbins g - 'Bool_t' 0 'kTRUE' xAxis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGraph",659,G__G__KVMultiDetanalysis_807_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGraph",659,G__G__KVMultiDetanalysis_807_0_5, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' chopt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDisplayDivX",1405,G__G__KVMultiDetanalysis_807_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ndiv D - 'Double_t' 0 '0' div", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplayDivY",1406,G__G__KVMultiDetanalysis_807_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ndiv D - 'Double_t' 0 '0' div", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCropMode",1093,G__G__KVMultiDetanalysis_807_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 'kCropOnGraph' crop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseX",689,G__G__KVMultiDetanalysis_807_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' usex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseY",690,G__G__KVMultiDetanalysis_807_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' usey", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_807_0_12, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGraph::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_807_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGraph::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_807_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGraph::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_807_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGraph::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_807_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_807_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGraph::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_807_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGraph::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_807_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGraph::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_807_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGraph::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVGraph", 659, G__G__KVMultiDetanalysis_807_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph), -1, 0, 1, 1, 1, 0, "u 'KVGraph' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVGraph", 785, G__G__KVMultiDetanalysis_807_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_807_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGraph), -1, 1, 1, 1, 1, 0, "u 'KVGraph' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataTransferXRD(void) {
   /* KVDataTransferXRD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD));
   G__memfunc_setup("KVDataTransferXRD",1614,G__G__KVMultiDetanalysis_809_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteCommand",1426,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteTransferScript",1989,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_809_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataTransferXRD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_809_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransferXRD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_809_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataTransferXRD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_809_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataTransferXRD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_809_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_809_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransferXRD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_809_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataTransferXRD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_809_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataTransferXRD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_809_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataTransferXRD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDataTransferXRD", 1614, G__G__KVMultiDetanalysis_809_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD), -1, 0, 1, 1, 1, 0, "u 'KVDataTransferXRD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDataTransferXRD", 1740, G__G__KVMultiDetanalysis_809_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_809_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD), -1, 1, 1, 1, 1, 0, "u 'KVDataTransferXRD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVBatchSystemManager(void) {
   /* KVBatchSystemManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystemManager));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVBatchSystemManager",1987,G__G__KVMultiDetanalysis_810_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystemManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBatchSystem",1415,G__G__KVMultiDetanalysis_810_0_3, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBatchSystem",1415,G__G__KVMultiDetanalysis_810_0_4, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefaultBatchSystem",2124,G__G__KVMultiDetanalysis_810_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__KVMultiDetanalysis_810_0_6, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_810_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVBatchSystemManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_810_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBatchSystemManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_810_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVBatchSystemManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_810_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVBatchSystemManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__KVMultiDetanalysis_810_0_11, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__KVMultiDetanalysis_810_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__KVMultiDetanalysis_810_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_810_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_810_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBatchSystemManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_810_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVBatchSystemManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_810_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBatchSystemManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_810_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVBatchSystemManager::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVBatchSystemManager", 2113, G__G__KVMultiDetanalysis_810_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVGaus2D(void) {
   /* KVGaus2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D));
   G__memfunc_setup("NewFunction_2D",1349,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReloadFunction_2D",1650,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1), -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("f2D",220,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 0, 
"D - 'Double_t' 0 - xx D - 'Double_t' 0 - para", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVGaus2D",679,G__G__KVMultiDetanalysis_811_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGaus2D",679,G__G__KVMultiDetanalysis_811_0_5, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D), -1, 0, 1, 1, 1, 0, "u 'KVGaus2D' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_811_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGaus2D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_811_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGaus2D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_811_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGaus2D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_811_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGaus2D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_811_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_811_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGaus2D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_811_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGaus2D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_811_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGaus2D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_811_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGaus2D::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVGaus2D", 805, G__G__KVMultiDetanalysis_811_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_811_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGaus2D), -1, 1, 1, 1, 1, 0, "u 'KVGaus2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVGumbelDistribution(void) {
   /* KVGumbelDistribution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution));
   G__memfunc_setup("KVGumbelDistribution",2045,G__G__KVMultiDetanalysis_812_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGumbelDistribution",2045,G__G__KVMultiDetanalysis_812_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - name i - 'Int_t' 0 '1' k "
"g - 'Bool_t' 0 'kTRUE' norm d - 'Double_t' 0 '0.' xmin "
"d - 'Double_t' 0 '100.' xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGumbelDistribution",2045,G__G__KVMultiDetanalysis_812_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution), -1, 0, 1, 1, 1, 0, "u 'KVGumbelDistribution' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GDk",246,G__G__KVMultiDetanalysis_812_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_812_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGumbelDistribution::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_812_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGumbelDistribution::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_812_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGumbelDistribution::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_812_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGumbelDistribution::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_812_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_812_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGumbelDistribution::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_812_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGumbelDistribution::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_812_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGumbelDistribution::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_812_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGumbelDistribution::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVGumbelDistribution", 2171, G__G__KVMultiDetanalysis_812_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVGumGumDistribution(void) {
   /* KVGumGumDistribution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution));
   G__memfunc_setup("KVGumGumDistribution",2035,G__G__KVMultiDetanalysis_813_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGumGumDistribution",2035,G__G__KVMultiDetanalysis_813_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution), -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - name i - 'Int_t' 0 '1' k "
"d - 'Double_t' 0 '0.' xmin d - 'Double_t' 0 '100.' xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGumGumDistribution",2035,G__G__KVMultiDetanalysis_813_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution), -1, 0, 1, 1, 1, 0, "u 'KVGumGumDistribution' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GDk",246,G__G__KVMultiDetanalysis_813_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_813_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGumGumDistribution::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_813_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGumGumDistribution::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_813_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGumGumDistribution::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_813_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGumGumDistribution::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_813_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_813_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGumGumDistribution::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_813_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGumGumDistribution::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_813_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGumGumDistribution::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_813_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGumGumDistribution::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVGumGumDistribution", 2161, G__G__KVMultiDetanalysis_813_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVGEBatchJob(void) {
   /* KVGEBatchJob */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob));
   G__memfunc_setup("KVGEBatchJob",1066,G__G__KVMultiDetanalysis_814_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteJob",878,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetResources",1255,G__G__KVMultiDetanalysis_814_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResources",1243,G__G__KVMultiDetanalysis_814_0_4, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCPUusage",1053,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCPUscalingFactor",1876,G__G__KVMultiDetanalysis_814_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlterResources",1459,G__G__KVMultiDetanalysis_814_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_814_0_8, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGEBatchJob::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_814_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGEBatchJob::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_814_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGEBatchJob::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_814_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGEBatchJob::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_814_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_814_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGEBatchJob::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_814_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGEBatchJob::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_814_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGEBatchJob::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_814_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGEBatchJob::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVGEBatchJob", 1066, G__G__KVMultiDetanalysis_814_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob), -1, 0, 1, 1, 1, 0, "u 'KVGEBatchJob' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVGEBatchJob", 1192, G__G__KVMultiDetanalysis_814_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_814_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGEBatchJob), -1, 1, 1, 1, 1, 0, "u 'KVGEBatchJob' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataPatchList(void) {
   /* KVDataPatchList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList));
   G__memfunc_setup("FillPatchList",1299,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDataPatchList",1447,G__G__KVMultiDetanalysis_815_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDataPatchList",1447,G__G__KVMultiDetanalysis_815_0_4, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVDataPatchList), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializePatchList",1950,G__G__KVMultiDetanalysis_815_0_5, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'TString' - 0 - dataset u 'TString' - 0 - datatype "
"i - 'Int_t' 0 - runnumber u 'TString' - 0 - dataseries "
"i - 'Int_t' 0 - datareleasenumber U 'TList' - 10 - streamerinfolist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Apply",518,G__G__KVMultiDetanalysis_815_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasActivePatches",1600,G__G__KVMultiDetanalysis_815_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_815_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataPatchList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_815_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatchList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_815_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataPatchList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_815_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataPatchList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_815_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_815_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatchList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_815_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataPatchList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_815_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatchList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_815_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataPatchList::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDataPatchList", 1573, G__G__KVMultiDetanalysis_815_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVGausGumDistribution(void) {
   /* KVGausGumDistribution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution));
   G__memfunc_setup("KVGausGumDistribution",2138,G__G__KVMultiDetanalysis_816_0_1, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGausGumDistribution",2138,G__G__KVMultiDetanalysis_816_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution), -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - name i - 'Int_t' 0 '1' k "
"d - 'Double_t' 0 '0.' xmin d - 'Double_t' 0 '100.' xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVGausGumDistribution",2138,G__G__KVMultiDetanalysis_816_0_3, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution), -1, 0, 1, 1, 1, 0, "u 'KVGausGumDistribution' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GDk",246,G__G__KVMultiDetanalysis_816_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_816_0_7, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVGausGumDistribution::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_816_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGausGumDistribution::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_816_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVGausGumDistribution::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_816_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVGausGumDistribution::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_816_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_816_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGausGumDistribution::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_816_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGausGumDistribution::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_816_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVGausGumDistribution::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_816_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVGausGumDistribution::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVGausGumDistribution", 2264, G__G__KVMultiDetanalysis_816_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVImpactParameter(void) {
   /* KVImpactParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter));
   G__memfunc_setup("make_scale",1029,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - npoints", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVImpactParameter",1696,G__G__KVMultiDetanalysis_820_0_2, 105, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - - C - 'Option_t' 10 '\"D\"' evol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeScale",870,G__G__KVMultiDetanalysis_820_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '100' npoints d - 'Double_t' 0 '1.0' bmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeAbsoluteScale",1701,G__G__KVMultiDetanalysis_820_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '100' npoints d - 'Double_t' 0 '1.0' bmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScale",776,G__G__KVMultiDetanalysis_820_0_5, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TGraph), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXSecScale",1147,G__G__KVMultiDetanalysis_820_0_6, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TGraph), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BTransform",1022,G__G__KVMultiDetanalysis_820_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XTransform",1044,G__G__KVMultiDetanalysis_820_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransFunc",1204,G__G__KVMultiDetanalysis_820_0_9, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXSecTransFunc",1575,G__G__KVMultiDetanalysis_820_0_10, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TF1), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetImpactParameter",1823,G__G__KVMultiDetanalysis_820_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - obs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrossSection",1535,G__G__KVMultiDetanalysis_820_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - obs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObservable",1317,G__G__KVMultiDetanalysis_820_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObservableXSec",1688,G__G__KVMultiDetanalysis_820_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIPDistribution",1721,G__G__KVMultiDetanalysis_820_0_15, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TH1), -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - obs i - 'Int_t' 0 '100' nbinx "
"C - 'Option_t' 10 '\"\"' norm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIPEvolution",1406,G__G__KVMultiDetanalysis_820_0_16, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TGraph), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - obscor u 'TString' - 0 - moment "
"u 'TString' - 0 '\"Y\"' axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXSecDistribution",1939,G__G__KVMultiDetanalysis_820_0_17, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TH1), -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - obs i - 'Int_t' 0 '100' nbinx "
"C - 'Option_t' 10 '\"\"' norm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXSecEvolution",1624,G__G__KVMultiDetanalysis_820_0_18, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TGraph), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - obscor u 'TString' - 0 - moment "
"u 'TString' - 0 '\"Y\"' axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXSecFromIP",1216,G__G__KVMultiDetanalysis_820_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - bmax", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&KVImpactParameter::GetXSecFromIP) ), 0);
   G__memfunc_setup("GetIPFromXSec",1216,G__G__KVMultiDetanalysis_820_0_20, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - xsec", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&KVImpactParameter::GetIPFromXSec) ), 0);
   G__memfunc_setup("Class",502,G__G__KVMultiDetanalysis_820_0_21, 85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVImpactParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVMultiDetanalysis_820_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVImpactParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVMultiDetanalysis_820_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVImpactParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVMultiDetanalysis_820_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVImpactParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVMultiDetanalysis_820_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVMultiDetanalysis_820_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVImpactParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVMultiDetanalysis_820_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVImpactParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVMultiDetanalysis_820_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVImpactParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVMultiDetanalysis_820_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVImpactParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVImpactParameter", 1696, G__G__KVMultiDetanalysis_820_0_33, (int) ('i'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter), -1, 0, 1, 1, 1, 0, "u 'KVImpactParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVImpactParameter", 1822, G__G__KVMultiDetanalysis_820_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVMultiDetanalysis_820_0_35, (int) ('u'), G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVImpactParameter), -1, 1, 1, 1, 1, 0, "u 'KVImpactParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVMultiDetanalysis() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
   G__memvar_setup((void*)(&gBatchSystem),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystem),-1,-1,1,"gBatchSystem=",0,(char*)NULL);
}

static void G__cpp_setup_global5() {
   G__memvar_setup((void*)(&gBatchSystemManager),85,0,0,G__get_linked_tagnum(&G__G__KVMultiDetanalysisLN_KVBatchSystemManager),-1,-1,1,"gBatchSystemManager=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVMultiDetanalysis() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVMultiDetanalysis() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVMultiDetanalysisLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVString = { "KVString" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TFormula = { "TFormula" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TF2 = { "TF2" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVHashList = { "KVHashList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TAttText = { "TAttText" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TAttBBox2D = { "TAttBBox2D" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVList = { "KVList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVAutoFit = { "KVAutoFit" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGaus1D = { "KVGaus1D" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVNameValueList = { "KVNameValueList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVNumberList = { "KVNumberList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataAnalyser = { "KVDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVBatchSystem = { "KVBatchSystem" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVRootBatch = { "KVRootBatch" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVLinuxBatch = { "KVLinuxBatch" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS = { "KV_CCIN2P3_BQS" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVUniqueNameList = { "KVUniqueNameList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVParticleCondition = { "KVParticleCondition" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVNucleus = { "KVNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVEvent = { "KVEvent" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimEvent = { "KVSimEvent" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimNucleus = { "KVSimNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVFileReader = { "KVFileReader" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimReader = { "KVSimReader" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym = { "KVSimReader_SMF_asym" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVVarGlob = { "KVVarGlob" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGVList = { "KVGVList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TProfile2D = { "TProfile2D" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TH3 = { "TH3" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TProofOutputFile = { "TProofOutputFile" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVEventSelector = { "KVEventSelector" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVEventSelectorcLcLdA = { "KVEventSelector::$" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE = { "KVSimReader_HIPSE" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym = { "KVSimReader_HIPSE_asym" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataSet = { "KVDataSet" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataAnalysisTask = { "KVDataAnalysisTask" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDBSystem = { "KVDBSystem" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimReader_ELIE = { "KVSimReader_ELIE" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataRepository = { "KVDataRepository" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataTransfer = { "KVDataTransfer" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataTransferSFTP = { "KVDataTransferSFTP" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimReader_MMM = { "KVSimReader_MMM" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDatime = { "KVDatime" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVBatchJob = { "KVBatchJob" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP = { "KVDataTransferBBFTP" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimReader_SMF = { "KVSimReader_SMF" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataPatch = { "KVDataPatch" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE = { "KV_CCIN2P3_GE" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TGaxis = { "TGaxis" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGaxis = { "KVGaxis" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym = { "KVSimReader_MMM_asym" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGraph = { "KVGraph" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGraphcLcLCropOption = { "KVGraph::CropOption" , 101 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataTransferXRD = { "KVDataTransferXRD" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVBatchSystemManager = { "KVBatchSystemManager" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGaus2D = { "KVGaus2D" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGumbelDistribution = { "KVGumbelDistribution" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGumGumDistribution = { "KVGumGumDistribution" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGEBatchJob = { "KVGEBatchJob" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVDataPatchList = { "KVDataPatchList" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVGausGumDistribution = { "KVGausGumDistribution" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVHistoManipulator = { "KVHistoManipulator" , 99 , -1 };
G__linked_taginfo G__G__KVMultiDetanalysisLN_KVImpactParameter = { "KVImpactParameter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVMultiDetanalysis() {
  G__G__KVMultiDetanalysisLN_TClass.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TBuffer.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMemberInspector.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TObject.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TNamed.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TString.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TList.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVString.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVBase.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TAxis.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TAttLine.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TAttFill.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TAttMarker.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TF1.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TH1.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TH1F.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TFormula.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TF2.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TFile.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVHashList.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TAttText.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TCanvas.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TAttBBox2D.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVList.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVAutoFit.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGaus1D.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVNameValueList.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVNumberList.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataAnalyser.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TEnv.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TGWindow.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVBatchSystem.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVRootBatch.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVLinuxBatch.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVUniqueNameList.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVParticleCondition.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVNucleus.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVEvent.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimEvent.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimNucleus.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TTree.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TBranch.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TSelector.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVFileReader.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimReader.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVVarGlob.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGVList.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TProfile2D.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TH3.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TProfile.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TH2.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TProofOutputFile.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVEventSelector.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVEventSelectorcLcLdA.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataSet.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataAnalysisTask.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDBSystem.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimReader_ELIE.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataRepository.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataTransfer.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataTransferSFTP.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimReader_MMM.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDatime.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVBatchJob.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimReader_SMF.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataPatch.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TLine.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TGaxis.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGaxis.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TGraph.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_TGraphErrors.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGraph.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGraphcLcLCropOption.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataTransferXRD.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVBatchSystemManager.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGaus2D.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGumbelDistribution.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGumGumDistribution.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGEBatchJob.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVDataPatchList.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVGausGumDistribution.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVHistoManipulator.tagnum = -1 ;
  G__G__KVMultiDetanalysisLN_KVImpactParameter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVMultiDetanalysis() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVString);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TAxis);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TF1);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TH1F);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TFormula);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TF2);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVHashList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TAttText);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TAttBBox2D);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVAutoFit),sizeof(KVAutoFit),-1,63232,"Manage SemiAutomatic Fits",G__setup_memvarKVAutoFit,G__setup_memfuncKVAutoFit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGaus1D),sizeof(KVGaus1D),-1,63232,"Fit gaussien a une dimension",G__setup_memvarKVGaus1D,G__setup_memfuncKVGaus1D);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVNameValueList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVNumberList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataAnalyser),sizeof(KVDataAnalyser),-1,292096,"For submitting & performing data analysis tasks",G__setup_memvarKVDataAnalyser,G__setup_memfuncKVDataAnalyser);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TEnv);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TGWindow);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVBatchSystem),sizeof(KVBatchSystem),-1,62464,"Base class for interface to batch job management system",G__setup_memvarKVBatchSystem,G__setup_memfuncKVBatchSystem);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVRootBatch),sizeof(KVRootBatch),-1,62464,"Run KaliVeda analysis task in an Xterm window",G__setup_memvarKVRootBatch,G__setup_memfuncKVRootBatch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVLinuxBatch),sizeof(KVLinuxBatch),-1,62464,"Run KaliVeda analysis task in background on Linux system with output stored in logfile",G__setup_memvarKVLinuxBatch,G__setup_memfuncKVLinuxBatch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_BQS),sizeof(KV_CCIN2P3_BQS),-1,62464,"Interface to CCIN2P3-BQS batch job management system",G__setup_memvarKV_CCIN2P3_BQS,G__setup_memfuncKV_CCIN2P3_BQS);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVUniqueNameList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVParticleCondition);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVEvent);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimEvent);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TBranch);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TSelector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVFileReader);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimReader),sizeof(KVSimReader),-1,62720,"Base class to read output files for simulation and create tree using KVEvent type class",G__setup_memvarKVSimReader,G__setup_memfuncKVSimReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF_asym),sizeof(KVSimReader_SMF_asym),-1,62720,"Read ascii file for asymptotic events of the SMF code after SIMON deexcitation",G__setup_memvarKVSimReader_SMF_asym,G__setup_memfuncKVSimReader_SMF_asym);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVVarGlob);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGVList);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TProfile2D);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TH3);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TProfile);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TH2);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TProofOutputFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVEventSelector),sizeof(KVEventSelector),-1,292096,"General purpose analysis class for TTrees containing KVEvent objects",G__setup_memvarKVEventSelector,G__setup_memfuncKVEventSelector);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVEventSelectorcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE),sizeof(KVSimReader_HIPSE),-1,62720,"Read ascii file for events of the HIPSE code after clusterization",G__setup_memvarKVSimReader_HIPSE,G__setup_memfuncKVSimReader_HIPSE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimReader_HIPSE_asym),sizeof(KVSimReader_HIPSE_asym),-1,62720,"Read ascii file for asymptotic events of the HIPSE code after SIMON deexcitation",G__setup_memvarKVSimReader_HIPSE_asym,G__setup_memfuncKVSimReader_HIPSE_asym);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataSet);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataAnalysisTask);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDBSystem);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimReader_ELIE),sizeof(KVSimReader_ELIE),-1,62720,"Read ascii files containing events generated by Elie",G__setup_memvarKVSimReader_ELIE,G__setup_memfuncKVSimReader_ELIE);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataRepository);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataTransfer),sizeof(KVDataTransfer),-1,292098,"Transfers data between data repositories",G__setup_memvarKVDataTransfer,G__setup_memfuncKVDataTransfer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataTransferSFTP),sizeof(KVDataTransferSFTP),-1,292098,"File transfer between repositories using sftp",G__setup_memvarKVDataTransferSFTP,G__setup_memfuncKVDataTransferSFTP);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM),sizeof(KVSimReader_MMM),-1,62720,"Read ascii file for events of the MMM code at Freeze Out",G__setup_memvarKVSimReader_MMM,G__setup_memfuncKVSimReader_MMM);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDatime);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVBatchJob),sizeof(KVBatchJob),-1,62720,"Job handled by batch system",G__setup_memvarKVBatchJob,G__setup_memfuncKVBatchJob);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataTransferBBFTP),sizeof(KVDataTransferBBFTP),-1,292096,"File transfer between repositories using bbftp",G__setup_memvarKVDataTransferBBFTP,G__setup_memfuncKVDataTransferBBFTP);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimReader_SMF),sizeof(KVSimReader_SMF),-1,62720,"Read ascii file for events of the SMF code after clusterization",G__setup_memvarKVSimReader_SMF,G__setup_memfuncKVSimReader_SMF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataPatch),sizeof(KVDataPatch),-1,324870,"Correction to be applied to reconstructed calibrated data",G__setup_memvarKVDataPatch,G__setup_memfuncKVDataPatch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KV_CCIN2P3_GE),sizeof(KV_CCIN2P3_GE),-1,62464,"Interface to CCIN2P3-GE batch job management system",G__setup_memvarKV_CCIN2P3_GE,G__setup_memfuncKV_CCIN2P3_GE);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TLine);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TGaxis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGaxis),sizeof(KVGaxis),-1,324864,"TAxis optimised for KVGraph visualisation",G__setup_memvarKVGaxis,G__setup_memfuncKVGaxis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVSimReader_MMM_asym),sizeof(KVSimReader_MMM_asym),-1,62720,"Read ascii file for asymptotic events of the MMM code after deexcitation",G__setup_memvarKVSimReader_MMM_asym,G__setup_memfuncKVSimReader_MMM_asym);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TGraph);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_TGraphErrors);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGraph),sizeof(KVGraph),-1,324864,"TGraph with new draw option",G__setup_memvarKVGraph,G__setup_memfuncKVGraph);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGraphcLcLCropOption);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataTransferXRD),sizeof(KVDataTransferXRD),-1,292096,"Transfer data from remote repository using xrootd",G__setup_memvarKVDataTransferXRD,G__setup_memfuncKVDataTransferXRD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVBatchSystemManager),sizeof(KVBatchSystemManager),-1,1280,"Manages methods of processing non-interactive data analysis tasks",G__setup_memvarKVBatchSystemManager,G__setup_memfuncKVBatchSystemManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGaus2D),sizeof(KVGaus2D),-1,63232,"Fit gaussien a deux dimensions",G__setup_memvarKVGaus2D,G__setup_memfuncKVGaus2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGumbelDistribution),sizeof(KVGumbelDistribution),-1,325376,"Gumbel distributions for rank-ordered extremal variables",G__setup_memvarKVGumbelDistribution,G__setup_memfuncKVGumbelDistribution);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGumGumDistribution),sizeof(KVGumGumDistribution),-1,325376,"Sum of normalised Gumbel first asymptote and Gumbel last asymptote",G__setup_memvarKVGumGumDistribution,G__setup_memfuncKVGumGumDistribution);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGEBatchJob),sizeof(KVGEBatchJob),-1,62720,"Job handled by Grid Engine batch system",G__setup_memvarKVGEBatchJob,G__setup_memfuncKVGEBatchJob);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVDataPatchList),sizeof(KVDataPatchList),-1,324864,"List of corrections to be applied to reconstructed calibrated data",G__setup_memvarKVDataPatchList,G__setup_memfuncKVDataPatchList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVGausGumDistribution),sizeof(KVGausGumDistribution),-1,325376,"Sum of normalised Gaussian and Gumbel distributions",G__setup_memvarKVGausGumDistribution,G__setup_memfuncKVGausGumDistribution);
   G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVHistoManipulator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVMultiDetanalysisLN_KVImpactParameter),sizeof(KVImpactParameter),-1,62464,"Impact parameter analysis tools",G__setup_memvarKVImpactParameter,G__setup_memfuncKVImpactParameter);
}
extern "C" void G__cpp_setupG__KVMultiDetanalysis(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVMultiDetanalysis()");
  G__set_cpp_environmentG__KVMultiDetanalysis();
  G__cpp_setup_tagtableG__KVMultiDetanalysis();

  G__cpp_setup_inheritanceG__KVMultiDetanalysis();

  G__cpp_setup_typetableG__KVMultiDetanalysis();

  G__cpp_setup_memvarG__KVMultiDetanalysis();

  G__cpp_setup_memfuncG__KVMultiDetanalysis();
  G__cpp_setup_globalG__KVMultiDetanalysis();
  G__cpp_setup_funcG__KVMultiDetanalysis();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVMultiDetanalysis();
  return;
}
class G__cpp_setup_initG__KVMultiDetanalysis {
  public:
    G__cpp_setup_initG__KVMultiDetanalysis() { G__add_setup_func("G__KVMultiDetanalysis",(G__incsetup)(&G__cpp_setupG__KVMultiDetanalysis)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVMultiDetanalysis() { G__remove_setup_func("G__KVMultiDetanalysis"); }
};
G__cpp_setup_initG__KVMultiDetanalysis G__cpp_setup_initializerG__KVMultiDetanalysis;

