//
// File generated by rootcint at Fri Jul 17 15:53:52 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVIndraanalysis
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVIndraanalysis.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVINDRARawDataAnalyser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_KVINDRARawDataAnalyser(void *p);
   static void deleteArray_KVINDRARawDataAnalyser(void *p);
   static void destruct_KVINDRARawDataAnalyser(void *p);
   static void streamer_KVINDRARawDataAnalyser(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRARawDataAnalyser*)
   {
      ::KVINDRARawDataAnalyser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRARawDataAnalyser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRARawDataAnalyser", ::KVINDRARawDataAnalyser::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVINDRARawDataAnalyser.h", 13,
                  typeid(::KVINDRARawDataAnalyser), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRARawDataAnalyser::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRARawDataAnalyser) );
      instance.SetDelete(&delete_KVINDRARawDataAnalyser);
      instance.SetDeleteArray(&deleteArray_KVINDRARawDataAnalyser);
      instance.SetDestructor(&destruct_KVINDRARawDataAnalyser);
      instance.SetStreamerFunc(&streamer_KVINDRARawDataAnalyser);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRARawDataAnalyser*)
   {
      return GenerateInitInstanceLocal((::KVINDRARawDataAnalyser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRARawDataAnalyser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSelector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSelector(void *p = 0);
   static void *newArray_KVSelector(Long_t size, void *p);
   static void delete_KVSelector(void *p);
   static void deleteArray_KVSelector(void *p);
   static void destruct_KVSelector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSelector*)
   {
      ::KVSelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSelector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSelector", ::KVSelector::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVSelector.h", 40,
                  typeid(::KVSelector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSelector::Dictionary, isa_proxy, 4,
                  sizeof(::KVSelector) );
      instance.SetNew(&new_KVSelector);
      instance.SetNewArray(&newArray_KVSelector);
      instance.SetDelete(&delete_KVSelector);
      instance.SetDeleteArray(&deleteArray_KVSelector);
      instance.SetDestructor(&destruct_KVSelector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSelector*)
   {
      return GenerateInitInstanceLocal((::KVSelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataSelector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataSelector(void *p = 0);
   static void *newArray_KVDataSelector(Long_t size, void *p);
   static void delete_KVDataSelector(void *p);
   static void deleteArray_KVDataSelector(void *p);
   static void destruct_KVDataSelector(void *p);
   static void streamer_KVDataSelector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataSelector*)
   {
      ::KVDataSelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataSelector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataSelector", ::KVDataSelector::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVDataSelector.h", 17,
                  typeid(::KVDataSelector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataSelector::Dictionary, isa_proxy, 0,
                  sizeof(::KVDataSelector) );
      instance.SetNew(&new_KVDataSelector);
      instance.SetNewArray(&newArray_KVDataSelector);
      instance.SetDelete(&delete_KVDataSelector);
      instance.SetDeleteArray(&deleteArray_KVDataSelector);
      instance.SetDestructor(&destruct_KVDataSelector);
      instance.SetStreamerFunc(&streamer_KVDataSelector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataSelector*)
   {
      return GenerateInitInstanceLocal((::KVDataSelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAReconIdent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAReconIdent(void *p = 0);
   static void *newArray_KVINDRAReconIdent(Long_t size, void *p);
   static void delete_KVINDRAReconIdent(void *p);
   static void deleteArray_KVINDRAReconIdent(void *p);
   static void destruct_KVINDRAReconIdent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAReconIdent*)
   {
      ::KVINDRAReconIdent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAReconIdent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAReconIdent", ::KVINDRAReconIdent::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVINDRAReconIdent.h", 15,
                  typeid(::KVINDRAReconIdent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAReconIdent::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAReconIdent) );
      instance.SetNew(&new_KVINDRAReconIdent);
      instance.SetNewArray(&newArray_KVINDRAReconIdent);
      instance.SetDelete(&delete_KVINDRAReconIdent);
      instance.SetDeleteArray(&deleteArray_KVINDRAReconIdent);
      instance.SetDestructor(&destruct_KVINDRAReconIdent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAReconIdent*)
   {
      return GenerateInitInstanceLocal((::KVINDRAReconIdent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAReconIdent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVReconIdent_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVReconIdent_e475s(void *p = 0);
   static void *newArray_KVReconIdent_e475s(Long_t size, void *p);
   static void delete_KVReconIdent_e475s(void *p);
   static void deleteArray_KVReconIdent_e475s(void *p);
   static void destruct_KVReconIdent_e475s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVReconIdent_e475s*)
   {
      ::KVReconIdent_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVReconIdent_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVReconIdent_e475s", ::KVReconIdent_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVReconIdent_e475s.h", 16,
                  typeid(::KVReconIdent_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVReconIdent_e475s::Dictionary, isa_proxy, 4,
                  sizeof(::KVReconIdent_e475s) );
      instance.SetNew(&new_KVReconIdent_e475s);
      instance.SetNewArray(&newArray_KVReconIdent_e475s);
      instance.SetDelete(&delete_KVReconIdent_e475s);
      instance.SetDeleteArray(&deleteArray_KVReconIdent_e475s);
      instance.SetDestructor(&destruct_KVReconIdent_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVReconIdent_e475s*)
   {
      return GenerateInitInstanceLocal((::KVReconIdent_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVReconIdent_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAReconDataAnalyser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAReconDataAnalyser(void *p = 0);
   static void *newArray_KVINDRAReconDataAnalyser(Long_t size, void *p);
   static void delete_KVINDRAReconDataAnalyser(void *p);
   static void deleteArray_KVINDRAReconDataAnalyser(void *p);
   static void destruct_KVINDRAReconDataAnalyser(void *p);
   static void streamer_KVINDRAReconDataAnalyser(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAReconDataAnalyser*)
   {
      ::KVINDRAReconDataAnalyser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAReconDataAnalyser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAReconDataAnalyser", ::KVINDRAReconDataAnalyser::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVINDRAReconDataAnalyser.h", 18,
                  typeid(::KVINDRAReconDataAnalyser), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAReconDataAnalyser::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRAReconDataAnalyser) );
      instance.SetNew(&new_KVINDRAReconDataAnalyser);
      instance.SetNewArray(&newArray_KVINDRAReconDataAnalyser);
      instance.SetDelete(&delete_KVINDRAReconDataAnalyser);
      instance.SetDeleteArray(&deleteArray_KVINDRAReconDataAnalyser);
      instance.SetDestructor(&destruct_KVINDRAReconDataAnalyser);
      instance.SetStreamerFunc(&streamer_KVINDRAReconDataAnalyser);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAReconDataAnalyser*)
   {
      return GenerateInitInstanceLocal((::KVINDRAReconDataAnalyser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAReconDataAnalyser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAReconRoot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAReconRoot(void *p = 0);
   static void *newArray_KVINDRAReconRoot(Long_t size, void *p);
   static void delete_KVINDRAReconRoot(void *p);
   static void deleteArray_KVINDRAReconRoot(void *p);
   static void destruct_KVINDRAReconRoot(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAReconRoot*)
   {
      ::KVINDRAReconRoot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAReconRoot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAReconRoot", ::KVINDRAReconRoot::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVINDRAReconRoot.h", 9,
                  typeid(::KVINDRAReconRoot), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAReconRoot::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAReconRoot) );
      instance.SetNew(&new_KVINDRAReconRoot);
      instance.SetNewArray(&newArray_KVINDRAReconRoot);
      instance.SetDelete(&delete_KVINDRAReconRoot);
      instance.SetDeleteArray(&deleteArray_KVINDRAReconRoot);
      instance.SetDestructor(&destruct_KVINDRAReconRoot);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAReconRoot*)
   {
      return GenerateInitInstanceLocal((::KVINDRAReconRoot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAReconRoot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRARawDataReconstructor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRARawDataReconstructor(void *p = 0);
   static void *newArray_KVINDRARawDataReconstructor(Long_t size, void *p);
   static void delete_KVINDRARawDataReconstructor(void *p);
   static void deleteArray_KVINDRARawDataReconstructor(void *p);
   static void destruct_KVINDRARawDataReconstructor(void *p);
   static void streamer_KVINDRARawDataReconstructor(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRARawDataReconstructor*)
   {
      ::KVINDRARawDataReconstructor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRARawDataReconstructor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRARawDataReconstructor", ::KVINDRARawDataReconstructor::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVINDRARawDataReconstructor.h", 20,
                  typeid(::KVINDRARawDataReconstructor), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRARawDataReconstructor::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRARawDataReconstructor) );
      instance.SetNew(&new_KVINDRARawDataReconstructor);
      instance.SetNewArray(&newArray_KVINDRARawDataReconstructor);
      instance.SetDelete(&delete_KVINDRARawDataReconstructor);
      instance.SetDeleteArray(&deleteArray_KVINDRARawDataReconstructor);
      instance.SetDestructor(&destruct_KVINDRARawDataReconstructor);
      instance.SetStreamerFunc(&streamer_KVINDRARawDataReconstructor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRARawDataReconstructor*)
   {
      return GenerateInitInstanceLocal((::KVINDRARawDataReconstructor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRARawDataReconstructor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataPatch_CorrectEtalonModuleIDCode_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataPatch_CorrectEtalonModuleIDCode(void *p = 0);
   static void *newArray_KVDataPatch_CorrectEtalonModuleIDCode(Long_t size, void *p);
   static void delete_KVDataPatch_CorrectEtalonModuleIDCode(void *p);
   static void deleteArray_KVDataPatch_CorrectEtalonModuleIDCode(void *p);
   static void destruct_KVDataPatch_CorrectEtalonModuleIDCode(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataPatch_CorrectEtalonModuleIDCode*)
   {
      ::KVDataPatch_CorrectEtalonModuleIDCode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataPatch_CorrectEtalonModuleIDCode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataPatch_CorrectEtalonModuleIDCode", ::KVDataPatch_CorrectEtalonModuleIDCode::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVDataPatch_CorrectEtalonModuleIDCode.h", 10,
                  typeid(::KVDataPatch_CorrectEtalonModuleIDCode), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataPatch_CorrectEtalonModuleIDCode::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataPatch_CorrectEtalonModuleIDCode) );
      instance.SetNew(&new_KVDataPatch_CorrectEtalonModuleIDCode);
      instance.SetNewArray(&newArray_KVDataPatch_CorrectEtalonModuleIDCode);
      instance.SetDelete(&delete_KVDataPatch_CorrectEtalonModuleIDCode);
      instance.SetDeleteArray(&deleteArray_KVDataPatch_CorrectEtalonModuleIDCode);
      instance.SetDestructor(&destruct_KVDataPatch_CorrectEtalonModuleIDCode);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataPatch_CorrectEtalonModuleIDCode*)
   {
      return GenerateInitInstanceLocal((::KVDataPatch_CorrectEtalonModuleIDCode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataPatch_CorrectEtalonModuleIDCode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAIdentRoot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAIdentRoot(void *p = 0);
   static void *newArray_KVINDRAIdentRoot(Long_t size, void *p);
   static void delete_KVINDRAIdentRoot(void *p);
   static void deleteArray_KVINDRAIdentRoot(void *p);
   static void destruct_KVINDRAIdentRoot(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAIdentRoot*)
   {
      ::KVINDRAIdentRoot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAIdentRoot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAIdentRoot", ::KVINDRAIdentRoot::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVINDRAIdentRoot.h", 16,
                  typeid(::KVINDRAIdentRoot), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAIdentRoot::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAIdentRoot) );
      instance.SetNew(&new_KVINDRAIdentRoot);
      instance.SetNewArray(&newArray_KVINDRAIdentRoot);
      instance.SetDelete(&delete_KVINDRAIdentRoot);
      instance.SetDeleteArray(&deleteArray_KVINDRAIdentRoot);
      instance.SetDestructor(&destruct_KVINDRAIdentRoot);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAIdentRoot*)
   {
      return GenerateInitInstanceLocal((::KVINDRAIdentRoot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAIdentRoot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADstToRootTransfert_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADstToRootTransfert(void *p = 0);
   static void *newArray_KVINDRADstToRootTransfert(Long_t size, void *p);
   static void delete_KVINDRADstToRootTransfert(void *p);
   static void deleteArray_KVINDRADstToRootTransfert(void *p);
   static void destruct_KVINDRADstToRootTransfert(void *p);
   static void streamer_KVINDRADstToRootTransfert(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADstToRootTransfert*)
   {
      ::KVINDRADstToRootTransfert *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADstToRootTransfert >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADstToRootTransfert", ::KVINDRADstToRootTransfert::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVINDRADstToRootTransfert.h", 26,
                  typeid(::KVINDRADstToRootTransfert), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADstToRootTransfert::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADstToRootTransfert) );
      instance.SetNew(&new_KVINDRADstToRootTransfert);
      instance.SetNewArray(&newArray_KVINDRADstToRootTransfert);
      instance.SetDelete(&delete_KVINDRADstToRootTransfert);
      instance.SetDeleteArray(&deleteArray_KVINDRADstToRootTransfert);
      instance.SetDestructor(&destruct_KVINDRADstToRootTransfert);
      instance.SetStreamerFunc(&streamer_KVINDRADstToRootTransfert);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADstToRootTransfert*)
   {
      return GenerateInitInstanceLocal((::KVINDRADstToRootTransfert*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADstToRootTransfert*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDataPatch_INDRA_camp5_PHDcorrection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDataPatch_INDRA_camp5_PHDcorrection(void *p = 0);
   static void *newArray_KVDataPatch_INDRA_camp5_PHDcorrection(Long_t size, void *p);
   static void delete_KVDataPatch_INDRA_camp5_PHDcorrection(void *p);
   static void deleteArray_KVDataPatch_INDRA_camp5_PHDcorrection(void *p);
   static void destruct_KVDataPatch_INDRA_camp5_PHDcorrection(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDataPatch_INDRA_camp5_PHDcorrection*)
   {
      ::KVDataPatch_INDRA_camp5_PHDcorrection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDataPatch_INDRA_camp5_PHDcorrection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDataPatch_INDRA_camp5_PHDcorrection", ::KVDataPatch_INDRA_camp5_PHDcorrection::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVDataPatch_INDRA_camp5_PHDcorrection.h", 10,
                  typeid(::KVDataPatch_INDRA_camp5_PHDcorrection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDataPatch_INDRA_camp5_PHDcorrection::Dictionary, isa_proxy, 4,
                  sizeof(::KVDataPatch_INDRA_camp5_PHDcorrection) );
      instance.SetNew(&new_KVDataPatch_INDRA_camp5_PHDcorrection);
      instance.SetNewArray(&newArray_KVDataPatch_INDRA_camp5_PHDcorrection);
      instance.SetDelete(&delete_KVDataPatch_INDRA_camp5_PHDcorrection);
      instance.SetDeleteArray(&deleteArray_KVDataPatch_INDRA_camp5_PHDcorrection);
      instance.SetDestructor(&destruct_KVDataPatch_INDRA_camp5_PHDcorrection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDataPatch_INDRA_camp5_PHDcorrection*)
   {
      return GenerateInitInstanceLocal((::KVDataPatch_INDRA_camp5_PHDcorrection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDataPatch_INDRA_camp5_PHDcorrection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAGeneDataAnalyser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAGeneDataAnalyser(void *p = 0);
   static void *newArray_KVINDRAGeneDataAnalyser(Long_t size, void *p);
   static void delete_KVINDRAGeneDataAnalyser(void *p);
   static void deleteArray_KVINDRAGeneDataAnalyser(void *p);
   static void destruct_KVINDRAGeneDataAnalyser(void *p);
   static void streamer_KVINDRAGeneDataAnalyser(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAGeneDataAnalyser*)
   {
      ::KVINDRAGeneDataAnalyser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAGeneDataAnalyser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAGeneDataAnalyser", ::KVINDRAGeneDataAnalyser::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVINDRAGeneDataAnalyser.h", 16,
                  typeid(::KVINDRAGeneDataAnalyser), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAGeneDataAnalyser::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRAGeneDataAnalyser) );
      instance.SetNew(&new_KVINDRAGeneDataAnalyser);
      instance.SetNewArray(&newArray_KVINDRAGeneDataAnalyser);
      instance.SetDelete(&delete_KVINDRAGeneDataAnalyser);
      instance.SetDeleteArray(&deleteArray_KVINDRAGeneDataAnalyser);
      instance.SetDestructor(&destruct_KVINDRAGeneDataAnalyser);
      instance.SetStreamerFunc(&streamer_KVINDRAGeneDataAnalyser);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAGeneDataAnalyser*)
   {
      return GenerateInitInstanceLocal((::KVINDRAGeneDataAnalyser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAGeneDataAnalyser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAGeneDataSelector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAGeneDataSelector(void *p = 0);
   static void *newArray_KVINDRAGeneDataSelector(Long_t size, void *p);
   static void delete_KVINDRAGeneDataSelector(void *p);
   static void deleteArray_KVINDRAGeneDataSelector(void *p);
   static void destruct_KVINDRAGeneDataSelector(void *p);
   static void streamer_KVINDRAGeneDataSelector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAGeneDataSelector*)
   {
      ::KVINDRAGeneDataSelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAGeneDataSelector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAGeneDataSelector", ::KVINDRAGeneDataSelector::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/analysis/KVINDRAGeneDataSelector.h", 19,
                  typeid(::KVINDRAGeneDataSelector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAGeneDataSelector::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRAGeneDataSelector) );
      instance.SetNew(&new_KVINDRAGeneDataSelector);
      instance.SetNewArray(&newArray_KVINDRAGeneDataSelector);
      instance.SetDelete(&delete_KVINDRAGeneDataSelector);
      instance.SetDeleteArray(&deleteArray_KVINDRAGeneDataSelector);
      instance.SetDestructor(&destruct_KVINDRAGeneDataSelector);
      instance.SetStreamerFunc(&streamer_KVINDRAGeneDataSelector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAGeneDataSelector*)
   {
      return GenerateInitInstanceLocal((::KVINDRAGeneDataSelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAGeneDataSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVINDRARawDataAnalyser::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRARawDataAnalyser::Class_Name()
{
   return "KVINDRARawDataAnalyser";
}

//______________________________________________________________________________
const char *KVINDRARawDataAnalyser::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARawDataAnalyser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRARawDataAnalyser::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARawDataAnalyser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRARawDataAnalyser::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARawDataAnalyser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRARawDataAnalyser::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARawDataAnalyser*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSelector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSelector::Class_Name()
{
   return "KVSelector";
}

//______________________________________________________________________________
const char *KVSelector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSelector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSelector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSelector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSelector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataSelector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataSelector::Class_Name()
{
   return "KVDataSelector";
}

//______________________________________________________________________________
const char *KVDataSelector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataSelector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataSelector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataSelector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataSelector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAReconIdent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAReconIdent::Class_Name()
{
   return "KVINDRAReconIdent";
}

//______________________________________________________________________________
const char *KVINDRAReconIdent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconIdent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAReconIdent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconIdent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAReconIdent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconIdent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAReconIdent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconIdent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVReconIdent_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVReconIdent_e475s::Class_Name()
{
   return "KVReconIdent_e475s";
}

//______________________________________________________________________________
const char *KVReconIdent_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconIdent_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVReconIdent_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconIdent_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVReconIdent_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconIdent_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVReconIdent_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVReconIdent_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAReconDataAnalyser::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAReconDataAnalyser::Class_Name()
{
   return "KVINDRAReconDataAnalyser";
}

//______________________________________________________________________________
const char *KVINDRAReconDataAnalyser::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconDataAnalyser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAReconDataAnalyser::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconDataAnalyser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAReconDataAnalyser::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconDataAnalyser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAReconDataAnalyser::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconDataAnalyser*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAReconRoot::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAReconRoot::Class_Name()
{
   return "KVINDRAReconRoot";
}

//______________________________________________________________________________
const char *KVINDRAReconRoot::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconRoot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAReconRoot::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconRoot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAReconRoot::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconRoot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAReconRoot::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconRoot*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRARawDataReconstructor::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRARawDataReconstructor::Class_Name()
{
   return "KVINDRARawDataReconstructor";
}

//______________________________________________________________________________
const char *KVINDRARawDataReconstructor::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARawDataReconstructor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRARawDataReconstructor::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARawDataReconstructor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRARawDataReconstructor::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARawDataReconstructor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRARawDataReconstructor::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARawDataReconstructor*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataPatch_CorrectEtalonModuleIDCode::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataPatch_CorrectEtalonModuleIDCode::Class_Name()
{
   return "KVDataPatch_CorrectEtalonModuleIDCode";
}

//______________________________________________________________________________
const char *KVDataPatch_CorrectEtalonModuleIDCode::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch_CorrectEtalonModuleIDCode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataPatch_CorrectEtalonModuleIDCode::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch_CorrectEtalonModuleIDCode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataPatch_CorrectEtalonModuleIDCode::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch_CorrectEtalonModuleIDCode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataPatch_CorrectEtalonModuleIDCode::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch_CorrectEtalonModuleIDCode*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAIdentRoot::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAIdentRoot::Class_Name()
{
   return "KVINDRAIdentRoot";
}

//______________________________________________________________________________
const char *KVINDRAIdentRoot::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAIdentRoot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAIdentRoot::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAIdentRoot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAIdentRoot::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAIdentRoot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAIdentRoot::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAIdentRoot*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADstToRootTransfert::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADstToRootTransfert::Class_Name()
{
   return "KVINDRADstToRootTransfert";
}

//______________________________________________________________________________
const char *KVINDRADstToRootTransfert::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADstToRootTransfert*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADstToRootTransfert::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADstToRootTransfert*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADstToRootTransfert::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADstToRootTransfert*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADstToRootTransfert::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADstToRootTransfert*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDataPatch_INDRA_camp5_PHDcorrection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDataPatch_INDRA_camp5_PHDcorrection::Class_Name()
{
   return "KVDataPatch_INDRA_camp5_PHDcorrection";
}

//______________________________________________________________________________
const char *KVDataPatch_INDRA_camp5_PHDcorrection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch_INDRA_camp5_PHDcorrection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDataPatch_INDRA_camp5_PHDcorrection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch_INDRA_camp5_PHDcorrection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDataPatch_INDRA_camp5_PHDcorrection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch_INDRA_camp5_PHDcorrection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDataPatch_INDRA_camp5_PHDcorrection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDataPatch_INDRA_camp5_PHDcorrection*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAGeneDataAnalyser::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAGeneDataAnalyser::Class_Name()
{
   return "KVINDRAGeneDataAnalyser";
}

//______________________________________________________________________________
const char *KVINDRAGeneDataAnalyser::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAGeneDataAnalyser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAGeneDataAnalyser::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAGeneDataAnalyser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAGeneDataAnalyser::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAGeneDataAnalyser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAGeneDataAnalyser::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAGeneDataAnalyser*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAGeneDataSelector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAGeneDataSelector::Class_Name()
{
   return "KVINDRAGeneDataSelector";
}

//______________________________________________________________________________
const char *KVINDRAGeneDataSelector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAGeneDataSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAGeneDataSelector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAGeneDataSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAGeneDataSelector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAGeneDataSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAGeneDataSelector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAGeneDataSelector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVINDRARawDataAnalyser::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRARawDataAnalyser.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVRawDataAnalyser::Streamer(R__b);
      R__b >> INDRA_events;
      R__b >> gene_events;
      R__b >> other_events;
      R__b.CheckByteCount(R__s, R__c, KVINDRARawDataAnalyser::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRARawDataAnalyser::IsA(), kTRUE);
      KVRawDataAnalyser::Streamer(R__b);
      R__b << INDRA_events;
      R__b << gene_events;
      R__b << other_events;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRARawDataAnalyser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRARawDataAnalyser.
      TClass *R__cl = ::KVINDRARawDataAnalyser::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "INDRA_events", &INDRA_events);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gene_events", &gene_events);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "other_events", &other_events);
      KVRawDataAnalyser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_KVINDRARawDataAnalyser(void *p) {
      delete ((::KVINDRARawDataAnalyser*)p);
   }
   static void deleteArray_KVINDRARawDataAnalyser(void *p) {
      delete [] ((::KVINDRARawDataAnalyser*)p);
   }
   static void destruct_KVINDRARawDataAnalyser(void *p) {
      typedef ::KVINDRARawDataAnalyser current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRARawDataAnalyser(TBuffer &buf, void *obj) {
      ((::KVINDRARawDataAnalyser*)obj)->::KVINDRARawDataAnalyser::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRARawDataAnalyser

//______________________________________________________________________________
void KVINDRARawDataReconstructor::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRARawDataReconstructor.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVINDRARawDataAnalyser::Streamer(R__b);
      R__b >> file;
      R__b >> tree;
      R__b >> genetree;
      R__b >> rawtree;
      R__b >> recev;
      R__b >> nb_recon;
      taskname.Streamer(R__b);
      datatype.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVINDRARawDataReconstructor::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRARawDataReconstructor::IsA(), kTRUE);
      KVINDRARawDataAnalyser::Streamer(R__b);
      R__b << file;
      R__b << tree;
      R__b << genetree;
      R__b << rawtree;
      R__b << recev;
      R__b << nb_recon;
      taskname.Streamer(R__b);
      datatype.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRARawDataReconstructor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRARawDataReconstructor.
      TClass *R__cl = ::KVINDRARawDataReconstructor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree", &tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*genetree", &genetree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rawtree", &rawtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*recev", &recev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nb_recon", &nb_recon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "taskname", &taskname);
      R__insp.InspectMember(taskname, "taskname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "datatype", &datatype);
      R__insp.InspectMember(datatype, "datatype.");
      KVINDRARawDataAnalyser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRARawDataReconstructor(void *p) {
      return  p ? new(p) ::KVINDRARawDataReconstructor : new ::KVINDRARawDataReconstructor;
   }
   static void *newArray_KVINDRARawDataReconstructor(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRARawDataReconstructor[nElements] : new ::KVINDRARawDataReconstructor[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRARawDataReconstructor(void *p) {
      delete ((::KVINDRARawDataReconstructor*)p);
   }
   static void deleteArray_KVINDRARawDataReconstructor(void *p) {
      delete [] ((::KVINDRARawDataReconstructor*)p);
   }
   static void destruct_KVINDRARawDataReconstructor(void *p) {
      typedef ::KVINDRARawDataReconstructor current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRARawDataReconstructor(TBuffer &buf, void *obj) {
      ((::KVINDRARawDataReconstructor*)obj)->::KVINDRARawDataReconstructor::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRARawDataReconstructor

//______________________________________________________________________________
void KVINDRADstToRootTransfert::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADstToRootTransfert.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDataAnalyser::Streamer(R__b);
      R__b >> mt;
      R__b >> de1;
      R__b >> de2;
      R__b >> de3;
      R__b >> de4;
      R__b >> de5;
      R__b.ReadStaticArray((double*)canal);
      R__b.ReadStaticArray((int*)code_idf);
      R__b >> identifying_telescope;
      R__b >> camp1;
      R__b >> camp2;
      R__b >> camp4;
      R__b >> events_in_file;
      R__b >> events_good;
      R__b >> events_read;
      R__b >> data_tree;
      R__b >> rawtree;
      R__b >> fRunNumber;
      R__b >> fCampNumber;
      req_time.Streamer(R__b);
      req_mem.Streamer(R__b);
      req_scratch.Streamer(R__b);
      cur_time.Streamer(R__b);
      cur_mem.Streamer(R__b);
      cur_scratch.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVINDRADstToRootTransfert::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADstToRootTransfert::IsA(), kTRUE);
      KVDataAnalyser::Streamer(R__b);
      R__b << mt;
      R__b << de1;
      R__b << de2;
      R__b << de3;
      R__b << de4;
      R__b << de5;
      R__b.WriteArray(canal, 16);
      R__b.WriteArray(code_idf, 4);
      R__b << identifying_telescope;
      R__b << camp1;
      R__b << camp2;
      R__b << camp4;
      R__b << events_in_file;
      R__b << events_good;
      R__b << events_read;
      R__b << data_tree;
      R__b << rawtree;
      R__b << fRunNumber;
      R__b << fCampNumber;
      req_time.Streamer(R__b);
      req_mem.Streamer(R__b);
      req_scratch.Streamer(R__b);
      cur_time.Streamer(R__b);
      cur_mem.Streamer(R__b);
      cur_scratch.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADstToRootTransfert::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADstToRootTransfert.
      TClass *R__cl = ::KVINDRADstToRootTransfert::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbParFired", &NbParFired);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParVal[3000]", ParVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParNum[3000]", ParNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*params", &params);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mt", &mt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "de1", &de1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "de2", &de2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "de3", &de3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "de4", &de4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "de5", &de5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "canal[16]", canal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "code_idf[4]", code_idf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*identifying_telescope", &identifying_telescope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camp1", &camp1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camp2", &camp2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camp4", &camp4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "events_in_file", &events_in_file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "events_good", &events_good);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "events_read", &events_read);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data_tree", &data_tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rawtree", &rawtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCampNumber", &fCampNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "req_time", &req_time);
      R__insp.InspectMember(req_time, "req_time.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "req_mem", &req_mem);
      R__insp.InspectMember(req_mem, "req_mem.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "req_scratch", &req_scratch);
      R__insp.InspectMember(req_scratch, "req_scratch.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cur_time", &cur_time);
      R__insp.InspectMember(cur_time, "cur_time.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cur_mem", &cur_mem);
      R__insp.InspectMember(cur_mem, "cur_mem.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cur_scratch", &cur_scratch);
      R__insp.InspectMember(cur_scratch, "cur_scratch.");
      KVDataAnalyser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADstToRootTransfert(void *p) {
      return  p ? new(p) ::KVINDRADstToRootTransfert : new ::KVINDRADstToRootTransfert;
   }
   static void *newArray_KVINDRADstToRootTransfert(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADstToRootTransfert[nElements] : new ::KVINDRADstToRootTransfert[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADstToRootTransfert(void *p) {
      delete ((::KVINDRADstToRootTransfert*)p);
   }
   static void deleteArray_KVINDRADstToRootTransfert(void *p) {
      delete [] ((::KVINDRADstToRootTransfert*)p);
   }
   static void destruct_KVINDRADstToRootTransfert(void *p) {
      typedef ::KVINDRADstToRootTransfert current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADstToRootTransfert(TBuffer &buf, void *obj) {
      ((::KVINDRADstToRootTransfert*)obj)->::KVINDRADstToRootTransfert::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADstToRootTransfert

//______________________________________________________________________________
void KVINDRAReconDataAnalyser::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAReconDataAnalyser.

   KVDataAnalyser::Streamer(R__b);
}

//______________________________________________________________________________
void KVINDRAReconDataAnalyser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAReconDataAnalyser.
      TClass *R__cl = ::KVINDRAReconDataAnalyser::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSelector", &fDataSelector);
      R__insp.InspectMember(fDataSelector, "fDataSelector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSelectorImp", &fDataSelectorImp);
      R__insp.InspectMember(fDataSelectorImp, "fDataSelectorImp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSelectorDec", &fDataSelectorDec);
      R__insp.InspectMember(fDataSelectorDec, "fDataSelectorDec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSelector", &fSelector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*theChain", &theChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*theRawData", &theRawData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbParFired", &NbParFired);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ParVal", &ParVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ParNum", &ParNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*parList", &parList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Entry", &Entry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalEntriesToRead", &TotalEntriesToRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataVersion", &fDataVersion);
      R__insp.InspectMember(fDataVersion, "fDataVersion.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSeries", &fDataSeries);
      R__insp.InspectMember(fDataSeries, "fDataSeries.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataReleaseNum", &fDataReleaseNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRustines", &fRustines);
      R__insp.InspectMember(fRustines, "fRustines.");
      KVDataAnalyser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAReconDataAnalyser(void *p) {
      return  p ? new(p) ::KVINDRAReconDataAnalyser : new ::KVINDRAReconDataAnalyser;
   }
   static void *newArray_KVINDRAReconDataAnalyser(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAReconDataAnalyser[nElements] : new ::KVINDRAReconDataAnalyser[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAReconDataAnalyser(void *p) {
      delete ((::KVINDRAReconDataAnalyser*)p);
   }
   static void deleteArray_KVINDRAReconDataAnalyser(void *p) {
      delete [] ((::KVINDRAReconDataAnalyser*)p);
   }
   static void destruct_KVINDRAReconDataAnalyser(void *p) {
      typedef ::KVINDRAReconDataAnalyser current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRAReconDataAnalyser(TBuffer &buf, void *obj) {
      ((::KVINDRAReconDataAnalyser*)obj)->::KVINDRAReconDataAnalyser::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRAReconDataAnalyser

//______________________________________________________________________________
void KVINDRAGeneDataSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAGeneDataSelector.

   TSelector::Streamer(R__b);
}

//______________________________________________________________________________
void KVINDRAGeneDataSelector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAGeneDataSelector.
      TClass *R__cl = ::KVINDRAGeneDataSelector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RunNumber", &RunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventNumber", &EventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TriggerInfo", &TriggerInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_RunNumber", &b_RunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_EventNumber", &b_EventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_TriggerInfo", &b_TriggerInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTreeEntry", &fTreeEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "needToCallEndRun", &needToCallEndRun);
      TSelector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAGeneDataSelector(void *p) {
      return  p ? new(p) ::KVINDRAGeneDataSelector : new ::KVINDRAGeneDataSelector;
   }
   static void *newArray_KVINDRAGeneDataSelector(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAGeneDataSelector[nElements] : new ::KVINDRAGeneDataSelector[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAGeneDataSelector(void *p) {
      delete ((::KVINDRAGeneDataSelector*)p);
   }
   static void deleteArray_KVINDRAGeneDataSelector(void *p) {
      delete [] ((::KVINDRAGeneDataSelector*)p);
   }
   static void destruct_KVINDRAGeneDataSelector(void *p) {
      typedef ::KVINDRAGeneDataSelector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRAGeneDataSelector(TBuffer &buf, void *obj) {
      ((::KVINDRAGeneDataSelector*)obj)->::KVINDRAGeneDataSelector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRAGeneDataSelector

//______________________________________________________________________________
void KVINDRAGeneDataAnalyser::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAGeneDataAnalyser.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDataAnalyser::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVINDRAGeneDataAnalyser::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRAGeneDataAnalyser::IsA(), kTRUE);
      KVDataAnalyser::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRAGeneDataAnalyser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAGeneDataAnalyser.
      TClass *R__cl = ::KVINDRAGeneDataAnalyser::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDataAnalyser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAGeneDataAnalyser(void *p) {
      return  p ? new(p) ::KVINDRAGeneDataAnalyser : new ::KVINDRAGeneDataAnalyser;
   }
   static void *newArray_KVINDRAGeneDataAnalyser(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAGeneDataAnalyser[nElements] : new ::KVINDRAGeneDataAnalyser[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAGeneDataAnalyser(void *p) {
      delete ((::KVINDRAGeneDataAnalyser*)p);
   }
   static void deleteArray_KVINDRAGeneDataAnalyser(void *p) {
      delete [] ((::KVINDRAGeneDataAnalyser*)p);
   }
   static void destruct_KVINDRAGeneDataAnalyser(void *p) {
      typedef ::KVINDRAGeneDataAnalyser current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRAGeneDataAnalyser(TBuffer &buf, void *obj) {
      ((::KVINDRAGeneDataAnalyser*)obj)->::KVINDRAGeneDataAnalyser::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRAGeneDataAnalyser

//______________________________________________________________________________
void KVSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSelector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVSelector::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVSelector::Class(),this);
   }
}

//______________________________________________________________________________
void KVSelector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSelector.
      TClass *R__cl = ::KVSelector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "callnotif", &callnotif);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totentry", &totentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbTreeEntry", &NbTreeEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data", &data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_data", &b_data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gvlist", &gvlist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lhisto", &lhisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ltree", &ltree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimer", &fTimer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTreeEntry", &fTreeEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvtList", &fEvtList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeOffset", &fTreeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentTreeNumber", &fCurrentTreeNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSelector", &fDataSelector);
      R__insp.InspectMember(fDataSelector, "fDataSelector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKVDataSelector", &fKVDataSelector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "needToSelect", &needToSelect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTEVLexist", &fTEVLexist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "needToCallEndRun", &needToCallEndRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentRun", &fCurrentRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewMassFormula", &fNewMassFormula);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartCond", &fPartCond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeneData", &fGeneData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawData", &fRawData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOptionList", &fOptionList);
      R__insp.InspectMember(fOptionList, "fOptionList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dataselector_lock", &dataselector_lock);
      R__insp.InspectMember(dataselector_lock, "dataselector_lock.");
      TSelector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSelector(void *p) {
      return  p ? new(p) ::KVSelector : new ::KVSelector;
   }
   static void *newArray_KVSelector(Long_t nElements, void *p) {
      return p ? new(p) ::KVSelector[nElements] : new ::KVSelector[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSelector(void *p) {
      delete ((::KVSelector*)p);
   }
   static void deleteArray_KVSelector(void *p) {
      delete [] ((::KVSelector*)p);
   }
   static void destruct_KVSelector(void *p) {
      typedef ::KVSelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVSelector

//______________________________________________________________________________
void KVDataSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataSelector.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVBase::Streamer(R__b);
      R__b >> kvsel;
      R__b >> evtl;
      R__b.CheckByteCount(R__s, R__c, KVDataSelector::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDataSelector::IsA(), kTRUE);
      KVBase::Streamer(R__b);
      R__b << kvsel;
      R__b << evtl;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDataSelector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataSelector.
      TClass *R__cl = ::KVDataSelector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kvsel", &kvsel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evtl", &evtl);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataSelector(void *p) {
      return  p ? new(p) ::KVDataSelector : new ::KVDataSelector;
   }
   static void *newArray_KVDataSelector(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataSelector[nElements] : new ::KVDataSelector[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataSelector(void *p) {
      delete ((::KVDataSelector*)p);
   }
   static void deleteArray_KVDataSelector(void *p) {
      delete [] ((::KVDataSelector*)p);
   }
   static void destruct_KVDataSelector(void *p) {
      typedef ::KVDataSelector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDataSelector(TBuffer &buf, void *obj) {
      ((::KVDataSelector*)obj)->::KVDataSelector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDataSelector

//______________________________________________________________________________
void KVINDRAReconIdent::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAReconIdent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAReconIdent::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAReconIdent::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAReconIdent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAReconIdent.
      TClass *R__cl = ::KVINDRAReconIdent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIdentFile", &fIdentFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIdentTree", &fIdentTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      KVSelector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAReconIdent(void *p) {
      return  p ? new(p) ::KVINDRAReconIdent : new ::KVINDRAReconIdent;
   }
   static void *newArray_KVINDRAReconIdent(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAReconIdent[nElements] : new ::KVINDRAReconIdent[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAReconIdent(void *p) {
      delete ((::KVINDRAReconIdent*)p);
   }
   static void deleteArray_KVINDRAReconIdent(void *p) {
      delete [] ((::KVINDRAReconIdent*)p);
   }
   static void destruct_KVINDRAReconIdent(void *p) {
      typedef ::KVINDRAReconIdent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAReconIdent

//______________________________________________________________________________
void KVReconIdent_e475s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVReconIdent_e475s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVReconIdent_e475s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVReconIdent_e475s::Class(),this);
   }
}

//______________________________________________________________________________
void KVReconIdent_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVReconIdent_e475s.
      TClass *R__cl = ::KVReconIdent_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRAReconIdent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVReconIdent_e475s(void *p) {
      return  p ? new(p) ::KVReconIdent_e475s : new ::KVReconIdent_e475s;
   }
   static void *newArray_KVReconIdent_e475s(Long_t nElements, void *p) {
      return p ? new(p) ::KVReconIdent_e475s[nElements] : new ::KVReconIdent_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVReconIdent_e475s(void *p) {
      delete ((::KVReconIdent_e475s*)p);
   }
   static void deleteArray_KVReconIdent_e475s(void *p) {
      delete [] ((::KVReconIdent_e475s*)p);
   }
   static void destruct_KVReconIdent_e475s(void *p) {
      typedef ::KVReconIdent_e475s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVReconIdent_e475s

//______________________________________________________________________________
void KVINDRAIdentRoot::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAIdentRoot.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAIdentRoot::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAIdentRoot::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAIdentRoot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAIdentRoot.
      TClass *R__cl = ::KVINDRAIdentRoot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "codes[15]", codes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status[4]", status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Acodes[15]", Acodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Astatus[4]", Astatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIdentFile", &fIdentFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIdentTree", &fIdentTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      KVSelector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAIdentRoot(void *p) {
      return  p ? new(p) ::KVINDRAIdentRoot : new ::KVINDRAIdentRoot;
   }
   static void *newArray_KVINDRAIdentRoot(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAIdentRoot[nElements] : new ::KVINDRAIdentRoot[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAIdentRoot(void *p) {
      delete ((::KVINDRAIdentRoot*)p);
   }
   static void deleteArray_KVINDRAIdentRoot(void *p) {
      delete [] ((::KVINDRAIdentRoot*)p);
   }
   static void destruct_KVINDRAIdentRoot(void *p) {
      typedef ::KVINDRAIdentRoot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAIdentRoot

//______________________________________________________________________________
void KVINDRAReconRoot::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAReconRoot.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAReconRoot::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAReconRoot::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAReconRoot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAReconRoot.
      TClass *R__cl = ::KVINDRAReconRoot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "codes[15]", codes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status[4]", status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Acodes[15]", Acodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Astatus[4]", Astatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIdentFile", &fIdentFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIdentTree", &fIdentTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      KVSelector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAReconRoot(void *p) {
      return  p ? new(p) ::KVINDRAReconRoot : new ::KVINDRAReconRoot;
   }
   static void *newArray_KVINDRAReconRoot(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAReconRoot[nElements] : new ::KVINDRAReconRoot[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAReconRoot(void *p) {
      delete ((::KVINDRAReconRoot*)p);
   }
   static void deleteArray_KVINDRAReconRoot(void *p) {
      delete [] ((::KVINDRAReconRoot*)p);
   }
   static void destruct_KVINDRAReconRoot(void *p) {
      typedef ::KVINDRAReconRoot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAReconRoot

//______________________________________________________________________________
void KVDataPatch_INDRA_camp5_PHDcorrection::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataPatch_INDRA_camp5_PHDcorrection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataPatch_INDRA_camp5_PHDcorrection::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataPatch_INDRA_camp5_PHDcorrection::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataPatch_INDRA_camp5_PHDcorrection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataPatch_INDRA_camp5_PHDcorrection.
      TClass *R__cl = ::KVDataPatch_INDRA_camp5_PHDcorrection::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDataPatch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataPatch_INDRA_camp5_PHDcorrection(void *p) {
      return  p ? new(p) ::KVDataPatch_INDRA_camp5_PHDcorrection : new ::KVDataPatch_INDRA_camp5_PHDcorrection;
   }
   static void *newArray_KVDataPatch_INDRA_camp5_PHDcorrection(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataPatch_INDRA_camp5_PHDcorrection[nElements] : new ::KVDataPatch_INDRA_camp5_PHDcorrection[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataPatch_INDRA_camp5_PHDcorrection(void *p) {
      delete ((::KVDataPatch_INDRA_camp5_PHDcorrection*)p);
   }
   static void deleteArray_KVDataPatch_INDRA_camp5_PHDcorrection(void *p) {
      delete [] ((::KVDataPatch_INDRA_camp5_PHDcorrection*)p);
   }
   static void destruct_KVDataPatch_INDRA_camp5_PHDcorrection(void *p) {
      typedef ::KVDataPatch_INDRA_camp5_PHDcorrection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataPatch_INDRA_camp5_PHDcorrection

//______________________________________________________________________________
void KVDataPatch_CorrectEtalonModuleIDCode::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDataPatch_CorrectEtalonModuleIDCode.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDataPatch_CorrectEtalonModuleIDCode::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDataPatch_CorrectEtalonModuleIDCode::Class(),this);
   }
}

//______________________________________________________________________________
void KVDataPatch_CorrectEtalonModuleIDCode::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDataPatch_CorrectEtalonModuleIDCode.
      TClass *R__cl = ::KVDataPatch_CorrectEtalonModuleIDCode::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      KVDataPatch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDataPatch_CorrectEtalonModuleIDCode(void *p) {
      return  p ? new(p) ::KVDataPatch_CorrectEtalonModuleIDCode : new ::KVDataPatch_CorrectEtalonModuleIDCode;
   }
   static void *newArray_KVDataPatch_CorrectEtalonModuleIDCode(Long_t nElements, void *p) {
      return p ? new(p) ::KVDataPatch_CorrectEtalonModuleIDCode[nElements] : new ::KVDataPatch_CorrectEtalonModuleIDCode[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDataPatch_CorrectEtalonModuleIDCode(void *p) {
      delete ((::KVDataPatch_CorrectEtalonModuleIDCode*)p);
   }
   static void deleteArray_KVDataPatch_CorrectEtalonModuleIDCode(void *p) {
      delete [] ((::KVDataPatch_CorrectEtalonModuleIDCode*)p);
   }
   static void destruct_KVDataPatch_CorrectEtalonModuleIDCode(void *p) {
      typedef ::KVDataPatch_CorrectEtalonModuleIDCode current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDataPatch_CorrectEtalonModuleIDCode

/********************************************************
* G__KVIndraanalysis.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVIndraanalysis();

extern "C" void G__set_cpp_environmentG__KVIndraanalysis() {
  G__cpp_reset_tagtableG__KVIndraanalysis();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVIndraanalysis() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVINDRARawDataAnalyser */
static int G__G__KVIndraanalysis_721_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRARawDataAnalyser*) G__getstructoffset())->GetRawDataReader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      KVINDRARawDataAnalyser::Make((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      KVINDRARawDataAnalyser::Make();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRARawDataAnalyser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARawDataAnalyser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRARawDataAnalyser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRARawDataAnalyser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARawDataAnalyser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARawDataAnalyser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARawDataAnalyser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARawDataAnalyser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_721_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARawDataAnalyser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRARawDataAnalyser G__TKVINDRARawDataAnalyser;
static int G__G__KVIndraanalysis_721_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRARawDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRARawDataAnalyser*) (soff+(sizeof(KVINDRARawDataAnalyser)*i)))->~G__TKVINDRARawDataAnalyser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRARawDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRARawDataAnalyser*) (soff))->~G__TKVINDRARawDataAnalyser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSelector */
static int G__G__KVIndraanalysis_889_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSelector((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVSelector((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVSelector[n];
       } else {
         p = new((void*) gvp) KVSelector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVSelector;
       } else {
         p = new((void*) gvp) KVSelector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSelector*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVSelector*) G__getstructoffset())->GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->InitAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->InitRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVSelector*) G__getstructoffset())->Analysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->EndRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->EndAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->SetGVList((KVGVList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSelector*) G__getstructoffset())->GetGVList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->AddGV((KVVarGlob*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSelector*) G__getstructoffset())->AddGV((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVSelector*) G__getstructoffset())->GetGV((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->RecalculateGlobalVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const KVSelector*) G__getstructoffset())->GetTreeEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->BuildEventList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVSelector*) G__getstructoffset())->AtEndOfRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVSelector*) G__getstructoffset())->SetDataSelector((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVSelector*) G__getstructoffset())->SetDataSelector();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVSelector*) G__getstructoffset())->GetDataSelector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->LoadDataSelector();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->SaveCurrentDataSelection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVSelector*) G__getstructoffset())->GetDataSelectorFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->ChangeFragmentMasses((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->SetParticleConditions(*(KVParticleCondition*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSelector*) G__getstructoffset())->GetGeneData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSelector*) G__getstructoffset())->GetRawData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      KVSelector::Make((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      KVSelector::Make();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->CreateHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->CreateTrees();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((KVSelector*) G__getstructoffset())->FillHisto(*((KVString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((KVSelector*) G__getstructoffset())->FillHisto(*((KVString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVSelector*) G__getstructoffset())->FillHisto(*((KVString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVSelector*) G__getstructoffset())->FillHisto(*((KVString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVSelector*) G__getstructoffset())->FillTree(*((KVString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((KVSelector*) G__getstructoffset())->FillTree();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSelector*) G__getstructoffset())->GetHistoList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSelector*) G__getstructoffset())->GetTreeList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSelector*) G__getstructoffset())->GetHisto((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVSelector*) G__getstructoffset())->GetTree((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVSelector*) G__getstructoffset())->WriteHistoToFile(*((KVString*) G__int(libp->para[0])), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVSelector*) G__getstructoffset())->WriteHistoToFile(*((KVString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((KVSelector*) G__getstructoffset())->WriteHistoToFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((KVSelector*) G__getstructoffset())->WriteTreeToFile(*((KVString*) G__int(libp->para[0])), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVSelector*) G__getstructoffset())->WriteTreeToFile(*((KVString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((KVSelector*) G__getstructoffset())->WriteTreeToFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->SetOpt((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVSelector*) G__getstructoffset())->IsOptGiven((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const KVSelector*) G__getstructoffset())->GetOpt((const Char_t*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->UnsetOpt((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSelector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSelector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_889_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSelector G__TKVSelector;
static int G__G__KVIndraanalysis_889_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSelector*) (soff+(sizeof(KVSelector)*i)))->~G__TKVSelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSelector*) (soff))->~G__TKVSelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataSelector */
static int G__G__KVIndraanalysis_890_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataSelector[n];
     } else {
       p = new((void*) gvp) KVDataSelector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataSelector;
     } else {
       p = new((void*) gvp) KVDataSelector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDataSelector*) G__getstructoffset())->SetKVSelector((KVSelector*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDataSelector*) G__getstructoffset())->SetKVSelector();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataSelector*) G__getstructoffset())->GetKVSelector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSelector*) G__getstructoffset())->Reset((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataSelector*) G__getstructoffset())->ProcessCurrentEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDataSelector*) G__getstructoffset())->GetTEventList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSelector*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVDataSelector*) G__getstructoffset())->SelectCurrentEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataSelector::MakeClass((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataSelector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataSelector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_890_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraanalysis_890_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDataSelector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDataSelector(*(KVDataSelector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataSelector G__TKVDataSelector;
static int G__G__KVIndraanalysis_890_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataSelector*) (soff+(sizeof(KVDataSelector)*i)))->~G__TKVDataSelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataSelector*) (soff))->~G__TKVDataSelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraanalysis_890_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataSelector* dest = (KVDataSelector*) G__getstructoffset();
   *dest = *(KVDataSelector*) libp->para[0].ref;
   const KVDataSelector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAReconIdent */
static int G__G__KVIndraanalysis_942_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAReconIdent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconIdent[n];
     } else {
       p = new((void*) gvp) KVINDRAReconIdent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconIdent;
     } else {
       p = new((void*) gvp) KVINDRAReconIdent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconIdent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_942_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAReconIdent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_942_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconIdent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_942_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAReconIdent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_942_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAReconIdent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_942_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconIdent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_942_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconIdent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_942_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconIdent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_942_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconIdent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_942_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconIdent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAReconIdent G__TKVINDRAReconIdent;
static int G__G__KVIndraanalysis_942_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAReconIdent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAReconIdent*) (soff+(sizeof(KVINDRAReconIdent)*i)))->~G__TKVINDRAReconIdent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAReconIdent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAReconIdent*) (soff))->~G__TKVINDRAReconIdent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVReconIdent_e475s */
static int G__G__KVIndraanalysis_943_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVReconIdent_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVReconIdent_e475s[n];
     } else {
       p = new((void*) gvp) KVReconIdent_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVReconIdent_e475s;
     } else {
       p = new((void*) gvp) KVReconIdent_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVReconIdent_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_943_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVReconIdent_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_943_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVReconIdent_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_943_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVReconIdent_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_943_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVReconIdent_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_943_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVReconIdent_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_943_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVReconIdent_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_943_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVReconIdent_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_943_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVReconIdent_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_943_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVReconIdent_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVReconIdent_e475s G__TKVReconIdent_e475s;
static int G__G__KVIndraanalysis_943_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVReconIdent_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVReconIdent_e475s*) (soff+(sizeof(KVReconIdent_e475s)*i)))->~G__TKVReconIdent_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVReconIdent_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVReconIdent_e475s*) (soff))->~G__TKVReconIdent_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAReconDataAnalyser */
static int G__G__KVIndraanalysis_945_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAReconDataAnalyser* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconDataAnalyser[n];
     } else {
       p = new((void*) gvp) KVINDRAReconDataAnalyser[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconDataAnalyser;
     } else {
       p = new((void*) gvp) KVINDRAReconDataAnalyser;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVINDRAReconDataAnalyser*) G__getstructoffset())->SetKVDataSelector((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVINDRAReconDataAnalyser*) G__getstructoffset())->SetKVDataSelector();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVINDRAReconDataAnalyser*) G__getstructoffset())->GetKVDataSelector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconDataAnalyser*) G__getstructoffset())->ChooseKVDataSelector();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconDataAnalyser*) G__getstructoffset())->PrintTreeInfos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRAReconDataAnalyser*) G__getstructoffset())->GetReconDataTreeInfos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVString* pobj;
         const KVString xobj = ((const KVINDRAReconDataAnalyser*) G__getstructoffset())->GetDataVersion();
         pobj = new KVString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVString* pobj;
         const KVString xobj = ((const KVINDRAReconDataAnalyser*) G__getstructoffset())->GetDataSeries();
         pobj = new KVString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVINDRAReconDataAnalyser*) G__getstructoffset())->GetDataReleaseNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAReconDataAnalyser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconDataAnalyser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAReconDataAnalyser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAReconDataAnalyser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconDataAnalyser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconDataAnalyser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconDataAnalyser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconDataAnalyser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_945_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconDataAnalyser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAReconDataAnalyser G__TKVINDRAReconDataAnalyser;
static int G__G__KVIndraanalysis_945_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAReconDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAReconDataAnalyser*) (soff+(sizeof(KVINDRAReconDataAnalyser)*i)))->~G__TKVINDRAReconDataAnalyser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAReconDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAReconDataAnalyser*) (soff))->~G__TKVINDRAReconDataAnalyser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAReconRoot */
static int G__G__KVIndraanalysis_946_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAReconRoot* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconRoot[n];
     } else {
       p = new((void*) gvp) KVINDRAReconRoot[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconRoot;
     } else {
       p = new((void*) gvp) KVINDRAReconRoot;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconRoot*) G__getstructoffset())->CountStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconRoot*) G__getstructoffset())->CountCodes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAReconRoot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconRoot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAReconRoot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAReconRoot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconRoot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconRoot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconRoot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconRoot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_946_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconRoot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAReconRoot G__TKVINDRAReconRoot;
static int G__G__KVIndraanalysis_946_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAReconRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAReconRoot*) (soff+(sizeof(KVINDRAReconRoot)*i)))->~G__TKVINDRAReconRoot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAReconRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAReconRoot*) (soff))->~G__TKVINDRAReconRoot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRARawDataReconstructor */
static int G__G__KVIndraanalysis_947_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRARawDataReconstructor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRARawDataReconstructor[n];
     } else {
       p = new((void*) gvp) KVINDRARawDataReconstructor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRARawDataReconstructor;
     } else {
       p = new((void*) gvp) KVINDRARawDataReconstructor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARawDataReconstructor*) G__getstructoffset())->ExtraProcessing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRARawDataReconstructor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARawDataReconstructor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRARawDataReconstructor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRARawDataReconstructor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARawDataReconstructor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARawDataReconstructor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARawDataReconstructor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARawDataReconstructor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_947_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARawDataReconstructor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRARawDataReconstructor G__TKVINDRARawDataReconstructor;
static int G__G__KVIndraanalysis_947_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRARawDataReconstructor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRARawDataReconstructor*) (soff+(sizeof(KVINDRARawDataReconstructor)*i)))->~G__TKVINDRARawDataReconstructor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRARawDataReconstructor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRARawDataReconstructor*) (soff))->~G__TKVINDRARawDataReconstructor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataPatch_CorrectEtalonModuleIDCode */
static int G__G__KVIndraanalysis_949_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataPatch_CorrectEtalonModuleIDCode* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataPatch_CorrectEtalonModuleIDCode[n];
     } else {
       p = new((void*) gvp) KVDataPatch_CorrectEtalonModuleIDCode[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataPatch_CorrectEtalonModuleIDCode;
     } else {
       p = new((void*) gvp) KVDataPatch_CorrectEtalonModuleIDCode;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_949_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataPatch_CorrectEtalonModuleIDCode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_949_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatch_CorrectEtalonModuleIDCode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_949_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataPatch_CorrectEtalonModuleIDCode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_949_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataPatch_CorrectEtalonModuleIDCode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_949_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataPatch_CorrectEtalonModuleIDCode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_949_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatch_CorrectEtalonModuleIDCode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_949_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataPatch_CorrectEtalonModuleIDCode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_949_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatch_CorrectEtalonModuleIDCode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_949_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataPatch_CorrectEtalonModuleIDCode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraanalysis_949_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDataPatch_CorrectEtalonModuleIDCode* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDataPatch_CorrectEtalonModuleIDCode(*(KVDataPatch_CorrectEtalonModuleIDCode*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataPatch_CorrectEtalonModuleIDCode G__TKVDataPatch_CorrectEtalonModuleIDCode;
static int G__G__KVIndraanalysis_949_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataPatch_CorrectEtalonModuleIDCode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataPatch_CorrectEtalonModuleIDCode*) (soff+(sizeof(KVDataPatch_CorrectEtalonModuleIDCode)*i)))->~G__TKVDataPatch_CorrectEtalonModuleIDCode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataPatch_CorrectEtalonModuleIDCode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataPatch_CorrectEtalonModuleIDCode*) (soff))->~G__TKVDataPatch_CorrectEtalonModuleIDCode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraanalysis_949_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataPatch_CorrectEtalonModuleIDCode* dest = (KVDataPatch_CorrectEtalonModuleIDCode*) G__getstructoffset();
   *dest = *(KVDataPatch_CorrectEtalonModuleIDCode*) libp->para[0].ref;
   const KVDataPatch_CorrectEtalonModuleIDCode& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAIdentRoot */
static int G__G__KVIndraanalysis_950_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAIdentRoot* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAIdentRoot[n];
     } else {
       p = new((void*) gvp) KVINDRAIdentRoot[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAIdentRoot;
     } else {
       p = new((void*) gvp) KVINDRAIdentRoot;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAIdentRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAIdentRoot*) G__getstructoffset())->CountStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAIdentRoot*) G__getstructoffset())->CountCodes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAIdentRoot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAIdentRoot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAIdentRoot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAIdentRoot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAIdentRoot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAIdentRoot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAIdentRoot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAIdentRoot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_950_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAIdentRoot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAIdentRoot G__TKVINDRAIdentRoot;
static int G__G__KVIndraanalysis_950_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAIdentRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAIdentRoot*) (soff+(sizeof(KVINDRAIdentRoot)*i)))->~G__TKVINDRAIdentRoot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAIdentRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAIdentRoot*) (soff))->~G__TKVINDRAIdentRoot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADstToRootTransfert */
static int G__G__KVIndraanalysis_952_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADstToRootTransfert* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADstToRootTransfert[n];
     } else {
       p = new((void*) gvp) KVINDRADstToRootTransfert[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADstToRootTransfert;
     } else {
       p = new((void*) gvp) KVINDRADstToRootTransfert;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADstToRootTransfert*) G__getstructoffset())->InitRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADstToRootTransfert*) G__getstructoffset())->EndRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADstToRootTransfert*) G__getstructoffset())->DefineSHELLVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADstToRootTransfert*) G__getstructoffset())->ReadDST();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRADstToRootTransfert*) G__getstructoffset())->Code2and9and10((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRADstToRootTransfert*) G__getstructoffset())->Code3((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRADstToRootTransfert*) G__getstructoffset())->Code0((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRADstToRootTransfert*) G__getstructoffset())->Code1((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRADstToRootTransfert*) G__getstructoffset())->Code7((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRADstToRootTransfert*) G__getstructoffset())->Code4and5and6and8((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADstToRootTransfert*) G__getstructoffset())->lire_evt(*(ifstream*) libp->para[0].ref, (KVINDRAReconEvent*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADstToRootTransfert*) G__getstructoffset())->FillRawTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADstToRootTransfert::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADstToRootTransfert::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADstToRootTransfert::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADstToRootTransfert::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADstToRootTransfert*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADstToRootTransfert::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADstToRootTransfert::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADstToRootTransfert::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_952_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADstToRootTransfert::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraanalysis_952_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRADstToRootTransfert* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRADstToRootTransfert(*(KVINDRADstToRootTransfert*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADstToRootTransfert G__TKVINDRADstToRootTransfert;
static int G__G__KVIndraanalysis_952_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADstToRootTransfert*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADstToRootTransfert*) (soff+(sizeof(KVINDRADstToRootTransfert)*i)))->~G__TKVINDRADstToRootTransfert();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADstToRootTransfert*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADstToRootTransfert*) (soff))->~G__TKVINDRADstToRootTransfert();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraanalysis_952_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADstToRootTransfert* dest = (KVINDRADstToRootTransfert*) G__getstructoffset();
   *dest = *(KVINDRADstToRootTransfert*) libp->para[0].ref;
   const KVINDRADstToRootTransfert& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDataPatch_INDRA_camp5_PHDcorrection */
static int G__G__KVIndraanalysis_953_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataPatch_INDRA_camp5_PHDcorrection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataPatch_INDRA_camp5_PHDcorrection[n];
     } else {
       p = new((void*) gvp) KVDataPatch_INDRA_camp5_PHDcorrection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDataPatch_INDRA_camp5_PHDcorrection;
     } else {
       p = new((void*) gvp) KVDataPatch_INDRA_camp5_PHDcorrection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_953_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDataPatch_INDRA_camp5_PHDcorrection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_953_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatch_INDRA_camp5_PHDcorrection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_953_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDataPatch_INDRA_camp5_PHDcorrection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_953_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDataPatch_INDRA_camp5_PHDcorrection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_953_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDataPatch_INDRA_camp5_PHDcorrection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_953_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatch_INDRA_camp5_PHDcorrection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_953_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataPatch_INDRA_camp5_PHDcorrection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_953_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDataPatch_INDRA_camp5_PHDcorrection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_953_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDataPatch_INDRA_camp5_PHDcorrection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraanalysis_953_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDataPatch_INDRA_camp5_PHDcorrection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDataPatch_INDRA_camp5_PHDcorrection(*(KVDataPatch_INDRA_camp5_PHDcorrection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDataPatch_INDRA_camp5_PHDcorrection G__TKVDataPatch_INDRA_camp5_PHDcorrection;
static int G__G__KVIndraanalysis_953_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDataPatch_INDRA_camp5_PHDcorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDataPatch_INDRA_camp5_PHDcorrection*) (soff+(sizeof(KVDataPatch_INDRA_camp5_PHDcorrection)*i)))->~G__TKVDataPatch_INDRA_camp5_PHDcorrection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDataPatch_INDRA_camp5_PHDcorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDataPatch_INDRA_camp5_PHDcorrection*) (soff))->~G__TKVDataPatch_INDRA_camp5_PHDcorrection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraanalysis_953_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDataPatch_INDRA_camp5_PHDcorrection* dest = (KVDataPatch_INDRA_camp5_PHDcorrection*) G__getstructoffset();
   *dest = *(KVDataPatch_INDRA_camp5_PHDcorrection*) libp->para[0].ref;
   const KVDataPatch_INDRA_camp5_PHDcorrection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAGeneDataAnalyser */
static int G__G__KVIndraanalysis_954_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAGeneDataAnalyser* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAGeneDataAnalyser[n];
     } else {
       p = new((void*) gvp) KVINDRAGeneDataAnalyser[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAGeneDataAnalyser;
     } else {
       p = new((void*) gvp) KVINDRAGeneDataAnalyser;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_954_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAGeneDataAnalyser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_954_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAGeneDataAnalyser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_954_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAGeneDataAnalyser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_954_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAGeneDataAnalyser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_954_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAGeneDataAnalyser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_954_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAGeneDataAnalyser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_954_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAGeneDataAnalyser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_954_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAGeneDataAnalyser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_954_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAGeneDataAnalyser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraanalysis_954_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRAGeneDataAnalyser* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRAGeneDataAnalyser(*(KVINDRAGeneDataAnalyser*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAGeneDataAnalyser G__TKVINDRAGeneDataAnalyser;
static int G__G__KVIndraanalysis_954_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAGeneDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAGeneDataAnalyser*) (soff+(sizeof(KVINDRAGeneDataAnalyser)*i)))->~G__TKVINDRAGeneDataAnalyser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAGeneDataAnalyser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAGeneDataAnalyser*) (soff))->~G__TKVINDRAGeneDataAnalyser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraanalysis_954_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAGeneDataAnalyser* dest = (KVINDRAGeneDataAnalyser*) G__getstructoffset();
   *dest = *(KVINDRAGeneDataAnalyser*) libp->para[0].ref;
   const KVINDRAGeneDataAnalyser& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAGeneDataSelector */
static int G__G__KVIndraanalysis_955_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAGeneDataSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAGeneDataSelector((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVINDRAGeneDataSelector((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVINDRAGeneDataSelector[n];
       } else {
         p = new((void*) gvp) KVINDRAGeneDataSelector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVINDRAGeneDataSelector;
       } else {
         p = new((void*) gvp) KVINDRAGeneDataSelector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAGeneDataSelector*) G__getstructoffset())->InitAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAGeneDataSelector*) G__getstructoffset())->InitRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAGeneDataSelector*) G__getstructoffset())->Analysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAGeneDataSelector*) G__getstructoffset())->EndRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAGeneDataSelector*) G__getstructoffset())->EndAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAGeneDataSelector*) G__getstructoffset())->AtEndOfRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAGeneDataSelector::Make((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAGeneDataSelector*) G__getstructoffset())->SetBranchAddresses();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAGeneDataSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAGeneDataSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAGeneDataSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAGeneDataSelector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAGeneDataSelector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAGeneDataSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAGeneDataSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAGeneDataSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraanalysis_955_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAGeneDataSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAGeneDataSelector G__TKVINDRAGeneDataSelector;
static int G__G__KVIndraanalysis_955_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAGeneDataSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAGeneDataSelector*) (soff+(sizeof(KVINDRAGeneDataSelector)*i)))->~G__TKVINDRAGeneDataSelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAGeneDataSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAGeneDataSelector*) (soff))->~G__TKVINDRAGeneDataSelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVINDRARawDataAnalyser */

/* KVSelector */

/* KVDataSelector */

/* KVINDRAReconIdent */

/* KVReconIdent_e475s */

/* KVINDRAReconDataAnalyser */

/* KVINDRAReconRoot */

/* KVINDRARawDataReconstructor */

/* KVDataPatch_CorrectEtalonModuleIDCode */

/* KVINDRAIdentRoot */

/* KVINDRADstToRootTransfert */

/* KVDataPatch_INDRA_camp5_PHDcorrection */

/* KVINDRAGeneDataAnalyser */

/* KVINDRAGeneDataSelector */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVIndraanalysis {
 public:
  G__Sizep2memfuncG__KVIndraanalysis(): p(&G__Sizep2memfuncG__KVIndraanalysis::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVIndraanalysis::*p)();
};

size_t G__get_sizep2memfuncG__KVIndraanalysis()
{
  G__Sizep2memfuncG__KVIndraanalysis a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVIndraanalysis() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser))) {
     KVINDRARawDataAnalyser *G__Lderived;
     G__Lderived=(KVINDRARawDataAnalyser*)0x1000;
     {
       KVRawDataAnalyser *G__Lpbase=(KVRawDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVRawDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector))) {
     KVSelector *G__Lderived;
     G__Lderived=(KVSelector*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector))) {
     KVDataSelector *G__Lderived;
     G__Lderived=(KVDataSelector*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconIdent))) {
     KVINDRAReconIdent *G__Lderived;
     G__Lderived=(KVINDRAReconIdent*)0x1000;
     {
       KVSelector *G__Lpbase=(KVSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconIdent),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconIdent),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconIdent),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVReconIdent_e475s))) {
     KVReconIdent_e475s *G__Lderived;
     G__Lderived=(KVReconIdent_e475s*)0x1000;
     {
       KVINDRAReconIdent *G__Lpbase=(KVINDRAReconIdent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVReconIdent_e475s),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconIdent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVSelector *G__Lpbase=(KVSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVReconIdent_e475s),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVReconIdent_e475s),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVReconIdent_e475s),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser))) {
     KVINDRAReconDataAnalyser *G__Lderived;
     G__Lderived=(KVINDRAReconDataAnalyser*)0x1000;
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconRoot))) {
     KVINDRAReconRoot *G__Lderived;
     G__Lderived=(KVINDRAReconRoot*)0x1000;
     {
       KVSelector *G__Lpbase=(KVSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconRoot),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconRoot),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconRoot),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor))) {
     KVINDRARawDataReconstructor *G__Lderived;
     G__Lderived=(KVINDRARawDataReconstructor*)0x1000;
     {
       KVINDRARawDataAnalyser *G__Lpbase=(KVINDRARawDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVRawDataAnalyser *G__Lpbase=(KVRawDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVRawDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode))) {
     KVDataPatch_CorrectEtalonModuleIDCode *G__Lderived;
     G__Lderived=(KVDataPatch_CorrectEtalonModuleIDCode*)0x1000;
     {
       KVDataPatch *G__Lpbase=(KVDataPatch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAIdentRoot))) {
     KVINDRAIdentRoot *G__Lderived;
     G__Lderived=(KVINDRAIdentRoot*)0x1000;
     {
       KVSelector *G__Lpbase=(KVSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAIdentRoot),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAIdentRoot),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAIdentRoot),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert))) {
     KVINDRADstToRootTransfert *G__Lderived;
     G__Lderived=(KVINDRADstToRootTransfert*)0x1000;
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection))) {
     KVDataPatch_INDRA_camp5_PHDcorrection *G__Lderived;
     G__Lderived=(KVDataPatch_INDRA_camp5_PHDcorrection*)0x1000;
     {
       KVDataPatch *G__Lpbase=(KVDataPatch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser))) {
     KVINDRAGeneDataAnalyser *G__Lderived;
     G__Lderived=(KVINDRAGeneDataAnalyser*)0x1000;
     {
       KVDataAnalyser *G__Lpbase=(KVDataAnalyser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataAnalyser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector))) {
     KVINDRAGeneDataSelector *G__Lderived;
     G__Lderived=(KVINDRAGeneDataSelector*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector),G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVIndraanalysis() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*,less<long> >",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,Int_t>",117,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVINDRARawDataAnalyser */
static void G__setup_memvarKVINDRARawDataAnalyser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser));
   { KVINDRARawDataAnalyser *p; p=(KVINDRARawDataAnalyser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"INDRA_events=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"gene_events=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"other_events=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSelector */
static void G__setup_memvarKVSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector));
   { KVSelector *p; p=(KVSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelectorcLcLdA),-1,-2,2,"kDeleteGVList=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelectorcLcLdA),-1,-2,2,"kChangeMasses=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"callnotif=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"totentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"NbTreeEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconEvent),-1,-1,2,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TBranch),-1,-1,2,"b_data=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVGVList),-1,-1,2,"gvlist=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVHashList),-1,-1,2,"lhisto=",0,"->!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVHashList),-1,-1,2,"ltree=",0,"->!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TStopwatch),-1,-1,2,"fTimer=",0,"!used to time analysis");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTreeEntry=",0,"!this is the current TTree entry number, i.e. the argument passed to TSelector::Process(Long64_t entry)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TEventList),-1,-1,2,"fEvtList=",0,"!this is the current event list.");
   G__memvar_setup((void*)0,78,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTreeOffset=",0,"!this is the current TTree offset table");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCurrentTreeNumber=",0,"!This is the current tree number ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString),-1,-1,2,"fDataSelector=",0,"! Name of the KVDataSelector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector),-1,-1,2,"fKVDataSelector=",0,"! KVDataSelector");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"needToSelect=",0,"! tells if one needs to build the TEventList");
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTEVLexist=",0,"! tells if the TEventList exist for each run");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"needToCallEndRun=",0,"! tells if one needs to call EndRun");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADBRun),-1,-1,2,"fCurrentRun=",0,"! current run");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNewMassFormula=",0,"new mass formula to apply to fragments, if required");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVParticleCondition),-1,-1,2,"fPartCond=",0,"(optional) conditions for selecting particles");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVString),-1,-2,2,"fBranchName=",0,"name of branch which contains KVINDRAReconEvent objects in the TTree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"fGeneData=",0,"!pointer to tree containing pulser and laser data for run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"fRawData=",0,"!pointer to tree containing raw data for run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVNameValueList),-1,-1,2,"fOptionList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVLockfile),-1,-1,2,"dataselector_lock=",0,"for locking user's data selector file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataSelector */
static void G__setup_memvarKVDataSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector));
   { KVDataSelector *p; p=(KVDataSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector),-1,-1,4,"kvsel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TEventList),-1,-1,4,"evtl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAReconIdent */
static void G__setup_memvarKVINDRAReconIdent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconIdent));
   { KVINDRAReconIdent *p; p=(KVINDRAReconIdent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TFile),-1,-1,2,"fIdentFile=",0,"new file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"fIdentTree=",0,"new tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVReconIdent_e475s */
static void G__setup_memvarKVReconIdent_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVReconIdent_e475s));
   { KVReconIdent_e475s *p; p=(KVReconIdent_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAReconDataAnalyser */
static void G__setup_memvarKVINDRAReconDataAnalyser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser));
   { KVINDRAReconDataAnalyser *p; p=(KVINDRAReconDataAnalyser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVString),-1,-1,2,"fDataSelector=",0,"name of KVDataSelector to use");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVString),-1,-1,2,"fDataSelectorImp=",0,"name of KVDataSelector implementation file (if it exists)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVString),-1,-1,2,"fDataSelectorDec=",0,"name of KVDataSelector header file (if it exists)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector),-1,-1,2,"fSelector=",0,"the data analysis class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TChain),-1,-1,2,"theChain=",0,"chain of TTrees to be analysed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"theRawData=",0,"raw data TTree in recon file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"NbParFired=",0,(char*)NULL);
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,2,"ParVal=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,2,"ParNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TObjArray),-1,-1,2,"parList=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"Entry=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"TotalEntriesToRead=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVString),-1,-1,2,"fDataVersion=",0,"KV version used to write analysed data");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVString),-1,-1,2,"fDataSeries=",0,"KV series used to write analysed data");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDataReleaseNum=",0,"KV release number used to write analysed data");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatchList),-1,-1,2,"fRustines=",0,"patches to be applied to correct data before analysis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAReconRoot */
static void G__setup_memvarKVINDRAReconRoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconRoot));
   { KVINDRAReconRoot *p; p=(KVINDRAReconRoot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"codes[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"status[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Acodes[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Astatus[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TFile),-1,-1,2,"fIdentFile=",0,"new file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"fIdentTree=",0,"new tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRARawDataReconstructor */
static void G__setup_memvarKVINDRARawDataReconstructor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor));
   { KVINDRARawDataReconstructor *p; p=(KVINDRARawDataReconstructor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TFile),-1,-1,2,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"genetree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"rawtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconEvent),-1,-1,2,"recev=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nb_recon=",0,"number of reconstructed INDRA events");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString),-1,-1,2,"taskname=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString),-1,-1,2,"datatype=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataPatch_CorrectEtalonModuleIDCode */
static void G__setup_memvarKVDataPatch_CorrectEtalonModuleIDCode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode));
   { KVDataPatch_CorrectEtalonModuleIDCode *p; p=(KVDataPatch_CorrectEtalonModuleIDCode*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconEvent),-1,-1,4,"fEvent=",0,"pointer to current event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAIdentRoot */
static void G__setup_memvarKVINDRAIdentRoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAIdentRoot));
   { KVINDRAIdentRoot *p; p=(KVINDRAIdentRoot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"codes[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"status[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Acodes[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Astatus[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TFile),-1,-1,2,"fIdentFile=",0,"new file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"fIdentTree=",0,"new tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADstToRootTransfert */
static void G__setup_memvarKVINDRADstToRootTransfert(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert));
   { KVINDRADstToRootTransfert *p; p=(KVINDRADstToRootTransfert*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventNumber=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"NbParFired=",0,"!");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"ParVal[3000]=",0,"!");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"ParNum[3000]=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSeqCollection),-1,-1,2,"params=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"de1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"de2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"de3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"de4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"de5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"canal[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"code_idf[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVIDTelescope),-1,-1,2,"identifying_telescope=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"camp1=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"camp2=",0,"set to kTRUE when reading 2nd campaign: => phoswich code is 4, not 2");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"camp4=",0,"set to kTRUE when reading 4th campaign: => ring1 is Si-CsI");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"events_in_file=",0,"total number of events read from each file - for tests");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"events_good=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"events_read=",0,"totals of events read and trees filled");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"data_tree=",0,"tree for writing events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"rawtree=",0,"raw data tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRunNumber=",0,"run number of current file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCampNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString),-1,-1,2,"req_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString),-1,-1,2,"req_mem=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString),-1,-1,2,"req_scratch=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString),-1,-1,2,"cur_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString),-1,-1,2,"cur_mem=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString),-1,-1,2,"cur_scratch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDataPatch_INDRA_camp5_PHDcorrection */
static void G__setup_memvarKVDataPatch_INDRA_camp5_PHDcorrection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection));
   { KVDataPatch_INDRA_camp5_PHDcorrection *p; p=(KVDataPatch_INDRA_camp5_PHDcorrection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAGeneDataAnalyser */
static void G__setup_memvarKVINDRAGeneDataAnalyser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser));
   { KVINDRAGeneDataAnalyser *p; p=(KVINDRAGeneDataAnalyser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAGeneDataSelector */
static void G__setup_memvarKVINDRAGeneDataSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector));
   { KVINDRAGeneDataSelector *p; p=(KVINDRAGeneDataSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree),-1,-1,2,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"RunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"EventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRATriggerInfo),-1,-1,2,"TriggerInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TBranch),-1,-1,2,"b_RunNumber=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TBranch),-1,-1,2,"b_EventNumber=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TBranch),-1,-1,2,"b_TriggerInfo=",0,"!");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTreeEntry=",0,"!this is the current TTree entry number, i.e. the argument passed to TSelector::Process(Long64_t entry)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"needToCallEndRun=",0,"! tells if one needs to call EndRun");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVIndraanalysis() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVINDRARawDataAnalyser(void) {
   /* KVINDRARawDataAnalyser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser));
   G__memfunc_setup("PrintAvailableRuns",1846,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVNumberList), -1, 0, 1, 1, 2, 0, "u 'KVString' - 1 - datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("postInitRun",1167,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preAnalysis",1163,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preEndRun",915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawDataReader",1559,G__G__KVIndraanalysis_721_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVGANILDataReader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Make",382,G__G__KVIndraanalysis_721_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 '\"MyOwnINDRARawDataAnalyser\"' kvsname", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*))(&KVINDRARawDataAnalyser::Make) ), 0);
   G__memfunc_setup("CalculateTotalEventsToRead",2630,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_721_0_9, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRARawDataAnalyser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_721_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARawDataAnalyser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_721_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRARawDataAnalyser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_721_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRARawDataAnalyser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_721_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_721_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARawDataAnalyser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_721_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARawDataAnalyser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_721_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARawDataAnalyser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_721_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARawDataAnalyser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRARawDataAnalyser", 2160, G__G__KVIndraanalysis_721_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSelector(void) {
   /* KVSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector));
   G__memfunc_setup("ParseOptions",1255,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventReference",1713,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconEvent), -1, 2, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentRun",1336,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADBRun), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetINDRAReconEventBranchName",2658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - br_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTH1",596,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'TH1' - 0 - h1 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTProfile",1196,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"U 'TProfile' - 0 - h1 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two d - 'Double_t' 0 - three", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTH2",597,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"U 'TH2' - 0 - h2 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two d - 'Double_t' 0 - three", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillKVDalitz",1168,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"U 'KVDalitzPlot' - 0 - h2 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two d - 'Double_t' 0 - three", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTProfile2D",1314,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"U 'TProfile2D' - 0 - h2 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two d - 'Double_t' 0 - three "
"d - 'Double_t' 0 - four", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTH3",598,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"U 'TH3' - 0 - h3 d - 'Double_t' 0 - one "
"d - 'Double_t' 0 - two d - 'Double_t' 0 - three "
"d - 'Double_t' 0 - four", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSelector",994,G__G__KVIndraanalysis_889_0_11, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__G__KVIndraanalysis_889_0_12, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventNumber",1419,G__G__KVIndraanalysis_889_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Version",742,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOption",933,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetObject",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInputList",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOutputList",1357,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveTerminate",1444,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitAnalysis",1240,G__G__KVIndraanalysis_889_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,G__G__KVIndraanalysis_889_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,G__G__KVIndraanalysis_889_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,G__G__KVIndraanalysis_889_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndAnalysis",1115,G__G__KVIndraanalysis_889_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGVList",869,G__G__KVIndraanalysis_889_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVGVList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGVList",857,G__G__KVIndraanalysis_889_0_32, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVGVList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddGV",422,G__G__KVIndraanalysis_889_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVVarGlob' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddGV",422,G__G__KVIndraanalysis_889_0_34, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVVarGlob), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - class_name C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGV",445,G__G__KVIndraanalysis_889_0_35, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVVarGlob), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecalculateGlobalVariables",2639,G__G__KVIndraanalysis_889_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTreeEntry",1218,G__G__KVIndraanalysis_889_0_37, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildEventList",1422,G__G__KVIndraanalysis_889_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfRun",950,G__G__KVIndraanalysis_889_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataSelector",1511,G__G__KVIndraanalysis_889_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' dataSel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSelector",1499,G__G__KVIndraanalysis_889_0_41, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadDataSelector",1595,G__G__KVIndraanalysis_889_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveCurrentDataSelection",2450,G__G__KVIndraanalysis_889_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSelectorFileName",2268,G__G__KVIndraanalysis_889_0_44, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangeFragmentMasses",2022,G__G__KVIndraanalysis_889_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - mass_formula", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleConditions",2170,G__G__KVIndraanalysis_889_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVParticleCondition' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeneData",1049,G__G__KVIndraanalysis_889_0_47, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawData",964,G__G__KVIndraanalysis_889_0_48, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Make",382,G__G__KVIndraanalysis_889_0_49, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 '\"MyOwnKVSelector\"' kvsname", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*))(&KVSelector::Make) ), 0);
   G__memfunc_setup("CreateHistos",1230,G__G__KVIndraanalysis_889_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateTrees",1111,G__G__KVIndraanalysis_889_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillHisto",910,G__G__KVIndraanalysis_889_0_52, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'KVString' - 0 - sname d - 'Double_t' 0 - one "
"d - 'Double_t' 0 '1' two d - 'Double_t' 0 '1' three "
"d - 'Double_t' 0 '1' four", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTree",791,G__G__KVIndraanalysis_889_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'KVString' - 0 '\"\"' sname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistoList",1219,G__G__KVIndraanalysis_889_0_54, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVHashList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeList",1100,G__G__KVIndraanalysis_889_0_55, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVHashList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHisto",807,G__G__KVIndraanalysis_889_0_56, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TH1), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__G__KVIndraanalysis_889_0_57, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TTree), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteHistoToFile",1621,G__G__KVIndraanalysis_889_0_58, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'KVString' - 0 '\"FileFromKVSelector.root\"' filename C - 'Option_t' 10 '\"recreate\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteTreeToFile",1502,G__G__KVIndraanalysis_889_0_59, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'KVString' - 0 '\"FileFromKVSelector.root\"' filename C - 'Option_t' 10 '\"recreate\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOpt",607,G__G__KVIndraanalysis_889_0_60, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - option C - 'Char_t' 10 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOptGiven",1000,G__G__KVIndraanalysis_889_0_61, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOpt",595,G__G__KVIndraanalysis_889_0_62, 117, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TString), -1, 1, 1, 1, 1, 9, "C - 'Char_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UnsetOpt",834,G__G__KVIndraanalysis_889_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_889_0_64, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSelector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_889_0_65, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSelector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_889_0_66, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSelector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_889_0_67, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSelector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_889_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_889_0_72, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSelector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_889_0_73, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSelector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_889_0_74, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSelector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_889_0_75, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSelector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSelector", 1120, G__G__KVIndraanalysis_889_0_76, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataSelector(void) {
   /* KVDataSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector));
   G__memfunc_setup("KVDataSelector",1372,G__G__KVIndraanalysis_890_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKVSelector",1294,G__G__KVIndraanalysis_890_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVSelector' - 0 '0' kvs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKVSelector",1282,G__G__KVIndraanalysis_890_0_3, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVSelector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__G__KVIndraanalysis_890_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nrun", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessCurrentEntry",2004,G__G__KVIndraanalysis_890_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTEventList",1298,G__G__KVIndraanalysis_890_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TEventList), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__G__KVIndraanalysis_890_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SelectCurrentEntry",1877,G__G__KVIndraanalysis_890_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeClass",884,G__G__KVIndraanalysis_890_0_9, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - 'Char_t' 10 - classname C - 'Char_t' 10 - classdesc", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*, const Char_t*))(&KVDataSelector::MakeClass) ), 0);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_890_0_10, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataSelector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_890_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataSelector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_890_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataSelector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_890_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataSelector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_890_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_890_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataSelector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_890_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataSelector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_890_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataSelector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_890_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataSelector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDataSelector", 1372, G__G__KVIndraanalysis_890_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector), -1, 0, 1, 1, 1, 0, "u 'KVDataSelector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDataSelector", 1498, G__G__KVIndraanalysis_890_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraanalysis_890_0_24, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataSelector), -1, 1, 1, 1, 1, 0, "u 'KVDataSelector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAReconIdent(void) {
   /* KVINDRAReconIdent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconIdent));
   G__memfunc_setup("KVINDRAReconIdent",1530,G__G__KVIndraanalysis_942_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconIdent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitAnalysis",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndAnalysis",1115,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_942_0_7, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAReconIdent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_942_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconIdent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_942_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAReconIdent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_942_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAReconIdent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_942_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_942_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconIdent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_942_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconIdent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_942_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconIdent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_942_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconIdent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAReconIdent", 1656, G__G__KVIndraanalysis_942_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVReconIdent_e475s(void) {
   /* KVReconIdent_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVReconIdent_e475s));
   G__memfunc_setup("KVReconIdent_e475s",1635,G__G__KVIndraanalysis_943_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVReconIdent_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Analysis",836,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_943_0_3, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVReconIdent_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_943_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVReconIdent_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_943_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVReconIdent_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_943_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVReconIdent_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_943_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_943_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVReconIdent_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_943_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVReconIdent_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_943_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVReconIdent_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_943_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVReconIdent_e475s::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVReconIdent_e475s", 1761, G__G__KVIndraanalysis_943_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAReconDataAnalyser(void) {
   /* KVINDRAReconDataAnalyser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser));
   G__memfunc_setup("PrintAvailableRuns",1846,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVNumberList), -1, 0, 1, 1, 2, 0, "u 'KVString' - 1 - datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConnectRawDataTree",1790,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalEntriesToRead",2109,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVINDRAReconDataAnalyser",2239,G__G__KVIndraanalysis_945_0_4, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKVDataSelector",1672,G__G__KVIndraanalysis_945_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' kvs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKVDataSelector",1660,G__G__KVIndraanalysis_945_0_6, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseKVDataSelector",1981,G__G__KVIndraanalysis_945_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckTaskVariables",1802,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SubmitTask",1031,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBatchEnvFile",1686,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - g - 'Bool_t' 0 'kTRUE' sav", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBatchEnvFile",1543,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExpandAutoBatchName",1884,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 1, "C - 'Char_t' 10 - format", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preInitAnalysis",1567,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preAnalysis",1163,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("preInitRun",1040,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RegisterUserClass",1754,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintTreeInfos",1436,G__G__KVIndraanalysis_945_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReconDataTreeInfos",2080,G__G__KVIndraanalysis_945_0_19, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TEnv), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataVersion",1408,G__G__KVIndraanalysis_945_0_20, 117, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSeries",1285,G__G__KVIndraanalysis_945_0_21, 117, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataReleaseNumber",1988,G__G__KVIndraanalysis_945_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_945_0_23, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAReconDataAnalyser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_945_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconDataAnalyser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_945_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAReconDataAnalyser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_945_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAReconDataAnalyser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_945_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_945_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconDataAnalyser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_945_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconDataAnalyser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_945_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconDataAnalyser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_945_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconDataAnalyser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAReconDataAnalyser", 2365, G__G__KVIndraanalysis_945_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAReconRoot(void) {
   /* KVINDRAReconRoot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconRoot));
   G__memfunc_setup("KVINDRAReconRoot",1450,G__G__KVIndraanalysis_946_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAReconRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitAnalysis",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndAnalysis",1115,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CountStatus",1165,G__G__KVIndraanalysis_946_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountCodes",1015,G__G__KVIndraanalysis_946_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_946_0_9, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAReconRoot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_946_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconRoot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_946_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAReconRoot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_946_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAReconRoot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_946_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_946_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconRoot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_946_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconRoot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_946_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconRoot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_946_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconRoot::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAReconRoot", 1576, G__G__KVIndraanalysis_946_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRARawDataReconstructor(void) {
   /* KVINDRARawDataReconstructor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor));
   G__memfunc_setup("KVINDRARawDataReconstructor",2608,G__G__KVIndraanalysis_947_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitAnalysis",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndAnalysis",1115,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExtraProcessing",1569,G__G__KVIndraanalysis_947_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_947_0_8, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRARawDataReconstructor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_947_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARawDataReconstructor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_947_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRARawDataReconstructor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_947_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRARawDataReconstructor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_947_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_947_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARawDataReconstructor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_947_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARawDataReconstructor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_947_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARawDataReconstructor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_947_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARawDataReconstructor::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRARawDataReconstructor", 2734, G__G__KVIndraanalysis_947_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataPatch_CorrectEtalonModuleIDCode(void) {
   /* KVDataPatch_CorrectEtalonModuleIDCode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode));
   G__memfunc_setup("KVDataPatch_CorrectEtalonModuleIDCode",3597,G__G__KVIndraanalysis_949_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRequired",1021,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"u 'TString' - 0 - dataset u 'TString' - 0 - datatype "
"i - 'Int_t' 0 - runnumber u 'TString' - 0 - dataseries "
"i - 'Int_t' 0 - datareleasenumber U 'TList' - 10 - streamerinfolist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEventPatch",1198,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsParticlePatch",1504,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ApplyToEvent",1227,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVEvent' - 0 - e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ApplyToParticle",1533,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintPatchInfo",1417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_949_0_8, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataPatch_CorrectEtalonModuleIDCode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_949_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatch_CorrectEtalonModuleIDCode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_949_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataPatch_CorrectEtalonModuleIDCode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_949_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataPatch_CorrectEtalonModuleIDCode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_949_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_949_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatch_CorrectEtalonModuleIDCode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_949_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataPatch_CorrectEtalonModuleIDCode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_949_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatch_CorrectEtalonModuleIDCode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_949_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataPatch_CorrectEtalonModuleIDCode::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDataPatch_CorrectEtalonModuleIDCode", 3597, G__G__KVIndraanalysis_949_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode), -1, 0, 1, 1, 1, 0, "u 'KVDataPatch_CorrectEtalonModuleIDCode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDataPatch_CorrectEtalonModuleIDCode", 3723, G__G__KVIndraanalysis_949_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraanalysis_949_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode), -1, 1, 1, 1, 1, 0, "u 'KVDataPatch_CorrectEtalonModuleIDCode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAIdentRoot(void) {
   /* KVINDRAIdentRoot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAIdentRoot));
   G__memfunc_setup("KVINDRAIdentRoot",1447,G__G__KVIndraanalysis_950_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAIdentRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitAnalysis",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndAnalysis",1115,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CountStatus",1165,G__G__KVIndraanalysis_950_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountCodes",1015,G__G__KVIndraanalysis_950_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_950_0_9, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAIdentRoot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_950_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAIdentRoot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_950_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAIdentRoot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_950_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAIdentRoot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_950_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_950_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAIdentRoot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_950_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAIdentRoot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_950_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAIdentRoot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_950_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAIdentRoot::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAIdentRoot", 1573, G__G__KVIndraanalysis_950_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADstToRootTransfert(void) {
   /* KVINDRADstToRootTransfert */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert));
   G__memfunc_setup("PrintAvailableRuns",1846,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVNumberList), -1, 0, 1, 1, 2, 0, "u 'KVString' - 1 - datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCampagneNumber",1713,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessRun",1044,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVINDRADstToRootTransfert",2394,G__G__KVIndraanalysis_952_0_4, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRun",713,G__G__KVIndraanalysis_952_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,G__G__KVIndraanalysis_952_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SubmitTask",1031,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineSHELLVariables",1884,G__G__KVIndraanalysis_952_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDST",615,G__G__KVIndraanalysis_952_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Code2and9and10",1197,G__G__KVIndraanalysis_952_0_10, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDetector), -1, 0, 2, 1, 1, 0, 
"i - - 0 - ring i - - 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Code3",430,G__G__KVIndraanalysis_952_0_11, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDetector), -1, 0, 2, 1, 1, 0, 
"i - - 0 - ring i - - 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Code0",427,G__G__KVIndraanalysis_952_0_12, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDetector), -1, 0, 2, 1, 1, 0, 
"i - - 0 - ring i - - 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Code1",428,G__G__KVIndraanalysis_952_0_13, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDetector), -1, 0, 2, 1, 1, 0, 
"i - - 0 - ring i - - 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Code7",434,G__G__KVIndraanalysis_952_0_14, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDetector), -1, 0, 2, 1, 1, 0, 
"i - - 0 - ring i - - 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Code4and5and6and8",1515,G__G__KVIndraanalysis_952_0_15, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDetector), -1, 0, 2, 1, 1, 0, 
"i - - 0 - ring i - - 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lire_evt",858,G__G__KVIndraanalysis_952_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - f_in U 'KVINDRAReconEvent' - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillRawTree",1089,G__G__KVIndraanalysis_952_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_952_0_18, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADstToRootTransfert::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_952_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADstToRootTransfert::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_952_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADstToRootTransfert::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_952_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADstToRootTransfert::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_952_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_952_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADstToRootTransfert::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_952_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADstToRootTransfert::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_952_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADstToRootTransfert::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_952_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADstToRootTransfert::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRADstToRootTransfert", 2394, G__G__KVIndraanalysis_952_0_30, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert), -1, 0, 1, 1, 1, 0, "u 'KVINDRADstToRootTransfert' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADstToRootTransfert", 2520, G__G__KVIndraanalysis_952_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraanalysis_952_0_32, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert), -1, 1, 1, 1, 1, 0, "u 'KVINDRADstToRootTransfert' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDataPatch_INDRA_camp5_PHDcorrection(void) {
   /* KVDataPatch_INDRA_camp5_PHDcorrection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection));
   G__memfunc_setup("KVDataPatch_INDRA_camp5_PHDcorrection",3456,G__G__KVIndraanalysis_953_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRequired",1021,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"u 'TString' - 0 - dataset u 'TString' - 0 - datatype "
"i - 'Int_t' 0 - runnumber u 'TString' - 0 - dataseries "
"i - 'Int_t' 0 - datareleasenumber U 'TList' - 10 - streamerinfolist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEventPatch",1198,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsParticlePatch",1504,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ApplyToEvent",1227,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVEvent' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ApplyToParticle",1533,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVNucleus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintPatchInfo",1417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_953_0_8, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDataPatch_INDRA_camp5_PHDcorrection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_953_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatch_INDRA_camp5_PHDcorrection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_953_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDataPatch_INDRA_camp5_PHDcorrection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_953_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDataPatch_INDRA_camp5_PHDcorrection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_953_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_953_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatch_INDRA_camp5_PHDcorrection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_953_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataPatch_INDRA_camp5_PHDcorrection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_953_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDataPatch_INDRA_camp5_PHDcorrection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_953_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDataPatch_INDRA_camp5_PHDcorrection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDataPatch_INDRA_camp5_PHDcorrection", 3456, G__G__KVIndraanalysis_953_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection), -1, 0, 1, 1, 1, 0, "u 'KVDataPatch_INDRA_camp5_PHDcorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDataPatch_INDRA_camp5_PHDcorrection", 3582, G__G__KVIndraanalysis_953_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraanalysis_953_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection), -1, 1, 1, 1, 1, 0, "u 'KVDataPatch_INDRA_camp5_PHDcorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAGeneDataAnalyser(void) {
   /* KVINDRAGeneDataAnalyser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser));
   G__memfunc_setup("PrintAvailableRuns",1846,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVNumberList), -1, 0, 1, 1, 2, 0, "u 'KVString' - 1 - datatype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVINDRAGeneDataAnalyser",2119,G__G__KVIndraanalysis_954_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubmitTask",1031,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_954_0_4, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAGeneDataAnalyser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_954_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAGeneDataAnalyser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_954_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAGeneDataAnalyser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_954_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAGeneDataAnalyser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_954_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_954_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAGeneDataAnalyser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_954_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAGeneDataAnalyser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_954_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAGeneDataAnalyser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_954_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAGeneDataAnalyser::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRAGeneDataAnalyser", 2119, G__G__KVIndraanalysis_954_0_16, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser), -1, 0, 1, 1, 1, 0, "u 'KVINDRAGeneDataAnalyser' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAGeneDataAnalyser", 2245, G__G__KVIndraanalysis_954_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraanalysis_954_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser), -1, 1, 1, 1, 1, 0, "u 'KVINDRAGeneDataAnalyser' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAGeneDataSelector(void) {
   /* KVINDRAGeneDataSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector));
   G__memfunc_setup("KVINDRAGeneDataSelector",2121,G__G__KVIndraanalysis_955_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Version",742,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOption",933,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetObject",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInputList",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOutputList",1357,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveTerminate",1444,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitAnalysis",1240,G__G__KVIndraanalysis_955_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,G__G__KVIndraanalysis_955_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Analysis",836,G__G__KVIndraanalysis_955_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndRun",588,G__G__KVIndraanalysis_955_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndAnalysis",1115,G__G__KVIndraanalysis_955_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AtEndOfRun",950,G__G__KVIndraanalysis_955_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,G__G__KVIndraanalysis_955_0_21, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Char_t' 10 - kvsname", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*))(&KVINDRAGeneDataSelector::Make) ), 0);
   G__memfunc_setup("SetBranchAddresses",1816,G__G__KVIndraanalysis_955_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraanalysis_955_0_23, 85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAGeneDataSelector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraanalysis_955_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAGeneDataSelector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraanalysis_955_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAGeneDataSelector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraanalysis_955_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAGeneDataSelector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraanalysisLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraanalysis_955_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraanalysis_955_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAGeneDataSelector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraanalysis_955_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAGeneDataSelector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraanalysis_955_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAGeneDataSelector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraanalysis_955_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAGeneDataSelector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAGeneDataSelector", 2247, G__G__KVIndraanalysis_955_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVIndraanalysis() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVIndraanalysis() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVIndraanalysis() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVIndraanalysisLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR = { "map<long,int,less<long>,allocator<pair<const long,int> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TEventList = { "TEventList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVSeqCollection = { "KVSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVHashList = { "KVHashList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVNameValueList = { "KVNameValueList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVNumberList = { "KVNumberList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVString = { "KVString" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVLockfile = { "KVLockfile" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVDataAnalyser = { "KVDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVParticleCondition = { "KVParticleCondition" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVNucleus = { "KVNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVEvent = { "KVEvent" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVDetector = { "KVDetector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVRawDataAnalyser = { "KVRawDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVGANILDataReader = { "KVGANILDataReader" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser = { "KVINDRARawDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVIDTelescope = { "KVIDTelescope" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR = { "map<long,TGeoNavigatorArray*,less<long>,allocator<pair<const long,TGeoNavigatorArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRAReconEvent = { "KVINDRAReconEvent" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRATriggerInfo = { "KVINDRATriggerInfo" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVVarGlob = { "KVVarGlob" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVGVList = { "KVGVList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVSelector = { "KVSelector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVDataSelector = { "KVDataSelector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRADBRun = { "KVINDRADBRun" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TProfile2D = { "TProfile2D" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_TH3 = { "TH3" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVDalitzPlot = { "KVDalitzPlot" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVSelectorcLcLdA = { "KVSelector::$" , 101 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRAReconIdent = { "KVINDRAReconIdent" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVReconIdent_e475s = { "KVReconIdent_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVDataPatchList = { "KVDataPatchList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser = { "KVINDRAReconDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRAReconRoot = { "KVINDRAReconRoot" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor = { "KVINDRARawDataReconstructor" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVDataPatch = { "KVDataPatch" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode = { "KVDataPatch_CorrectEtalonModuleIDCode" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRAIdentRoot = { "KVINDRAIdentRoot" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert = { "KVINDRADstToRootTransfert" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection = { "KVDataPatch_INDRA_camp5_PHDcorrection" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser = { "KVINDRAGeneDataAnalyser" , 99 , -1 };
G__linked_taginfo G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector = { "KVINDRAGeneDataSelector" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVIndraanalysis() {
  G__G__KVIndraanalysisLN_TClass.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TBuffer.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMemberInspector.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TObject.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TNamed.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TString.tagnum = -1 ;
  G__G__KVIndraanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TList.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TObjArray.tagnum = -1 ;
  G__G__KVIndraanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TTree.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TFile.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TBranch.tagnum = -1 ;
  G__G__KVIndraanalysisLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TH1.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TSelector.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TEventList.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TStopwatch.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVSeqCollection.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVHashList.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVNameValueList.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVNumberList.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVString.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVLockfile.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVBase.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVDataAnalyser.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TEnv.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVParticleCondition.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVNucleus.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVEvent.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVDetector.tagnum = -1 ;
  G__G__KVIndraanalysisLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVRawDataAnalyser.tagnum = -1 ;
  G__G__KVIndraanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVGANILDataReader.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TChain.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TH2.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVIDTelescope.tagnum = -1 ;
  G__G__KVIndraanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRAReconEvent.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRATriggerInfo.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVVarGlob.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVGVList.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVSelector.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVDataSelector.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRADBRun.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TProfile.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TProfile2D.tagnum = -1 ;
  G__G__KVIndraanalysisLN_TH3.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVDalitzPlot.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVSelectorcLcLdA.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRAReconIdent.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVReconIdent_e475s.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVDataPatchList.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRAReconRoot.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVDataPatch.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRAIdentRoot.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser.tagnum = -1 ;
  G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVIndraanalysis() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TBranch);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TSelector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TEventList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TStopwatch);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVHashList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVNameValueList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVNumberList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVString);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVLockfile);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVDataAnalyser);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TEnv);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVParticleCondition);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVEvent);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVDetector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVRawDataAnalyser);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVGANILDataReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRARawDataAnalyser),sizeof(KVINDRARawDataAnalyser),-1,29957,"Analysis of raw INDRA data",G__setup_memvarKVINDRARawDataAnalyser,G__setup_memfuncKVINDRARawDataAnalyser);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TChain);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TH2);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVIDTelescope);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRAReconEvent);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRATriggerInfo);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVVarGlob);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVGVList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVSelector),sizeof(KVSelector),-1,292096,"Analysis class for TChains of KVINDRAReconEvents",G__setup_memvarKVSelector,G__setup_memfuncKVSelector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVDataSelector),sizeof(KVDataSelector),-1,62720,"Class handling event lists for KVSelector analysis of data chains",G__setup_memvarKVDataSelector,G__setup_memfuncKVDataSelector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRADBRun);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TProfile);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TProfile2D);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_TH3);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVDalitzPlot);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVSelectorcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRAReconIdent),sizeof(KVINDRAReconIdent),-1,292096,"Analysis class used to identify previously reconstructed INDRA events",G__setup_memvarKVINDRAReconIdent,G__setup_memfuncKVINDRAReconIdent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVReconIdent_e475s),sizeof(KVReconIdent_e475s),-1,292096,"Identification of E475S events",G__setup_memvarKVReconIdent_e475s,G__setup_memfuncKVReconIdent_e475s);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVDataPatchList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRAReconDataAnalyser),sizeof(KVINDRAReconDataAnalyser),-1,29952,"For analysing reconstructed INDRA data",G__setup_memvarKVINDRAReconDataAnalyser,G__setup_memfuncKVINDRAReconDataAnalyser);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRAReconRoot),sizeof(KVINDRAReconRoot),-1,292096,"Generation of fully-identified and calibrated INDRA data files",G__setup_memvarKVINDRAReconRoot,G__setup_memfuncKVINDRAReconRoot);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRARawDataReconstructor),sizeof(KVINDRARawDataReconstructor),-1,29952,"Reconstruction of events from raw data acquisition files",G__setup_memvarKVINDRARawDataReconstructor,G__setup_memfuncKVINDRARawDataReconstructor);
   G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVDataPatch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVDataPatch_CorrectEtalonModuleIDCode),sizeof(KVDataPatch_CorrectEtalonModuleIDCode),-1,324864,"Patch for correcting bad id-code & calibration for particles stopping in CsI member of etalon modules [data written with v1.8.11]",G__setup_memvarKVDataPatch_CorrectEtalonModuleIDCode,G__setup_memfuncKVDataPatch_CorrectEtalonModuleIDCode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRAIdentRoot),sizeof(KVINDRAIdentRoot),-1,292096,"Generation of fully-identified and calibrated INDRA data files",G__setup_memvarKVINDRAIdentRoot,G__setup_memfuncKVINDRAIdentRoot);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRADstToRootTransfert),sizeof(KVINDRADstToRootTransfert),-1,29952,"Conversion of INDRA DST to KaliVeda ROOT format",G__setup_memvarKVINDRADstToRootTransfert,G__setup_memfuncKVINDRADstToRootTransfert);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVDataPatch_INDRA_camp5_PHDcorrection),sizeof(KVDataPatch_INDRA_camp5_PHDcorrection),-1,324864,"Patch for correcting Silicon PHD on rings 1-9 [INDRA_camp5 before 1.8.10]",G__setup_memvarKVDataPatch_INDRA_camp5_PHDcorrection,G__setup_memfuncKVDataPatch_INDRA_camp5_PHDcorrection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRAGeneDataAnalyser),sizeof(KVINDRAGeneDataAnalyser),-1,29952,"For analysing INDRA gene data",G__setup_memvarKVINDRAGeneDataAnalyser,G__setup_memfuncKVINDRAGeneDataAnalyser);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraanalysisLN_KVINDRAGeneDataSelector),sizeof(KVINDRAGeneDataSelector),-1,29952,"Base class for analysis of INDRA pulser & laser data",G__setup_memvarKVINDRAGeneDataSelector,G__setup_memfuncKVINDRAGeneDataSelector);
}
extern "C" void G__cpp_setupG__KVIndraanalysis(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVIndraanalysis()");
  G__set_cpp_environmentG__KVIndraanalysis();
  G__cpp_setup_tagtableG__KVIndraanalysis();

  G__cpp_setup_inheritanceG__KVIndraanalysis();

  G__cpp_setup_typetableG__KVIndraanalysis();

  G__cpp_setup_memvarG__KVIndraanalysis();

  G__cpp_setup_memfuncG__KVIndraanalysis();
  G__cpp_setup_globalG__KVIndraanalysis();
  G__cpp_setup_funcG__KVIndraanalysis();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVIndraanalysis();
  return;
}
class G__cpp_setup_initG__KVIndraanalysis {
  public:
    G__cpp_setup_initG__KVIndraanalysis() { G__add_setup_func("G__KVIndraanalysis",(G__incsetup)(&G__cpp_setupG__KVIndraanalysis)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVIndraanalysis() { G__remove_setup_func("G__KVIndraanalysis"); }
};
G__cpp_setup_initG__KVIndraanalysis G__cpp_setup_initializerG__KVIndraanalysis;

