//
// File generated by rootcint at Fri Jul 17 15:51:52 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVIndrageometry
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVIndrageometry.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVLightEnergyCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVLightEnergyCsI(void *p = 0);
   static void *newArray_KVLightEnergyCsI(Long_t size, void *p);
   static void delete_KVLightEnergyCsI(void *p);
   static void deleteArray_KVLightEnergyCsI(void *p);
   static void destruct_KVLightEnergyCsI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVLightEnergyCsI*)
   {
      ::KVLightEnergyCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVLightEnergyCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVLightEnergyCsI", ::KVLightEnergyCsI::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVLightEnergyCsI.h", 23,
                  typeid(::KVLightEnergyCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVLightEnergyCsI::Dictionary, isa_proxy, 4,
                  sizeof(::KVLightEnergyCsI) );
      instance.SetNew(&new_KVLightEnergyCsI);
      instance.SetNewArray(&newArray_KVLightEnergyCsI);
      instance.SetDelete(&delete_KVLightEnergyCsI);
      instance.SetDeleteArray(&deleteArray_KVLightEnergyCsI);
      instance.SetDestructor(&destruct_KVLightEnergyCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVLightEnergyCsI*)
   {
      return GenerateInitInstanceLocal((::KVLightEnergyCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVLightEnergyCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRATelescope_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRATelescope(void *p = 0);
   static void *newArray_KVINDRATelescope(Long_t size, void *p);
   static void delete_KVINDRATelescope(void *p);
   static void deleteArray_KVINDRATelescope(void *p);
   static void destruct_KVINDRATelescope(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRATelescope*)
   {
      ::KVINDRATelescope *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRATelescope >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRATelescope", ::KVINDRATelescope::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVINDRATelescope.h", 12,
                  typeid(::KVINDRATelescope), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRATelescope::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRATelescope) );
      instance.SetNew(&new_KVINDRATelescope);
      instance.SetNewArray(&newArray_KVINDRATelescope);
      instance.SetDelete(&delete_KVINDRATelescope);
      instance.SetDeleteArray(&deleteArray_KVINDRATelescope);
      instance.SetDestructor(&destruct_KVINDRATelescope);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRATelescope*)
   {
      return GenerateInitInstanceLocal((::KVINDRATelescope*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRATelescope*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADetector(void *p = 0);
   static void *newArray_KVINDRADetector(Long_t size, void *p);
   static void delete_KVINDRADetector(void *p);
   static void deleteArray_KVINDRADetector(void *p);
   static void destruct_KVINDRADetector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADetector*)
   {
      ::KVINDRADetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADetector", ::KVINDRADetector::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVINDRADetector.h", 11,
                  typeid(::KVINDRADetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADetector::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRADetector) );
      instance.SetNew(&new_KVINDRADetector);
      instance.SetNewArray(&newArray_KVINDRADetector);
      instance.SetDelete(&delete_KVINDRADetector);
      instance.SetDeleteArray(&deleteArray_KVINDRADetector);
      instance.SetDestructor(&destruct_KVINDRADetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADetector*)
   {
      return GenerateInitInstanceLocal((::KVINDRADetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVCsI(void *p = 0);
   static void *newArray_KVCsI(Long_t size, void *p);
   static void delete_KVCsI(void *p);
   static void deleteArray_KVCsI(void *p);
   static void destruct_KVCsI(void *p);
   static void streamer_KVCsI(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVCsI*)
   {
      ::KVCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVCsI", ::KVCsI::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVCsI.h", 35,
                  typeid(::KVCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVCsI::Dictionary, isa_proxy, 1,
                  sizeof(::KVCsI) );
      instance.SetNew(&new_KVCsI);
      instance.SetNewArray(&newArray_KVCsI);
      instance.SetDelete(&delete_KVCsI);
      instance.SetDeleteArray(&deleteArray_KVCsI);
      instance.SetDestructor(&destruct_KVCsI);
      instance.SetStreamerFunc(&streamer_KVCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVCsI*)
   {
      return GenerateInitInstanceLocal((::KVCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVChIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVChIo(void *p = 0);
   static void *newArray_KVChIo(Long_t size, void *p);
   static void delete_KVChIo(void *p);
   static void deleteArray_KVChIo(void *p);
   static void destruct_KVChIo(void *p);
   static void streamer_KVChIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVChIo*)
   {
      ::KVChIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVChIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVChIo", ::KVChIo::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVChIo.h", 21,
                  typeid(::KVChIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVChIo::Dictionary, isa_proxy, 1,
                  sizeof(::KVChIo) );
      instance.SetNew(&new_KVChIo);
      instance.SetNewArray(&newArray_KVChIo);
      instance.SetDelete(&delete_KVChIo);
      instance.SetDeleteArray(&deleteArray_KVChIo);
      instance.SetDestructor(&destruct_KVChIo);
      instance.SetStreamerFunc(&streamer_KVChIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVChIo*)
   {
      return GenerateInitInstanceLocal((::KVChIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVChIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVChIo_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVChIo_e475s(void *p = 0);
   static void *newArray_KVChIo_e475s(Long_t size, void *p);
   static void delete_KVChIo_e475s(void *p);
   static void deleteArray_KVChIo_e475s(void *p);
   static void destruct_KVChIo_e475s(void *p);
   static void streamer_KVChIo_e475s(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVChIo_e475s*)
   {
      ::KVChIo_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVChIo_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVChIo_e475s", ::KVChIo_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVChIo_e475s.h", 19,
                  typeid(::KVChIo_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVChIo_e475s::Dictionary, isa_proxy, 1,
                  sizeof(::KVChIo_e475s) );
      instance.SetNew(&new_KVChIo_e475s);
      instance.SetNewArray(&newArray_KVChIo_e475s);
      instance.SetDelete(&delete_KVChIo_e475s);
      instance.SetDeleteArray(&deleteArray_KVChIo_e475s);
      instance.SetDestructor(&destruct_KVChIo_e475s);
      instance.SetStreamerFunc(&streamer_KVChIo_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVChIo_e475s*)
   {
      return GenerateInitInstanceLocal((::KVChIo_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVChIo_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSilicon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSilicon(void *p = 0);
   static void *newArray_KVSilicon(Long_t size, void *p);
   static void delete_KVSilicon(void *p);
   static void deleteArray_KVSilicon(void *p);
   static void destruct_KVSilicon(void *p);
   static void streamer_KVSilicon(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSilicon*)
   {
      ::KVSilicon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSilicon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSilicon", ::KVSilicon::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVSilicon.h", 24,
                  typeid(::KVSilicon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSilicon::Dictionary, isa_proxy, 1,
                  sizeof(::KVSilicon) );
      instance.SetNew(&new_KVSilicon);
      instance.SetNewArray(&newArray_KVSilicon);
      instance.SetDelete(&delete_KVSilicon);
      instance.SetDeleteArray(&deleteArray_KVSilicon);
      instance.SetDestructor(&destruct_KVSilicon);
      instance.SetStreamerFunc(&streamer_KVSilicon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSilicon*)
   {
      return GenerateInitInstanceLocal((::KVSilicon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSilicon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSi75_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSi75(void *p = 0);
   static void *newArray_KVSi75(Long_t size, void *p);
   static void delete_KVSi75(void *p);
   static void deleteArray_KVSi75(void *p);
   static void destruct_KVSi75(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSi75*)
   {
      ::KVSi75 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSi75 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSi75", ::KVSi75::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVSilicon.h", 101,
                  typeid(::KVSi75), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSi75::Dictionary, isa_proxy, 4,
                  sizeof(::KVSi75) );
      instance.SetNew(&new_KVSi75);
      instance.SetNewArray(&newArray_KVSi75);
      instance.SetDelete(&delete_KVSi75);
      instance.SetDeleteArray(&deleteArray_KVSi75);
      instance.SetDestructor(&destruct_KVSi75);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSi75*)
   {
      return GenerateInitInstanceLocal((::KVSi75*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSi75*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSiLi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSiLi(void *p = 0);
   static void *newArray_KVSiLi(Long_t size, void *p);
   static void delete_KVSiLi(void *p);
   static void deleteArray_KVSiLi(void *p);
   static void destruct_KVSiLi(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSiLi*)
   {
      ::KVSiLi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSiLi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSiLi", ::KVSiLi::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVSilicon.h", 112,
                  typeid(::KVSiLi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSiLi::Dictionary, isa_proxy, 4,
                  sizeof(::KVSiLi) );
      instance.SetNew(&new_KVSiLi);
      instance.SetNewArray(&newArray_KVSiLi);
      instance.SetDelete(&delete_KVSiLi);
      instance.SetDeleteArray(&deleteArray_KVSiLi);
      instance.SetDestructor(&destruct_KVSiLi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSiLi*)
   {
      return GenerateInitInstanceLocal((::KVSiLi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSiLi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVBIC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVBIC(void *p = 0);
   static void *newArray_KVBIC(Long_t size, void *p);
   static void delete_KVBIC(void *p);
   static void deleteArray_KVBIC(void *p);
   static void destruct_KVBIC(void *p);
   static void streamer_KVBIC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVBIC*)
   {
      ::KVBIC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVBIC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVBIC", ::KVBIC::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVBIC.h", 24,
                  typeid(::KVBIC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVBIC::Dictionary, isa_proxy, 1,
                  sizeof(::KVBIC) );
      instance.SetNew(&new_KVBIC);
      instance.SetNewArray(&newArray_KVBIC);
      instance.SetDelete(&delete_KVBIC);
      instance.SetDeleteArray(&deleteArray_KVBIC);
      instance.SetDestructor(&destruct_KVBIC);
      instance.SetStreamerFunc(&streamer_KVBIC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVBIC*)
   {
      return GenerateInitInstanceLocal((::KVBIC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVBIC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSiB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSiB(void *p = 0);
   static void *newArray_KVSiB(Long_t size, void *p);
   static void delete_KVSiB(void *p);
   static void deleteArray_KVSiB(void *p);
   static void destruct_KVSiB(void *p);
   static void streamer_KVSiB(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSiB*)
   {
      ::KVSiB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSiB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSiB", ::KVSiB::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVSiB.h", 26,
                  typeid(::KVSiB), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSiB::Dictionary, isa_proxy, 1,
                  sizeof(::KVSiB) );
      instance.SetNew(&new_KVSiB);
      instance.SetNewArray(&newArray_KVSiB);
      instance.SetDelete(&delete_KVSiB);
      instance.SetDeleteArray(&deleteArray_KVSiB);
      instance.SetDestructor(&destruct_KVSiB);
      instance.SetStreamerFunc(&streamer_KVSiB);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSiB*)
   {
      return GenerateInitInstanceLocal((::KVSiB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSiB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVPhoswich_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVPhoswich(void *p = 0);
   static void *newArray_KVPhoswich(Long_t size, void *p);
   static void delete_KVPhoswich(void *p);
   static void deleteArray_KVPhoswich(void *p);
   static void destruct_KVPhoswich(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVPhoswich*)
   {
      ::KVPhoswich *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVPhoswich >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVPhoswich", ::KVPhoswich::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVPhoswich.h", 24,
                  typeid(::KVPhoswich), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVPhoswich::Dictionary, isa_proxy, 4,
                  sizeof(::KVPhoswich) );
      instance.SetNew(&new_KVPhoswich);
      instance.SetNewArray(&newArray_KVPhoswich);
      instance.SetDelete(&delete_KVPhoswich);
      instance.SetDeleteArray(&deleteArray_KVPhoswich);
      instance.SetDestructor(&destruct_KVPhoswich);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVPhoswich*)
   {
      return GenerateInitInstanceLocal((::KVPhoswich*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVPhoswich*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVSilicon_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVSilicon_e475s(void *p = 0);
   static void *newArray_KVSilicon_e475s(Long_t size, void *p);
   static void delete_KVSilicon_e475s(void *p);
   static void deleteArray_KVSilicon_e475s(void *p);
   static void destruct_KVSilicon_e475s(void *p);
   static void streamer_KVSilicon_e475s(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVSilicon_e475s*)
   {
      ::KVSilicon_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVSilicon_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVSilicon_e475s", ::KVSilicon_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVSilicon_e475s.h", 20,
                  typeid(::KVSilicon_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVSilicon_e475s::Dictionary, isa_proxy, 1,
                  sizeof(::KVSilicon_e475s) );
      instance.SetNew(&new_KVSilicon_e475s);
      instance.SetNewArray(&newArray_KVSilicon_e475s);
      instance.SetDelete(&delete_KVSilicon_e475s);
      instance.SetDeleteArray(&deleteArray_KVSilicon_e475s);
      instance.SetDestructor(&destruct_KVSilicon_e475s);
      instance.SetStreamerFunc(&streamer_KVSilicon_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVSilicon_e475s*)
   {
      return GenerateInitInstanceLocal((::KVSilicon_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVSilicon_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVTelBlocking_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVTelBlocking(void *p = 0);
   static void *newArray_KVTelBlocking(Long_t size, void *p);
   static void delete_KVTelBlocking(void *p);
   static void deleteArray_KVTelBlocking(void *p);
   static void destruct_KVTelBlocking(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVTelBlocking*)
   {
      ::KVTelBlocking *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVTelBlocking >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVTelBlocking", ::KVTelBlocking::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVTelBlocking.h", 23,
                  typeid(::KVTelBlocking), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVTelBlocking::Dictionary, isa_proxy, 4,
                  sizeof(::KVTelBlocking) );
      instance.SetNew(&new_KVTelBlocking);
      instance.SetNewArray(&newArray_KVTelBlocking);
      instance.SetDelete(&delete_KVTelBlocking);
      instance.SetDeleteArray(&deleteArray_KVTelBlocking);
      instance.SetDestructor(&destruct_KVTelBlocking);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVTelBlocking*)
   {
      return GenerateInitInstanceLocal((::KVTelBlocking*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVTelBlocking*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVCsI_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVCsI_e475s(void *p = 0);
   static void *newArray_KVCsI_e475s(Long_t size, void *p);
   static void delete_KVCsI_e475s(void *p);
   static void deleteArray_KVCsI_e475s(void *p);
   static void destruct_KVCsI_e475s(void *p);
   static void streamer_KVCsI_e475s(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVCsI_e475s*)
   {
      ::KVCsI_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVCsI_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVCsI_e475s", ::KVCsI_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVCsI_e475s.h", 20,
                  typeid(::KVCsI_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVCsI_e475s::Dictionary, isa_proxy, 1,
                  sizeof(::KVCsI_e475s) );
      instance.SetNew(&new_KVCsI_e475s);
      instance.SetNewArray(&newArray_KVCsI_e475s);
      instance.SetDelete(&delete_KVCsI_e475s);
      instance.SetDeleteArray(&deleteArray_KVCsI_e475s);
      instance.SetDestructor(&destruct_KVCsI_e475s);
      instance.SetStreamerFunc(&streamer_KVCsI_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVCsI_e475s*)
   {
      return GenerateInitInstanceLocal((::KVCsI_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVCsI_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVChannelEnergyBrho_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVChannelEnergyBrho(void *p = 0);
   static void *newArray_KVChannelEnergyBrho(Long_t size, void *p);
   static void delete_KVChannelEnergyBrho(void *p);
   static void deleteArray_KVChannelEnergyBrho(void *p);
   static void destruct_KVChannelEnergyBrho(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVChannelEnergyBrho*)
   {
      ::KVChannelEnergyBrho *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVChannelEnergyBrho >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVChannelEnergyBrho", ::KVChannelEnergyBrho::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVChannelEnergyBrho.h", 23,
                  typeid(::KVChannelEnergyBrho), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVChannelEnergyBrho::Dictionary, isa_proxy, 4,
                  sizeof(::KVChannelEnergyBrho) );
      instance.SetNew(&new_KVChannelEnergyBrho);
      instance.SetNewArray(&newArray_KVChannelEnergyBrho);
      instance.SetDelete(&delete_KVChannelEnergyBrho);
      instance.SetDeleteArray(&deleteArray_KVChannelEnergyBrho);
      instance.SetDestructor(&destruct_KVChannelEnergyBrho);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVChannelEnergyBrho*)
   {
      return GenerateInitInstanceLocal((::KVChannelEnergyBrho*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVChannelEnergyBrho*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVChannelEnergyChIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVChannelEnergyChIo(void *p = 0);
   static void *newArray_KVChannelEnergyChIo(Long_t size, void *p);
   static void delete_KVChannelEnergyChIo(void *p);
   static void deleteArray_KVChannelEnergyChIo(void *p);
   static void destruct_KVChannelEnergyChIo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVChannelEnergyChIo*)
   {
      ::KVChannelEnergyChIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVChannelEnergyChIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVChannelEnergyChIo", ::KVChannelEnergyChIo::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/geometry/KVChannelEnergyChIo.h", 23,
                  typeid(::KVChannelEnergyChIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVChannelEnergyChIo::Dictionary, isa_proxy, 4,
                  sizeof(::KVChannelEnergyChIo) );
      instance.SetNew(&new_KVChannelEnergyChIo);
      instance.SetNewArray(&newArray_KVChannelEnergyChIo);
      instance.SetDelete(&delete_KVChannelEnergyChIo);
      instance.SetDeleteArray(&deleteArray_KVChannelEnergyChIo);
      instance.SetDestructor(&destruct_KVChannelEnergyChIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVChannelEnergyChIo*)
   {
      return GenerateInitInstanceLocal((::KVChannelEnergyChIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVChannelEnergyChIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVLightEnergyCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVLightEnergyCsI::Class_Name()
{
   return "KVLightEnergyCsI";
}

//______________________________________________________________________________
const char *KVLightEnergyCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVLightEnergyCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVLightEnergyCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVLightEnergyCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVLightEnergyCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVLightEnergyCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVLightEnergyCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVLightEnergyCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRATelescope::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRATelescope::Class_Name()
{
   return "KVINDRATelescope";
}

//______________________________________________________________________________
const char *KVINDRATelescope::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRATelescope*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRATelescope::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRATelescope*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRATelescope::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRATelescope*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRATelescope::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRATelescope*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADetector::Class_Name()
{
   return "KVINDRADetector";
}

//______________________________________________________________________________
const char *KVINDRADetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVCsI::Class_Name()
{
   return "KVCsI";
}

//______________________________________________________________________________
const char *KVCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVChIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVChIo::Class_Name()
{
   return "KVChIo";
}

//______________________________________________________________________________
const char *KVChIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVChIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVChIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVChIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVChIo_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVChIo_e475s::Class_Name()
{
   return "KVChIo_e475s";
}

//______________________________________________________________________________
const char *KVChIo_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChIo_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVChIo_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChIo_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVChIo_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChIo_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVChIo_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChIo_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSilicon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSilicon::Class_Name()
{
   return "KVSilicon";
}

//______________________________________________________________________________
const char *KVSilicon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSilicon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSilicon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSilicon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSilicon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSilicon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSilicon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSilicon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSi75::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSi75::Class_Name()
{
   return "KVSi75";
}

//______________________________________________________________________________
const char *KVSi75::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSi75*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSi75::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSi75*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSi75::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSi75*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSi75::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSi75*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSiLi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSiLi::Class_Name()
{
   return "KVSiLi";
}

//______________________________________________________________________________
const char *KVSiLi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiLi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSiLi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiLi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSiLi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiLi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSiLi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiLi*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVBIC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVBIC::Class_Name()
{
   return "KVBIC";
}

//______________________________________________________________________________
const char *KVBIC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVBIC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVBIC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVBIC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVBIC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVBIC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVBIC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVBIC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSiB::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSiB::Class_Name()
{
   return "KVSiB";
}

//______________________________________________________________________________
const char *KVSiB::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSiB::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSiB::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSiB::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSiB*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVPhoswich::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVPhoswich::Class_Name()
{
   return "KVPhoswich";
}

//______________________________________________________________________________
const char *KVPhoswich::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVPhoswich*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVPhoswich::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVPhoswich*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVPhoswich::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVPhoswich*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVPhoswich::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVPhoswich*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVSilicon_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVSilicon_e475s::Class_Name()
{
   return "KVSilicon_e475s";
}

//______________________________________________________________________________
const char *KVSilicon_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSilicon_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVSilicon_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVSilicon_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVSilicon_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSilicon_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVSilicon_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVSilicon_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVTelBlocking::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVTelBlocking::Class_Name()
{
   return "KVTelBlocking";
}

//______________________________________________________________________________
const char *KVTelBlocking::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVTelBlocking*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVTelBlocking::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVTelBlocking*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVTelBlocking::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVTelBlocking*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVTelBlocking::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVTelBlocking*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVCsI_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVCsI_e475s::Class_Name()
{
   return "KVCsI_e475s";
}

//______________________________________________________________________________
const char *KVCsI_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsI_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVCsI_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsI_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVCsI_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsI_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVCsI_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVCsI_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVChannelEnergyBrho::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVChannelEnergyBrho::Class_Name()
{
   return "KVChannelEnergyBrho";
}

//______________________________________________________________________________
const char *KVChannelEnergyBrho::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChannelEnergyBrho*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVChannelEnergyBrho::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChannelEnergyBrho*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVChannelEnergyBrho::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChannelEnergyBrho*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVChannelEnergyBrho::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChannelEnergyBrho*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVChannelEnergyChIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVChannelEnergyChIo::Class_Name()
{
   return "KVChannelEnergyChIo";
}

//______________________________________________________________________________
const char *KVChannelEnergyChIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChannelEnergyChIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVChannelEnergyChIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVChannelEnergyChIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVChannelEnergyChIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChannelEnergyChIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVChannelEnergyChIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVChannelEnergyChIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVINDRADetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRADetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRADetector::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRADetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADetector.
      TClass *R__cl = ::KVINDRADetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGGtoPG_0", &fGGtoPG_0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGGtoPG_1", &fGGtoPG_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChIo", &fChIo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumeroCodeur", &NumeroCodeur);
      KVDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADetector(void *p) {
      return  p ? new(p) ::KVINDRADetector : new ::KVINDRADetector;
   }
   static void *newArray_KVINDRADetector(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADetector[nElements] : new ::KVINDRADetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADetector(void *p) {
      delete ((::KVINDRADetector*)p);
   }
   static void deleteArray_KVINDRADetector(void *p) {
      delete [] ((::KVINDRADetector*)p);
   }
   static void destruct_KVINDRADetector(void *p) {
      typedef ::KVINDRADetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRADetector

//______________________________________________________________________________
void KVINDRATelescope::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRATelescope.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRATelescope::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRATelescope::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRATelescope::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRATelescope.
      TClass *R__cl = ::KVINDRATelescope::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRATelescope(void *p) {
      return  p ? new(p) ::KVINDRATelescope : new ::KVINDRATelescope;
   }
   static void *newArray_KVINDRATelescope(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRATelescope[nElements] : new ::KVINDRATelescope[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRATelescope(void *p) {
      delete ((::KVINDRATelescope*)p);
   }
   static void deleteArray_KVINDRATelescope(void *p) {
      delete [] ((::KVINDRATelescope*)p);
   }
   static void destruct_KVINDRATelescope(void *p) {
      typedef ::KVINDRATelescope current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRATelescope

//______________________________________________________________________________
void KVSilicon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSilicon.
      TClass *R__cl = ::KVSilicon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChVoltGG", &fChVoltGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChVoltPG", &fChVoltPG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVoltE", &fVoltE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPHD", &fPHD);
      KVINDRADetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSilicon(void *p) {
      return  p ? new(p) ::KVSilicon : new ::KVSilicon;
   }
   static void *newArray_KVSilicon(Long_t nElements, void *p) {
      return p ? new(p) ::KVSilicon[nElements] : new ::KVSilicon[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSilicon(void *p) {
      delete ((::KVSilicon*)p);
   }
   static void deleteArray_KVSilicon(void *p) {
      delete [] ((::KVSilicon*)p);
   }
   static void destruct_KVSilicon(void *p) {
      typedef ::KVSilicon current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSilicon(TBuffer &buf, void *obj) {
      ((::KVSilicon*)obj)->::KVSilicon::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSilicon

//______________________________________________________________________________
void KVSi75::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSi75.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVSi75::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVSi75::Class(),this);
   }
}

//______________________________________________________________________________
void KVSi75::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSi75.
      TClass *R__cl = ::KVSi75::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVSilicon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSi75(void *p) {
      return  p ? new(p) ::KVSi75 : new ::KVSi75;
   }
   static void *newArray_KVSi75(Long_t nElements, void *p) {
      return p ? new(p) ::KVSi75[nElements] : new ::KVSi75[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSi75(void *p) {
      delete ((::KVSi75*)p);
   }
   static void deleteArray_KVSi75(void *p) {
      delete [] ((::KVSi75*)p);
   }
   static void destruct_KVSi75(void *p) {
      typedef ::KVSi75 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVSi75

//______________________________________________________________________________
void KVSiLi::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVSiLi.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVSiLi::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVSiLi::Class(),this);
   }
}

//______________________________________________________________________________
void KVSiLi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSiLi.
      TClass *R__cl = ::KVSiLi::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVSilicon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSiLi(void *p) {
      return  p ? new(p) ::KVSiLi : new ::KVSiLi;
   }
   static void *newArray_KVSiLi(Long_t nElements, void *p) {
      return p ? new(p) ::KVSiLi[nElements] : new ::KVSiLi[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSiLi(void *p) {
      delete ((::KVSiLi*)p);
   }
   static void deleteArray_KVSiLi(void *p) {
      delete [] ((::KVSiLi*)p);
   }
   static void destruct_KVSiLi(void *p) {
      typedef ::KVSiLi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVSiLi

//______________________________________________________________________________
void KVSilicon_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSilicon_e475s.
      TClass *R__cl = ::KVSilicon_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcalibPG", &fcalibPG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcalibGG", &fcalibGG);
      KVSilicon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSilicon_e475s(void *p) {
      return  p ? new(p) ::KVSilicon_e475s : new ::KVSilicon_e475s;
   }
   static void *newArray_KVSilicon_e475s(Long_t nElements, void *p) {
      return p ? new(p) ::KVSilicon_e475s[nElements] : new ::KVSilicon_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSilicon_e475s(void *p) {
      delete ((::KVSilicon_e475s*)p);
   }
   static void deleteArray_KVSilicon_e475s(void *p) {
      delete [] ((::KVSilicon_e475s*)p);
   }
   static void destruct_KVSilicon_e475s(void *p) {
      typedef ::KVSilicon_e475s current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSilicon_e475s(TBuffer &buf, void *obj) {
      ((::KVSilicon_e475s*)obj)->::KVSilicon_e475s::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSilicon_e475s

//______________________________________________________________________________
void KVChIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVChIo.
      TClass *R__cl = ::KVChIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChVoltGG", &fChVoltGG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChVoltPG", &fChVoltPG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVoltE", &fVoltE);
      KVINDRADetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVChIo(void *p) {
      return  p ? new(p) ::KVChIo : new ::KVChIo;
   }
   static void *newArray_KVChIo(Long_t nElements, void *p) {
      return p ? new(p) ::KVChIo[nElements] : new ::KVChIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVChIo(void *p) {
      delete ((::KVChIo*)p);
   }
   static void deleteArray_KVChIo(void *p) {
      delete [] ((::KVChIo*)p);
   }
   static void destruct_KVChIo(void *p) {
      typedef ::KVChIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVChIo(TBuffer &buf, void *obj) {
      ((::KVChIo*)obj)->::KVChIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVChIo

//______________________________________________________________________________
void KVChIo_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVChIo_e475s.
      TClass *R__cl = ::KVChIo_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcalibPG", &fcalibPG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcalibGG", &fcalibGG);
      KVChIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVChIo_e475s(void *p) {
      return  p ? new(p) ::KVChIo_e475s : new ::KVChIo_e475s;
   }
   static void *newArray_KVChIo_e475s(Long_t nElements, void *p) {
      return p ? new(p) ::KVChIo_e475s[nElements] : new ::KVChIo_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVChIo_e475s(void *p) {
      delete ((::KVChIo_e475s*)p);
   }
   static void deleteArray_KVChIo_e475s(void *p) {
      delete [] ((::KVChIo_e475s*)p);
   }
   static void destruct_KVChIo_e475s(void *p) {
      typedef ::KVChIo_e475s current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVChIo_e475s(TBuffer &buf, void *obj) {
      ((::KVChIo_e475s*)obj)->::KVChIo_e475s::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVChIo_e475s

//______________________________________________________________________________
void KVCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVCsI.
      TClass *R__cl = ::KVCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLumiereTotale", &fLumiereTotale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLumTotStatus", &fLumTotStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA1", &fA1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA2", &fA2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA3", &fA3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalZ1", &fCalZ1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCal", &fCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPinLaser", &fPinLaser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGainCorrection", &fGainCorrection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fACQ_R", &fACQ_R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fACQ_L", &fACQ_L);
      KVINDRADetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVCsI(void *p) {
      return  p ? new(p) ::KVCsI : new ::KVCsI;
   }
   static void *newArray_KVCsI(Long_t nElements, void *p) {
      return p ? new(p) ::KVCsI[nElements] : new ::KVCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVCsI(void *p) {
      delete ((::KVCsI*)p);
   }
   static void deleteArray_KVCsI(void *p) {
      delete [] ((::KVCsI*)p);
   }
   static void destruct_KVCsI(void *p) {
      typedef ::KVCsI current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVCsI(TBuffer &buf, void *obj) {
      ((::KVCsI*)obj)->::KVCsI::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVCsI

//______________________________________________________________________________
void KVCsI_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVCsI_e475s.
      TClass *R__cl = ::KVCsI_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcalibLT", &fcalibLT);
      KVCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVCsI_e475s(void *p) {
      return  p ? new(p) ::KVCsI_e475s : new ::KVCsI_e475s;
   }
   static void *newArray_KVCsI_e475s(Long_t nElements, void *p) {
      return p ? new(p) ::KVCsI_e475s[nElements] : new ::KVCsI_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVCsI_e475s(void *p) {
      delete ((::KVCsI_e475s*)p);
   }
   static void deleteArray_KVCsI_e475s(void *p) {
      delete [] ((::KVCsI_e475s*)p);
   }
   static void destruct_KVCsI_e475s(void *p) {
      typedef ::KVCsI_e475s current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVCsI_e475s(TBuffer &buf, void *obj) {
      ((::KVCsI_e475s*)obj)->::KVCsI_e475s::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVCsI_e475s

//______________________________________________________________________________
void KVPhoswich::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVPhoswich.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVPhoswich::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVPhoswich::Class(),this);
   }
}

//______________________________________________________________________________
void KVPhoswich::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVPhoswich.
      TClass *R__cl = ::KVPhoswich::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRADetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVPhoswich(void *p) {
      return  p ? new(p) ::KVPhoswich : new ::KVPhoswich;
   }
   static void *newArray_KVPhoswich(Long_t nElements, void *p) {
      return p ? new(p) ::KVPhoswich[nElements] : new ::KVPhoswich[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVPhoswich(void *p) {
      delete ((::KVPhoswich*)p);
   }
   static void deleteArray_KVPhoswich(void *p) {
      delete [] ((::KVPhoswich*)p);
   }
   static void destruct_KVPhoswich(void *p) {
      typedef ::KVPhoswich current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVPhoswich

//______________________________________________________________________________
void KVBIC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVBIC.
      TClass *R__cl = ::KVBIC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBomb", &fBomb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLinCal", &fLinCal);
      KVChIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVBIC(void *p) {
      return  p ? new(p) ::KVBIC : new ::KVBIC;
   }
   static void *newArray_KVBIC(Long_t nElements, void *p) {
      return p ? new(p) ::KVBIC[nElements] : new ::KVBIC[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVBIC(void *p) {
      delete ((::KVBIC*)p);
   }
   static void deleteArray_KVBIC(void *p) {
      delete [] ((::KVBIC*)p);
   }
   static void destruct_KVBIC(void *p) {
      typedef ::KVBIC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVBIC(TBuffer &buf, void *obj) {
      ((::KVBIC*)obj)->::KVBIC::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVBIC

//______________________________________________________________________________
void KVSiB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVSiB.
      TClass *R__cl = ::KVSiB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLinCal", &fLinCal);
      KVSilicon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVSiB(void *p) {
      return  p ? new(p) ::KVSiB : new ::KVSiB;
   }
   static void *newArray_KVSiB(Long_t nElements, void *p) {
      return p ? new(p) ::KVSiB[nElements] : new ::KVSiB[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVSiB(void *p) {
      delete ((::KVSiB*)p);
   }
   static void deleteArray_KVSiB(void *p) {
      delete [] ((::KVSiB*)p);
   }
   static void destruct_KVSiB(void *p) {
      typedef ::KVSiB current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVSiB(TBuffer &buf, void *obj) {
      ((::KVSiB*)obj)->::KVSiB::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVSiB

//______________________________________________________________________________
void KVTelBlocking::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVTelBlocking.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVTelBlocking::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVTelBlocking::Class(),this);
   }
}

//______________________________________________________________________________
void KVTelBlocking::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVTelBlocking.
      TClass *R__cl = ::KVTelBlocking::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVTelBlocking(void *p) {
      return  p ? new(p) ::KVTelBlocking : new ::KVTelBlocking;
   }
   static void *newArray_KVTelBlocking(Long_t nElements, void *p) {
      return p ? new(p) ::KVTelBlocking[nElements] : new ::KVTelBlocking[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVTelBlocking(void *p) {
      delete ((::KVTelBlocking*)p);
   }
   static void deleteArray_KVTelBlocking(void *p) {
      delete [] ((::KVTelBlocking*)p);
   }
   static void destruct_KVTelBlocking(void *p) {
      typedef ::KVTelBlocking current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVTelBlocking

//______________________________________________________________________________
void KVLightEnergyCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVLightEnergyCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVLightEnergyCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVLightEnergyCsI::Class(),this);
   }
}

//______________________________________________________________________________
void KVLightEnergyCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVLightEnergyCsI.
      TClass *R__cl = ::KVLightEnergyCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA", &fA);
      KVCalibrator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVLightEnergyCsI(void *p) {
      return  p ? new(p) ::KVLightEnergyCsI : new ::KVLightEnergyCsI;
   }
   static void *newArray_KVLightEnergyCsI(Long_t nElements, void *p) {
      return p ? new(p) ::KVLightEnergyCsI[nElements] : new ::KVLightEnergyCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVLightEnergyCsI(void *p) {
      delete ((::KVLightEnergyCsI*)p);
   }
   static void deleteArray_KVLightEnergyCsI(void *p) {
      delete [] ((::KVLightEnergyCsI*)p);
   }
   static void destruct_KVLightEnergyCsI(void *p) {
      typedef ::KVLightEnergyCsI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVLightEnergyCsI

//______________________________________________________________________________
void KVChannelEnergyChIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVChannelEnergyChIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVChannelEnergyChIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVChannelEnergyChIo::Class(),this);
   }
}

//______________________________________________________________________________
void KVChannelEnergyChIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVChannelEnergyChIo.
      TClass *R__cl = ::KVChannelEnergyChIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVCalibrator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVChannelEnergyChIo(void *p) {
      return  p ? new(p) ::KVChannelEnergyChIo : new ::KVChannelEnergyChIo;
   }
   static void *newArray_KVChannelEnergyChIo(Long_t nElements, void *p) {
      return p ? new(p) ::KVChannelEnergyChIo[nElements] : new ::KVChannelEnergyChIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVChannelEnergyChIo(void *p) {
      delete ((::KVChannelEnergyChIo*)p);
   }
   static void deleteArray_KVChannelEnergyChIo(void *p) {
      delete [] ((::KVChannelEnergyChIo*)p);
   }
   static void destruct_KVChannelEnergyChIo(void *p) {
      typedef ::KVChannelEnergyChIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVChannelEnergyChIo

//______________________________________________________________________________
void KVChannelEnergyBrho::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVChannelEnergyBrho.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVChannelEnergyBrho::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVChannelEnergyBrho::Class(),this);
   }
}

//______________________________________________________________________________
void KVChannelEnergyBrho::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVChannelEnergyBrho.
      TClass *R__cl = ::KVChannelEnergyBrho::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVCalibrator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVChannelEnergyBrho(void *p) {
      return  p ? new(p) ::KVChannelEnergyBrho : new ::KVChannelEnergyBrho;
   }
   static void *newArray_KVChannelEnergyBrho(Long_t nElements, void *p) {
      return p ? new(p) ::KVChannelEnergyBrho[nElements] : new ::KVChannelEnergyBrho[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVChannelEnergyBrho(void *p) {
      delete ((::KVChannelEnergyBrho*)p);
   }
   static void deleteArray_KVChannelEnergyBrho(void *p) {
      delete [] ((::KVChannelEnergyBrho*)p);
   }
   static void destruct_KVChannelEnergyBrho(void *p) {
      typedef ::KVChannelEnergyBrho current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVChannelEnergyBrho

/********************************************************
* G__KVIndrageometry.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVIndrageometry();

extern "C" void G__set_cpp_environmentG__KVIndrageometry() {
  G__cpp_reset_tagtableG__KVIndrageometry();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVIndrageometry() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVLightEnergyCsI */
static int G__G__KVIndrageometry_364_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVLightEnergyCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVLightEnergyCsI[n];
     } else {
       p = new((void*) gvp) KVLightEnergyCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVLightEnergyCsI;
     } else {
       p = new((void*) gvp) KVLightEnergyCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVLightEnergyCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVLightEnergyCsI((KVDetector*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVLightEnergyCsI((KVDetector*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVLightEnergyCsI*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVLightEnergyCsI*) G__getstructoffset())->SetZ((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVLightEnergyCsI*) G__getstructoffset())->SetA((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVLightEnergyCsI*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVLightEnergyCsI*) G__getstructoffset())->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVLightEnergyCsI*) G__getstructoffset())->GetLightEnergyFunction((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVLightEnergyCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLightEnergyCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVLightEnergyCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVLightEnergyCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVLightEnergyCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLightEnergyCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVLightEnergyCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVLightEnergyCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_364_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVLightEnergyCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVLightEnergyCsI G__TKVLightEnergyCsI;
static int G__G__KVIndrageometry_364_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVLightEnergyCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVLightEnergyCsI*) (soff+(sizeof(KVLightEnergyCsI)*i)))->~G__TKVLightEnergyCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVLightEnergyCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVLightEnergyCsI*) (soff))->~G__TKVLightEnergyCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRATelescope */
static int G__G__KVIndrageometry_368_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRATelescope* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRATelescope[n];
     } else {
       p = new((void*) gvp) KVINDRATelescope[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRATelescope;
     } else {
       p = new((void*) gvp) KVINDRATelescope;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVINDRATelescope*) G__getstructoffset())->GetArrayName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVINDRATelescope*) G__getstructoffset())->GetRingNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRATelescope*) G__getstructoffset())->GetRing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRATelescope*) G__getstructoffset())->GetGroup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRATelescope::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRATelescope::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRATelescope::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRATelescope::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRATelescope*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRATelescope::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRATelescope::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRATelescope::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_368_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRATelescope::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRATelescope G__TKVINDRATelescope;
static int G__G__KVIndrageometry_368_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRATelescope*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRATelescope*) (soff+(sizeof(KVINDRATelescope)*i)))->~G__TKVINDRATelescope();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRATelescope*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRATelescope*) (soff))->~G__TKVINDRATelescope();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADetector */
static int G__G__KVIndrageometry_369_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADetector[n];
     } else {
       p = new((void*) gvp) KVINDRADetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADetector;
     } else {
       p = new((void*) gvp) KVINDRADetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADetector((const Char_t*) G__int(libp->para[0]), (const Float_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) KVINDRADetector((const Char_t*) G__int(libp->para[0]), (const Float_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADetector((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVINDRADetector((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADetector*) G__getstructoffset())->GetTelescope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVINDRADetector*) G__getstructoffset())->GetRingNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVINDRADetector*) G__getstructoffset())->GetModuleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADetector*) G__getstructoffset())->AddACQParamType((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVINDRADetector*) G__getstructoffset())->GetPGfromGG((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVINDRADetector*) G__getstructoffset())->GetPGfromGG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVINDRADetector*) G__getstructoffset())->GetGGfromPG((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVINDRADetector*) G__getstructoffset())->GetGGfromPG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADetector*) G__getstructoffset())->GetGGtoPGConversionFactors((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADetector*) G__getstructoffset())->SetGGtoPGConversionFactors((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADetector*) G__getstructoffset())->GetChIo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRADetector*) G__getstructoffset())->GetPG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRADetector*) G__getstructoffset())->GetGG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRADetector*) G__getstructoffset())->GetR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRADetector*) G__getstructoffset())->GetL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((KVINDRADetector*) G__getstructoffset())->GetMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADetector*) G__getstructoffset())->SetNumeroCodeur((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVINDRADetector*) G__getstructoffset())->GetNumeroCodeur());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_369_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADetector G__TKVINDRADetector;
static int G__G__KVIndrageometry_369_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADetector*) (soff+(sizeof(KVINDRADetector)*i)))->~G__TKVINDRADetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADetector*) (soff))->~G__TKVINDRADetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVCsI */
static int G__G__KVIndrageometry_370_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCsI[n];
     } else {
       p = new((void*) gvp) KVCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCsI;
     } else {
       p = new((void*) gvp) KVCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCsI((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) KVCsI((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCsI((Float_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) KVCsI((Float_t) G__double(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCsI*) G__getstructoffset())->SetAlThickness((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetLumiereTotale((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetLumiereTotale((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetLumiereTotale());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetCorrectedLumiereTotale((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetCorrectedLumiereTotale((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetCorrectedLumiereTotale());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetTauZero((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetTauZero((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetTauZero());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCsI*) G__getstructoffset())->SetLumiereTotale((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((KVCsI*) G__getstructoffset())->GetStatusLumiere());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVCsI*) G__getstructoffset())->LightIsGood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetLightFromEnergy((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetLightFromEnergy((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVCsI*) G__getstructoffset())->GetEnergyFromLight((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCsI*) G__getstructoffset())->SetPinLaser((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVCsI*) G__getstructoffset())->GetPinLaser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCsI*) G__getstructoffset())->SetTotalLightGainCorrection((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVCsI*) G__getstructoffset())->GetTotalLightGainCorrection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_370_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVCsI G__TKVCsI;
static int G__G__KVIndrageometry_370_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVCsI*) (soff+(sizeof(KVCsI)*i)))->~G__TKVCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVCsI*) (soff))->~G__TKVCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVChIo */
static int G__G__KVIndrageometry_376_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChIo[n];
     } else {
       p = new((void*) gvp) KVChIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChIo;
     } else {
       p = new((void*) gvp) KVChIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChIo((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) KVChIo((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChIo((Float_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) KVChIo((Float_t) G__double(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetVoltsFromCanalPG((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetVoltsFromCanalPG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetVoltsFromCanalGG((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetVoltsFromCanalGG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetCalibratedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetVolts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetVoltsFromEnergy((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVChIo*) G__getstructoffset())->GetCanalPGFromVolts((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVChIo*) G__getstructoffset())->GetCanalGGFromVolts((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetCanalPGFromVoltsDouble((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetCanalGGFromVoltsDouble((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetEnergyFromVolts((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetEnergyFromVolts());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetELossMylar((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetELossMylar((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((KVChIo*) G__getstructoffset())->GetELossMylar((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChIo*) G__getstructoffset())->SetMylarThicknesses((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVChIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVChIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVChIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_376_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVChIo G__TKVChIo;
static int G__G__KVIndrageometry_376_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVChIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVChIo*) (soff+(sizeof(KVChIo)*i)))->~G__TKVChIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVChIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVChIo*) (soff))->~G__TKVChIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVChIo_e475s */
static int G__G__KVIndrageometry_387_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChIo_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChIo_e475s[n];
     } else {
       p = new((void*) gvp) KVChIo_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChIo_e475s;
     } else {
       p = new((void*) gvp) KVChIo_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChIo_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChIo_e475s((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) KVChIo_e475s((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChIo_e475s((Float_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) KVChIo_e475s((Float_t) G__double(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChIo_e475s*) G__getstructoffset())->SetCalibrator((KVDBParameterSet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChIo_e475s*) G__getstructoffset())->ChangeCalibParameters((KVDBParameterSet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVChIo_e475s*) G__getstructoffset())->GetOriginalValue((Float_t) G__double(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVChIo_e475s*) G__getstructoffset())->GetCalibratedValue((Float_t) G__double(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVChIo_e475s*) G__getstructoffset())->GetCalibratorBySignal(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVChIo_e475s*) G__getstructoffset())->IsCalibratedBySignal(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVChIo_e475s*) G__getstructoffset())->GetCalibratedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVChIo_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChIo_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVChIo_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVChIo_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChIo_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChIo_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChIo_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChIo_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_387_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChIo_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVChIo_e475s G__TKVChIo_e475s;
static int G__G__KVIndrageometry_387_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVChIo_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVChIo_e475s*) (soff+(sizeof(KVChIo_e475s)*i)))->~G__TKVChIo_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVChIo_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVChIo_e475s*) (soff))->~G__TKVChIo_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSilicon */
static int G__G__KVIndrageometry_389_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSilicon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSilicon[n];
     } else {
       p = new((void*) gvp) KVSilicon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSilicon;
     } else {
       p = new((void*) gvp) KVSilicon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSilicon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSilicon((Float_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) KVSilicon((Float_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetVoltsFromCanalPG((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetVoltsFromCanalPG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetVoltsFromCanalGG((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetVoltsFromCanalGG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetCalibratedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetVolts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetVoltsFromEnergy((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVSilicon*) G__getstructoffset())->GetCanalPGFromVolts((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVSilicon*) G__getstructoffset())->GetCanalGGFromVolts((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetCanalPGFromVoltsDouble((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetCanalGGFromVoltsDouble((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetEnergyFromVolts((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetEnergyFromVolts());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSilicon*) G__getstructoffset())->GetPHD((Double_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSilicon*) G__getstructoffset())->SetMoultonPHDParameters((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSilicon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSilicon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSilicon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSilicon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSilicon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSilicon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSilicon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSilicon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_389_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSilicon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSilicon G__TKVSilicon;
static int G__G__KVIndrageometry_389_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSilicon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSilicon*) (soff+(sizeof(KVSilicon)*i)))->~G__TKVSilicon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSilicon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSilicon*) (soff))->~G__TKVSilicon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSi75 */
static int G__G__KVIndrageometry_390_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSi75* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSi75[n];
     } else {
       p = new((void*) gvp) KVSi75[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSi75;
     } else {
       p = new((void*) gvp) KVSi75;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSi75* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSi75((Float_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) KVSi75((Float_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSi75::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSi75::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSi75::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSi75::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSi75*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSi75::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSi75::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSi75::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_390_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSi75::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSi75 G__TKVSi75;
static int G__G__KVIndrageometry_390_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSi75*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSi75*) (soff+(sizeof(KVSi75)*i)))->~G__TKVSi75();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSi75*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSi75*) (soff))->~G__TKVSi75();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSiLi */
static int G__G__KVIndrageometry_391_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSiLi* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSiLi[n];
     } else {
       p = new((void*) gvp) KVSiLi[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSiLi;
     } else {
       p = new((void*) gvp) KVSiLi;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSiLi* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSiLi((Float_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) KVSiLi((Float_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSiLi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSiLi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSiLi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSiLi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSiLi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSiLi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSiLi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSiLi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_391_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSiLi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSiLi G__TKVSiLi;
static int G__G__KVIndrageometry_391_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSiLi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSiLi*) (soff+(sizeof(KVSiLi)*i)))->~G__TKVSiLi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSiLi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSiLi*) (soff))->~G__TKVSiLi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVBIC */
static int G__G__KVIndrageometry_393_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVBIC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVBIC[n];
     } else {
       p = new((void*) gvp) KVBIC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVBIC;
     } else {
       p = new((void*) gvp) KVBIC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVBIC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVBIC((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) KVBIC((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVBIC((Float_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) KVBIC((Float_t) G__double(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBIC*) G__getstructoffset())->AddACQParam((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBIC*) G__getstructoffset())->SetPressure((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBIC*) G__getstructoffset())->SetBombage((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVBIC*) G__getstructoffset())->GetBombage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVBIC*) G__getstructoffset())->GetEffectiveEntryThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((KVBIC*) G__getstructoffset())->GetELossMylar((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((KVBIC*) G__getstructoffset())->GetELossMylar((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVBIC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBIC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVBIC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVBIC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVBIC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBIC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVBIC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVBIC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_393_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVBIC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVBIC G__TKVBIC;
static int G__G__KVIndrageometry_393_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVBIC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVBIC*) (soff+(sizeof(KVBIC)*i)))->~G__TKVBIC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVBIC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVBIC*) (soff))->~G__TKVBIC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSiB */
static int G__G__KVIndrageometry_394_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSiB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSiB[n];
     } else {
       p = new((void*) gvp) KVSiB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSiB;
     } else {
       p = new((void*) gvp) KVSiB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSiB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSiB((Float_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) KVSiB((Float_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVSiB*) G__getstructoffset())->GetP1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVSiB*) G__getstructoffset())->GetP2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVSiB*) G__getstructoffset())->GetP3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVSiB*) G__getstructoffset())->GetP4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVSiB*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVSiB*) G__getstructoffset())->GetBIC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSiB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSiB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSiB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSiB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSiB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSiB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSiB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSiB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_394_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSiB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSiB G__TKVSiB;
static int G__G__KVIndrageometry_394_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSiB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSiB*) (soff+(sizeof(KVSiB)*i)))->~G__TKVSiB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSiB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSiB*) (soff))->~G__TKVSiB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVPhoswich */
static int G__G__KVIndrageometry_395_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVPhoswich* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVPhoswich[n];
     } else {
       p = new((void*) gvp) KVPhoswich[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVPhoswich;
     } else {
       p = new((void*) gvp) KVPhoswich;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVPhoswich* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVPhoswich((Float_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) KVPhoswich((Float_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVPhoswich::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVPhoswich::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVPhoswich::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVPhoswich::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVPhoswich*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVPhoswich::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVPhoswich::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVPhoswich::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_395_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVPhoswich::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVPhoswich G__TKVPhoswich;
static int G__G__KVIndrageometry_395_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVPhoswich*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVPhoswich*) (soff+(sizeof(KVPhoswich)*i)))->~G__TKVPhoswich();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVPhoswich*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVPhoswich*) (soff))->~G__TKVPhoswich();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVSilicon_e475s */
static int G__G__KVIndrageometry_396_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSilicon_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSilicon_e475s[n];
     } else {
       p = new((void*) gvp) KVSilicon_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVSilicon_e475s;
     } else {
       p = new((void*) gvp) KVSilicon_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVSilicon_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVSilicon_e475s((Float_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) KVSilicon_e475s((Float_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSilicon_e475s*) G__getstructoffset())->SetCalibrator((KVDBParameterSet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSilicon_e475s*) G__getstructoffset())->ChangeCalibParameters((KVDBParameterSet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSilicon_e475s*) G__getstructoffset())->GetOriginalValue((Float_t) G__double(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSilicon_e475s*) G__getstructoffset())->GetCalibratedValue((Float_t) G__double(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVSilicon_e475s*) G__getstructoffset())->GetCalibratorBySignal(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVSilicon_e475s*) G__getstructoffset())->IsCalibratedBySignal(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVSilicon_e475s*) G__getstructoffset())->GetCalibratedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVSilicon_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSilicon_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVSilicon_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVSilicon_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVSilicon_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSilicon_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSilicon_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVSilicon_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_396_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVSilicon_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVSilicon_e475s G__TKVSilicon_e475s;
static int G__G__KVIndrageometry_396_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVSilicon_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVSilicon_e475s*) (soff+(sizeof(KVSilicon_e475s)*i)))->~G__TKVSilicon_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVSilicon_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVSilicon_e475s*) (soff))->~G__TKVSilicon_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVTelBlocking */
static int G__G__KVIndrageometry_397_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVTelBlocking* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVTelBlocking((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVTelBlocking((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVTelBlocking[n];
       } else {
         p = new((void*) gvp) KVTelBlocking[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVTelBlocking;
       } else {
         p = new((void*) gvp) KVTelBlocking;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_397_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVTelBlocking::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_397_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVTelBlocking::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_397_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVTelBlocking::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_397_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVTelBlocking::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_397_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVTelBlocking*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_397_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVTelBlocking::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_397_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVTelBlocking::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_397_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVTelBlocking::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_397_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVTelBlocking::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVTelBlocking G__TKVTelBlocking;
static int G__G__KVIndrageometry_397_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVTelBlocking*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVTelBlocking*) (soff+(sizeof(KVTelBlocking)*i)))->~G__TKVTelBlocking();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVTelBlocking*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVTelBlocking*) (soff))->~G__TKVTelBlocking();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVCsI_e475s */
static int G__G__KVIndrageometry_444_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVCsI_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCsI_e475s[n];
     } else {
       p = new((void*) gvp) KVCsI_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVCsI_e475s;
     } else {
       p = new((void*) gvp) KVCsI_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVCsI_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVCsI_e475s((Float_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) KVCsI_e475s((Float_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCsI_e475s*) G__getstructoffset())->SetCalibrator((KVDBParameterSet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCsI_e475s*) G__getstructoffset())->ChangeCalibParameters((KVDBParameterSet*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVCsI_e475s*) G__getstructoffset())->GetOriginalValue((Float_t) G__double(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVCsI_e475s*) G__getstructoffset())->GetCalibratedValue((Float_t) G__double(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVCsI_e475s*) G__getstructoffset())->GetCalibratorBySignal(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVCsI_e475s*) G__getstructoffset())->IsCalibratedBySignal(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVCsI_e475s*) G__getstructoffset())->GetCalibratedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((KVCsI_e475s*) G__getstructoffset())->GetLightFromEnergy((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((KVCsI_e475s*) G__getstructoffset())->GetLightFromEnergy((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVCsI_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCsI_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVCsI_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVCsI_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVCsI_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCsI_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVCsI_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVCsI_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_444_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVCsI_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVCsI_e475s G__TKVCsI_e475s;
static int G__G__KVIndrageometry_444_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVCsI_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVCsI_e475s*) (soff+(sizeof(KVCsI_e475s)*i)))->~G__TKVCsI_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVCsI_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVCsI_e475s*) (soff))->~G__TKVCsI_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVChannelEnergyBrho */
static int G__G__KVIndrageometry_445_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChannelEnergyBrho* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChannelEnergyBrho[n];
     } else {
       p = new((void*) gvp) KVChannelEnergyBrho[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChannelEnergyBrho;
     } else {
       p = new((void*) gvp) KVChannelEnergyBrho;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChannelEnergyBrho* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVChannelEnergyBrho((KVDetector*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVChannelEnergyBrho((KVDetector*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVChannelEnergyBrho*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVChannelEnergyBrho::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChannelEnergyBrho::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVChannelEnergyBrho::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVChannelEnergyBrho::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChannelEnergyBrho*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChannelEnergyBrho::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChannelEnergyBrho::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChannelEnergyBrho::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_445_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChannelEnergyBrho::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndrageometry_445_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVChannelEnergyBrho* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVChannelEnergyBrho(*(KVChannelEnergyBrho*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVChannelEnergyBrho G__TKVChannelEnergyBrho;
static int G__G__KVIndrageometry_445_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVChannelEnergyBrho*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVChannelEnergyBrho*) (soff+(sizeof(KVChannelEnergyBrho)*i)))->~G__TKVChannelEnergyBrho();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVChannelEnergyBrho*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVChannelEnergyBrho*) (soff))->~G__TKVChannelEnergyBrho();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndrageometry_445_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChannelEnergyBrho* dest = (KVChannelEnergyBrho*) G__getstructoffset();
   *dest = *(KVChannelEnergyBrho*) libp->para[0].ref;
   const KVChannelEnergyBrho& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVChannelEnergyChIo */
static int G__G__KVIndrageometry_446_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChannelEnergyChIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChannelEnergyChIo[n];
     } else {
       p = new((void*) gvp) KVChannelEnergyChIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVChannelEnergyChIo;
     } else {
       p = new((void*) gvp) KVChannelEnergyChIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChannelEnergyChIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVChannelEnergyChIo((KVDetector*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVChannelEnergyChIo((KVDetector*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVChannelEnergyChIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChannelEnergyChIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVChannelEnergyChIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVChannelEnergyChIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVChannelEnergyChIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChannelEnergyChIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChannelEnergyChIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVChannelEnergyChIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndrageometry_446_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVChannelEnergyChIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndrageometry_446_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVChannelEnergyChIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVChannelEnergyChIo(*(KVChannelEnergyChIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVChannelEnergyChIo G__TKVChannelEnergyChIo;
static int G__G__KVIndrageometry_446_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVChannelEnergyChIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVChannelEnergyChIo*) (soff+(sizeof(KVChannelEnergyChIo)*i)))->~G__TKVChannelEnergyChIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVChannelEnergyChIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVChannelEnergyChIo*) (soff))->~G__TKVChannelEnergyChIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndrageometry_446_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVChannelEnergyChIo* dest = (KVChannelEnergyChIo*) G__getstructoffset();
   *dest = *(KVChannelEnergyChIo*) libp->para[0].ref;
   const KVChannelEnergyChIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVLightEnergyCsI */

/* KVINDRATelescope */

/* KVINDRADetector */

/* KVCsI */

/* KVChIo */

/* KVChIo_e475s */

/* KVSilicon */

/* KVSi75 */

/* KVSiLi */

/* KVBIC */

/* KVSiB */

/* KVPhoswich */

/* KVSilicon_e475s */

/* KVTelBlocking */

/* KVCsI_e475s */

/* KVChannelEnergyBrho */

/* KVChannelEnergyChIo */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVIndrageometry {
 public:
  G__Sizep2memfuncG__KVIndrageometry(): p(&G__Sizep2memfuncG__KVIndrageometry::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVIndrageometry::*p)();
};

size_t G__get_sizep2memfuncG__KVIndrageometry()
{
  G__Sizep2memfuncG__KVIndrageometry a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVIndrageometry() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI))) {
     KVLightEnergyCsI *G__Lderived;
     G__Lderived=(KVLightEnergyCsI*)0x1000;
     {
       KVCalibrator *G__Lpbase=(KVCalibrator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCalibrator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope))) {
     KVINDRATelescope *G__Lderived;
     G__Lderived=(KVINDRATelescope*)0x1000;
     {
       KVTelescope *G__Lpbase=(KVTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector))) {
     KVINDRADetector *G__Lderived;
     G__Lderived=(KVINDRADetector*)0x1000;
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI))) {
     KVCsI *G__Lderived;
     G__Lderived=(KVCsI*)0x1000;
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo))) {
     KVChIo *G__Lderived;
     G__Lderived=(KVChIo*)0x1000;
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s))) {
     KVChIo_e475s *G__Lderived;
     G__Lderived=(KVChIo_e475s*)0x1000;
     {
       KVChIo *G__Lpbase=(KVChIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon))) {
     KVSilicon *G__Lderived;
     G__Lderived=(KVSilicon*)0x1000;
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75))) {
     KVSi75 *G__Lderived;
     G__Lderived=(KVSi75*)0x1000;
     {
       KVSilicon *G__Lpbase=(KVSilicon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi))) {
     KVSiLi *G__Lderived;
     G__Lderived=(KVSiLi*)0x1000;
     {
       KVSilicon *G__Lpbase=(KVSilicon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC))) {
     KVBIC *G__Lderived;
     G__Lderived=(KVBIC*)0x1000;
     {
       KVChIo *G__Lpbase=(KVChIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB))) {
     KVSiB *G__Lderived;
     G__Lderived=(KVSiB*)0x1000;
     {
       KVSilicon *G__Lpbase=(KVSilicon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich))) {
     KVPhoswich *G__Lderived;
     G__Lderived=(KVPhoswich*)0x1000;
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s))) {
     KVSilicon_e475s *G__Lderived;
     G__Lderived=(KVSilicon_e475s*)0x1000;
     {
       KVSilicon *G__Lpbase=(KVSilicon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking))) {
     KVTelBlocking *G__Lderived;
     G__Lderived=(KVTelBlocking*)0x1000;
     {
       KVTelescope *G__Lpbase=(KVTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s))) {
     KVCsI_e475s *G__Lderived;
     G__Lderived=(KVCsI_e475s*)0x1000;
     {
       KVCsI *G__Lpbase=(KVCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRADetector *G__Lpbase=(KVINDRADetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDetector *G__Lpbase=(KVDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMaterial *G__Lpbase=(KVMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVMaterial),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVPosition *G__Lpbase=(KVPosition*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPosition),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho))) {
     KVChannelEnergyBrho *G__Lderived;
     G__Lderived=(KVChannelEnergyBrho*)0x1000;
     {
       KVCalibrator *G__Lpbase=(KVCalibrator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCalibrator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo))) {
     KVChannelEnergyChIo *G__Lderived;
     G__Lderived=(KVChannelEnergyChIo*)0x1000;
     {
       KVCalibrator *G__Lpbase=(KVCalibrator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCalibrator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo),G__get_linked_tagnum(&G__G__KVIndrageometryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVIndrageometry() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVLightEnergyCsI */
static void G__setup_memvarKVLightEnergyCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI));
   { KVLightEnergyCsI *p; p=(KVLightEnergyCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fZ=",0,"!Z of nucleus to be calibrated");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fA=",0,"!A of nucleus to be calibrated");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TF1),-1,-2,2,"fLight=",0,"function parameterising light output as function of (energy, Z, A)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRATelescope */
static void G__setup_memvarKVINDRATelescope(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope));
   { KVINDRATelescope *p; p=(KVINDRATelescope*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADetector */
static void G__setup_memvarKVINDRADetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector));
   { KVINDRADetector *p; p=(KVINDRADetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGGtoPG_0=",0,"GG-PG conversion factor: offset");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGGtoPG_1=",0,"GG-PGconversion factor: slope");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector),-1,-1,2,"fChIo=",0,"!pointer to ionisation chamber in group associated to this detector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"NumeroCodeur=",0,"Numero du codeur (QDC pour les ChIo/Si)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVCsI */
static void G__setup_memvarKVCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI));
   { KVCsI *p; p=(KVCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLumiereTotale=",0,"total light output calculated from R and L components");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fLumTotStatus=",0,"status of light calculation");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fA1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fA2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fA3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI),-1,-1,4,"fCalZ1=",0,"! light-energy calibration for Z=1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI),-1,-1,4,"fCal=",0,"! light-energy calibration for Z>1");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fPinLaser=",0,"number of pin laser used to control stability of crystal");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGainCorrection=",0,"gain correction for total light output. by default equal to 1.0.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVACQParam),-1,-1,4,"fACQ_R=",0,"'Rapide' acquisition parameter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVACQParam),-1,-1,4,"fACQ_L=",0,"'Lente' acquisition parameter");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsIcLcLdA),-1,-2,4,"kLumiere=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsIcLcLdA),-1,-2,4,"kTau=1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVChIo */
static void G__setup_memvarKVChIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo));
   { KVChIo *p; p=(KVChIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelVolt),-1,-1,2,"fChVoltGG=",0,"!channel-volt conversion (GG)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelVolt),-1,-1,2,"fChVoltPG=",0,"!channel-volt conversion (PG)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVVoltEnergy),-1,-1,2,"fVoltE=",0,"!volt-energy conversion");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVChIo_e475s */
static void G__setup_memvarKVChIo_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s));
   { KVChIo_e475s *p; p=(KVChIo_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVFunctionCal),-1,-1,2,"fcalibPG=",0,"!channel-energy function conversion (PG)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVFunctionCal),-1,-1,2,"fcalibGG=",0,"!channel-energy function conversion (GG)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSilicon */
static void G__setup_memvarKVSilicon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon));
   { KVSilicon *p; p=(KVSilicon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelVolt),-1,-1,2,"fChVoltGG=",0,"!channel-volt conversion (GG)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelVolt),-1,-1,2,"fChVoltPG=",0,"!channel-volt conversion (PG)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVVoltEnergy),-1,-1,2,"fVoltE=",0,"!volt-energy conversion");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPulseHeightDefect),-1,-1,2,"fPHD=",0,"!pulse height defect");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSi75 */
static void G__setup_memvarKVSi75(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75));
   { KVSi75 *p; p=(KVSi75*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSiLi */
static void G__setup_memvarKVSiLi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi));
   { KVSiLi *p; p=(KVSiLi*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVBIC */
static void G__setup_memvarKVBIC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC));
   { KVBIC *p; p=(KVBIC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fBomb=",0,"bombage of entrance/exit windows in mm");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLinCal),-1,-1,4,"fLinCal=",0,"!linear channel-energy calibration   ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSiB */
static void G__setup_memvarKVSiB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB));
   { KVSiB *p; p=(KVSiB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLinCal),-1,-1,4,"fLinCal=",0,"!linear channel-energy calibration");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVPhoswich */
static void G__setup_memvarKVPhoswich(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich));
   { KVPhoswich *p; p=(KVPhoswich*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVSilicon_e475s */
static void G__setup_memvarKVSilicon_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s));
   { KVSilicon_e475s *p; p=(KVSilicon_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVFunctionCal),-1,-1,2,"fcalibPG=",0,"!channel-energy function conversion (PG)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVFunctionCal),-1,-1,2,"fcalibGG=",0,"!channel-energy function conversion (GG)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVTelBlocking */
static void G__setup_memvarKVTelBlocking(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking));
   { KVTelBlocking *p; p=(KVTelBlocking*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVCsI_e475s */
static void G__setup_memvarKVCsI_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s));
   { KVCsI_e475s *p; p=(KVCsI_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVFunctionCal),-1,-1,2,"fcalibLT=",0,"!channel-energy function conversion (LT)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVChannelEnergyBrho */
static void G__setup_memvarKVChannelEnergyBrho(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho));
   { KVChannelEnergyBrho *p; p=(KVChannelEnergyBrho*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVChannelEnergyChIo */
static void G__setup_memvarKVChannelEnergyChIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo));
   { KVChannelEnergyChIo *p; p=(KVChannelEnergyChIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVIndrageometry() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVLightEnergyCsI(void) {
   /* KVLightEnergyCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI));
   G__memfunc_setup("SetParametersOfLightEnergyFunction",3485,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVLightEnergyCsI",1538,G__G__KVIndrageometry_364_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVLightEnergyCsI",1538,G__G__KVIndrageometry_364_0_3, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVLightEnergyCsI), -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - kvd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVIndrageometry_364_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compute",733,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - chan", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - chan", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Invert",632,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZ",390,G__G__KVIndrageometry_364_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetA",365,G__G__KVIndrageometry_364_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__G__KVIndrageometry_364_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__G__KVIndrageometry_364_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLightEnergyFunction",2248,G__G__KVIndrageometry_364_0_12, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TF1), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - Z h - 'UInt_t' 0 - A", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_364_0_13, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVLightEnergyCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_364_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLightEnergyCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_364_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVLightEnergyCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_364_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVLightEnergyCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_364_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_364_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLightEnergyCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_364_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVLightEnergyCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_364_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVLightEnergyCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_364_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVLightEnergyCsI::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVLightEnergyCsI", 1664, G__G__KVIndrageometry_364_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRATelescope(void) {
   /* KVINDRATelescope */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope));
   G__memfunc_setup("KVINDRATelescope",1459,G__G__KVIndrageometry_368_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetArrayName",1184,G__G__KVIndrageometry_368_0_3, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRingNumber",1305,G__G__KVIndrageometry_368_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRing",688,G__G__KVIndrageometry_368_0_5, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVRing), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroup",813,G__G__KVIndrageometry_368_0_6, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVGroup), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_368_0_9, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRATelescope::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_368_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRATelescope::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_368_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRATelescope::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_368_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRATelescope::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_368_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_368_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRATelescope::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_368_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRATelescope::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_368_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRATelescope::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_368_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRATelescope::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRATelescope", 1585, G__G__KVIndrageometry_368_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADetector(void) {
   /* KVINDRADetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector));
   G__memfunc_setup("FindChIo",740,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADetector",1353,G__G__KVIndrageometry_369_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADetector",1353,G__G__KVIndrageometry_369_0_3, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - type f - 'Float_t' 10 '0.0' thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTelescope",1220,G__G__KVIndrageometry_369_0_4, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRATelescope), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSegment",1023,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetArrayName",1184,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRingNumber",1305,G__G__KVIndrageometry_369_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModuleNumber",1519,G__G__KVIndrageometry_369_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddACQParamType",1393,G__G__KVIndrageometry_369_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetACQParam",998,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVACQParam), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPGfromGG",1017,G__G__KVIndrageometry_369_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '-1' GG", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGGfromPG",1017,G__G__KVIndrageometry_369_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '-1' PG", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGGtoPGConversionFactors",2592,G__G__KVIndrageometry_369_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGGtoPGConversionFactors",2604,G__G__KVIndrageometry_369_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - alpha d - 'Double_t' 0 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChIo",643,G__G__KVIndrageometry_369_0_15, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVINDRADetector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPG",439,G__G__KVIndrageometry_369_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGG",430,G__G__KVIndrageometry_369_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetR",370,G__G__KVIndrageometry_369_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL",364,G__G__KVIndrageometry_369_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMT",449,G__G__KVIndrageometry_369_0_20, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumeroCodeur",1540,G__G__KVIndrageometry_369_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - numero", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumeroCodeur",1528,G__G__KVIndrageometry_369_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_369_0_23, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_369_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_369_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_369_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_369_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_369_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_369_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_369_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_369_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADetector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADetector", 1479, G__G__KVIndrageometry_369_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVCsI(void) {
   /* KVCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI));
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 0, 
"r - 'UShort_t' 0 - mode d - 'Double_t' 0 '-1.0' rapide "
"d - 'Double_t' 0 '-1.0' lente", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVCsI",416,G__G__KVIndrageometry_370_0_3, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVCsI",416,G__G__KVIndrageometry_370_0_4, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - thick f - 'Float_t' 0 '0' thickAl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlThickness",1413,G__G__KVIndrageometry_370_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thickAl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetR",370,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL",364,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLumiereTotale",1628,G__G__KVIndrageometry_370_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '-1.0' rapide d - 'Double_t' 0 '-1.0' lente", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCorrectedLumiereTotale",2551,G__G__KVIndrageometry_370_0_9, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '-1.0' rapide d - 'Double_t' 0 '-1.0' lente", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTauZero",1002,G__G__KVIndrageometry_370_0_10, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '-1.0' rapide d - 'Double_t' 0 '-1.0' lente", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLumiereTotale",1640,G__G__KVIndrageometry_370_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - lum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatusLumiere",1655,G__G__KVIndrageometry_370_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LightIsGood",1085,G__G__KVIndrageometry_370_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetACQParams",1125,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrators",1442,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCorrectedEnergy",1829,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"U 'KVNucleus' - 0 - - d - 'Double_t' 0 '-1.' lum "
"g - 'Bool_t' 0 'kTRUE' transmission", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLightFromEnergy",1814,G__G__KVIndrageometry_370_0_19, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - A "
"d - 'Double_t' 0 '-1.' E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyFromLight",1814,G__G__KVIndrageometry_370_0_20, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - A "
"d - 'Double_t' 0 - lum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPinLaser",1098,G__G__KVIndrageometry_370_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPinLaser",1086,G__G__KVIndrageometry_370_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotalLightGainCorrection",2751,G__G__KVIndrageometry_370_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalLightGainCorrection",2739,G__G__KVIndrageometry_370_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeduceACQParameters",1843,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' zz i - 'Int_t' 0 '-1' aa", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_370_0_26, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_370_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_370_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_370_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_370_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_370_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_370_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_370_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_370_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVCsI::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVCsI", 542, G__G__KVIndrageometry_370_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVChIo(void) {
   /* KVChIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVChIo",516,G__G__KVIndrageometry_376_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVChIo",516,G__G__KVIndrageometry_376_0_3, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - pressure f - 'Float_t' 0 '5.0*KVUnits::cm' thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVoltsFromCanalPG",1858,G__G__KVIndrageometry_376_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.0' chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVoltsFromCanalGG",1849,G__G__KVIndrageometry_376_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.0' chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratedEnergy",1909,G__G__KVIndrageometry_376_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVolts",824,G__G__KVIndrageometry_376_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVoltsFromEnergy",1846,G__G__KVIndrageometry_376_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanalPGFromVolts",1858,G__G__KVIndrageometry_376_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanalGGFromVolts",1849,G__G__KVIndrageometry_376_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanalPGFromVoltsDouble",2461,G__G__KVIndrageometry_376_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanalGGFromVoltsDouble",2452,G__G__KVIndrageometry_376_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyFromVolts",1846,G__G__KVIndrageometry_376_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.0' volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetACQParams",1125,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrators",1442,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetELossMylar",1291,G__G__KVIndrageometry_376_0_17, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - z h - 'UInt_t' 0 - a "
"d - 'Double_t' 0 '-1.0' egas g - 'Bool_t' 0 'kFALSE' stopped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCalibrated",1191,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalcACQParam",1369,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 8, 
"U 'KVACQParam' - 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPressure",1157,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - P", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPressure",1145,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMylarThicknesses",1973,G__G__KVIndrageometry_376_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - thickF f - 'Float_t' 0 - thickB", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeduceACQParameters",1843,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' zz i - 'Int_t' 0 '-1' a", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_376_0_24, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVChIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_376_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_376_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVChIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_376_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVChIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_376_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_376_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_376_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_376_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_376_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVChIo", 642, G__G__KVIndrageometry_376_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVChIo_e475s(void) {
   /* KVChIo_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s));
   G__memfunc_setup("KVChIo_e475s",987,G__G__KVIndrageometry_387_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVChIo_e475s",987,G__G__KVIndrageometry_387_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChIo_e475s), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - pressure f - 'Float_t' 0 '50.0*KVUnits::mm' thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrators",1442,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrator",1327,G__G__KVIndrageometry_387_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBParameterSet' - 0 - kvdbps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangeCalibParameters",2101,G__G__KVIndrageometry_387_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBParameterSet' - 0 - kvdbps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOriginalValue",1618,G__G__KVIndrageometry_387_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - to u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratedValue",1800,G__G__KVIndrageometry_387_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - from u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratorBySignal",2108,G__G__KVIndrageometry_387_0_8, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVFunctionCal), -1, 0, 1, 1, 1, 8, "u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCalibrated",1191,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsCalibratedBySignal",1984,G__G__KVIndrageometry_387_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratedEnergy",1909,G__G__KVIndrageometry_387_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalcACQParam",1369,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 8, 
"U 'KVACQParam' - 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_387_0_14, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVChIo_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_387_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChIo_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_387_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVChIo_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_387_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVChIo_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_387_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_387_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChIo_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_387_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChIo_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_387_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChIo_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_387_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChIo_e475s::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVChIo_e475s", 1113, G__G__KVIndrageometry_387_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSilicon(void) {
   /* KVSilicon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSilicon",882,G__G__KVIndrageometry_389_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSilicon",882,G__G__KVIndrageometry_389_0_3, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVoltsFromCanalPG",1858,G__G__KVIndrageometry_389_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.0' chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVoltsFromCanalGG",1849,G__G__KVIndrageometry_389_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.0' chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratedEnergy",1909,G__G__KVIndrageometry_389_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVolts",824,G__G__KVIndrageometry_389_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVoltsFromEnergy",1846,G__G__KVIndrageometry_389_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanalPGFromVolts",1858,G__G__KVIndrageometry_389_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanalGGFromVolts",1849,G__G__KVIndrageometry_389_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanalPGFromVoltsDouble",2461,G__G__KVIndrageometry_389_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanalGGFromVoltsDouble",2452,G__G__KVIndrageometry_389_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyFromVolts",1846,G__G__KVIndrageometry_389_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.0' volts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetACQParams",1125,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrators",1442,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPHD",508,G__G__KVIndrageometry_389_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - dE h - 'UInt_t' 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCalibrated",1191,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMoultonPHDParameters",2314,G__G__KVIndrageometry_389_0_19, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - a1 d - 'Double_t' 0 - a2 "
"d - 'Double_t' 0 - b1 d - 'Double_t' 0 - b2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalcACQParam",1369,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 8, 
"U 'KVACQParam' - 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetELossFunction",1612,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TF1), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - A", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetThickness",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - thick", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetThickness",1228,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeduceACQParameters",1843,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' zz i - 'Int_t' 0 '-1' aa", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_389_0_25, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSilicon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_389_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSilicon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_389_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSilicon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_389_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSilicon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_389_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_389_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSilicon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_389_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSilicon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_389_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSilicon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_389_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSilicon::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSilicon", 1008, G__G__KVIndrageometry_389_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSi75(void) {
   /* KVSi75 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75));
   G__memfunc_setup("KVSi75",457,G__G__KVIndrageometry_390_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSi75",457,G__G__KVIndrageometry_390_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSi75), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayName",1184,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_390_0_4, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSi75::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_390_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSi75::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_390_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSi75::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_390_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSi75::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_390_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_390_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSi75::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_390_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSi75::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_390_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSi75::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_390_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSi75::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSi75", 583, G__G__KVIndrageometry_390_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSiLi(void) {
   /* KVSiLi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi));
   G__memfunc_setup("KVSiLi",530,G__G__KVIndrageometry_391_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSiLi",530,G__G__KVIndrageometry_391_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiLi), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayName",1184,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_391_0_4, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSiLi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_391_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSiLi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_391_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSiLi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_391_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSiLi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_391_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_391_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSiLi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_391_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSiLi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_391_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSiLi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_391_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSiLi::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSiLi", 656, G__G__KVIndrageometry_391_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVBIC(void) {
   /* KVBIC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC));
   G__memfunc_setup("KVBIC",367,G__G__KVIndrageometry_393_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVBIC",367,G__G__KVIndrageometry_393_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - pressure f - 'Float_t' 0 '5.0' bombage", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayName",1184,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddACQParam",975,G__G__KVIndrageometry_393_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetACQParam",998,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVACQParam), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPressure",1157,G__G__KVIndrageometry_393_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTemperature",1466,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBombage",985,G__G__KVIndrageometry_393_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBombage",973,G__G__KVIndrageometry_393_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEffectiveEntryThickness",2671,G__G__KVIndrageometry_393_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetELossMylar",1291,G__G__KVIndrageometry_393_0_11, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - z h - 'UInt_t' 0 - a "
"d - 'Double_t' 0 '-1.0' egas", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedEnergy",1829,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"U 'KVNucleus' - 0 - - d - 'Double_t' 0 '-1.0' e "
"g - 'Bool_t' 0 'kTRUE' transmit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrators",1442,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergy",906,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsCalibrated",1191,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPressure",1157,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - P", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPressure",1145,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_393_0_18, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVBIC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_393_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBIC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_393_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVBIC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_393_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVBIC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_393_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_393_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBIC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_393_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVBIC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_393_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVBIC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_393_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVBIC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVBIC", 493, G__G__KVIndrageometry_393_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSiB(void) {
   /* KVSiB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB));
   G__memfunc_setup("KVSiB",415,G__G__KVIndrageometry_394_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSiB",415,G__G__KVIndrageometry_394_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSiB), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thickness", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetACQParams",1125,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetArrayName",1184,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fired",490,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"any\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetP1",417,G__G__KVIndrageometry_394_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP2",418,G__G__KVIndrageometry_394_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP3",419,G__G__KVIndrageometry_394_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4",420,G__G__KVIndrageometry_394_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__G__KVIndrageometry_394_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBIC",494,G__G__KVIndrageometry_394_0_11, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVBIC), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrators",1442,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergy",906,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsCalibrated",1191,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_394_0_15, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSiB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_394_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSiB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_394_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSiB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_394_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSiB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_394_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_394_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSiB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_394_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSiB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_394_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSiB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_394_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSiB::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSiB", 541, G__G__KVIndrageometry_394_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVPhoswich(void) {
   /* KVPhoswich */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich));
   G__memfunc_setup("KVPhoswich",998,G__G__KVIndrageometry_395_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVPhoswich",998,G__G__KVIndrageometry_395_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVPhoswich), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayName",1184,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergy",906,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergy",918,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetACQParams",1125,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_395_0_7, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVPhoswich::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_395_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVPhoswich::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_395_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVPhoswich::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_395_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVPhoswich::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_395_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_395_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVPhoswich::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_395_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVPhoswich::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_395_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVPhoswich::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_395_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVPhoswich::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVPhoswich", 1124, G__G__KVIndrageometry_395_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVSilicon_e475s(void) {
   /* KVSilicon_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSilicon_e475s",1353,G__G__KVIndrageometry_396_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVSilicon_e475s",1353,G__G__KVIndrageometry_396_0_3, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVSilicon_e475s), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrators",1442,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrator",1327,G__G__KVIndrageometry_396_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBParameterSet' - 0 - kvdbps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangeCalibParameters",2101,G__G__KVIndrageometry_396_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBParameterSet' - 0 - kvdbps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOriginalValue",1618,G__G__KVIndrageometry_396_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - to u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratedValue",1800,G__G__KVIndrageometry_396_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - from u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratorBySignal",2108,G__G__KVIndrageometry_396_0_9, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVFunctionCal), -1, 0, 1, 1, 1, 8, "u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCalibrated",1191,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsCalibratedBySignal",1984,G__G__KVIndrageometry_396_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratedEnergy",1909,G__G__KVIndrageometry_396_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCorrectedEnergy",1829,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"U 'KVNucleus' - 0 - - d - 'Double_t' 0 '-1.' e "
"g - 'Bool_t' 0 'kTRUE' transmission", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalcACQParam",1369,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 8, 
"U 'KVACQParam' - 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_396_0_16, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVSilicon_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_396_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSilicon_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_396_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVSilicon_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_396_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVSilicon_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_396_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_396_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSilicon_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_396_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSilicon_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_396_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVSilicon_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_396_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVSilicon_e475s::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVSilicon_e475s", 1479, G__G__KVIndrageometry_396_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVTelBlocking(void) {
   /* KVTelBlocking */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking));
   G__memfunc_setup("KVTelBlocking",1263,G__G__KVIndrageometry_397_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVTelBlocking), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_397_0_2, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVTelBlocking::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_397_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVTelBlocking::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_397_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVTelBlocking::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_397_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVTelBlocking::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_397_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_397_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVTelBlocking::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_397_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVTelBlocking::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_397_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVTelBlocking::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_397_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVTelBlocking::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVTelBlocking", 1389, G__G__KVIndrageometry_397_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVCsI_e475s(void) {
   /* KVCsI_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVCsI_e475s",887,G__G__KVIndrageometry_444_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVCsI_e475s",887,G__G__KVIndrageometry_444_0_3, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVCsI_e475s), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thick", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrators",1442,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrator",1327,G__G__KVIndrageometry_444_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBParameterSet' - 0 - kvdbps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangeCalibParameters",2101,G__G__KVIndrageometry_444_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBParameterSet' - 0 - kvdbps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOriginalValue",1618,G__G__KVIndrageometry_444_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - to u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratedValue",1800,G__G__KVIndrageometry_444_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - from u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratorBySignal",2108,G__G__KVIndrageometry_444_0_9, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVFunctionCal), -1, 0, 1, 1, 1, 8, "u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCalibrated",1191,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsCalibratedBySignal",1984,G__G__KVIndrageometry_444_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibratedEnergy",1909,G__G__KVIndrageometry_444_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLightFromEnergy",1814,G__G__KVIndrageometry_444_0_14, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - - h - 'UInt_t' 0 - - "
"d - 'Double_t' 0 '-1.' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedEnergy",1829,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"U 'KVNucleus' - 0 - - d - 'Double_t' 0 '-1.' e "
"g - 'Bool_t' 0 'kTRUE' transmission", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalcACQParam",1369,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 8, 
"U 'KVACQParam' - 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_444_0_17, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVCsI_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_444_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCsI_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_444_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVCsI_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_444_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVCsI_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_444_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_444_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCsI_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_444_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVCsI_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_444_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVCsI_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_444_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVCsI_e475s::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVCsI_e475s", 1013, G__G__KVIndrageometry_444_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVChannelEnergyBrho(void) {
   /* KVChannelEnergyBrho */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho));
   G__memfunc_setup("KVChannelEnergyBrho",1871,G__G__KVIndrageometry_445_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVChannelEnergyBrho",1871,G__G__KVIndrageometry_445_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho), -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - kvd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compute",733,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - chan", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - chan", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Invert",632,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - volts", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChi2",614,G__G__KVIndrageometry_445_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_445_0_7, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVChannelEnergyBrho::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_445_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChannelEnergyBrho::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_445_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVChannelEnergyBrho::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_445_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVChannelEnergyBrho::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_445_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_445_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChannelEnergyBrho::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_445_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChannelEnergyBrho::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_445_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChannelEnergyBrho::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_445_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChannelEnergyBrho::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVChannelEnergyBrho", 1871, G__G__KVIndrageometry_445_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho), -1, 0, 1, 1, 1, 0, "u 'KVChannelEnergyBrho' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVChannelEnergyBrho", 1997, G__G__KVIndrageometry_445_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndrageometry_445_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyBrho), -1, 1, 1, 1, 1, 0, "u 'KVChannelEnergyBrho' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVChannelEnergyChIo(void) {
   /* KVChannelEnergyChIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo));
   G__memfunc_setup("KVChannelEnergyChIo",1831,G__G__KVIndrageometry_446_0_1, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVChannelEnergyChIo",1831,G__G__KVIndrageometry_446_0_2, 105, G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo), -1, 0, 1, 1, 1, 0, "U 'KVDetector' - 0 - kvd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compute",733,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - chan", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - chan", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Invert",632,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - volts", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndrageometry_446_0_6, 85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVChannelEnergyChIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndrageometry_446_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChannelEnergyChIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndrageometry_446_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVChannelEnergyChIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndrageometry_446_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVChannelEnergyChIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndrageometryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndrageometry_446_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndrageometry_446_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChannelEnergyChIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndrageometry_446_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChannelEnergyChIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndrageometry_446_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVChannelEnergyChIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndrageometry_446_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVChannelEnergyChIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVChannelEnergyChIo", 1831, G__G__KVIndrageometry_446_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo), -1, 0, 1, 1, 1, 0, "u 'KVChannelEnergyChIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVChannelEnergyChIo", 1957, G__G__KVIndrageometry_446_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndrageometry_446_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndrageometryLN_KVChannelEnergyChIo), -1, 1, 1, 1, 1, 0, "u 'KVChannelEnergyChIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVIndrageometry() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVIndrageometry() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVIndrageometry() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVIndrageometryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVNucleus = { "KVNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVMaterial = { "KVMaterial" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVPosition = { "KVPosition" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVDetector = { "KVDetector" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVACQParam = { "KVACQParam" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVGeoStrucElement = { "KVGeoStrucElement" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVGroup = { "KVGroup" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVCalibrator = { "KVCalibrator" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVLightEnergyCsI = { "KVLightEnergyCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVTelescope = { "KVTelescope" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVRing = { "KVRing" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVINDRATelescope = { "KVINDRATelescope" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVINDRADetector = { "KVINDRADetector" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVCsI = { "KVCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVCsIcLcLdA = { "KVCsI::$" , 101 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVChannelVolt = { "KVChannelVolt" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVVoltEnergy = { "KVVoltEnergy" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVDBParameterSet = { "KVDBParameterSet" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVChIo = { "KVChIo" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVFunctionCal = { "KVFunctionCal" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVChIo_e475s = { "KVChIo_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVPulseHeightDefect = { "KVPulseHeightDefect" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVSilicon = { "KVSilicon" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVSi75 = { "KVSi75" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVSiLi = { "KVSiLi" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVLinCal = { "KVLinCal" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVBIC = { "KVBIC" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVSiB = { "KVSiB" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVPhoswich = { "KVPhoswich" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVSilicon_e475s = { "KVSilicon_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVTelBlocking = { "KVTelBlocking" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVCsI_e475s = { "KVCsI_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVChannelEnergyBrho = { "KVChannelEnergyBrho" , 99 , -1 };
G__linked_taginfo G__G__KVIndrageometryLN_KVChannelEnergyChIo = { "KVChannelEnergyChIo" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVIndrageometry() {
  G__G__KVIndrageometryLN_TClass.tagnum = -1 ;
  G__G__KVIndrageometryLN_TBuffer.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMemberInspector.tagnum = -1 ;
  G__G__KVIndrageometryLN_TObject.tagnum = -1 ;
  G__G__KVIndrageometryLN_TNamed.tagnum = -1 ;
  G__G__KVIndrageometryLN_TString.tagnum = -1 ;
  G__G__KVIndrageometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVBase.tagnum = -1 ;
  G__G__KVIndrageometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TF1.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVNucleus.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVMaterial.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVPosition.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVDetector.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVACQParam.tagnum = -1 ;
  G__G__KVIndrageometryLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__KVIndrageometryLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVGeoStrucElement.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVGroup.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVCalibrator.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVLightEnergyCsI.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVTelescope.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVRing.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVINDRATelescope.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVINDRADetector.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVCsI.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVCsIcLcLdA.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVChannelVolt.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVVoltEnergy.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVDBParameterSet.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVChIo.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVFunctionCal.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVChIo_e475s.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVPulseHeightDefect.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVSilicon.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVSi75.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVSiLi.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVLinCal.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVBIC.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVSiB.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVPhoswich.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVSilicon_e475s.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVTelBlocking.tagnum = -1 ;
  G__G__KVIndrageometryLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVCsI_e475s.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVChannelEnergyBrho.tagnum = -1 ;
  G__G__KVIndrageometryLN_KVChannelEnergyChIo.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVIndrageometry() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TF1);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVMaterial);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVPosition);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVDetector);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVACQParam);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVGeoStrucElement);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVGroup);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVCalibrator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVLightEnergyCsI),sizeof(KVLightEnergyCsI),-1,324864,"Light-energy calibration for CsI detectors",G__setup_memvarKVLightEnergyCsI,G__setup_memfuncKVLightEnergyCsI);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVTelescope);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVRing);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVINDRATelescope),sizeof(KVINDRATelescope),-1,324864,"A detector telescope in the INDRA array",G__setup_memvarKVINDRATelescope,G__setup_memfuncKVINDRATelescope);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVINDRADetector),sizeof(KVINDRADetector),-1,324864,"Detectors of INDRA array",G__setup_memvarKVINDRADetector,G__setup_memfuncKVINDRADetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVCsI),sizeof(KVCsI),-1,128256,"The CsI(Tl) detectors of the INDRA array",G__setup_memvarKVCsI,G__setup_memfuncKVCsI);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVCsIcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVChannelVolt);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVVoltEnergy);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVDBParameterSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVChIo),sizeof(KVChIo),-1,128256,"The ionisation chamber detectors (ChIo) of the INDRA array",G__setup_memvarKVChIo,G__setup_memfuncKVChIo);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVFunctionCal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVChIo_e475s),sizeof(KVChIo_e475s),-1,128256,"derivation of KVChIo class for E475s experiment",G__setup_memvarKVChIo_e475s,G__setup_memfuncKVChIo_e475s);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVPulseHeightDefect);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVSilicon),sizeof(KVSilicon),-1,128256,"INDRA forward-rings silicon detector",G__setup_memvarKVSilicon,G__setup_memfuncKVSilicon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVSi75),sizeof(KVSi75),-1,324864,"80um silicon detector for INDRA etalon telescopes",G__setup_memvarKVSi75,G__setup_memfuncKVSi75);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVSiLi),sizeof(KVSiLi),-1,324864,"2mm + 40um dead zone Si(Li) detector for INDRA etalon telescopes",G__setup_memvarKVSiLi,G__setup_memfuncKVSiLi);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVLinCal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVBIC),sizeof(KVBIC),-1,128256,"Blocking ChIo for E416 experiment",G__setup_memvarKVBIC,G__setup_memfuncKVBIC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVSiB),sizeof(KVSiB),-1,128256,"Position sensitive silicon detector for E416 blocking telescope",G__setup_memvarKVSiB,G__setup_memfuncKVSiB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVPhoswich),sizeof(KVPhoswich),-1,324864,"Phoswich telescopes of the INDRA array",G__setup_memvarKVPhoswich,G__setup_memfuncKVPhoswich);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVSilicon_e475s),sizeof(KVSilicon_e475s),-1,128256,"derivation of KVSilicon class for E475s experiment",G__setup_memvarKVSilicon_e475s,G__setup_memfuncKVSilicon_e475s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVTelBlocking),sizeof(KVTelBlocking),-1,324864,"Blocking telescope for E416 experiment",G__setup_memvarKVTelBlocking,G__setup_memfuncKVTelBlocking);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVCsI_e475s),sizeof(KVCsI_e475s),-1,128256,"derivation of KVCsI class for E475s experiment",G__setup_memvarKVCsI_e475s,G__setup_memfuncKVCsI_e475s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVChannelEnergyBrho),sizeof(KVChannelEnergyBrho),-1,324864,"Pedestal-corrected linear channel-energy calibration from Brho data for Si and ChIo detectors.",G__setup_memvarKVChannelEnergyBrho,G__setup_memfuncKVChannelEnergyBrho);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndrageometryLN_KVChannelEnergyChIo),sizeof(KVChannelEnergyChIo),-1,324864,"Pedestal-corrected linear channel-energy calibration from thoron and elastic peaks for ChIo detectors.",G__setup_memvarKVChannelEnergyChIo,G__setup_memfuncKVChannelEnergyChIo);
}
extern "C" void G__cpp_setupG__KVIndrageometry(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVIndrageometry()");
  G__set_cpp_environmentG__KVIndrageometry();
  G__cpp_setup_tagtableG__KVIndrageometry();

  G__cpp_setup_inheritanceG__KVIndrageometry();

  G__cpp_setup_typetableG__KVIndrageometry();

  G__cpp_setup_memvarG__KVIndrageometry();

  G__cpp_setup_memfuncG__KVIndrageometry();
  G__cpp_setup_globalG__KVIndrageometry();
  G__cpp_setup_funcG__KVIndrageometry();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVIndrageometry();
  return;
}
class G__cpp_setup_initG__KVIndrageometry {
  public:
    G__cpp_setup_initG__KVIndrageometry() { G__add_setup_func("G__KVIndrageometry",(G__incsetup)(&G__cpp_setupG__KVIndrageometry)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVIndrageometry() { G__remove_setup_func("G__KVIndrageometry"); }
};
G__cpp_setup_initG__KVIndrageometry G__cpp_setup_initializerG__KVIndrageometry;

