//
// File generated by rootcint at Fri Jul 17 15:52:14 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVIndraidentification
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVIndraidentification.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVINDRAIDTelescope_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAIDTelescope(void *p = 0);
   static void *newArray_KVINDRAIDTelescope(Long_t size, void *p);
   static void delete_KVINDRAIDTelescope(void *p);
   static void deleteArray_KVINDRAIDTelescope(void *p);
   static void destruct_KVINDRAIDTelescope(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAIDTelescope*)
   {
      ::KVINDRAIDTelescope *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAIDTelescope >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAIDTelescope", ::KVINDRAIDTelescope::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVINDRAIDTelescope.h", 7,
                  typeid(::KVINDRAIDTelescope), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAIDTelescope::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAIDTelescope) );
      instance.SetNew(&new_KVINDRAIDTelescope);
      instance.SetNewArray(&newArray_KVINDRAIDTelescope);
      instance.SetDelete(&delete_KVINDRAIDTelescope);
      instance.SetDeleteArray(&deleteArray_KVINDRAIDTelescope);
      instance.SetDestructor(&destruct_KVINDRAIDTelescope);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAIDTelescope*)
   {
      return GenerateInitInstanceLocal((::KVINDRAIDTelescope*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAIDTelescope*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDGChIoSi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDGChIoSi(void *p = 0);
   static void *newArray_KVIDGChIoSi(Long_t size, void *p);
   static void delete_KVIDGChIoSi(void *p);
   static void deleteArray_KVIDGChIoSi(void *p);
   static void destruct_KVIDGChIoSi(void *p);
   static void streamer_KVIDGChIoSi(TBuffer &buf, void *obj);
   static Long64_t merge_KVIDGChIoSi(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDGChIoSi*)
   {
      ::KVIDGChIoSi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDGChIoSi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDGChIoSi", ::KVIDGChIoSi::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDGChIoSi.h", 18,
                  typeid(::KVIDGChIoSi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDGChIoSi::Dictionary, isa_proxy, 1,
                  sizeof(::KVIDGChIoSi) );
      instance.SetNew(&new_KVIDGChIoSi);
      instance.SetNewArray(&newArray_KVIDGChIoSi);
      instance.SetDelete(&delete_KVIDGChIoSi);
      instance.SetDeleteArray(&deleteArray_KVIDGChIoSi);
      instance.SetDestructor(&destruct_KVIDGChIoSi);
      instance.SetStreamerFunc(&streamer_KVIDGChIoSi);
      instance.SetMerge(&merge_KVIDGChIoSi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDGChIoSi*)
   {
      return GenerateInitInstanceLocal((::KVIDGChIoSi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDGChIoSi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoSi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoSi(void *p = 0);
   static void *newArray_KVIDChIoSi(Long_t size, void *p);
   static void delete_KVIDChIoSi(void *p);
   static void deleteArray_KVIDChIoSi(void *p);
   static void destruct_KVIDChIoSi(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoSi*)
   {
      ::KVIDChIoSi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoSi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoSi", ::KVIDChIoSi::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoSi.h", 24,
                  typeid(::KVIDChIoSi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoSi::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoSi) );
      instance.SetNew(&new_KVIDChIoSi);
      instance.SetNewArray(&newArray_KVIDChIoSi);
      instance.SetDelete(&delete_KVIDChIoSi);
      instance.SetDeleteArray(&deleteArray_KVIDChIoSi);
      instance.SetDestructor(&destruct_KVIDChIoSi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoSi*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoSi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoSi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDGChIoSi_e494s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDGChIoSi_e494s(void *p = 0);
   static void *newArray_KVIDGChIoSi_e494s(Long_t size, void *p);
   static void delete_KVIDGChIoSi_e494s(void *p);
   static void deleteArray_KVIDGChIoSi_e494s(void *p);
   static void destruct_KVIDGChIoSi_e494s(void *p);
   static Long64_t merge_KVIDGChIoSi_e494s(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDGChIoSi_e494s*)
   {
      ::KVIDGChIoSi_e494s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDGChIoSi_e494s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDGChIoSi_e494s", ::KVIDGChIoSi_e494s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDGChIoSi_e494s.h", 11,
                  typeid(::KVIDGChIoSi_e494s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDGChIoSi_e494s::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDGChIoSi_e494s) );
      instance.SetNew(&new_KVIDGChIoSi_e494s);
      instance.SetNewArray(&newArray_KVIDGChIoSi_e494s);
      instance.SetDelete(&delete_KVIDGChIoSi_e494s);
      instance.SetDeleteArray(&deleteArray_KVIDGChIoSi_e494s);
      instance.SetDestructor(&destruct_KVIDGChIoSi_e494s);
      instance.SetMerge(&merge_KVIDGChIoSi_e494s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDGChIoSi_e494s*)
   {
      return GenerateInitInstanceLocal((::KVIDGChIoSi_e494s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDGChIoSi_e494s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoSiCorr_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoSiCorr(void *p = 0);
   static void *newArray_KVIDChIoSiCorr(Long_t size, void *p);
   static void delete_KVIDChIoSiCorr(void *p);
   static void deleteArray_KVIDChIoSiCorr(void *p);
   static void destruct_KVIDChIoSiCorr(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoSiCorr*)
   {
      ::KVIDChIoSiCorr *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoSiCorr >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoSiCorr", ::KVIDChIoSiCorr::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoSiCorr.h", 20,
                  typeid(::KVIDChIoSiCorr), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoSiCorr::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoSiCorr) );
      instance.SetNew(&new_KVIDChIoSiCorr);
      instance.SetNewArray(&newArray_KVIDChIoSiCorr);
      instance.SetDelete(&delete_KVIDChIoSiCorr);
      instance.SetDeleteArray(&deleteArray_KVIDChIoSiCorr);
      instance.SetDestructor(&destruct_KVIDChIoSiCorr);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoSiCorr*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoSiCorr*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoSiCorr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoSi75_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoSi75(void *p = 0);
   static void *newArray_KVIDChIoSi75(Long_t size, void *p);
   static void delete_KVIDChIoSi75(void *p);
   static void deleteArray_KVIDChIoSi75(void *p);
   static void destruct_KVIDChIoSi75(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoSi75*)
   {
      ::KVIDChIoSi75 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoSi75 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoSi75", ::KVIDChIoSi75::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoSi75.h", 24,
                  typeid(::KVIDChIoSi75), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoSi75::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoSi75) );
      instance.SetNew(&new_KVIDChIoSi75);
      instance.SetNewArray(&newArray_KVIDChIoSi75);
      instance.SetDelete(&delete_KVIDChIoSi75);
      instance.SetDeleteArray(&deleteArray_KVIDChIoSi75);
      instance.SetDestructor(&destruct_KVIDChIoSi75);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoSi75*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoSi75*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoSi75*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoSi75_camp5_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoSi75_camp5(void *p = 0);
   static void *newArray_KVIDChIoSi75_camp5(Long_t size, void *p);
   static void delete_KVIDChIoSi75_camp5(void *p);
   static void deleteArray_KVIDChIoSi75_camp5(void *p);
   static void destruct_KVIDChIoSi75_camp5(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoSi75_camp5*)
   {
      ::KVIDChIoSi75_camp5 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoSi75_camp5 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoSi75_camp5", ::KVIDChIoSi75_camp5::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoSi75_camp5.h", 10,
                  typeid(::KVIDChIoSi75_camp5), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoSi75_camp5::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoSi75_camp5) );
      instance.SetNew(&new_KVIDChIoSi75_camp5);
      instance.SetNewArray(&newArray_KVIDChIoSi75_camp5);
      instance.SetDelete(&delete_KVIDChIoSi75_camp5);
      instance.SetDeleteArray(&deleteArray_KVIDChIoSi75_camp5);
      instance.SetDestructor(&destruct_KVIDChIoSi75_camp5);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoSi75_camp5*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoSi75_camp5*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoSi75_camp5*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSiCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSiCsI(void *p = 0);
   static void *newArray_KVIDSiCsI(Long_t size, void *p);
   static void delete_KVIDSiCsI(void *p);
   static void deleteArray_KVIDSiCsI(void *p);
   static void destruct_KVIDSiCsI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSiCsI*)
   {
      ::KVIDSiCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSiCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSiCsI", ::KVIDSiCsI::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSiCsI.h", 24,
                  typeid(::KVIDSiCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSiCsI::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSiCsI) );
      instance.SetNew(&new_KVIDSiCsI);
      instance.SetNewArray(&newArray_KVIDSiCsI);
      instance.SetDelete(&delete_KVIDSiCsI);
      instance.SetDeleteArray(&deleteArray_KVIDSiCsI);
      instance.SetDestructor(&destruct_KVIDSiCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSiCsI*)
   {
      return GenerateInitInstanceLocal((::KVIDSiCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSiCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSiCorrCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSiCorrCsI(void *p = 0);
   static void *newArray_KVIDSiCorrCsI(Long_t size, void *p);
   static void delete_KVIDSiCorrCsI(void *p);
   static void deleteArray_KVIDSiCorrCsI(void *p);
   static void destruct_KVIDSiCorrCsI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSiCorrCsI*)
   {
      ::KVIDSiCorrCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSiCorrCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSiCorrCsI", ::KVIDSiCorrCsI::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSiCorrCsI.h", 26,
                  typeid(::KVIDSiCorrCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSiCorrCsI::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSiCorrCsI) );
      instance.SetNew(&new_KVIDSiCorrCsI);
      instance.SetNewArray(&newArray_KVIDSiCorrCsI);
      instance.SetDelete(&delete_KVIDSiCorrCsI);
      instance.SetDeleteArray(&deleteArray_KVIDSiCorrCsI);
      instance.SetDestructor(&destruct_KVIDSiCorrCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSiCorrCsI*)
   {
      return GenerateInitInstanceLocal((::KVIDSiCorrCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSiCorrCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoCsI(void *p = 0);
   static void *newArray_KVIDChIoCsI(Long_t size, void *p);
   static void delete_KVIDChIoCsI(void *p);
   static void deleteArray_KVIDChIoCsI(void *p);
   static void destruct_KVIDChIoCsI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoCsI*)
   {
      ::KVIDChIoCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoCsI", ::KVIDChIoCsI::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoCsI.h", 23,
                  typeid(::KVIDChIoCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoCsI::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoCsI) );
      instance.SetNew(&new_KVIDChIoCsI);
      instance.SetNewArray(&newArray_KVIDChIoCsI);
      instance.SetDelete(&delete_KVIDChIoCsI);
      instance.SetDeleteArray(&deleteArray_KVIDChIoCsI);
      instance.SetDestructor(&destruct_KVIDChIoCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoCsI*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoSi_e613_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoSi_e613(void *p = 0);
   static void *newArray_KVIDChIoSi_e613(Long_t size, void *p);
   static void delete_KVIDChIoSi_e613(void *p);
   static void deleteArray_KVIDChIoSi_e613(void *p);
   static void destruct_KVIDChIoSi_e613(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoSi_e613*)
   {
      ::KVIDChIoSi_e613 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoSi_e613 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoSi_e613", ::KVIDChIoSi_e613::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoSi_e613.h", 10,
                  typeid(::KVIDChIoSi_e613), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoSi_e613::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoSi_e613) );
      instance.SetNew(&new_KVIDChIoSi_e613);
      instance.SetNewArray(&newArray_KVIDChIoSi_e613);
      instance.SetDelete(&delete_KVIDChIoSi_e613);
      instance.SetDeleteArray(&deleteArray_KVIDChIoSi_e613);
      instance.SetDestructor(&destruct_KVIDChIoSi_e613);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoSi_e613*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoSi_e613*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoSi_e613*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRACodeMask_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRACodeMask(void *p = 0);
   static void *newArray_KVINDRACodeMask(Long_t size, void *p);
   static void delete_KVINDRACodeMask(void *p);
   static void deleteArray_KVINDRACodeMask(void *p);
   static void destruct_KVINDRACodeMask(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRACodeMask*)
   {
      ::KVINDRACodeMask *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRACodeMask >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRACodeMask", ::KVINDRACodeMask::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVINDRACodeMask.h", 56,
                  typeid(::KVINDRACodeMask), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRACodeMask::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRACodeMask) );
      instance.SetNew(&new_KVINDRACodeMask);
      instance.SetNewArray(&newArray_KVINDRACodeMask);
      instance.SetDelete(&delete_KVINDRACodeMask);
      instance.SetDeleteArray(&deleteArray_KVINDRACodeMask);
      instance.SetDestructor(&destruct_KVINDRACodeMask);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRACodeMask*)
   {
      return GenerateInitInstanceLocal((::KVINDRACodeMask*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRACodeMask*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSiLiCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSiLiCsI(void *p = 0);
   static void *newArray_KVIDSiLiCsI(Long_t size, void *p);
   static void delete_KVIDSiLiCsI(void *p);
   static void deleteArray_KVIDSiLiCsI(void *p);
   static void destruct_KVIDSiLiCsI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSiLiCsI*)
   {
      ::KVIDSiLiCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSiLiCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSiLiCsI", ::KVIDSiLiCsI::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSiLiCsI.h", 24,
                  typeid(::KVIDSiLiCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSiLiCsI::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSiLiCsI) );
      instance.SetNew(&new_KVIDSiLiCsI);
      instance.SetNewArray(&newArray_KVIDSiLiCsI);
      instance.SetDelete(&delete_KVIDSiLiCsI);
      instance.SetDeleteArray(&deleteArray_KVIDSiLiCsI);
      instance.SetDestructor(&destruct_KVIDSiLiCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSiLiCsI*)
   {
      return GenerateInitInstanceLocal((::KVIDSiLiCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSiLiCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSiLiCsI_e494s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSiLiCsI_e494s(void *p = 0);
   static void *newArray_KVIDSiLiCsI_e494s(Long_t size, void *p);
   static void delete_KVIDSiLiCsI_e494s(void *p);
   static void deleteArray_KVIDSiLiCsI_e494s(void *p);
   static void destruct_KVIDSiLiCsI_e494s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSiLiCsI_e494s*)
   {
      ::KVIDSiLiCsI_e494s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSiLiCsI_e494s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSiLiCsI_e494s", ::KVIDSiLiCsI_e494s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSiLiCsI_e494s.h", 13,
                  typeid(::KVIDSiLiCsI_e494s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSiLiCsI_e494s::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSiLiCsI_e494s) );
      instance.SetNew(&new_KVIDSiLiCsI_e494s);
      instance.SetNewArray(&newArray_KVIDSiLiCsI_e494s);
      instance.SetDelete(&delete_KVIDSiLiCsI_e494s);
      instance.SetDeleteArray(&deleteArray_KVIDSiLiCsI_e494s);
      instance.SetDestructor(&destruct_KVIDSiLiCsI_e494s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSiLiCsI_e494s*)
   {
      return GenerateInitInstanceLocal((::KVIDSiLiCsI_e494s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSiLiCsI_e494s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSi75SiLi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSi75SiLi(void *p = 0);
   static void *newArray_KVIDSi75SiLi(Long_t size, void *p);
   static void delete_KVIDSi75SiLi(void *p);
   static void deleteArray_KVIDSi75SiLi(void *p);
   static void destruct_KVIDSi75SiLi(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSi75SiLi*)
   {
      ::KVIDSi75SiLi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSi75SiLi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSi75SiLi", ::KVIDSi75SiLi::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSi75SiLi.h", 24,
                  typeid(::KVIDSi75SiLi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSi75SiLi::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSi75SiLi) );
      instance.SetNew(&new_KVIDSi75SiLi);
      instance.SetNewArray(&newArray_KVIDSi75SiLi);
      instance.SetDelete(&delete_KVIDSi75SiLi);
      instance.SetDeleteArray(&deleteArray_KVIDSi75SiLi);
      instance.SetDestructor(&destruct_KVIDSi75SiLi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSi75SiLi*)
   {
      return GenerateInitInstanceLocal((::KVIDSi75SiLi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSi75SiLi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSi75SiLi_e494s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSi75SiLi_e494s(void *p = 0);
   static void *newArray_KVIDSi75SiLi_e494s(Long_t size, void *p);
   static void delete_KVIDSi75SiLi_e494s(void *p);
   static void deleteArray_KVIDSi75SiLi_e494s(void *p);
   static void destruct_KVIDSi75SiLi_e494s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSi75SiLi_e494s*)
   {
      ::KVIDSi75SiLi_e494s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSi75SiLi_e494s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSi75SiLi_e494s", ::KVIDSi75SiLi_e494s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSi75SiLi_e494s.h", 12,
                  typeid(::KVIDSi75SiLi_e494s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSi75SiLi_e494s::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSi75SiLi_e494s) );
      instance.SetNew(&new_KVIDSi75SiLi_e494s);
      instance.SetNewArray(&newArray_KVIDSi75SiLi_e494s);
      instance.SetDelete(&delete_KVIDSi75SiLi_e494s);
      instance.SetDeleteArray(&deleteArray_KVIDSi75SiLi_e494s);
      instance.SetDestructor(&destruct_KVIDSi75SiLi_e494s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSi75SiLi_e494s*)
   {
      return GenerateInitInstanceLocal((::KVIDSi75SiLi_e494s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSi75SiLi_e494s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDGCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDGCsI(void *p = 0);
   static void *newArray_KVIDGCsI(Long_t size, void *p);
   static void delete_KVIDGCsI(void *p);
   static void deleteArray_KVIDGCsI(void *p);
   static void destruct_KVIDGCsI(void *p);
   static Long64_t merge_KVIDGCsI(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDGCsI*)
   {
      ::KVIDGCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDGCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDGCsI", ::KVIDGCsI::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDGCsI.h", 17,
                  typeid(::KVIDGCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDGCsI::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDGCsI) );
      instance.SetNew(&new_KVIDGCsI);
      instance.SetNewArray(&newArray_KVIDGCsI);
      instance.SetDelete(&delete_KVIDGCsI);
      instance.SetDeleteArray(&deleteArray_KVIDGCsI);
      instance.SetDestructor(&destruct_KVIDGCsI);
      instance.SetMerge(&merge_KVIDGCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDGCsI*)
   {
      return GenerateInitInstanceLocal((::KVIDGCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDGCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDCsI(void *p = 0);
   static void *newArray_KVIDCsI(Long_t size, void *p);
   static void delete_KVIDCsI(void *p);
   static void deleteArray_KVIDCsI(void *p);
   static void destruct_KVIDCsI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDCsI*)
   {
      ::KVIDCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDCsI", ::KVIDCsI::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDCsI.h", 24,
                  typeid(::KVIDCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDCsI::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDCsI) );
      instance.SetNew(&new_KVIDCsI);
      instance.SetNewArray(&newArray_KVIDCsI);
      instance.SetDelete(&delete_KVIDCsI);
      instance.SetDeleteArray(&deleteArray_KVIDCsI);
      instance.SetDestructor(&destruct_KVIDCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDCsI*)
   {
      return GenerateInitInstanceLocal((::KVIDCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRACodes_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRACodes(void *p = 0);
   static void *newArray_KVINDRACodes(Long_t size, void *p);
   static void delete_KVINDRACodes(void *p);
   static void deleteArray_KVINDRACodes(void *p);
   static void destruct_KVINDRACodes(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRACodes*)
   {
      ::KVINDRACodes *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRACodes >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRACodes", ::KVINDRACodes::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVINDRACodes.h", 11,
                  typeid(::KVINDRACodes), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRACodes::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRACodes) );
      instance.SetNew(&new_KVINDRACodes);
      instance.SetNewArray(&newArray_KVINDRACodes);
      instance.SetDelete(&delete_KVINDRACodes);
      instance.SetDeleteArray(&deleteArray_KVINDRACodes);
      instance.SetDestructor(&destruct_KVINDRACodes);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRACodes*)
   {
      return GenerateInitInstanceLocal((::KVINDRACodes*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRACodes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoSiLi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoSiLi(void *p = 0);
   static void *newArray_KVIDChIoSiLi(Long_t size, void *p);
   static void delete_KVIDChIoSiLi(void *p);
   static void deleteArray_KVIDChIoSiLi(void *p);
   static void destruct_KVIDChIoSiLi(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoSiLi*)
   {
      ::KVIDChIoSiLi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoSiLi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoSiLi", ::KVIDChIoSiLi::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoSiLi.h", 11,
                  typeid(::KVIDChIoSiLi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoSiLi::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoSiLi) );
      instance.SetNew(&new_KVIDChIoSiLi);
      instance.SetNewArray(&newArray_KVIDChIoSiLi);
      instance.SetDelete(&delete_KVIDChIoSiLi);
      instance.SetDeleteArray(&deleteArray_KVIDChIoSiLi);
      instance.SetDestructor(&destruct_KVIDChIoSiLi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoSiLi*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoSiLi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoSiLi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSiLiCsI_camp5_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSiLiCsI_camp5(void *p = 0);
   static void *newArray_KVIDSiLiCsI_camp5(Long_t size, void *p);
   static void delete_KVIDSiLiCsI_camp5(void *p);
   static void deleteArray_KVIDSiLiCsI_camp5(void *p);
   static void destruct_KVIDSiLiCsI_camp5(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSiLiCsI_camp5*)
   {
      ::KVIDSiLiCsI_camp5 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSiLiCsI_camp5 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSiLiCsI_camp5", ::KVIDSiLiCsI_camp5::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSiLiCsI_camp5.h", 17,
                  typeid(::KVIDSiLiCsI_camp5), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSiLiCsI_camp5::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSiLiCsI_camp5) );
      instance.SetNew(&new_KVIDSiLiCsI_camp5);
      instance.SetNewArray(&newArray_KVIDSiLiCsI_camp5);
      instance.SetDelete(&delete_KVIDSiLiCsI_camp5);
      instance.SetDeleteArray(&deleteArray_KVIDSiLiCsI_camp5);
      instance.SetDestructor(&destruct_KVIDSiLiCsI_camp5);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSiLiCsI_camp5*)
   {
      return GenerateInitInstanceLocal((::KVIDSiLiCsI_camp5*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSiLiCsI_camp5*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSiCsI_e613_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSiCsI_e613(void *p = 0);
   static void *newArray_KVIDSiCsI_e613(Long_t size, void *p);
   static void delete_KVIDSiCsI_e613(void *p);
   static void deleteArray_KVIDSiCsI_e613(void *p);
   static void destruct_KVIDSiCsI_e613(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSiCsI_e613*)
   {
      ::KVIDSiCsI_e613 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSiCsI_e613 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSiCsI_e613", ::KVIDSiCsI_e613::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSiCsI_e613.h", 13,
                  typeid(::KVIDSiCsI_e613), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSiCsI_e613::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSiCsI_e613) );
      instance.SetNew(&new_KVIDSiCsI_e613);
      instance.SetNewArray(&newArray_KVIDSiCsI_e613);
      instance.SetDelete(&delete_KVIDSiCsI_e613);
      instance.SetDeleteArray(&deleteArray_KVIDSiCsI_e613);
      instance.SetDestructor(&destruct_KVIDSiCsI_e613);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSiCsI_e613*)
   {
      return GenerateInitInstanceLocal((::KVIDSiCsI_e613*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSiCsI_e613*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDCsIRLLine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDCsIRLLine(void *p = 0);
   static void *newArray_KVIDCsIRLLine(Long_t size, void *p);
   static void delete_KVIDCsIRLLine(void *p);
   static void deleteArray_KVIDCsIRLLine(void *p);
   static void destruct_KVIDCsIRLLine(void *p);
   static Long64_t merge_KVIDCsIRLLine(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDCsIRLLine*)
   {
      ::KVIDCsIRLLine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDCsIRLLine >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDCsIRLLine", ::KVIDCsIRLLine::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDCsIRLLine.h", 17,
                  typeid(::KVIDCsIRLLine), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDCsIRLLine::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDCsIRLLine) );
      instance.SetNew(&new_KVIDCsIRLLine);
      instance.SetNewArray(&newArray_KVIDCsIRLLine);
      instance.SetDelete(&delete_KVIDCsIRLLine);
      instance.SetDeleteArray(&deleteArray_KVIDCsIRLLine);
      instance.SetDestructor(&destruct_KVIDCsIRLLine);
      instance.SetMerge(&merge_KVIDCsIRLLine);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDCsIRLLine*)
   {
      return GenerateInitInstanceLocal((::KVIDCsIRLLine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDCsIRLLine*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSiCsI5_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSiCsI5(void *p = 0);
   static void *newArray_KVIDSiCsI5(Long_t size, void *p);
   static void delete_KVIDSiCsI5(void *p);
   static void deleteArray_KVIDSiCsI5(void *p);
   static void destruct_KVIDSiCsI5(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSiCsI5*)
   {
      ::KVIDSiCsI5 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSiCsI5 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSiCsI5", ::KVIDSiCsI5::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSiCsI5.h", 26,
                  typeid(::KVIDSiCsI5), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSiCsI5::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSiCsI5) );
      instance.SetNew(&new_KVIDSiCsI5);
      instance.SetNewArray(&newArray_KVIDSiCsI5);
      instance.SetDelete(&delete_KVIDSiCsI5);
      instance.SetDeleteArray(&deleteArray_KVIDSiCsI5);
      instance.SetDestructor(&destruct_KVIDSiCsI5);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSiCsI5*)
   {
      return GenerateInitInstanceLocal((::KVIDSiCsI5*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSiCsI5*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSi75SiLi_camp5_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSi75SiLi_camp5(void *p = 0);
   static void *newArray_KVIDSi75SiLi_camp5(Long_t size, void *p);
   static void delete_KVIDSi75SiLi_camp5(void *p);
   static void deleteArray_KVIDSi75SiLi_camp5(void *p);
   static void destruct_KVIDSi75SiLi_camp5(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSi75SiLi_camp5*)
   {
      ::KVIDSi75SiLi_camp5 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSi75SiLi_camp5 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSi75SiLi_camp5", ::KVIDSi75SiLi_camp5::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSi75SiLi_camp5.h", 17,
                  typeid(::KVIDSi75SiLi_camp5), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSi75SiLi_camp5::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSi75SiLi_camp5) );
      instance.SetNew(&new_KVIDSi75SiLi_camp5);
      instance.SetNewArray(&newArray_KVIDSi75SiLi_camp5);
      instance.SetDelete(&delete_KVIDSi75SiLi_camp5);
      instance.SetDeleteArray(&deleteArray_KVIDSi75SiLi_camp5);
      instance.SetDestructor(&destruct_KVIDSi75SiLi_camp5);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSi75SiLi_camp5*)
   {
      return GenerateInitInstanceLocal((::KVIDSi75SiLi_camp5*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSi75SiLi_camp5*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDP2toCsIGridConvertor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDP2toCsIGridConvertor(void *p = 0);
   static void *newArray_KVDP2toCsIGridConvertor(Long_t size, void *p);
   static void delete_KVDP2toCsIGridConvertor(void *p);
   static void deleteArray_KVDP2toCsIGridConvertor(void *p);
   static void destruct_KVDP2toCsIGridConvertor(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDP2toCsIGridConvertor*)
   {
      ::KVDP2toCsIGridConvertor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDP2toCsIGridConvertor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDP2toCsIGridConvertor", ::KVDP2toCsIGridConvertor::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVDP2toCsIGridConvertor.h", 16,
                  typeid(::KVDP2toCsIGridConvertor), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDP2toCsIGridConvertor::Dictionary, isa_proxy, 4,
                  sizeof(::KVDP2toCsIGridConvertor) );
      instance.SetNew(&new_KVDP2toCsIGridConvertor);
      instance.SetNewArray(&newArray_KVDP2toCsIGridConvertor);
      instance.SetDelete(&delete_KVDP2toCsIGridConvertor);
      instance.SetDeleteArray(&deleteArray_KVDP2toCsIGridConvertor);
      instance.SetDestructor(&destruct_KVDP2toCsIGridConvertor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDP2toCsIGridConvertor*)
   {
      return GenerateInitInstanceLocal((::KVDP2toCsIGridConvertor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDP2toCsIGridConvertor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoCorrCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoCorrCsI(void *p = 0);
   static void *newArray_KVIDChIoCorrCsI(Long_t size, void *p);
   static void delete_KVIDChIoCorrCsI(void *p);
   static void deleteArray_KVIDChIoCorrCsI(void *p);
   static void destruct_KVIDChIoCorrCsI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoCorrCsI*)
   {
      ::KVIDChIoCorrCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoCorrCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoCorrCsI", ::KVIDChIoCorrCsI::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoCorrCsI.h", 19,
                  typeid(::KVIDChIoCorrCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoCorrCsI::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoCorrCsI) );
      instance.SetNew(&new_KVIDChIoCorrCsI);
      instance.SetNewArray(&newArray_KVIDChIoCorrCsI);
      instance.SetDelete(&delete_KVIDChIoCorrCsI);
      instance.SetDeleteArray(&deleteArray_KVIDChIoCorrCsI);
      instance.SetDestructor(&destruct_KVIDChIoCorrCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoCorrCsI*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoCorrCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDCsI_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDCsI_e475s(void *p = 0);
   static void *newArray_KVIDCsI_e475s(Long_t size, void *p);
   static void delete_KVIDCsI_e475s(void *p);
   static void deleteArray_KVIDCsI_e475s(void *p);
   static void destruct_KVIDCsI_e475s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDCsI_e475s*)
   {
      ::KVIDCsI_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDCsI_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDCsI_e475s", ::KVIDCsI_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDCsI_e475s.h", 16,
                  typeid(::KVIDCsI_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDCsI_e475s::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDCsI_e475s) );
      instance.SetNew(&new_KVIDCsI_e475s);
      instance.SetNewArray(&newArray_KVIDCsI_e475s);
      instance.SetDelete(&delete_KVIDCsI_e475s);
      instance.SetDeleteArray(&deleteArray_KVIDCsI_e475s);
      instance.SetDestructor(&destruct_KVIDCsI_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDCsI_e475s*)
   {
      return GenerateInitInstanceLocal((::KVIDCsI_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDCsI_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoSi75_e494s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoSi75_e494s(void *p = 0);
   static void *newArray_KVIDChIoSi75_e494s(Long_t size, void *p);
   static void delete_KVIDChIoSi75_e494s(void *p);
   static void deleteArray_KVIDChIoSi75_e494s(void *p);
   static void destruct_KVIDChIoSi75_e494s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoSi75_e494s*)
   {
      ::KVIDChIoSi75_e494s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoSi75_e494s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoSi75_e494s", ::KVIDChIoSi75_e494s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoSi75_e494s.h", 10,
                  typeid(::KVIDChIoSi75_e494s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoSi75_e494s::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoSi75_e494s) );
      instance.SetNew(&new_KVIDChIoSi75_e494s);
      instance.SetNewArray(&newArray_KVIDChIoSi75_e494s);
      instance.SetDelete(&delete_KVIDChIoSi75_e494s);
      instance.SetDeleteArray(&deleteArray_KVIDChIoSi75_e494s);
      instance.SetDestructor(&destruct_KVIDChIoSi75_e494s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoSi75_e494s*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoSi75_e494s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoSi75_e494s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoCorrCsI_e494s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoCorrCsI_e494s(void *p = 0);
   static void *newArray_KVIDChIoCorrCsI_e494s(Long_t size, void *p);
   static void delete_KVIDChIoCorrCsI_e494s(void *p);
   static void deleteArray_KVIDChIoCorrCsI_e494s(void *p);
   static void destruct_KVIDChIoCorrCsI_e494s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoCorrCsI_e494s*)
   {
      ::KVIDChIoCorrCsI_e494s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoCorrCsI_e494s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoCorrCsI_e494s", ::KVIDChIoCorrCsI_e494s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoCorrCsI_e494s.h", 10,
                  typeid(::KVIDChIoCorrCsI_e494s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoCorrCsI_e494s::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoCorrCsI_e494s) );
      instance.SetNew(&new_KVIDChIoCorrCsI_e494s);
      instance.SetNewArray(&newArray_KVIDChIoCorrCsI_e494s);
      instance.SetDelete(&delete_KVIDChIoCorrCsI_e494s);
      instance.SetDeleteArray(&deleteArray_KVIDChIoCorrCsI_e494s);
      instance.SetDestructor(&destruct_KVIDChIoCorrCsI_e494s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoCorrCsI_e494s*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoCorrCsI_e494s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI_e494s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoSi_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoSi_e475s(void *p = 0);
   static void *newArray_KVIDChIoSi_e475s(Long_t size, void *p);
   static void delete_KVIDChIoSi_e475s(void *p);
   static void deleteArray_KVIDChIoSi_e475s(void *p);
   static void destruct_KVIDChIoSi_e475s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoSi_e475s*)
   {
      ::KVIDChIoSi_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoSi_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoSi_e475s", ::KVIDChIoSi_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoSi_e475s.h", 16,
                  typeid(::KVIDChIoSi_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoSi_e475s::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoSi_e475s) );
      instance.SetNew(&new_KVIDChIoSi_e475s);
      instance.SetNewArray(&newArray_KVIDChIoSi_e475s);
      instance.SetDelete(&delete_KVIDChIoSi_e475s);
      instance.SetDeleteArray(&deleteArray_KVIDChIoSi_e475s);
      instance.SetDestructor(&destruct_KVIDChIoSi_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoSi_e475s*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoSi_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoSi_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoCsI_camp5_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoCsI_camp5(void *p = 0);
   static void *newArray_KVIDChIoCsI_camp5(Long_t size, void *p);
   static void delete_KVIDChIoCsI_camp5(void *p);
   static void deleteArray_KVIDChIoCsI_camp5(void *p);
   static void destruct_KVIDChIoCsI_camp5(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoCsI_camp5*)
   {
      ::KVIDChIoCsI_camp5 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoCsI_camp5 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoCsI_camp5", ::KVIDChIoCsI_camp5::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoCsI_camp5.h", 19,
                  typeid(::KVIDChIoCsI_camp5), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoCsI_camp5::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoCsI_camp5) );
      instance.SetNew(&new_KVIDChIoCsI_camp5);
      instance.SetNewArray(&newArray_KVIDChIoCsI_camp5);
      instance.SetDelete(&delete_KVIDChIoCsI_camp5);
      instance.SetDeleteArray(&deleteArray_KVIDChIoCsI_camp5);
      instance.SetDestructor(&destruct_KVIDChIoCsI_camp5);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoCsI_camp5*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoCsI_camp5*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoCsI_camp5*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSi150CsI_camp5_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSi150CsI_camp5(void *p = 0);
   static void *newArray_KVIDSi150CsI_camp5(Long_t size, void *p);
   static void delete_KVIDSi150CsI_camp5(void *p);
   static void deleteArray_KVIDSi150CsI_camp5(void *p);
   static void destruct_KVIDSi150CsI_camp5(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSi150CsI_camp5*)
   {
      ::KVIDSi150CsI_camp5 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSi150CsI_camp5 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSi150CsI_camp5", ::KVIDSi150CsI_camp5::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSi150CsI_camp5.h", 13,
                  typeid(::KVIDSi150CsI_camp5), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSi150CsI_camp5::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSi150CsI_camp5) );
      instance.SetNew(&new_KVIDSi150CsI_camp5);
      instance.SetNewArray(&newArray_KVIDSi150CsI_camp5);
      instance.SetDelete(&delete_KVIDSi150CsI_camp5);
      instance.SetDeleteArray(&deleteArray_KVIDSi150CsI_camp5);
      instance.SetDestructor(&destruct_KVIDSi150CsI_camp5);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSi150CsI_camp5*)
   {
      return GenerateInitInstanceLocal((::KVIDSi150CsI_camp5*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSi150CsI_camp5*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDPhoswich_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDPhoswich(void *p = 0);
   static void *newArray_KVIDPhoswich(Long_t size, void *p);
   static void delete_KVIDPhoswich(void *p);
   static void deleteArray_KVIDPhoswich(void *p);
   static void destruct_KVIDPhoswich(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDPhoswich*)
   {
      ::KVIDPhoswich *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDPhoswich >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDPhoswich", ::KVIDPhoswich::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDPhoswich.h", 24,
                  typeid(::KVIDPhoswich), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDPhoswich::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDPhoswich) );
      instance.SetNew(&new_KVIDPhoswich);
      instance.SetNewArray(&newArray_KVIDPhoswich);
      instance.SetDelete(&delete_KVIDPhoswich);
      instance.SetDeleteArray(&deleteArray_KVIDPhoswich);
      instance.SetDestructor(&destruct_KVIDPhoswich);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDPhoswich*)
   {
      return GenerateInitInstanceLocal((::KVIDPhoswich*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDPhoswich*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoCsI_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoCsI_e475s(void *p = 0);
   static void *newArray_KVIDChIoCsI_e475s(Long_t size, void *p);
   static void delete_KVIDChIoCsI_e475s(void *p);
   static void deleteArray_KVIDChIoCsI_e475s(void *p);
   static void destruct_KVIDChIoCsI_e475s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoCsI_e475s*)
   {
      ::KVIDChIoCsI_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoCsI_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoCsI_e475s", ::KVIDChIoCsI_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoCsI_e475s.h", 19,
                  typeid(::KVIDChIoCsI_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoCsI_e475s::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoCsI_e475s) );
      instance.SetNew(&new_KVIDChIoCsI_e475s);
      instance.SetNewArray(&newArray_KVIDChIoCsI_e475s);
      instance.SetDelete(&delete_KVIDChIoCsI_e475s);
      instance.SetDeleteArray(&deleteArray_KVIDChIoCsI_e475s);
      instance.SetDestructor(&destruct_KVIDChIoCsI_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoCsI_e475s*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoCsI_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoCsI_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRARRMValidator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRARRMValidator(void *p = 0);
   static void *newArray_KVINDRARRMValidator(Long_t size, void *p);
   static void delete_KVINDRARRMValidator(void *p);
   static void deleteArray_KVINDRARRMValidator(void *p);
   static void destruct_KVINDRARRMValidator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRARRMValidator*)
   {
      ::KVINDRARRMValidator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRARRMValidator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRARRMValidator", ::KVINDRARRMValidator::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVINDRARRMValidator.h", 13,
                  typeid(::KVINDRARRMValidator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRARRMValidator::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRARRMValidator) );
      instance.SetNew(&new_KVINDRARRMValidator);
      instance.SetNewArray(&newArray_KVINDRARRMValidator);
      instance.SetDelete(&delete_KVINDRARRMValidator);
      instance.SetDeleteArray(&deleteArray_KVINDRARRMValidator);
      instance.SetDestructor(&destruct_KVINDRARRMValidator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRARRMValidator*)
   {
      return GenerateInitInstanceLocal((::KVINDRARRMValidator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRARRMValidator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDChIoSi5_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDChIoSi5(void *p = 0);
   static void *newArray_KVIDChIoSi5(Long_t size, void *p);
   static void delete_KVIDChIoSi5(void *p);
   static void deleteArray_KVIDChIoSi5(void *p);
   static void destruct_KVIDChIoSi5(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDChIoSi5*)
   {
      ::KVIDChIoSi5 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDChIoSi5 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDChIoSi5", ::KVIDChIoSi5::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDChIoSi5.h", 16,
                  typeid(::KVIDChIoSi5), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDChIoSi5::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDChIoSi5) );
      instance.SetNew(&new_KVIDChIoSi5);
      instance.SetNewArray(&newArray_KVIDChIoSi5);
      instance.SetDelete(&delete_KVIDChIoSi5);
      instance.SetDeleteArray(&deleteArray_KVIDChIoSi5);
      instance.SetDestructor(&destruct_KVIDChIoSi5);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDChIoSi5*)
   {
      return GenerateInitInstanceLocal((::KVIDChIoSi5*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDChIoSi5*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDSiCsI_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDSiCsI_e475s(void *p = 0);
   static void *newArray_KVIDSiCsI_e475s(Long_t size, void *p);
   static void delete_KVIDSiCsI_e475s(void *p);
   static void deleteArray_KVIDSiCsI_e475s(void *p);
   static void destruct_KVIDSiCsI_e475s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDSiCsI_e475s*)
   {
      ::KVIDSiCsI_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDSiCsI_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDSiCsI_e475s", ::KVIDSiCsI_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDSiCsI_e475s.h", 20,
                  typeid(::KVIDSiCsI_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDSiCsI_e475s::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDSiCsI_e475s) );
      instance.SetNew(&new_KVIDSiCsI_e475s);
      instance.SetNewArray(&newArray_KVIDSiCsI_e475s);
      instance.SetDelete(&delete_KVIDSiCsI_e475s);
      instance.SetDeleteArray(&deleteArray_KVIDSiCsI_e475s);
      instance.SetDestructor(&destruct_KVIDSiCsI_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDSiCsI_e475s*)
   {
      return GenerateInitInstanceLocal((::KVIDSiCsI_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDSiCsI_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVIDBlocking_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVIDBlocking(void *p = 0);
   static void *newArray_KVIDBlocking(Long_t size, void *p);
   static void delete_KVIDBlocking(void *p);
   static void deleteArray_KVIDBlocking(void *p);
   static void destruct_KVIDBlocking(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVIDBlocking*)
   {
      ::KVIDBlocking *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVIDBlocking >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVIDBlocking", ::KVIDBlocking::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/identification/KVIDBlocking.h", 25,
                  typeid(::KVIDBlocking), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVIDBlocking::Dictionary, isa_proxy, 4,
                  sizeof(::KVIDBlocking) );
      instance.SetNew(&new_KVIDBlocking);
      instance.SetNewArray(&newArray_KVIDBlocking);
      instance.SetDelete(&delete_KVIDBlocking);
      instance.SetDeleteArray(&deleteArray_KVIDBlocking);
      instance.SetDestructor(&destruct_KVIDBlocking);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVIDBlocking*)
   {
      return GenerateInitInstanceLocal((::KVIDBlocking*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVIDBlocking*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAIDTelescope::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAIDTelescope::Class_Name()
{
   return "KVINDRAIDTelescope";
}

//______________________________________________________________________________
const char *KVINDRAIDTelescope::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAIDTelescope*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAIDTelescope::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAIDTelescope*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAIDTelescope::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAIDTelescope*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAIDTelescope::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAIDTelescope*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDGChIoSi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDGChIoSi::Class_Name()
{
   return "KVIDGChIoSi";
}

//______________________________________________________________________________
const char *KVIDGChIoSi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGChIoSi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDGChIoSi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGChIoSi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDGChIoSi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGChIoSi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDGChIoSi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGChIoSi*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoSi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoSi::Class_Name()
{
   return "KVIDChIoSi";
}

//______________________________________________________________________________
const char *KVIDChIoSi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoSi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoSi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoSi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDGChIoSi_e494s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDGChIoSi_e494s::Class_Name()
{
   return "KVIDGChIoSi_e494s";
}

//______________________________________________________________________________
const char *KVIDGChIoSi_e494s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGChIoSi_e494s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDGChIoSi_e494s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGChIoSi_e494s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDGChIoSi_e494s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGChIoSi_e494s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDGChIoSi_e494s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGChIoSi_e494s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoSiCorr::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoSiCorr::Class_Name()
{
   return "KVIDChIoSiCorr";
}

//______________________________________________________________________________
const char *KVIDChIoSiCorr::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSiCorr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoSiCorr::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSiCorr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoSiCorr::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSiCorr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoSiCorr::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSiCorr*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoSi75::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoSi75::Class_Name()
{
   return "KVIDChIoSi75";
}

//______________________________________________________________________________
const char *KVIDChIoSi75::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoSi75::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoSi75::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoSi75::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoSi75_camp5::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoSi75_camp5::Class_Name()
{
   return "KVIDChIoSi75_camp5";
}

//______________________________________________________________________________
const char *KVIDChIoSi75_camp5::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75_camp5*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoSi75_camp5::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75_camp5*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoSi75_camp5::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75_camp5*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoSi75_camp5::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75_camp5*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSiCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSiCsI::Class_Name()
{
   return "KVIDSiCsI";
}

//______________________________________________________________________________
const char *KVIDSiCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSiCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSiCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSiCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSiCorrCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSiCorrCsI::Class_Name()
{
   return "KVIDSiCorrCsI";
}

//______________________________________________________________________________
const char *KVIDSiCorrCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCorrCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSiCorrCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCorrCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSiCorrCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCorrCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSiCorrCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCorrCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoCsI::Class_Name()
{
   return "KVIDChIoCsI";
}

//______________________________________________________________________________
const char *KVIDChIoCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoSi_e613::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoSi_e613::Class_Name()
{
   return "KVIDChIoSi_e613";
}

//______________________________________________________________________________
const char *KVIDChIoSi_e613::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi_e613*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoSi_e613::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi_e613*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoSi_e613::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi_e613*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoSi_e613::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi_e613*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRACodeMask::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRACodeMask::Class_Name()
{
   return "KVINDRACodeMask";
}

//______________________________________________________________________________
const char *KVINDRACodeMask::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRACodeMask*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRACodeMask::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRACodeMask*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRACodeMask::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRACodeMask*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRACodeMask::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRACodeMask*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSiLiCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSiLiCsI::Class_Name()
{
   return "KVIDSiLiCsI";
}

//______________________________________________________________________________
const char *KVIDSiLiCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSiLiCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSiLiCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSiLiCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSiLiCsI_e494s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSiLiCsI_e494s::Class_Name()
{
   return "KVIDSiLiCsI_e494s";
}

//______________________________________________________________________________
const char *KVIDSiLiCsI_e494s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI_e494s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSiLiCsI_e494s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI_e494s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSiLiCsI_e494s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI_e494s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSiLiCsI_e494s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI_e494s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSi75SiLi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSi75SiLi::Class_Name()
{
   return "KVIDSi75SiLi";
}

//______________________________________________________________________________
const char *KVIDSi75SiLi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSi75SiLi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSi75SiLi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSi75SiLi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSi75SiLi_e494s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSi75SiLi_e494s::Class_Name()
{
   return "KVIDSi75SiLi_e494s";
}

//______________________________________________________________________________
const char *KVIDSi75SiLi_e494s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi_e494s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSi75SiLi_e494s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi_e494s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSi75SiLi_e494s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi_e494s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSi75SiLi_e494s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi_e494s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDGCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDGCsI::Class_Name()
{
   return "KVIDGCsI";
}

//______________________________________________________________________________
const char *KVIDGCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDGCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDGCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDGCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDGCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDCsI::Class_Name()
{
   return "KVIDCsI";
}

//______________________________________________________________________________
const char *KVIDCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRACodes::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRACodes::Class_Name()
{
   return "KVINDRACodes";
}

//______________________________________________________________________________
const char *KVINDRACodes::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRACodes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRACodes::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRACodes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRACodes::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRACodes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRACodes::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRACodes*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoSiLi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoSiLi::Class_Name()
{
   return "KVIDChIoSiLi";
}

//______________________________________________________________________________
const char *KVIDChIoSiLi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSiLi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoSiLi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSiLi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoSiLi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSiLi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoSiLi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSiLi*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSiLiCsI_camp5::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSiLiCsI_camp5::Class_Name()
{
   return "KVIDSiLiCsI_camp5";
}

//______________________________________________________________________________
const char *KVIDSiLiCsI_camp5::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI_camp5*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSiLiCsI_camp5::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI_camp5*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSiLiCsI_camp5::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI_camp5*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSiLiCsI_camp5::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiLiCsI_camp5*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSiCsI_e613::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSiCsI_e613::Class_Name()
{
   return "KVIDSiCsI_e613";
}

//______________________________________________________________________________
const char *KVIDSiCsI_e613::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI_e613*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSiCsI_e613::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI_e613*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSiCsI_e613::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI_e613*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSiCsI_e613::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI_e613*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDCsIRLLine::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDCsIRLLine::Class_Name()
{
   return "KVIDCsIRLLine";
}

//______________________________________________________________________________
const char *KVIDCsIRLLine::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsIRLLine*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDCsIRLLine::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsIRLLine*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDCsIRLLine::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsIRLLine*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDCsIRLLine::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsIRLLine*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSiCsI5::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSiCsI5::Class_Name()
{
   return "KVIDSiCsI5";
}

//______________________________________________________________________________
const char *KVIDSiCsI5::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI5*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSiCsI5::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI5*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSiCsI5::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI5*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSiCsI5::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI5*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSi75SiLi_camp5::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSi75SiLi_camp5::Class_Name()
{
   return "KVIDSi75SiLi_camp5";
}

//______________________________________________________________________________
const char *KVIDSi75SiLi_camp5::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi_camp5*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSi75SiLi_camp5::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi_camp5*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSi75SiLi_camp5::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi_camp5*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSi75SiLi_camp5::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi75SiLi_camp5*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDP2toCsIGridConvertor::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDP2toCsIGridConvertor::Class_Name()
{
   return "KVDP2toCsIGridConvertor";
}

//______________________________________________________________________________
const char *KVDP2toCsIGridConvertor::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDP2toCsIGridConvertor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDP2toCsIGridConvertor::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDP2toCsIGridConvertor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDP2toCsIGridConvertor::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDP2toCsIGridConvertor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDP2toCsIGridConvertor::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDP2toCsIGridConvertor*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoCorrCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoCorrCsI::Class_Name()
{
   return "KVIDChIoCorrCsI";
}

//______________________________________________________________________________
const char *KVIDChIoCorrCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoCorrCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoCorrCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoCorrCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDCsI_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDCsI_e475s::Class_Name()
{
   return "KVIDCsI_e475s";
}

//______________________________________________________________________________
const char *KVIDCsI_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsI_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDCsI_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsI_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDCsI_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsI_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDCsI_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDCsI_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoSi75_e494s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoSi75_e494s::Class_Name()
{
   return "KVIDChIoSi75_e494s";
}

//______________________________________________________________________________
const char *KVIDChIoSi75_e494s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75_e494s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoSi75_e494s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75_e494s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoSi75_e494s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75_e494s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoSi75_e494s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi75_e494s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoCorrCsI_e494s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoCorrCsI_e494s::Class_Name()
{
   return "KVIDChIoCorrCsI_e494s";
}

//______________________________________________________________________________
const char *KVIDChIoCorrCsI_e494s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI_e494s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoCorrCsI_e494s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI_e494s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoCorrCsI_e494s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI_e494s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoCorrCsI_e494s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCorrCsI_e494s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoSi_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoSi_e475s::Class_Name()
{
   return "KVIDChIoSi_e475s";
}

//______________________________________________________________________________
const char *KVIDChIoSi_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoSi_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoSi_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoSi_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoCsI_camp5::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoCsI_camp5::Class_Name()
{
   return "KVIDChIoCsI_camp5";
}

//______________________________________________________________________________
const char *KVIDChIoCsI_camp5::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI_camp5*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoCsI_camp5::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI_camp5*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoCsI_camp5::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI_camp5*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoCsI_camp5::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI_camp5*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSi150CsI_camp5::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSi150CsI_camp5::Class_Name()
{
   return "KVIDSi150CsI_camp5";
}

//______________________________________________________________________________
const char *KVIDSi150CsI_camp5::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi150CsI_camp5*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSi150CsI_camp5::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi150CsI_camp5*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSi150CsI_camp5::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi150CsI_camp5*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSi150CsI_camp5::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSi150CsI_camp5*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDPhoswich::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDPhoswich::Class_Name()
{
   return "KVIDPhoswich";
}

//______________________________________________________________________________
const char *KVIDPhoswich::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDPhoswich*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDPhoswich::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDPhoswich*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDPhoswich::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDPhoswich*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDPhoswich::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDPhoswich*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoCsI_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoCsI_e475s::Class_Name()
{
   return "KVIDChIoCsI_e475s";
}

//______________________________________________________________________________
const char *KVIDChIoCsI_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoCsI_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoCsI_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoCsI_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoCsI_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRARRMValidator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRARRMValidator::Class_Name()
{
   return "KVINDRARRMValidator";
}

//______________________________________________________________________________
const char *KVINDRARRMValidator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARRMValidator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRARRMValidator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARRMValidator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRARRMValidator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARRMValidator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRARRMValidator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARRMValidator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDChIoSi5::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDChIoSi5::Class_Name()
{
   return "KVIDChIoSi5";
}

//______________________________________________________________________________
const char *KVIDChIoSi5::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi5*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDChIoSi5::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi5*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDChIoSi5::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi5*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDChIoSi5::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDChIoSi5*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDSiCsI_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDSiCsI_e475s::Class_Name()
{
   return "KVIDSiCsI_e475s";
}

//______________________________________________________________________________
const char *KVIDSiCsI_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDSiCsI_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDSiCsI_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDSiCsI_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDSiCsI_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVIDBlocking::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVIDBlocking::Class_Name()
{
   return "KVIDBlocking";
}

//______________________________________________________________________________
const char *KVIDBlocking::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDBlocking*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVIDBlocking::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDBlocking*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVIDBlocking::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDBlocking*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVIDBlocking::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVIDBlocking*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVINDRACodes::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRACodes.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRACodes::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRACodes::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRACodes::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRACodes.
      TClass *R__cl = ::KVINDRACodes::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDSubCodes", &fIDSubCodes);
      R__insp.InspectMember(fIDSubCodes, "fIDSubCodes.");
      KVINDRACodeMask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRACodes(void *p) {
      return  p ? new(p) ::KVINDRACodes : new ::KVINDRACodes;
   }
   static void *newArray_KVINDRACodes(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRACodes[nElements] : new ::KVINDRACodes[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRACodes(void *p) {
      delete ((::KVINDRACodes*)p);
   }
   static void deleteArray_KVINDRACodes(void *p) {
      delete [] ((::KVINDRACodes*)p);
   }
   static void destruct_KVINDRACodes(void *p) {
      typedef ::KVINDRACodes current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRACodes

//______________________________________________________________________________
void KVINDRACodeMask::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRACodeMask.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRACodeMask::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRACodeMask::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRACodeMask::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRACodeMask.
      TClass *R__cl = ::KVINDRACodeMask::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDMask", &fIDMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEMask", &fEMask);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRACodeMask(void *p) {
      return  p ? new(p) ::KVINDRACodeMask : new ::KVINDRACodeMask;
   }
   static void *newArray_KVINDRACodeMask(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRACodeMask[nElements] : new ::KVINDRACodeMask[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRACodeMask(void *p) {
      delete ((::KVINDRACodeMask*)p);
   }
   static void deleteArray_KVINDRACodeMask(void *p) {
      delete [] ((::KVINDRACodeMask*)p);
   }
   static void destruct_KVINDRACodeMask(void *p) {
      typedef ::KVINDRACodeMask current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRACodeMask

//______________________________________________________________________________
void KVDP2toCsIGridConvertor::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDP2toCsIGridConvertor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDP2toCsIGridConvertor::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDP2toCsIGridConvertor::Class(),this);
   }
}

//______________________________________________________________________________
void KVDP2toCsIGridConvertor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDP2toCsIGridConvertor.
      TClass *R__cl = ::KVDP2toCsIGridConvertor::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDP2toIDGridConvertor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDP2toCsIGridConvertor(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVDP2toCsIGridConvertor : new ::KVDP2toCsIGridConvertor;
   }
   static void *newArray_KVDP2toCsIGridConvertor(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVDP2toCsIGridConvertor[nElements] : new ::KVDP2toCsIGridConvertor[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDP2toCsIGridConvertor(void *p) {
      delete ((::KVDP2toCsIGridConvertor*)p);
   }
   static void deleteArray_KVDP2toCsIGridConvertor(void *p) {
      delete [] ((::KVDP2toCsIGridConvertor*)p);
   }
   static void destruct_KVDP2toCsIGridConvertor(void *p) {
      typedef ::KVDP2toCsIGridConvertor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDP2toCsIGridConvertor

//______________________________________________________________________________
void KVIDCsIRLLine::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDCsIRLLine.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDCsIRLLine::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDCsIRLLine::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDCsIRLLine::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDCsIRLLine.
      TClass *R__cl = ::KVIDCsIRLLine::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDZALine::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDCsIRLLine(void *p) {
      return  p ? new(p) ::KVIDCsIRLLine : new ::KVIDCsIRLLine;
   }
   static void *newArray_KVIDCsIRLLine(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDCsIRLLine[nElements] : new ::KVIDCsIRLLine[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDCsIRLLine(void *p) {
      delete ((::KVIDCsIRLLine*)p);
   }
   static void deleteArray_KVIDCsIRLLine(void *p) {
      delete [] ((::KVIDCsIRLLine*)p);
   }
   static void destruct_KVIDCsIRLLine(void *p) {
      typedef ::KVIDCsIRLLine current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_KVIDCsIRLLine(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::KVIDCsIRLLine*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::KVIDCsIRLLine

//______________________________________________________________________________
void KVIDGCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDGCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDGCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDGCsI::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDGCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDGCsI.
      TClass *R__cl = ::KVIDGCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*IMFLine", &IMFLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GammaLine", &GammaLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIMFlineadded", &fIMFlineadded);
      KVIDZAGrid::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDGCsI(void *p) {
      return  p ? new(p) ::KVIDGCsI : new ::KVIDGCsI;
   }
   static void *newArray_KVIDGCsI(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDGCsI[nElements] : new ::KVIDGCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDGCsI(void *p) {
      delete ((::KVIDGCsI*)p);
   }
   static void deleteArray_KVIDGCsI(void *p) {
      delete [] ((::KVIDGCsI*)p);
   }
   static void destruct_KVIDGCsI(void *p) {
      typedef ::KVIDGCsI current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_KVIDGCsI(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::KVIDGCsI*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::KVIDGCsI

//______________________________________________________________________________
void KVIDGChIoSi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDGChIoSi.
      TClass *R__cl = ::KVIDGChIoSi::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBragg", &fBragg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPunch", &fPunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSeuil", &fSeuil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmaxSi", &fEmaxSi);
      KVIDZAGrid::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDGChIoSi(void *p) {
      return  p ? new(p) ::KVIDGChIoSi : new ::KVIDGChIoSi;
   }
   static void *newArray_KVIDGChIoSi(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDGChIoSi[nElements] : new ::KVIDGChIoSi[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDGChIoSi(void *p) {
      delete ((::KVIDGChIoSi*)p);
   }
   static void deleteArray_KVIDGChIoSi(void *p) {
      delete [] ((::KVIDGChIoSi*)p);
   }
   static void destruct_KVIDGChIoSi(void *p) {
      typedef ::KVIDGChIoSi current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVIDGChIoSi(TBuffer &buf, void *obj) {
      ((::KVIDGChIoSi*)obj)->::KVIDGChIoSi::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_KVIDGChIoSi(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::KVIDGChIoSi*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::KVIDGChIoSi

//______________________________________________________________________________
void KVIDGChIoSi_e494s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDGChIoSi_e494s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDGChIoSi_e494s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDGChIoSi_e494s::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDGChIoSi_e494s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDGChIoSi_e494s.
      TClass *R__cl = ::KVIDGChIoSi_e494s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChIoSeuil", &fChIoSeuil);
      KVIDGChIoSi::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDGChIoSi_e494s(void *p) {
      return  p ? new(p) ::KVIDGChIoSi_e494s : new ::KVIDGChIoSi_e494s;
   }
   static void *newArray_KVIDGChIoSi_e494s(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDGChIoSi_e494s[nElements] : new ::KVIDGChIoSi_e494s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDGChIoSi_e494s(void *p) {
      delete ((::KVIDGChIoSi_e494s*)p);
   }
   static void deleteArray_KVIDGChIoSi_e494s(void *p) {
      delete [] ((::KVIDGChIoSi_e494s*)p);
   }
   static void destruct_KVIDGChIoSi_e494s(void *p) {
      typedef ::KVIDGChIoSi_e494s current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_KVIDGChIoSi_e494s(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::KVIDGChIoSi_e494s*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::KVIDGChIoSi_e494s

//______________________________________________________________________________
void KVINDRAIDTelescope::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAIDTelescope.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAIDTelescope::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAIDTelescope::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAIDTelescope::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAIDTelescope.
      TClass *R__cl = ::KVINDRAIDTelescope::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDCode", &fIDCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZminCode", &fZminCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECode", &fECode);
      KVIDTelescope::ShowMembers(R__insp);
      KVIDSubCodeManager::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAIDTelescope(void *p) {
      return  p ? new(p) ::KVINDRAIDTelescope : new ::KVINDRAIDTelescope;
   }
   static void *newArray_KVINDRAIDTelescope(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAIDTelescope[nElements] : new ::KVINDRAIDTelescope[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAIDTelescope(void *p) {
      delete ((::KVINDRAIDTelescope*)p);
   }
   static void deleteArray_KVINDRAIDTelescope(void *p) {
      delete [] ((::KVINDRAIDTelescope*)p);
   }
   static void destruct_KVINDRAIDTelescope(void *p) {
      typedef ::KVINDRAIDTelescope current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAIDTelescope

//______________________________________________________________________________
void KVIDSiCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSiCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSiCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSiCsI::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSiCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSiCsI.
      TClass *R__cl = ::KVIDSiCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRAIDTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSiCsI(void *p) {
      return  p ? new(p) ::KVIDSiCsI : new ::KVIDSiCsI;
   }
   static void *newArray_KVIDSiCsI(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSiCsI[nElements] : new ::KVIDSiCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSiCsI(void *p) {
      delete ((::KVIDSiCsI*)p);
   }
   static void deleteArray_KVIDSiCsI(void *p) {
      delete [] ((::KVIDSiCsI*)p);
   }
   static void destruct_KVIDSiCsI(void *p) {
      typedef ::KVIDSiCsI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSiCsI

//______________________________________________________________________________
void KVIDSiCsI_e475s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSiCsI_e475s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSiCsI_e475s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSiCsI_e475s::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSiCsI_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSiCsI_e475s.
      TClass *R__cl = ::KVIDSiCsI_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fidgrid", &fidgrid);
      KVIDSiCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSiCsI_e475s(void *p) {
      return  p ? new(p) ::KVIDSiCsI_e475s : new ::KVIDSiCsI_e475s;
   }
   static void *newArray_KVIDSiCsI_e475s(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSiCsI_e475s[nElements] : new ::KVIDSiCsI_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSiCsI_e475s(void *p) {
      delete ((::KVIDSiCsI_e475s*)p);
   }
   static void deleteArray_KVIDSiCsI_e475s(void *p) {
      delete [] ((::KVIDSiCsI_e475s*)p);
   }
   static void destruct_KVIDSiCsI_e475s(void *p) {
      typedef ::KVIDSiCsI_e475s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSiCsI_e475s

//______________________________________________________________________________
void KVIDSiCsI_e613::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSiCsI_e613.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSiCsI_e613::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSiCsI_e613::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSiCsI_e613::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSiCsI_e613.
      TClass *R__cl = ::KVIDSiCsI_e613::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGGgrid", &fGGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPGgrid", &fPGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPIEDESTAL", &fPIEDESTAL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSi", &fSi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCsIRPedestal", &fCsIRPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCsILPedestal", &fCsILPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSiPGPedestal", &fSiPGPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSiGGPedestal", &fSiGGPedestal);
      KVIDSiCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSiCsI_e613(void *p) {
      return  p ? new(p) ::KVIDSiCsI_e613 : new ::KVIDSiCsI_e613;
   }
   static void *newArray_KVIDSiCsI_e613(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSiCsI_e613[nElements] : new ::KVIDSiCsI_e613[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSiCsI_e613(void *p) {
      delete ((::KVIDSiCsI_e613*)p);
   }
   static void deleteArray_KVIDSiCsI_e613(void *p) {
      delete [] ((::KVIDSiCsI_e613*)p);
   }
   static void destruct_KVIDSiCsI_e613(void *p) {
      typedef ::KVIDSiCsI_e613 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSiCsI_e613

//______________________________________________________________________________
void KVIDSiLiCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSiLiCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSiLiCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSiLiCsI::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSiLiCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSiLiCsI.
      TClass *R__cl = ::KVIDSiLiCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDSiCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSiLiCsI(void *p) {
      return  p ? new(p) ::KVIDSiLiCsI : new ::KVIDSiLiCsI;
   }
   static void *newArray_KVIDSiLiCsI(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSiLiCsI[nElements] : new ::KVIDSiLiCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSiLiCsI(void *p) {
      delete ((::KVIDSiLiCsI*)p);
   }
   static void deleteArray_KVIDSiLiCsI(void *p) {
      delete [] ((::KVIDSiLiCsI*)p);
   }
   static void destruct_KVIDSiLiCsI(void *p) {
      typedef ::KVIDSiLiCsI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSiLiCsI

//______________________________________________________________________________
void KVIDSi75SiLi::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSi75SiLi.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSi75SiLi::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSi75SiLi::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSi75SiLi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSi75SiLi.
      TClass *R__cl = ::KVIDSi75SiLi::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRAIDTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSi75SiLi(void *p) {
      return  p ? new(p) ::KVIDSi75SiLi : new ::KVIDSi75SiLi;
   }
   static void *newArray_KVIDSi75SiLi(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSi75SiLi[nElements] : new ::KVIDSi75SiLi[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSi75SiLi(void *p) {
      delete ((::KVIDSi75SiLi*)p);
   }
   static void deleteArray_KVIDSi75SiLi(void *p) {
      delete [] ((::KVIDSi75SiLi*)p);
   }
   static void destruct_KVIDSi75SiLi(void *p) {
      typedef ::KVIDSi75SiLi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSi75SiLi

//______________________________________________________________________________
void KVIDChIoSi::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoSi.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoSi::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoSi::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoSi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoSi.
      TClass *R__cl = ::KVIDChIoSi::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChIoSiGrid", &ChIoSiGrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fchio", &fchio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fsi", &fsi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsipgped", &fsipgped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fchiopgped", &fchiopgped);
      KVINDRAIDTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoSi(void *p) {
      return  p ? new(p) ::KVIDChIoSi : new ::KVIDChIoSi;
   }
   static void *newArray_KVIDChIoSi(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoSi[nElements] : new ::KVIDChIoSi[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoSi(void *p) {
      delete ((::KVIDChIoSi*)p);
   }
   static void deleteArray_KVIDChIoSi(void *p) {
      delete [] ((::KVIDChIoSi*)p);
   }
   static void destruct_KVIDChIoSi(void *p) {
      typedef ::KVIDChIoSi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoSi

//______________________________________________________________________________
void KVIDChIoSi75::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoSi75.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoSi75::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoSi75::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoSi75::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoSi75.
      TClass *R__cl = ::KVIDChIoSi75::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDChIoSi::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoSi75(void *p) {
      return  p ? new(p) ::KVIDChIoSi75 : new ::KVIDChIoSi75;
   }
   static void *newArray_KVIDChIoSi75(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoSi75[nElements] : new ::KVIDChIoSi75[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoSi75(void *p) {
      delete ((::KVIDChIoSi75*)p);
   }
   static void deleteArray_KVIDChIoSi75(void *p) {
      delete [] ((::KVIDChIoSi75*)p);
   }
   static void destruct_KVIDChIoSi75(void *p) {
      typedef ::KVIDChIoSi75 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoSi75

//______________________________________________________________________________
void KVIDChIoSiLi::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoSiLi.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoSiLi::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoSiLi::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoSiLi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoSiLi.
      TClass *R__cl = ::KVIDChIoSiLi::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDChIoSi::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoSiLi(void *p) {
      return  p ? new(p) ::KVIDChIoSiLi : new ::KVIDChIoSiLi;
   }
   static void *newArray_KVIDChIoSiLi(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoSiLi[nElements] : new ::KVIDChIoSiLi[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoSiLi(void *p) {
      delete ((::KVIDChIoSiLi*)p);
   }
   static void deleteArray_KVIDChIoSiLi(void *p) {
      delete [] ((::KVIDChIoSiLi*)p);
   }
   static void destruct_KVIDChIoSiLi(void *p) {
      typedef ::KVIDChIoSiLi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoSiLi

//______________________________________________________________________________
void KVIDChIoSi_e475s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoSi_e475s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoSi_e475s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoSi_e475s::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoSi_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoSi_e475s.
      TClass *R__cl = ::KVIDChIoSi_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDChIoSi::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoSi_e475s(void *p) {
      return  p ? new(p) ::KVIDChIoSi_e475s : new ::KVIDChIoSi_e475s;
   }
   static void *newArray_KVIDChIoSi_e475s(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoSi_e475s[nElements] : new ::KVIDChIoSi_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoSi_e475s(void *p) {
      delete ((::KVIDChIoSi_e475s*)p);
   }
   static void deleteArray_KVIDChIoSi_e475s(void *p) {
      delete [] ((::KVIDChIoSi_e475s*)p);
   }
   static void destruct_KVIDChIoSi_e475s(void *p) {
      typedef ::KVIDChIoSi_e475s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoSi_e475s

//______________________________________________________________________________
void KVIDChIoCsI_e475s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoCsI_e475s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoCsI_e475s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoCsI_e475s::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoCsI_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoCsI_e475s.
      TClass *R__cl = ::KVIDChIoCsI_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fidgrid", &fidgrid);
      KVIDChIoCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoCsI_e475s(void *p) {
      return  p ? new(p) ::KVIDChIoCsI_e475s : new ::KVIDChIoCsI_e475s;
   }
   static void *newArray_KVIDChIoCsI_e475s(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoCsI_e475s[nElements] : new ::KVIDChIoCsI_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoCsI_e475s(void *p) {
      delete ((::KVIDChIoCsI_e475s*)p);
   }
   static void deleteArray_KVIDChIoCsI_e475s(void *p) {
      delete [] ((::KVIDChIoCsI_e475s*)p);
   }
   static void destruct_KVIDChIoCsI_e475s(void *p) {
      typedef ::KVIDChIoCsI_e475s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoCsI_e475s

//______________________________________________________________________________
void KVIDCsI_e475s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDCsI_e475s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDCsI_e475s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDCsI_e475s::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDCsI_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDCsI_e475s.
      TClass *R__cl = ::KVIDCsI_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDCsI_e475s(void *p) {
      return  p ? new(p) ::KVIDCsI_e475s : new ::KVIDCsI_e475s;
   }
   static void *newArray_KVIDCsI_e475s(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDCsI_e475s[nElements] : new ::KVIDCsI_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDCsI_e475s(void *p) {
      delete ((::KVIDCsI_e475s*)p);
   }
   static void deleteArray_KVIDCsI_e475s(void *p) {
      delete [] ((::KVIDCsI_e475s*)p);
   }
   static void destruct_KVIDCsI_e475s(void *p) {
      typedef ::KVIDCsI_e475s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDCsI_e475s

//______________________________________________________________________________
void KVIDCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDCsI::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDCsI.
      TClass *R__cl = ::KVIDCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CsIGrid", &CsIGrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      KVINDRAIDTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDCsI(void *p) {
      return  p ? new(p) ::KVIDCsI : new ::KVIDCsI;
   }
   static void *newArray_KVIDCsI(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDCsI[nElements] : new ::KVIDCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDCsI(void *p) {
      delete ((::KVIDCsI*)p);
   }
   static void deleteArray_KVIDCsI(void *p) {
      delete [] ((::KVIDCsI*)p);
   }
   static void destruct_KVIDCsI(void *p) {
      typedef ::KVIDCsI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDCsI

//______________________________________________________________________________
void KVIDPhoswich::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDPhoswich.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDPhoswich::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDPhoswich::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDPhoswich::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDPhoswich.
      TClass *R__cl = ::KVIDPhoswich::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRAIDTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDPhoswich(void *p) {
      return  p ? new(p) ::KVIDPhoswich : new ::KVIDPhoswich;
   }
   static void *newArray_KVIDPhoswich(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDPhoswich[nElements] : new ::KVIDPhoswich[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDPhoswich(void *p) {
      delete ((::KVIDPhoswich*)p);
   }
   static void deleteArray_KVIDPhoswich(void *p) {
      delete [] ((::KVIDPhoswich*)p);
   }
   static void destruct_KVIDPhoswich(void *p) {
      typedef ::KVIDPhoswich current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDPhoswich

//______________________________________________________________________________
void KVIDChIoCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoCsI::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoCsI.
      TClass *R__cl = ::KVIDChIoCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRAIDTelescope::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoCsI(void *p) {
      return  p ? new(p) ::KVIDChIoCsI : new ::KVIDChIoCsI;
   }
   static void *newArray_KVIDChIoCsI(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoCsI[nElements] : new ::KVIDChIoCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoCsI(void *p) {
      delete ((::KVIDChIoCsI*)p);
   }
   static void deleteArray_KVIDChIoCsI(void *p) {
      delete [] ((::KVIDChIoCsI*)p);
   }
   static void destruct_KVIDChIoCsI(void *p) {
      typedef ::KVIDChIoCsI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoCsI

//______________________________________________________________________________
void KVIDSi150CsI_camp5::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSi150CsI_camp5.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSi150CsI_camp5::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSi150CsI_camp5::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSi150CsI_camp5::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSi150CsI_camp5.
      TClass *R__cl = ::KVIDSi150CsI_camp5::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZAGrid", &fZAGrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZGrid", &fZGrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSi", &fSi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSIPG", &fSIPG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      KVIDSiCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSi150CsI_camp5(void *p) {
      return  p ? new(p) ::KVIDSi150CsI_camp5 : new ::KVIDSi150CsI_camp5;
   }
   static void *newArray_KVIDSi150CsI_camp5(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSi150CsI_camp5[nElements] : new ::KVIDSi150CsI_camp5[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSi150CsI_camp5(void *p) {
      delete ((::KVIDSi150CsI_camp5*)p);
   }
   static void deleteArray_KVIDSi150CsI_camp5(void *p) {
      delete [] ((::KVIDSi150CsI_camp5*)p);
   }
   static void destruct_KVIDSi150CsI_camp5(void *p) {
      typedef ::KVIDSi150CsI_camp5 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSi150CsI_camp5

//______________________________________________________________________________
void KVIDChIoSi5::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoSi5.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoSi5::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoSi5::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoSi5::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoSi5.
      TClass *R__cl = ::KVIDChIoSi5::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDChIoSi::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoSi5(void *p) {
      return  p ? new(p) ::KVIDChIoSi5 : new ::KVIDChIoSi5;
   }
   static void *newArray_KVIDChIoSi5(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoSi5[nElements] : new ::KVIDChIoSi5[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoSi5(void *p) {
      delete ((::KVIDChIoSi5*)p);
   }
   static void deleteArray_KVIDChIoSi5(void *p) {
      delete [] ((::KVIDChIoSi5*)p);
   }
   static void destruct_KVIDChIoSi5(void *p) {
      typedef ::KVIDChIoSi5 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoSi5

//______________________________________________________________________________
void KVIDChIoSiCorr::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoSiCorr.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoSiCorr::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoSiCorr::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoSiCorr::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoSiCorr.
      TClass *R__cl = ::KVIDChIoSiCorr::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDChIoSi::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoSiCorr(void *p) {
      return  p ? new(p) ::KVIDChIoSiCorr : new ::KVIDChIoSiCorr;
   }
   static void *newArray_KVIDChIoSiCorr(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoSiCorr[nElements] : new ::KVIDChIoSiCorr[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoSiCorr(void *p) {
      delete ((::KVIDChIoSiCorr*)p);
   }
   static void deleteArray_KVIDChIoSiCorr(void *p) {
      delete [] ((::KVIDChIoSiCorr*)p);
   }
   static void destruct_KVIDChIoSiCorr(void *p) {
      typedef ::KVIDChIoSiCorr current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoSiCorr

//______________________________________________________________________________
void KVIDChIoSi75_camp5::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoSi75_camp5.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoSi75_camp5::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoSi75_camp5::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoSi75_camp5::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoSi75_camp5.
      TClass *R__cl = ::KVIDChIoSi75_camp5::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGGgrid", &fGGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPGgrid", &fPGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChIo", &fChIo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSi", &fSi);
      KVIDChIoSi75::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoSi75_camp5(void *p) {
      return  p ? new(p) ::KVIDChIoSi75_camp5 : new ::KVIDChIoSi75_camp5;
   }
   static void *newArray_KVIDChIoSi75_camp5(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoSi75_camp5[nElements] : new ::KVIDChIoSi75_camp5[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoSi75_camp5(void *p) {
      delete ((::KVIDChIoSi75_camp5*)p);
   }
   static void deleteArray_KVIDChIoSi75_camp5(void *p) {
      delete [] ((::KVIDChIoSi75_camp5*)p);
   }
   static void destruct_KVIDChIoSi75_camp5(void *p) {
      typedef ::KVIDChIoSi75_camp5 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoSi75_camp5

//______________________________________________________________________________
void KVIDChIoCsI_camp5::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoCsI_camp5.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoCsI_camp5::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoCsI_camp5::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoCsI_camp5::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoCsI_camp5.
      TClass *R__cl = ::KVIDChIoCsI_camp5::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGGgrid", &fGGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPGgrid", &fPGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChIo", &fChIo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCsIRPedestal", &fCsIRPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCsILPedestal", &fCsILPedestal);
      KVIDChIoCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoCsI_camp5(void *p) {
      return  p ? new(p) ::KVIDChIoCsI_camp5 : new ::KVIDChIoCsI_camp5;
   }
   static void *newArray_KVIDChIoCsI_camp5(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoCsI_camp5[nElements] : new ::KVIDChIoCsI_camp5[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoCsI_camp5(void *p) {
      delete ((::KVIDChIoCsI_camp5*)p);
   }
   static void deleteArray_KVIDChIoCsI_camp5(void *p) {
      delete [] ((::KVIDChIoCsI_camp5*)p);
   }
   static void destruct_KVIDChIoCsI_camp5(void *p) {
      typedef ::KVIDChIoCsI_camp5 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoCsI_camp5

//______________________________________________________________________________
void KVIDChIoCorrCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoCorrCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoCorrCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoCorrCsI::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoCorrCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoCorrCsI.
      TClass *R__cl = ::KVIDChIoCorrCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGrid", &fGrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChIo", &fChIo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      KVIDChIoCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoCorrCsI(void *p) {
      return  p ? new(p) ::KVIDChIoCorrCsI : new ::KVIDChIoCorrCsI;
   }
   static void *newArray_KVIDChIoCorrCsI(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoCorrCsI[nElements] : new ::KVIDChIoCorrCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoCorrCsI(void *p) {
      delete ((::KVIDChIoCorrCsI*)p);
   }
   static void deleteArray_KVIDChIoCorrCsI(void *p) {
      delete [] ((::KVIDChIoCorrCsI*)p);
   }
   static void destruct_KVIDChIoCorrCsI(void *p) {
      typedef ::KVIDChIoCorrCsI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoCorrCsI

//______________________________________________________________________________
void KVIDSi75SiLi_camp5::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSi75SiLi_camp5.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSi75SiLi_camp5::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSi75SiLi_camp5::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSi75SiLi_camp5::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSi75SiLi_camp5.
      TClass *R__cl = ::KVIDSi75SiLi_camp5::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGGgrid", &fGGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPGgrid", &fPGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPGZgrid", &fPGZgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSi75", &fSi75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSiLi", &fSiLi);
      KVIDSi75SiLi::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSi75SiLi_camp5(void *p) {
      return  p ? new(p) ::KVIDSi75SiLi_camp5 : new ::KVIDSi75SiLi_camp5;
   }
   static void *newArray_KVIDSi75SiLi_camp5(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSi75SiLi_camp5[nElements] : new ::KVIDSi75SiLi_camp5[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSi75SiLi_camp5(void *p) {
      delete ((::KVIDSi75SiLi_camp5*)p);
   }
   static void deleteArray_KVIDSi75SiLi_camp5(void *p) {
      delete [] ((::KVIDSi75SiLi_camp5*)p);
   }
   static void destruct_KVIDSi75SiLi_camp5(void *p) {
      typedef ::KVIDSi75SiLi_camp5 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSi75SiLi_camp5

//______________________________________________________________________________
void KVIDSiLiCsI_camp5::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSiLiCsI_camp5.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSiLiCsI_camp5::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSiLiCsI_camp5::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSiLiCsI_camp5::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSiLiCsI_camp5.
      TClass *R__cl = ::KVIDSiLiCsI_camp5::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGGgrid", &fGGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPGgrid", &fPGgrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSiLi", &fSiLi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      KVIDSiLiCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSiLiCsI_camp5(void *p) {
      return  p ? new(p) ::KVIDSiLiCsI_camp5 : new ::KVIDSiLiCsI_camp5;
   }
   static void *newArray_KVIDSiLiCsI_camp5(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSiLiCsI_camp5[nElements] : new ::KVIDSiLiCsI_camp5[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSiLiCsI_camp5(void *p) {
      delete ((::KVIDSiLiCsI_camp5*)p);
   }
   static void deleteArray_KVIDSiLiCsI_camp5(void *p) {
      delete [] ((::KVIDSiLiCsI_camp5*)p);
   }
   static void destruct_KVIDSiLiCsI_camp5(void *p) {
      typedef ::KVIDSiLiCsI_camp5 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSiLiCsI_camp5

//______________________________________________________________________________
void KVIDBlocking::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDBlocking.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDBlocking::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDBlocking::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDBlocking::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDBlocking.
      TClass *R__cl = ::KVIDBlocking::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDChIoSi::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDBlocking(void *p) {
      return  p ? new(p) ::KVIDBlocking : new ::KVIDBlocking;
   }
   static void *newArray_KVIDBlocking(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDBlocking[nElements] : new ::KVIDBlocking[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDBlocking(void *p) {
      delete ((::KVIDBlocking*)p);
   }
   static void deleteArray_KVIDBlocking(void *p) {
      delete [] ((::KVIDBlocking*)p);
   }
   static void destruct_KVIDBlocking(void *p) {
      typedef ::KVIDBlocking current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDBlocking

//______________________________________________________________________________
void KVIDChIoSi_e613::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoSi_e613.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoSi_e613::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoSi_e613::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoSi_e613::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoSi_e613.
      TClass *R__cl = ::KVIDChIoSi_e613::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FromFitChIoSiGrid", &FromFitChIoSiGrid);
      KVIDChIoSi::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoSi_e613(void *p) {
      return  p ? new(p) ::KVIDChIoSi_e613 : new ::KVIDChIoSi_e613;
   }
   static void *newArray_KVIDChIoSi_e613(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoSi_e613[nElements] : new ::KVIDChIoSi_e613[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoSi_e613(void *p) {
      delete ((::KVIDChIoSi_e613*)p);
   }
   static void deleteArray_KVIDChIoSi_e613(void *p) {
      delete [] ((::KVIDChIoSi_e613*)p);
   }
   static void destruct_KVIDChIoSi_e613(void *p) {
      typedef ::KVIDChIoSi_e613 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoSi_e613

//______________________________________________________________________________
void KVIDChIoCorrCsI_e494s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoCorrCsI_e494s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoCorrCsI_e494s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoCorrCsI_e494s::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoCorrCsI_e494s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoCorrCsI_e494s.
      TClass *R__cl = ::KVIDChIoCorrCsI_e494s::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDChIoCorrCsI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoCorrCsI_e494s(void *p) {
      return  p ? new(p) ::KVIDChIoCorrCsI_e494s : new ::KVIDChIoCorrCsI_e494s;
   }
   static void *newArray_KVIDChIoCorrCsI_e494s(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoCorrCsI_e494s[nElements] : new ::KVIDChIoCorrCsI_e494s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoCorrCsI_e494s(void *p) {
      delete ((::KVIDChIoCorrCsI_e494s*)p);
   }
   static void deleteArray_KVIDChIoCorrCsI_e494s(void *p) {
      delete [] ((::KVIDChIoCorrCsI_e494s*)p);
   }
   static void destruct_KVIDChIoCorrCsI_e494s(void *p) {
      typedef ::KVIDChIoCorrCsI_e494s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoCorrCsI_e494s

//______________________________________________________________________________
void KVIDChIoSi75_e494s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDChIoSi75_e494s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDChIoSi75_e494s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDChIoSi75_e494s::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDChIoSi75_e494s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDChIoSi75_e494s.
      TClass *R__cl = ::KVIDChIoSi75_e494s::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVIDChIoSi75::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDChIoSi75_e494s(void *p) {
      return  p ? new(p) ::KVIDChIoSi75_e494s : new ::KVIDChIoSi75_e494s;
   }
   static void *newArray_KVIDChIoSi75_e494s(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDChIoSi75_e494s[nElements] : new ::KVIDChIoSi75_e494s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDChIoSi75_e494s(void *p) {
      delete ((::KVIDChIoSi75_e494s*)p);
   }
   static void deleteArray_KVIDChIoSi75_e494s(void *p) {
      delete [] ((::KVIDChIoSi75_e494s*)p);
   }
   static void destruct_KVIDChIoSi75_e494s(void *p) {
      typedef ::KVIDChIoSi75_e494s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDChIoSi75_e494s

//______________________________________________________________________________
void KVIDSiCsI5::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSiCsI5.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSiCsI5::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSiCsI5::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSiCsI5::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSiCsI5.
      TClass *R__cl = ::KVIDSiCsI5::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSi", &fSi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCsIRPedestal", &fCsIRPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCsILPedestal", &fCsILPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSiPGPedestal", &fSiPGPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSiGGPedestal", &fSiGGPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSiGain", &fSiGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWhichGrid", &fWhichGrid);
      KVIDSiCsI::ShowMembers(R__insp);
      KVTGIDManager::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSiCsI5(void *p) {
      return  p ? new(p) ::KVIDSiCsI5 : new ::KVIDSiCsI5;
   }
   static void *newArray_KVIDSiCsI5(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSiCsI5[nElements] : new ::KVIDSiCsI5[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSiCsI5(void *p) {
      delete ((::KVIDSiCsI5*)p);
   }
   static void deleteArray_KVIDSiCsI5(void *p) {
      delete [] ((::KVIDSiCsI5*)p);
   }
   static void destruct_KVIDSiCsI5(void *p) {
      typedef ::KVIDSiCsI5 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSiCsI5

//______________________________________________________________________________
void KVIDSiCorrCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSiCorrCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSiCorrCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSiCorrCsI::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSiCorrCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSiCorrCsI.
      TClass *R__cl = ::KVIDSiCorrCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSi", &fSi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      KVIDSiCsI::ShowMembers(R__insp);
      KVRTGIDManager::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSiCorrCsI(void *p) {
      return  p ? new(p) ::KVIDSiCorrCsI : new ::KVIDSiCorrCsI;
   }
   static void *newArray_KVIDSiCorrCsI(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSiCorrCsI[nElements] : new ::KVIDSiCorrCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSiCorrCsI(void *p) {
      delete ((::KVIDSiCorrCsI*)p);
   }
   static void deleteArray_KVIDSiCorrCsI(void *p) {
      delete [] ((::KVIDSiCorrCsI*)p);
   }
   static void destruct_KVIDSiCorrCsI(void *p) {
      typedef ::KVIDSiCorrCsI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSiCorrCsI

//______________________________________________________________________________
void KVIDSi75SiLi_e494s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSi75SiLi_e494s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSi75SiLi_e494s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSi75SiLi_e494s::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSi75SiLi_e494s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSi75SiLi_e494s.
      TClass *R__cl = ::KVIDSi75SiLi_e494s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSi75", &fSi75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSiLi", &fSiLi);
      KVIDSi75SiLi::ShowMembers(R__insp);
      KVRTGIDManager::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSi75SiLi_e494s(void *p) {
      return  p ? new(p) ::KVIDSi75SiLi_e494s : new ::KVIDSi75SiLi_e494s;
   }
   static void *newArray_KVIDSi75SiLi_e494s(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSi75SiLi_e494s[nElements] : new ::KVIDSi75SiLi_e494s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSi75SiLi_e494s(void *p) {
      delete ((::KVIDSi75SiLi_e494s*)p);
   }
   static void deleteArray_KVIDSi75SiLi_e494s(void *p) {
      delete [] ((::KVIDSi75SiLi_e494s*)p);
   }
   static void destruct_KVIDSi75SiLi_e494s(void *p) {
      typedef ::KVIDSi75SiLi_e494s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSi75SiLi_e494s

//______________________________________________________________________________
void KVIDSiLiCsI_e494s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVIDSiLiCsI_e494s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVIDSiLiCsI_e494s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVIDSiLiCsI_e494s::Class(),this);
   }
}

//______________________________________________________________________________
void KVIDSiLiCsI_e494s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVIDSiLiCsI_e494s.
      TClass *R__cl = ::KVIDSiLiCsI_e494s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSiLi", &fSiLi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      KVIDSiLiCsI::ShowMembers(R__insp);
      KVRTGIDManager::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVIDSiLiCsI_e494s(void *p) {
      return  p ? new(p) ::KVIDSiLiCsI_e494s : new ::KVIDSiLiCsI_e494s;
   }
   static void *newArray_KVIDSiLiCsI_e494s(Long_t nElements, void *p) {
      return p ? new(p) ::KVIDSiLiCsI_e494s[nElements] : new ::KVIDSiLiCsI_e494s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVIDSiLiCsI_e494s(void *p) {
      delete ((::KVIDSiLiCsI_e494s*)p);
   }
   static void deleteArray_KVIDSiLiCsI_e494s(void *p) {
      delete [] ((::KVIDSiLiCsI_e494s*)p);
   }
   static void destruct_KVIDSiLiCsI_e494s(void *p) {
      typedef ::KVIDSiLiCsI_e494s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVIDSiLiCsI_e494s

//______________________________________________________________________________
void KVINDRARRMValidator::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRARRMValidator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRARRMValidator::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRARRMValidator::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRARRMValidator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRARRMValidator.
      TClass *R__cl = ::KVINDRARRMValidator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRuns", &fRuns);
      R__insp.InspectMember(fRuns, "fRuns.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRings", &fRings);
      R__insp.InspectMember(fRings, "fRings.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModules", &fModules);
      R__insp.InspectMember(fModules, "fModules.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRARRMValidator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRARRMValidator : new ::KVINDRARRMValidator;
   }
   static void *newArray_KVINDRARRMValidator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRARRMValidator[nElements] : new ::KVINDRARRMValidator[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRARRMValidator(void *p) {
      delete ((::KVINDRARRMValidator*)p);
   }
   static void deleteArray_KVINDRARRMValidator(void *p) {
      delete [] ((::KVINDRARRMValidator*)p);
   }
   static void destruct_KVINDRARRMValidator(void *p) {
      typedef ::KVINDRARRMValidator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRARRMValidator

/********************************************************
* G__KVIndraidentification.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVIndraidentification();

extern "C" void G__set_cpp_environmentG__KVIndraidentification() {
  G__cpp_reset_tagtableG__KVIndraidentification();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVIndraidentification() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVINDRAIDTelescope */
static int G__G__KVIndraidentification_378_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAIDTelescope* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAIDTelescope[n];
     } else {
       p = new((void*) gvp) KVINDRAIDTelescope[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAIDTelescope;
     } else {
       p = new((void*) gvp) KVINDRAIDTelescope;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAIDTelescope*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVINDRAIDTelescope*) G__getstructoffset())->GetArrayName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAIDTelescope*) G__getstructoffset())->SetSubCodeManager((UChar_t) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAIDTelescope::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAIDTelescope::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAIDTelescope::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAIDTelescope::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAIDTelescope*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAIDTelescope::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAIDTelescope::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAIDTelescope::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_378_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAIDTelescope::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_378_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRAIDTelescope* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRAIDTelescope(*(KVINDRAIDTelescope*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAIDTelescope G__TKVINDRAIDTelescope;
static int G__G__KVIndraidentification_378_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAIDTelescope*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAIDTelescope*) (soff+(sizeof(KVINDRAIDTelescope)*i)))->~G__TKVINDRAIDTelescope();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAIDTelescope*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAIDTelescope*) (soff))->~G__TKVINDRAIDTelescope();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_378_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAIDTelescope* dest = (KVINDRAIDTelescope*) G__getstructoffset();
   *dest = *(KVINDRAIDTelescope*) libp->para[0].ref;
   const KVINDRAIDTelescope& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDGChIoSi */
static int G__G__KVIndraidentification_706_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDGChIoSi* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDGChIoSi[n];
     } else {
       p = new((void*) gvp) KVIDGChIoSi[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDGChIoSi;
     } else {
       p = new((void*) gvp) KVIDGChIoSi;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDGChIoSi* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVIDGChIoSi(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) KVIDGChIoSi(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIDGChIoSi*) G__getstructoffset())->GetSeuilSiLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIDGChIoSi*) G__getstructoffset())->GetBraggLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIDGChIoSi*) G__getstructoffset())->GetPunchThroughLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIDGChIoSi*) G__getstructoffset())->GetEmaxSiLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDGChIoSi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDGChIoSi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDGChIoSi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDGChIoSi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDGChIoSi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDGChIoSi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDGChIoSi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDGChIoSi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_706_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDGChIoSi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDGChIoSi G__TKVIDGChIoSi;
static int G__G__KVIndraidentification_706_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDGChIoSi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDGChIoSi*) (soff+(sizeof(KVIDGChIoSi)*i)))->~G__TKVIDGChIoSi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDGChIoSi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDGChIoSi*) (soff))->~G__TKVIDGChIoSi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoSi */
static int G__G__KVIndraidentification_708_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi[n];
     } else {
       p = new((void*) gvp) KVIDChIoSi[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi;
     } else {
       p = new((void*) gvp) KVIDChIoSi;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_708_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoSi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_708_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_708_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoSi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_708_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoSi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_708_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoSi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_708_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_708_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_708_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_708_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_708_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoSi* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoSi(*(KVIDChIoSi*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoSi G__TKVIDChIoSi;
static int G__G__KVIndraidentification_708_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoSi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoSi*) (soff+(sizeof(KVIDChIoSi)*i)))->~G__TKVIDChIoSi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoSi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoSi*) (soff))->~G__TKVIDChIoSi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_708_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi* dest = (KVIDChIoSi*) G__getstructoffset();
   *dest = *(KVIDChIoSi*) libp->para[0].ref;
   const KVIDChIoSi& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDGChIoSi_e494s */
static int G__G__KVIndraidentification_710_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDGChIoSi_e494s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDGChIoSi_e494s[n];
     } else {
       p = new((void*) gvp) KVIDGChIoSi_e494s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDGChIoSi_e494s;
     } else {
       p = new((void*) gvp) KVIDGChIoSi_e494s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVIDGChIoSi_e494s*) G__getstructoffset())->GetSeuilChIoLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDGChIoSi_e494s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDGChIoSi_e494s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDGChIoSi_e494s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDGChIoSi_e494s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDGChIoSi_e494s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDGChIoSi_e494s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDGChIoSi_e494s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDGChIoSi_e494s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_710_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDGChIoSi_e494s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDGChIoSi_e494s G__TKVIDGChIoSi_e494s;
static int G__G__KVIndraidentification_710_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDGChIoSi_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDGChIoSi_e494s*) (soff+(sizeof(KVIDGChIoSi_e494s)*i)))->~G__TKVIDGChIoSi_e494s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDGChIoSi_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDGChIoSi_e494s*) (soff))->~G__TKVIDGChIoSi_e494s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoSiCorr */
static int G__G__KVIndraidentification_717_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSiCorr* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSiCorr[n];
     } else {
       p = new((void*) gvp) KVIDChIoSiCorr[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSiCorr;
     } else {
       p = new((void*) gvp) KVIDChIoSiCorr;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_717_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoSiCorr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_717_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSiCorr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_717_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoSiCorr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_717_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoSiCorr::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_717_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoSiCorr*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_717_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSiCorr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_717_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSiCorr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_717_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSiCorr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_717_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSiCorr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_717_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoSiCorr* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoSiCorr(*(KVIDChIoSiCorr*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoSiCorr G__TKVIDChIoSiCorr;
static int G__G__KVIndraidentification_717_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoSiCorr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoSiCorr*) (soff+(sizeof(KVIDChIoSiCorr)*i)))->~G__TKVIDChIoSiCorr();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoSiCorr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoSiCorr*) (soff))->~G__TKVIDChIoSiCorr();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_717_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSiCorr* dest = (KVIDChIoSiCorr*) G__getstructoffset();
   *dest = *(KVIDChIoSiCorr*) libp->para[0].ref;
   const KVIDChIoSiCorr& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoSi75 */
static int G__G__KVIndraidentification_718_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi75* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi75[n];
     } else {
       p = new((void*) gvp) KVIDChIoSi75[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi75;
     } else {
       p = new((void*) gvp) KVIDChIoSi75;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_718_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoSi75::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_718_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi75::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_718_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoSi75::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_718_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoSi75::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_718_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoSi75*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_718_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi75::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_718_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi75::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_718_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi75::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_718_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi75::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_718_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoSi75* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoSi75(*(KVIDChIoSi75*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoSi75 G__TKVIDChIoSi75;
static int G__G__KVIndraidentification_718_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoSi75*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoSi75*) (soff+(sizeof(KVIDChIoSi75)*i)))->~G__TKVIDChIoSi75();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoSi75*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoSi75*) (soff))->~G__TKVIDChIoSi75();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_718_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi75* dest = (KVIDChIoSi75*) G__getstructoffset();
   *dest = *(KVIDChIoSi75*) libp->para[0].ref;
   const KVIDChIoSi75& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoSi75_camp5 */
static int G__G__KVIndraidentification_719_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi75_camp5* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi75_camp5[n];
     } else {
       p = new((void*) gvp) KVIDChIoSi75_camp5[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi75_camp5;
     } else {
       p = new((void*) gvp) KVIDChIoSi75_camp5;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_719_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoSi75_camp5::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_719_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi75_camp5::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_719_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoSi75_camp5::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_719_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoSi75_camp5::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_719_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoSi75_camp5*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_719_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi75_camp5::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_719_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi75_camp5::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_719_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi75_camp5::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_719_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi75_camp5::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_719_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoSi75_camp5* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoSi75_camp5(*(KVIDChIoSi75_camp5*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoSi75_camp5 G__TKVIDChIoSi75_camp5;
static int G__G__KVIndraidentification_719_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoSi75_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoSi75_camp5*) (soff+(sizeof(KVIDChIoSi75_camp5)*i)))->~G__TKVIDChIoSi75_camp5();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoSi75_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoSi75_camp5*) (soff))->~G__TKVIDChIoSi75_camp5();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_719_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi75_camp5* dest = (KVIDChIoSi75_camp5*) G__getstructoffset();
   *dest = *(KVIDChIoSi75_camp5*) libp->para[0].ref;
   const KVIDChIoSi75_camp5& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSiCsI */
static int G__G__KVIndraidentification_720_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCsI[n];
     } else {
       p = new((void*) gvp) KVIDSiCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCsI;
     } else {
       p = new((void*) gvp) KVIDSiCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_720_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSiCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_720_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_720_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSiCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_720_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSiCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_720_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_720_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_720_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_720_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_720_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_720_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDSiCsI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDSiCsI(*(KVIDSiCsI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSiCsI G__TKVIDSiCsI;
static int G__G__KVIndraidentification_720_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSiCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSiCsI*) (soff+(sizeof(KVIDSiCsI)*i)))->~G__TKVIDSiCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSiCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSiCsI*) (soff))->~G__TKVIDSiCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_720_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiCsI* dest = (KVIDSiCsI*) G__getstructoffset();
   *dest = *(KVIDSiCsI*) libp->para[0].ref;
   const KVIDSiCsI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSiCorrCsI */
static int G__G__KVIndraidentification_739_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiCorrCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCorrCsI[n];
     } else {
       p = new((void*) gvp) KVIDSiCorrCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCorrCsI;
     } else {
       p = new((void*) gvp) KVIDSiCorrCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiCorrCsI*) G__getstructoffset())->PrintFitParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSiCorrCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCorrCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSiCorrCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSiCorrCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiCorrCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCorrCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCorrCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCorrCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_739_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCorrCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSiCorrCsI G__TKVIDSiCorrCsI;
static int G__G__KVIndraidentification_739_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSiCorrCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSiCorrCsI*) (soff+(sizeof(KVIDSiCorrCsI)*i)))->~G__TKVIDSiCorrCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSiCorrCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSiCorrCsI*) (soff))->~G__TKVIDSiCorrCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoCsI */
static int G__G__KVIndraidentification_740_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCsI[n];
     } else {
       p = new((void*) gvp) KVIDChIoCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCsI;
     } else {
       p = new((void*) gvp) KVIDChIoCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_740_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_740_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_740_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_740_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_740_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_740_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_740_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_740_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_740_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_740_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoCsI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoCsI(*(KVIDChIoCsI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoCsI G__TKVIDChIoCsI;
static int G__G__KVIndraidentification_740_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoCsI*) (soff+(sizeof(KVIDChIoCsI)*i)))->~G__TKVIDChIoCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoCsI*) (soff))->~G__TKVIDChIoCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_740_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCsI* dest = (KVIDChIoCsI*) G__getstructoffset();
   *dest = *(KVIDChIoCsI*) libp->para[0].ref;
   const KVIDChIoCsI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoSi_e613 */
static int G__G__KVIndraidentification_741_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi_e613* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi_e613[n];
     } else {
       p = new((void*) gvp) KVIDChIoSi_e613[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi_e613;
     } else {
       p = new((void*) gvp) KVIDChIoSi_e613;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_741_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoSi_e613::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_741_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi_e613::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_741_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoSi_e613::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_741_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoSi_e613::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_741_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoSi_e613*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_741_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi_e613::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_741_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi_e613::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_741_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi_e613::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_741_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi_e613::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_741_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoSi_e613* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoSi_e613(*(KVIDChIoSi_e613*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoSi_e613 G__TKVIDChIoSi_e613;
static int G__G__KVIndraidentification_741_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoSi_e613*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoSi_e613*) (soff+(sizeof(KVIDChIoSi_e613)*i)))->~G__TKVIDChIoSi_e613();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoSi_e613*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoSi_e613*) (soff))->~G__TKVIDChIoSi_e613();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_741_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi_e613* dest = (KVIDChIoSi_e613*) G__getstructoffset();
   *dest = *(KVIDChIoSi_e613*) libp->para[0].ref;
   const KVIDChIoSi_e613& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRACodeMask */
static int G__G__KVIndraidentification_744_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRACodeMask* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRACodeMask[n];
     } else {
       p = new((void*) gvp) KVINDRACodeMask[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRACodeMask;
     } else {
       p = new((void*) gvp) KVINDRACodeMask;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((KVINDRACodeMask*) G__getstructoffset())->GetIDMask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((KVINDRACodeMask*) G__getstructoffset())->GetEMask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRACodeMask*) G__getstructoffset())->SetIDMask((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRACodeMask*) G__getstructoffset())->TestIDCode((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRACodeMask*) G__getstructoffset())->TestECode((UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRACodeMask*) G__getstructoffset())->SetEMask((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRACodeMask*) G__getstructoffset())->operator&(*(KVINDRACodeMask*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRACodeMask::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRACodeMask::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRACodeMask::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRACodeMask::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRACodeMask*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRACodeMask::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRACodeMask::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRACodeMask::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_744_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRACodeMask::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_744_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRACodeMask* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRACodeMask(*(KVINDRACodeMask*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRACodeMask G__TKVINDRACodeMask;
static int G__G__KVIndraidentification_744_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRACodeMask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRACodeMask*) (soff+(sizeof(KVINDRACodeMask)*i)))->~G__TKVINDRACodeMask();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRACodeMask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRACodeMask*) (soff))->~G__TKVINDRACodeMask();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_744_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRACodeMask* dest = (KVINDRACodeMask*) G__getstructoffset();
   *dest = *(KVINDRACodeMask*) libp->para[0].ref;
   const KVINDRACodeMask& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSiLiCsI */
static int G__G__KVIndraidentification_745_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiLiCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiLiCsI[n];
     } else {
       p = new((void*) gvp) KVIDSiLiCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiLiCsI;
     } else {
       p = new((void*) gvp) KVIDSiLiCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiLiCsI*) G__getstructoffset())->Calibrate((KVReconstructedNucleus*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSiLiCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiLiCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSiLiCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSiLiCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiLiCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiLiCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiLiCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiLiCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_745_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiLiCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_745_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDSiLiCsI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDSiLiCsI(*(KVIDSiLiCsI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSiLiCsI G__TKVIDSiLiCsI;
static int G__G__KVIndraidentification_745_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSiLiCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSiLiCsI*) (soff+(sizeof(KVIDSiLiCsI)*i)))->~G__TKVIDSiLiCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSiLiCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSiLiCsI*) (soff))->~G__TKVIDSiLiCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_745_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiLiCsI* dest = (KVIDSiLiCsI*) G__getstructoffset();
   *dest = *(KVIDSiLiCsI*) libp->para[0].ref;
   const KVIDSiLiCsI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSiLiCsI_e494s */
static int G__G__KVIndraidentification_746_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiLiCsI_e494s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiLiCsI_e494s[n];
     } else {
       p = new((void*) gvp) KVIDSiLiCsI_e494s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiLiCsI_e494s;
     } else {
       p = new((void*) gvp) KVIDSiLiCsI_e494s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_746_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSiLiCsI_e494s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_746_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiLiCsI_e494s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_746_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSiLiCsI_e494s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_746_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSiLiCsI_e494s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_746_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiLiCsI_e494s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_746_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiLiCsI_e494s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_746_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiLiCsI_e494s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_746_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiLiCsI_e494s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_746_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiLiCsI_e494s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSiLiCsI_e494s G__TKVIDSiLiCsI_e494s;
static int G__G__KVIndraidentification_746_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSiLiCsI_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSiLiCsI_e494s*) (soff+(sizeof(KVIDSiLiCsI_e494s)*i)))->~G__TKVIDSiLiCsI_e494s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSiLiCsI_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSiLiCsI_e494s*) (soff))->~G__TKVIDSiLiCsI_e494s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSi75SiLi */
static int G__G__KVIndraidentification_747_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSi75SiLi* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSi75SiLi[n];
     } else {
       p = new((void*) gvp) KVIDSi75SiLi[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSi75SiLi;
     } else {
       p = new((void*) gvp) KVIDSi75SiLi;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_747_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSi75SiLi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_747_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi75SiLi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_747_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSi75SiLi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_747_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSi75SiLi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_747_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSi75SiLi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_747_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi75SiLi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_747_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSi75SiLi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_747_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi75SiLi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_747_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSi75SiLi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_747_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDSi75SiLi* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDSi75SiLi(*(KVIDSi75SiLi*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSi75SiLi G__TKVIDSi75SiLi;
static int G__G__KVIndraidentification_747_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSi75SiLi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSi75SiLi*) (soff+(sizeof(KVIDSi75SiLi)*i)))->~G__TKVIDSi75SiLi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSi75SiLi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSi75SiLi*) (soff))->~G__TKVIDSi75SiLi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_747_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSi75SiLi* dest = (KVIDSi75SiLi*) G__getstructoffset();
   *dest = *(KVIDSi75SiLi*) libp->para[0].ref;
   const KVIDSi75SiLi& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSi75SiLi_e494s */
static int G__G__KVIndraidentification_748_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSi75SiLi_e494s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSi75SiLi_e494s[n];
     } else {
       p = new((void*) gvp) KVIDSi75SiLi_e494s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSi75SiLi_e494s;
     } else {
       p = new((void*) gvp) KVIDSi75SiLi_e494s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_748_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSi75SiLi_e494s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_748_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi75SiLi_e494s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_748_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSi75SiLi_e494s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_748_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSi75SiLi_e494s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_748_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSi75SiLi_e494s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_748_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi75SiLi_e494s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_748_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSi75SiLi_e494s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_748_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi75SiLi_e494s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_748_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSi75SiLi_e494s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSi75SiLi_e494s G__TKVIDSi75SiLi_e494s;
static int G__G__KVIndraidentification_748_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSi75SiLi_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSi75SiLi_e494s*) (soff+(sizeof(KVIDSi75SiLi_e494s)*i)))->~G__TKVIDSi75SiLi_e494s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSi75SiLi_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSi75SiLi_e494s*) (soff))->~G__TKVIDSi75SiLi_e494s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDGCsI */
static int G__G__KVIndraidentification_749_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDGCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDGCsI[n];
     } else {
       p = new((void*) gvp) KVIDGCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDGCsI;
     } else {
       p = new((void*) gvp) KVIDGCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDGCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVIDGCsI(*(KVIDGCsI*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVIDGCsI(*(KVIDGCsI*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVIDGCsI*) G__getstructoffset())->GetGammaLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVIDGCsI*) G__getstructoffset())->GetIMFLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDGCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDGCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDGCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDGCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDGCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDGCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDGCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDGCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_749_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDGCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDGCsI G__TKVIDGCsI;
static int G__G__KVIndraidentification_749_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDGCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDGCsI*) (soff+(sizeof(KVIDGCsI)*i)))->~G__TKVIDGCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDGCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDGCsI*) (soff))->~G__TKVIDGCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDCsI */
static int G__G__KVIndraidentification_750_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDCsI[n];
     } else {
       p = new((void*) gvp) KVIDCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDCsI;
     } else {
       p = new((void*) gvp) KVIDCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_750_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_750_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_750_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_750_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_750_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_750_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_750_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_750_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_750_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_750_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDCsI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDCsI(*(KVIDCsI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDCsI G__TKVIDCsI;
static int G__G__KVIndraidentification_750_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDCsI*) (soff+(sizeof(KVIDCsI)*i)))->~G__TKVIDCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDCsI*) (soff))->~G__TKVIDCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_750_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDCsI* dest = (KVIDCsI*) G__getstructoffset();
   *dest = *(KVIDCsI*) libp->para[0].ref;
   const KVIDCsI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRACodes */
static int G__G__KVIndraidentification_751_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRACodes* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRACodes[n];
     } else {
       p = new((void*) gvp) KVINDRACodes[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRACodes;
     } else {
       p = new((void*) gvp) KVINDRACodes;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVINDRACodes*) G__getstructoffset())->GetIDStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVINDRACodes*) G__getstructoffset())->GetEStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) KVINDRACodes::VedaIDCodeToBitmask((UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) KVINDRACodes::VedaECodeToBitmask((UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((KVINDRACodes*) G__getstructoffset())->GetCodeIndex((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((KVINDRACodes*) G__getstructoffset())->GetVedaIDCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((KVINDRACodes*) G__getstructoffset())->GetVedaECode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRACodes*) G__getstructoffset())->SetVedaIDCode((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRACodes*) G__getstructoffset())->SetVedaECode((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((KVINDRACodes*) G__getstructoffset())->GetIDCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((KVINDRACodes*) G__getstructoffset())->GetECode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRACodes*) G__getstructoffset())->SetIDCode((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRACodes*) G__getstructoffset())->SetECode((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRACodes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRACodes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRACodes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRACodes::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRACodes*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRACodes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRACodes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRACodes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_751_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRACodes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_751_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRACodes* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRACodes(*(KVINDRACodes*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRACodes G__TKVINDRACodes;
static int G__G__KVIndraidentification_751_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRACodes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRACodes*) (soff+(sizeof(KVINDRACodes)*i)))->~G__TKVINDRACodes();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRACodes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRACodes*) (soff))->~G__TKVINDRACodes();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_751_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRACodes* dest = (KVINDRACodes*) G__getstructoffset();
   *dest = *(KVINDRACodes*) libp->para[0].ref;
   const KVINDRACodes& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoSiLi */
static int G__G__KVIndraidentification_754_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSiLi* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSiLi[n];
     } else {
       p = new((void*) gvp) KVIDChIoSiLi[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSiLi;
     } else {
       p = new((void*) gvp) KVIDChIoSiLi;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSiLi* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVIDChIoSiLi(*(KVIDChIoSiLi*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVIDChIoSiLi(*(KVIDChIoSiLi*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoSiLi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSiLi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoSiLi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoSiLi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoSiLi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSiLi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSiLi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSiLi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_754_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSiLi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoSiLi G__TKVIDChIoSiLi;
static int G__G__KVIndraidentification_754_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoSiLi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoSiLi*) (soff+(sizeof(KVIDChIoSiLi)*i)))->~G__TKVIDChIoSiLi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoSiLi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoSiLi*) (soff))->~G__TKVIDChIoSiLi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_754_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSiLi* dest = (KVIDChIoSiLi*) G__getstructoffset();
   *dest = *(KVIDChIoSiLi*) libp->para[0].ref;
   const KVIDChIoSiLi& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSiLiCsI_camp5 */
static int G__G__KVIndraidentification_755_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiLiCsI_camp5* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiLiCsI_camp5[n];
     } else {
       p = new((void*) gvp) KVIDSiLiCsI_camp5[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiLiCsI_camp5;
     } else {
       p = new((void*) gvp) KVIDSiLiCsI_camp5;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_755_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSiLiCsI_camp5::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_755_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiLiCsI_camp5::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_755_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSiLiCsI_camp5::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_755_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSiLiCsI_camp5::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_755_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiLiCsI_camp5*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_755_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiLiCsI_camp5::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_755_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiLiCsI_camp5::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_755_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiLiCsI_camp5::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_755_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiLiCsI_camp5::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_755_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDSiLiCsI_camp5* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDSiLiCsI_camp5(*(KVIDSiLiCsI_camp5*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSiLiCsI_camp5 G__TKVIDSiLiCsI_camp5;
static int G__G__KVIndraidentification_755_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSiLiCsI_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSiLiCsI_camp5*) (soff+(sizeof(KVIDSiLiCsI_camp5)*i)))->~G__TKVIDSiLiCsI_camp5();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSiLiCsI_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSiLiCsI_camp5*) (soff))->~G__TKVIDSiLiCsI_camp5();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_755_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiLiCsI_camp5* dest = (KVIDSiLiCsI_camp5*) G__getstructoffset();
   *dest = *(KVIDSiLiCsI_camp5*) libp->para[0].ref;
   const KVIDSiLiCsI_camp5& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSiCsI_e613 */
static int G__G__KVIndraidentification_757_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiCsI_e613* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCsI_e613[n];
     } else {
       p = new((void*) gvp) KVIDSiCsI_e613[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCsI_e613;
     } else {
       p = new((void*) gvp) KVIDSiCsI_e613;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_757_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSiCsI_e613::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_757_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI_e613::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_757_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSiCsI_e613::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_757_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSiCsI_e613::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_757_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiCsI_e613*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_757_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI_e613::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_757_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCsI_e613::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_757_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI_e613::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_757_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCsI_e613::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_757_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDSiCsI_e613* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDSiCsI_e613(*(KVIDSiCsI_e613*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSiCsI_e613 G__TKVIDSiCsI_e613;
static int G__G__KVIndraidentification_757_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSiCsI_e613*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSiCsI_e613*) (soff+(sizeof(KVIDSiCsI_e613)*i)))->~G__TKVIDSiCsI_e613();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSiCsI_e613*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSiCsI_e613*) (soff))->~G__TKVIDSiCsI_e613();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_757_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiCsI_e613* dest = (KVIDSiCsI_e613*) G__getstructoffset();
   *dest = *(KVIDSiCsI_e613*) libp->para[0].ref;
   const KVIDSiCsI_e613& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDCsIRLLine */
static int G__G__KVIndraidentification_760_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDCsIRLLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDCsIRLLine[n];
     } else {
       p = new((void*) gvp) KVIDCsIRLLine[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDCsIRLLine;
     } else {
       p = new((void*) gvp) KVIDCsIRLLine;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDCsIRLLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVIDCsIRLLine(*(KVIDCsIRLLine*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVIDCsIRLLine(*(KVIDCsIRLLine*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDCsIRLLine::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDCsIRLLine::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDCsIRLLine::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDCsIRLLine::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDCsIRLLine*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDCsIRLLine::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDCsIRLLine::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDCsIRLLine::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_760_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDCsIRLLine::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDCsIRLLine G__TKVIDCsIRLLine;
static int G__G__KVIndraidentification_760_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDCsIRLLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDCsIRLLine*) (soff+(sizeof(KVIDCsIRLLine)*i)))->~G__TKVIDCsIRLLine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDCsIRLLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDCsIRLLine*) (soff))->~G__TKVIDCsIRLLine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSiCsI5 */
static int G__G__KVIndraidentification_761_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiCsI5* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCsI5[n];
     } else {
       p = new((void*) gvp) KVIDSiCsI5[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCsI5;
     } else {
       p = new((void*) gvp) KVIDSiCsI5;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVIDSiCsI5*) G__getstructoffset())->IdentifyZ(*(Double_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVIDSiCsI5*) G__getstructoffset())->SetHasPG2((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVIDSiCsI5*) G__getstructoffset())->SetHasPG2();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVIDSiCsI5*) G__getstructoffset())->HasPG2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSiCsI5::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI5::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSiCsI5::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSiCsI5::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiCsI5*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI5::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCsI5::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI5::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_761_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCsI5::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSiCsI5 G__TKVIDSiCsI5;
static int G__G__KVIndraidentification_761_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSiCsI5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSiCsI5*) (soff+(sizeof(KVIDSiCsI5)*i)))->~G__TKVIDSiCsI5();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSiCsI5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSiCsI5*) (soff))->~G__TKVIDSiCsI5();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSi75SiLi_camp5 */
static int G__G__KVIndraidentification_763_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSi75SiLi_camp5* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSi75SiLi_camp5[n];
     } else {
       p = new((void*) gvp) KVIDSi75SiLi_camp5[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSi75SiLi_camp5;
     } else {
       p = new((void*) gvp) KVIDSi75SiLi_camp5;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_763_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSi75SiLi_camp5::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_763_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi75SiLi_camp5::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_763_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSi75SiLi_camp5::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_763_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSi75SiLi_camp5::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_763_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSi75SiLi_camp5*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_763_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi75SiLi_camp5::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_763_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSi75SiLi_camp5::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_763_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi75SiLi_camp5::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_763_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSi75SiLi_camp5::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_763_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDSi75SiLi_camp5* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDSi75SiLi_camp5(*(KVIDSi75SiLi_camp5*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSi75SiLi_camp5 G__TKVIDSi75SiLi_camp5;
static int G__G__KVIndraidentification_763_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSi75SiLi_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSi75SiLi_camp5*) (soff+(sizeof(KVIDSi75SiLi_camp5)*i)))->~G__TKVIDSi75SiLi_camp5();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSi75SiLi_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSi75SiLi_camp5*) (soff))->~G__TKVIDSi75SiLi_camp5();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_763_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSi75SiLi_camp5* dest = (KVIDSi75SiLi_camp5*) G__getstructoffset();
   *dest = *(KVIDSi75SiLi_camp5*) libp->para[0].ref;
   const KVIDSi75SiLi_camp5& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDP2toCsIGridConvertor */
static int G__G__KVIndraidentification_765_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDP2toCsIGridConvertor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDP2toCsIGridConvertor[n];
     } else {
       p = new((void*) gvp) KVDP2toCsIGridConvertor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDP2toCsIGridConvertor;
     } else {
       p = new((void*) gvp) KVDP2toCsIGridConvertor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDP2toCsIGridConvertor*) G__getstructoffset())->Convert((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDP2toCsIGridConvertor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDP2toCsIGridConvertor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDP2toCsIGridConvertor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDP2toCsIGridConvertor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDP2toCsIGridConvertor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDP2toCsIGridConvertor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDP2toCsIGridConvertor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDP2toCsIGridConvertor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_765_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDP2toCsIGridConvertor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_765_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVDP2toCsIGridConvertor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVDP2toCsIGridConvertor(*(KVDP2toCsIGridConvertor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDP2toCsIGridConvertor G__TKVDP2toCsIGridConvertor;
static int G__G__KVIndraidentification_765_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDP2toCsIGridConvertor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDP2toCsIGridConvertor*) (soff+(sizeof(KVDP2toCsIGridConvertor)*i)))->~G__TKVDP2toCsIGridConvertor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDP2toCsIGridConvertor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDP2toCsIGridConvertor*) (soff))->~G__TKVDP2toCsIGridConvertor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_765_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDP2toCsIGridConvertor* dest = (KVDP2toCsIGridConvertor*) G__getstructoffset();
   *dest = *(KVDP2toCsIGridConvertor*) libp->para[0].ref;
   const KVDP2toCsIGridConvertor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoCorrCsI */
static int G__G__KVIndraidentification_766_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCorrCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCorrCsI[n];
     } else {
       p = new((void*) gvp) KVIDChIoCorrCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCorrCsI;
     } else {
       p = new((void*) gvp) KVIDChIoCorrCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_766_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoCorrCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_766_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCorrCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_766_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoCorrCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_766_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoCorrCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_766_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoCorrCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_766_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCorrCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_766_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCorrCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_766_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCorrCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_766_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCorrCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_766_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoCorrCsI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoCorrCsI(*(KVIDChIoCorrCsI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoCorrCsI G__TKVIDChIoCorrCsI;
static int G__G__KVIndraidentification_766_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoCorrCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoCorrCsI*) (soff+(sizeof(KVIDChIoCorrCsI)*i)))->~G__TKVIDChIoCorrCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoCorrCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoCorrCsI*) (soff))->~G__TKVIDChIoCorrCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_766_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCorrCsI* dest = (KVIDChIoCorrCsI*) G__getstructoffset();
   *dest = *(KVIDChIoCorrCsI*) libp->para[0].ref;
   const KVIDChIoCorrCsI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDCsI_e475s */
static int G__G__KVIndraidentification_767_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDCsI_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDCsI_e475s[n];
     } else {
       p = new((void*) gvp) KVIDCsI_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDCsI_e475s;
     } else {
       p = new((void*) gvp) KVIDCsI_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_767_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDCsI_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_767_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDCsI_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_767_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDCsI_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_767_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDCsI_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_767_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDCsI_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_767_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDCsI_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_767_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDCsI_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_767_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDCsI_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_767_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDCsI_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_767_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDCsI_e475s* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDCsI_e475s(*(KVIDCsI_e475s*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDCsI_e475s G__TKVIDCsI_e475s;
static int G__G__KVIndraidentification_767_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDCsI_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDCsI_e475s*) (soff+(sizeof(KVIDCsI_e475s)*i)))->~G__TKVIDCsI_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDCsI_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDCsI_e475s*) (soff))->~G__TKVIDCsI_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_767_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDCsI_e475s* dest = (KVIDCsI_e475s*) G__getstructoffset();
   *dest = *(KVIDCsI_e475s*) libp->para[0].ref;
   const KVIDCsI_e475s& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoSi75_e494s */
static int G__G__KVIndraidentification_768_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi75_e494s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi75_e494s[n];
     } else {
       p = new((void*) gvp) KVIDChIoSi75_e494s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi75_e494s;
     } else {
       p = new((void*) gvp) KVIDChIoSi75_e494s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_768_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoSi75_e494s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_768_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi75_e494s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_768_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoSi75_e494s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_768_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoSi75_e494s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_768_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoSi75_e494s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_768_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi75_e494s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_768_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi75_e494s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_768_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi75_e494s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_768_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi75_e494s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_768_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoSi75_e494s* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoSi75_e494s(*(KVIDChIoSi75_e494s*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoSi75_e494s G__TKVIDChIoSi75_e494s;
static int G__G__KVIndraidentification_768_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoSi75_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoSi75_e494s*) (soff+(sizeof(KVIDChIoSi75_e494s)*i)))->~G__TKVIDChIoSi75_e494s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoSi75_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoSi75_e494s*) (soff))->~G__TKVIDChIoSi75_e494s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_768_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi75_e494s* dest = (KVIDChIoSi75_e494s*) G__getstructoffset();
   *dest = *(KVIDChIoSi75_e494s*) libp->para[0].ref;
   const KVIDChIoSi75_e494s& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoCorrCsI_e494s */
static int G__G__KVIndraidentification_769_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCorrCsI_e494s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCorrCsI_e494s[n];
     } else {
       p = new((void*) gvp) KVIDChIoCorrCsI_e494s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCorrCsI_e494s;
     } else {
       p = new((void*) gvp) KVIDChIoCorrCsI_e494s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_769_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoCorrCsI_e494s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_769_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCorrCsI_e494s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_769_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoCorrCsI_e494s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_769_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoCorrCsI_e494s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_769_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoCorrCsI_e494s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_769_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCorrCsI_e494s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_769_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCorrCsI_e494s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_769_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCorrCsI_e494s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_769_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCorrCsI_e494s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_769_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoCorrCsI_e494s* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoCorrCsI_e494s(*(KVIDChIoCorrCsI_e494s*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoCorrCsI_e494s G__TKVIDChIoCorrCsI_e494s;
static int G__G__KVIndraidentification_769_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoCorrCsI_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoCorrCsI_e494s*) (soff+(sizeof(KVIDChIoCorrCsI_e494s)*i)))->~G__TKVIDChIoCorrCsI_e494s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoCorrCsI_e494s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoCorrCsI_e494s*) (soff))->~G__TKVIDChIoCorrCsI_e494s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_769_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCorrCsI_e494s* dest = (KVIDChIoCorrCsI_e494s*) G__getstructoffset();
   *dest = *(KVIDChIoCorrCsI_e494s*) libp->para[0].ref;
   const KVIDChIoCorrCsI_e494s& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoSi_e475s */
static int G__G__KVIndraidentification_770_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi_e475s[n];
     } else {
       p = new((void*) gvp) KVIDChIoSi_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi_e475s;
     } else {
       p = new((void*) gvp) KVIDChIoSi_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_770_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoSi_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_770_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_770_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoSi_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_770_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoSi_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_770_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoSi_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_770_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_770_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_770_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_770_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_770_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoSi_e475s* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoSi_e475s(*(KVIDChIoSi_e475s*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoSi_e475s G__TKVIDChIoSi_e475s;
static int G__G__KVIndraidentification_770_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoSi_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoSi_e475s*) (soff+(sizeof(KVIDChIoSi_e475s)*i)))->~G__TKVIDChIoSi_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoSi_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoSi_e475s*) (soff))->~G__TKVIDChIoSi_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_770_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi_e475s* dest = (KVIDChIoSi_e475s*) G__getstructoffset();
   *dest = *(KVIDChIoSi_e475s*) libp->para[0].ref;
   const KVIDChIoSi_e475s& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoCsI_camp5 */
static int G__G__KVIndraidentification_771_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCsI_camp5* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCsI_camp5[n];
     } else {
       p = new((void*) gvp) KVIDChIoCsI_camp5[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCsI_camp5;
     } else {
       p = new((void*) gvp) KVIDChIoCsI_camp5;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_771_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoCsI_camp5::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_771_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCsI_camp5::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_771_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoCsI_camp5::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_771_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoCsI_camp5::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_771_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoCsI_camp5*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_771_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCsI_camp5::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_771_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCsI_camp5::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_771_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCsI_camp5::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_771_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCsI_camp5::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_771_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoCsI_camp5* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoCsI_camp5(*(KVIDChIoCsI_camp5*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoCsI_camp5 G__TKVIDChIoCsI_camp5;
static int G__G__KVIndraidentification_771_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoCsI_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoCsI_camp5*) (soff+(sizeof(KVIDChIoCsI_camp5)*i)))->~G__TKVIDChIoCsI_camp5();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoCsI_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoCsI_camp5*) (soff))->~G__TKVIDChIoCsI_camp5();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_771_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCsI_camp5* dest = (KVIDChIoCsI_camp5*) G__getstructoffset();
   *dest = *(KVIDChIoCsI_camp5*) libp->para[0].ref;
   const KVIDChIoCsI_camp5& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSi150CsI_camp5 */
static int G__G__KVIndraidentification_772_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSi150CsI_camp5* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSi150CsI_camp5[n];
     } else {
       p = new((void*) gvp) KVIDSi150CsI_camp5[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSi150CsI_camp5;
     } else {
       p = new((void*) gvp) KVIDSi150CsI_camp5;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_772_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSi150CsI_camp5::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_772_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi150CsI_camp5::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_772_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSi150CsI_camp5::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_772_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSi150CsI_camp5::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_772_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSi150CsI_camp5*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_772_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi150CsI_camp5::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_772_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSi150CsI_camp5::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_772_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSi150CsI_camp5::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_772_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSi150CsI_camp5::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_772_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDSi150CsI_camp5* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDSi150CsI_camp5(*(KVIDSi150CsI_camp5*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSi150CsI_camp5 G__TKVIDSi150CsI_camp5;
static int G__G__KVIndraidentification_772_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSi150CsI_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSi150CsI_camp5*) (soff+(sizeof(KVIDSi150CsI_camp5)*i)))->~G__TKVIDSi150CsI_camp5();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSi150CsI_camp5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSi150CsI_camp5*) (soff))->~G__TKVIDSi150CsI_camp5();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_772_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSi150CsI_camp5* dest = (KVIDSi150CsI_camp5*) G__getstructoffset();
   *dest = *(KVIDSi150CsI_camp5*) libp->para[0].ref;
   const KVIDSi150CsI_camp5& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDPhoswich */
static int G__G__KVIndraidentification_773_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDPhoswich* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDPhoswich[n];
     } else {
       p = new((void*) gvp) KVIDPhoswich[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDPhoswich;
     } else {
       p = new((void*) gvp) KVIDPhoswich;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_773_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDPhoswich::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_773_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDPhoswich::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_773_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDPhoswich::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_773_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDPhoswich::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_773_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDPhoswich*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_773_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDPhoswich::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_773_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDPhoswich::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_773_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDPhoswich::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_773_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDPhoswich::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_773_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDPhoswich* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDPhoswich(*(KVIDPhoswich*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDPhoswich G__TKVIDPhoswich;
static int G__G__KVIndraidentification_773_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDPhoswich*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDPhoswich*) (soff+(sizeof(KVIDPhoswich)*i)))->~G__TKVIDPhoswich();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDPhoswich*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDPhoswich*) (soff))->~G__TKVIDPhoswich();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_773_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDPhoswich* dest = (KVIDPhoswich*) G__getstructoffset();
   *dest = *(KVIDPhoswich*) libp->para[0].ref;
   const KVIDPhoswich& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoCsI_e475s */
static int G__G__KVIndraidentification_774_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCsI_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCsI_e475s[n];
     } else {
       p = new((void*) gvp) KVIDChIoCsI_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoCsI_e475s;
     } else {
       p = new((void*) gvp) KVIDChIoCsI_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_774_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoCsI_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_774_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCsI_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_774_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoCsI_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_774_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoCsI_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_774_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoCsI_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_774_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCsI_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_774_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCsI_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_774_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoCsI_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_774_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoCsI_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_774_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoCsI_e475s* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoCsI_e475s(*(KVIDChIoCsI_e475s*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoCsI_e475s G__TKVIDChIoCsI_e475s;
static int G__G__KVIndraidentification_774_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoCsI_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoCsI_e475s*) (soff+(sizeof(KVIDChIoCsI_e475s)*i)))->~G__TKVIDChIoCsI_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoCsI_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoCsI_e475s*) (soff))->~G__TKVIDChIoCsI_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_774_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoCsI_e475s* dest = (KVIDChIoCsI_e475s*) G__getstructoffset();
   *dest = *(KVIDChIoCsI_e475s*) libp->para[0].ref;
   const KVIDChIoCsI_e475s& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRARRMValidator */
static int G__G__KVIndraidentification_775_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRARRMValidator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRARRMValidator[n];
     } else {
       p = new((void*) gvp) KVINDRARRMValidator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRARRMValidator;
     } else {
       p = new((void*) gvp) KVINDRARRMValidator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRARRMValidator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVNumberList& obj = ((KVINDRARRMValidator*) G__getstructoffset())->GetRunList();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVNumberList& obj = ((KVINDRARRMValidator*) G__getstructoffset())->GetRingList();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVNumberList& obj = ((KVINDRARRMValidator*) G__getstructoffset())->GetModuleList();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARRMValidator*) G__getstructoffset())->SetRunList((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARRMValidator*) G__getstructoffset())->SetModuleList((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARRMValidator*) G__getstructoffset())->SetRingList((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARRMValidator*) G__getstructoffset())->SetRunList(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARRMValidator*) G__getstructoffset())->SetModuleList(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARRMValidator*) G__getstructoffset())->SetRingList(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRARRMValidator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARRMValidator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRARRMValidator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRARRMValidator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRARRMValidator*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARRMValidator*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARRMValidator*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARRMValidator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARRMValidator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARRMValidator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARRMValidator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_775_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARRMValidator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_775_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRARRMValidator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRARRMValidator(*(KVINDRARRMValidator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRARRMValidator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRARRMValidator G__TKVINDRARRMValidator;
static int G__G__KVIndraidentification_775_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRARRMValidator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRARRMValidator*) (soff+(sizeof(KVINDRARRMValidator)*i)))->~G__TKVINDRARRMValidator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRARRMValidator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRARRMValidator*) (soff))->~G__TKVINDRARRMValidator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_775_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRARRMValidator* dest = (KVINDRARRMValidator*) G__getstructoffset();
   *dest = *(KVINDRARRMValidator*) libp->para[0].ref;
   const KVINDRARRMValidator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDChIoSi5 */
static int G__G__KVIndraidentification_776_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi5* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi5[n];
     } else {
       p = new((void*) gvp) KVIDChIoSi5[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDChIoSi5;
     } else {
       p = new((void*) gvp) KVIDChIoSi5;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_776_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDChIoSi5::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_776_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi5::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_776_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDChIoSi5::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_776_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDChIoSi5::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_776_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDChIoSi5*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_776_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi5::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_776_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi5::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_776_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDChIoSi5::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_776_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDChIoSi5::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_776_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDChIoSi5* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDChIoSi5(*(KVIDChIoSi5*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDChIoSi5 G__TKVIDChIoSi5;
static int G__G__KVIndraidentification_776_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDChIoSi5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDChIoSi5*) (soff+(sizeof(KVIDChIoSi5)*i)))->~G__TKVIDChIoSi5();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDChIoSi5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDChIoSi5*) (soff))->~G__TKVIDChIoSi5();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_776_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDChIoSi5* dest = (KVIDChIoSi5*) G__getstructoffset();
   *dest = *(KVIDChIoSi5*) libp->para[0].ref;
   const KVIDChIoSi5& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDSiCsI_e475s */
static int G__G__KVIndraidentification_777_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiCsI_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCsI_e475s[n];
     } else {
       p = new((void*) gvp) KVIDSiCsI_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDSiCsI_e475s;
     } else {
       p = new((void*) gvp) KVIDSiCsI_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_777_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDSiCsI_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_777_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_777_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDSiCsI_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_777_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDSiCsI_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_777_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDSiCsI_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_777_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_777_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCsI_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_777_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDSiCsI_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_777_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDSiCsI_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_777_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDSiCsI_e475s* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDSiCsI_e475s(*(KVIDSiCsI_e475s*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDSiCsI_e475s G__TKVIDSiCsI_e475s;
static int G__G__KVIndraidentification_777_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDSiCsI_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDSiCsI_e475s*) (soff+(sizeof(KVIDSiCsI_e475s)*i)))->~G__TKVIDSiCsI_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDSiCsI_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDSiCsI_e475s*) (soff))->~G__TKVIDSiCsI_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_777_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDSiCsI_e475s* dest = (KVIDSiCsI_e475s*) G__getstructoffset();
   *dest = *(KVIDSiCsI_e475s*) libp->para[0].ref;
   const KVIDSiCsI_e475s& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVIDBlocking */
static int G__G__KVIndraidentification_778_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDBlocking* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDBlocking[n];
     } else {
       p = new((void*) gvp) KVIDBlocking[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVIDBlocking;
     } else {
       p = new((void*) gvp) KVIDBlocking;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVIDBlocking*) G__getstructoffset())->SetIDGrid((KVIDGrid*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVIDBlocking::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDBlocking::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVIDBlocking::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVIDBlocking::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVIDBlocking*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDBlocking::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDBlocking::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVIDBlocking::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraidentification_778_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVIDBlocking::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndraidentification_778_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVIDBlocking* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVIDBlocking(*(KVIDBlocking*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVIDBlocking G__TKVIDBlocking;
static int G__G__KVIndraidentification_778_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVIDBlocking*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVIDBlocking*) (soff+(sizeof(KVIDBlocking)*i)))->~G__TKVIDBlocking();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVIDBlocking*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVIDBlocking*) (soff))->~G__TKVIDBlocking();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraidentification_778_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVIDBlocking* dest = (KVIDBlocking*) G__getstructoffset();
   *dest = *(KVIDBlocking*) libp->para[0].ref;
   const KVIDBlocking& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVINDRAIDTelescope */

/* KVIDGChIoSi */

/* KVIDChIoSi */

/* KVIDGChIoSi_e494s */

/* KVIDChIoSiCorr */

/* KVIDChIoSi75 */

/* KVIDChIoSi75_camp5 */

/* KVIDSiCsI */

/* KVIDSiCorrCsI */

/* KVIDChIoCsI */

/* KVIDChIoSi_e613 */

/* KVINDRACodeMask */

/* KVIDSiLiCsI */

/* KVIDSiLiCsI_e494s */

/* KVIDSi75SiLi */

/* KVIDSi75SiLi_e494s */

/* KVIDGCsI */

/* KVIDCsI */

/* KVINDRACodes */

/* KVIDChIoSiLi */

/* KVIDSiLiCsI_camp5 */

/* KVIDSiCsI_e613 */

/* KVIDCsIRLLine */

/* KVIDSiCsI5 */

/* KVIDSi75SiLi_camp5 */

/* KVDP2toCsIGridConvertor */

/* KVIDChIoCorrCsI */

/* KVIDCsI_e475s */

/* KVIDChIoSi75_e494s */

/* KVIDChIoCorrCsI_e494s */

/* KVIDChIoSi_e475s */

/* KVIDChIoCsI_camp5 */

/* KVIDSi150CsI_camp5 */

/* KVIDPhoswich */

/* KVIDChIoCsI_e475s */

/* KVINDRARRMValidator */

/* KVIDChIoSi5 */

/* KVIDSiCsI_e475s */

/* KVIDBlocking */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVIndraidentification {
 public:
  G__Sizep2memfuncG__KVIndraidentification(): p(&G__Sizep2memfuncG__KVIndraidentification::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVIndraidentification::*p)();
};

size_t G__get_sizep2memfuncG__KVIndraidentification()
{
  G__Sizep2memfuncG__KVIndraidentification a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVIndraidentification() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope))) {
     KVINDRAIDTelescope *G__Lderived;
     G__Lderived=(KVINDRAIDTelescope*)0x1000;
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi))) {
     KVIDGChIoSi *G__Lderived;
     G__Lderived=(KVIDGChIoSi*)0x1000;
     {
       KVIDZAGrid *G__Lpbase=(KVIDZAGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDGrid *G__Lpbase=(KVIDGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGrid),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDGraph *G__Lpbase=(KVIDGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCutG *G__Lpbase=(TCutG*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TCutG),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi))) {
     KVIDChIoSi *G__Lderived;
     G__Lderived=(KVIDChIoSi*)0x1000;
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s))) {
     KVIDGChIoSi_e494s *G__Lderived;
     G__Lderived=(KVIDGChIoSi_e494s*)0x1000;
     {
       KVIDGChIoSi *G__Lpbase=(KVIDGChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDZAGrid *G__Lpbase=(KVIDZAGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDGrid *G__Lpbase=(KVIDGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGrid),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDGraph *G__Lpbase=(KVIDGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCutG *G__Lpbase=(TCutG*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TCutG),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr))) {
     KVIDChIoSiCorr *G__Lderived;
     G__Lderived=(KVIDChIoSiCorr*)0x1000;
     {
       KVIDChIoSi *G__Lpbase=(KVIDChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75))) {
     KVIDChIoSi75 *G__Lderived;
     G__Lderived=(KVIDChIoSi75*)0x1000;
     {
       KVIDChIoSi *G__Lpbase=(KVIDChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5))) {
     KVIDChIoSi75_camp5 *G__Lderived;
     G__Lderived=(KVIDChIoSi75_camp5*)0x1000;
     {
       KVIDChIoSi75 *G__Lpbase=(KVIDChIoSi75*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDChIoSi *G__Lpbase=(KVIDChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI))) {
     KVIDSiCsI *G__Lderived;
     G__Lderived=(KVIDSiCsI*)0x1000;
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI))) {
     KVIDSiCorrCsI *G__Lderived;
     G__Lderived=(KVIDSiCorrCsI*)0x1000;
     {
       KVIDSiCsI *G__Lpbase=(KVIDSiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVRTGIDManager *G__Lpbase=(KVRTGIDManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVRTGIDManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVTGIDManager *G__Lpbase=(KVTGIDManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVTGIDManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI))) {
     KVIDChIoCsI *G__Lderived;
     G__Lderived=(KVIDChIoCsI*)0x1000;
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613))) {
     KVIDChIoSi_e613 *G__Lderived;
     G__Lderived=(KVIDChIoSi_e613*)0x1000;
     {
       KVIDChIoSi *G__Lpbase=(KVIDChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask))) {
     KVINDRACodeMask *G__Lderived;
     G__Lderived=(KVINDRACodeMask*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI))) {
     KVIDSiLiCsI *G__Lderived;
     G__Lderived=(KVIDSiLiCsI*)0x1000;
     {
       KVIDSiCsI *G__Lpbase=(KVIDSiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s))) {
     KVIDSiLiCsI_e494s *G__Lderived;
     G__Lderived=(KVIDSiLiCsI_e494s*)0x1000;
     {
       KVIDSiLiCsI *G__Lpbase=(KVIDSiLiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDSiCsI *G__Lpbase=(KVIDSiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVRTGIDManager *G__Lpbase=(KVRTGIDManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVRTGIDManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVTGIDManager *G__Lpbase=(KVTGIDManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVTGIDManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi))) {
     KVIDSi75SiLi *G__Lderived;
     G__Lderived=(KVIDSi75SiLi*)0x1000;
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s))) {
     KVIDSi75SiLi_e494s *G__Lderived;
     G__Lderived=(KVIDSi75SiLi_e494s*)0x1000;
     {
       KVIDSi75SiLi *G__Lpbase=(KVIDSi75SiLi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVRTGIDManager *G__Lpbase=(KVRTGIDManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVRTGIDManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVTGIDManager *G__Lpbase=(KVTGIDManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVTGIDManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI))) {
     KVIDGCsI *G__Lderived;
     G__Lderived=(KVIDGCsI*)0x1000;
     {
       KVIDZAGrid *G__Lpbase=(KVIDZAGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDGrid *G__Lpbase=(KVIDGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGrid),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDGraph *G__Lpbase=(KVIDGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCutG *G__Lpbase=(TCutG*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TCutG),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI))) {
     KVIDCsI *G__Lderived;
     G__Lderived=(KVIDCsI*)0x1000;
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes))) {
     KVINDRACodes *G__Lderived;
     G__Lderived=(KVINDRACodes*)0x1000;
     {
       KVINDRACodeMask *G__Lpbase=(KVINDRACodeMask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi))) {
     KVIDChIoSiLi *G__Lderived;
     G__Lderived=(KVIDChIoSiLi*)0x1000;
     {
       KVIDChIoSi *G__Lpbase=(KVIDChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5))) {
     KVIDSiLiCsI_camp5 *G__Lderived;
     G__Lderived=(KVIDSiLiCsI_camp5*)0x1000;
     {
       KVIDSiLiCsI *G__Lpbase=(KVIDSiLiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDSiCsI *G__Lpbase=(KVIDSiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613))) {
     KVIDSiCsI_e613 *G__Lderived;
     G__Lderived=(KVIDSiCsI_e613*)0x1000;
     {
       KVIDSiCsI *G__Lpbase=(KVIDSiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine))) {
     KVIDCsIRLLine *G__Lderived;
     G__Lderived=(KVIDCsIRLLine*)0x1000;
     {
       KVIDZALine *G__Lpbase=(KVIDZALine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZALine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDLine *G__Lpbase=(KVIDLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDentifier *G__Lpbase=(KVIDentifier*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDentifier),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCutG *G__Lpbase=(TCutG*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TCutG),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5))) {
     KVIDSiCsI5 *G__Lderived;
     G__Lderived=(KVIDSiCsI5*)0x1000;
     {
       KVIDSiCsI *G__Lpbase=(KVIDSiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVTGIDManager *G__Lpbase=(KVTGIDManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVTGIDManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5))) {
     KVIDSi75SiLi_camp5 *G__Lderived;
     G__Lderived=(KVIDSi75SiLi_camp5*)0x1000;
     {
       KVIDSi75SiLi *G__Lpbase=(KVIDSi75SiLi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor))) {
     KVDP2toCsIGridConvertor *G__Lderived;
     G__Lderived=(KVDP2toCsIGridConvertor*)0x1000;
     {
       KVDP2toIDGridConvertor *G__Lpbase=(KVDP2toIDGridConvertor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toIDGridConvertor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI))) {
     KVIDChIoCorrCsI *G__Lderived;
     G__Lderived=(KVIDChIoCorrCsI*)0x1000;
     {
       KVIDChIoCsI *G__Lpbase=(KVIDChIoCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s))) {
     KVIDCsI_e475s *G__Lderived;
     G__Lderived=(KVIDCsI_e475s*)0x1000;
     {
       KVIDCsI *G__Lpbase=(KVIDCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s))) {
     KVIDChIoSi75_e494s *G__Lderived;
     G__Lderived=(KVIDChIoSi75_e494s*)0x1000;
     {
       KVIDChIoSi75 *G__Lpbase=(KVIDChIoSi75*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDChIoSi *G__Lpbase=(KVIDChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s))) {
     KVIDChIoCorrCsI_e494s *G__Lderived;
     G__Lderived=(KVIDChIoCorrCsI_e494s*)0x1000;
     {
       KVIDChIoCorrCsI *G__Lpbase=(KVIDChIoCorrCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDChIoCsI *G__Lpbase=(KVIDChIoCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s))) {
     KVIDChIoSi_e475s *G__Lderived;
     G__Lderived=(KVIDChIoSi_e475s*)0x1000;
     {
       KVIDChIoSi *G__Lpbase=(KVIDChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5))) {
     KVIDChIoCsI_camp5 *G__Lderived;
     G__Lderived=(KVIDChIoCsI_camp5*)0x1000;
     {
       KVIDChIoCsI *G__Lpbase=(KVIDChIoCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5))) {
     KVIDSi150CsI_camp5 *G__Lderived;
     G__Lderived=(KVIDSi150CsI_camp5*)0x1000;
     {
       KVIDSiCsI *G__Lpbase=(KVIDSiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich))) {
     KVIDPhoswich *G__Lderived;
     G__Lderived=(KVIDPhoswich*)0x1000;
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s))) {
     KVIDChIoCsI_e475s *G__Lderived;
     G__Lderived=(KVIDChIoCsI_e475s*)0x1000;
     {
       KVIDChIoCsI *G__Lpbase=(KVIDChIoCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5))) {
     KVIDChIoSi5 *G__Lderived;
     G__Lderived=(KVIDChIoSi5*)0x1000;
     {
       KVIDChIoSi *G__Lpbase=(KVIDChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s))) {
     KVIDSiCsI_e475s *G__Lderived;
     G__Lderived=(KVIDSiCsI_e475s*)0x1000;
     {
       KVIDSiCsI *G__Lpbase=(KVIDSiCsI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking))) {
     KVIDBlocking *G__Lderived;
     G__Lderived=(KVIDBlocking*)0x1000;
     {
       KVIDChIoSi *G__Lpbase=(KVIDChIoSi*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVINDRAIDTelescope *G__Lpbase=(KVINDRAIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDTelescope *G__Lpbase=(KVIDTelescope*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDTelescope),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVIDSubCodeManager *G__Lpbase=(KVIDSubCodeManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking),G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSubCodeManager),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVIndraidentification() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVINDRAIDTelescope */
static void G__setup_memvarKVINDRAIDTelescope(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope));
   { KVINDRAIDTelescope *p; p=(KVINDRAIDTelescope*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fIDCode=",0,"!code corresponding to correct identification by this type of telescope");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fZminCode=",0,"!code corresponding to particle stopping in first member of this type of telescope");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"fECode=",0,"!code corresponding to correct calibration by this type of telescope");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDGChIoSi */
static void G__setup_memvarKVIDGChIoSi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi));
   { KVIDGChIoSi *p; p=(KVIDGChIoSi*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine),-1,-1,4,"fBragg=",0,"bragg line");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine),-1,-1,4,"fPunch=",0,"punch-through line");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine),-1,-1,4,"fSeuil=",0,"seuil silicium line");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine),-1,-1,4,"fEmaxSi=",0,"saturation codeur silicon");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSicLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_BelowPunchThrough=%lldLL",(long long)KVIDGChIoSi::k_BelowPunchThrough).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSicLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_BelowSeuilSi=%lldLL",(long long)KVIDGChIoSi::k_BelowSeuilSi).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSicLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_LeftOfBragg=%lldLL",(long long)KVIDGChIoSi::k_LeftOfBragg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSicLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_RightOfEmaxSi=%lldLL",(long long)KVIDGChIoSi::k_RightOfEmaxSi).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoSi */
static void G__setup_memvarKVIDChIoSi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi));
   { KVIDChIoSi *p; p=(KVIDChIoSi*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),-1,-1,2,"ChIoSiGrid=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDetector),-1,-1,2,"fchio=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDetector),-1,-1,2,"fsi=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fsipgped=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fchiopgped=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDGChIoSi_e494s */
static void G__setup_memvarKVIDGChIoSi_e494s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s));
   { KVIDGChIoSi_e494s *p; p=(KVIDGChIoSi_e494s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine),-1,-1,4,"fChIoSeuil=",0,"ChIo threshold line");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494scLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_BelowSeuilChIo=%lldLL",(long long)KVIDGChIoSi_e494s::k_BelowSeuilChIo).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoSiCorr */
static void G__setup_memvarKVIDChIoSiCorr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr));
   { KVIDChIoSiCorr *p; p=(KVIDChIoSiCorr*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoSi75 */
static void G__setup_memvarKVIDChIoSi75(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75));
   { KVIDChIoSi75 *p; p=(KVIDChIoSi75*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoSi75_camp5 */
static void G__setup_memvarKVIDChIoSi75_camp5(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5));
   { KVIDChIoSi75_camp5 *p; p=(KVIDChIoSi75_camp5*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fGGgrid=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fPGgrid=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDetector),-1,-1,4,"fChIo=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDetector),-1,-1,4,"fSi=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSiCsI */
static void G__setup_memvarKVIDSiCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI));
   { KVIDSiCsI *p; p=(KVIDSiCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSiCorrCsI */
static void G__setup_memvarKVIDSiCorrCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI));
   { KVIDSiCorrCsI *p; p=(KVIDSiCorrCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVSilicon),-1,-1,4,"fSi=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVCsI),-1,-1,4,"fCsI=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoCsI */
static void G__setup_memvarKVIDChIoCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI));
   { KVIDChIoCsI *p; p=(KVIDChIoCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoSi_e613 */
static void G__setup_memvarKVIDChIoSi_e613(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613));
   { KVIDChIoSi_e613 *p; p=(KVIDChIoSi_e613*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi),-1,-1,2,"FromFitChIoSiGrid=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRACodeMask */
static void G__setup_memvarKVINDRACodeMask(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask));
   { KVINDRACodeMask *p; p=(KVINDRACodeMask*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fIDMask=",0,"16-bit mask with id codes");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"fEMask=",0,"8-bit mask with e-calibration codes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSiLiCsI */
static void G__setup_memvarKVIDSiLiCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI));
   { KVIDSiLiCsI *p; p=(KVIDSiLiCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSiLiCsI_e494s */
static void G__setup_memvarKVIDSiLiCsI_e494s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s));
   { KVIDSiLiCsI_e494s *p; p=(KVIDSiLiCsI_e494s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRADetector),-1,-1,4,"fSiLi=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVCsI),-1,-1,4,"fCsI=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSi75SiLi */
static void G__setup_memvarKVIDSi75SiLi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi));
   { KVIDSi75SiLi *p; p=(KVIDSi75SiLi*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSi75SiLi_e494s */
static void G__setup_memvarKVIDSi75SiLi_e494s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s));
   { KVIDSi75SiLi_e494s *p; p=(KVIDSi75SiLi_e494s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRADetector),-1,-1,4,"fSi75=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRADetector),-1,-1,4,"fSiLi=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDGCsI */
static void G__setup_memvarKVIDGCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI));
   { KVIDGCsI *p; p=(KVIDGCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine),-1,-1,4,"IMFLine=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine),-1,-1,4,"GammaLine=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIMFlineadded=",0,"!set to kTRUE once IMF line has been added to list of identifiers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDCsI */
static void G__setup_memvarKVIDCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI));
   { KVIDCsI *p; p=(KVIDCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI),-1,-1,4,"CsIGrid=",0,"! telescope's grid");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDetector),-1,-1,4,"fCsI=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRACodes */
static void G__setup_memvarKVINDRACodes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes));
   { KVINDRACodes *p; p=(KVINDRACodes*)0x1000; if (p) { }
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-2,4,"fCodeGenIdent[14][120]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-2,4,"fCodeGenCalib[8][120]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-2,4,"fIDCodes[14]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-2,4,"fECodes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-2,4,"fIDBits[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-2,4,"fEBits[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_Binary_tlEunsignedsPshortgR),G__defined_typename("KVIDSubCode"),-1,4,"fIDSubCodes=",0,"obsolete");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodescLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsoRes=%lldLL",(long long)KVINDRACodes::kIsoRes).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoSiLi */
static void G__setup_memvarKVIDChIoSiLi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi));
   { KVIDChIoSiLi *p; p=(KVIDChIoSiLi*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSiLiCsI_camp5 */
static void G__setup_memvarKVIDSiLiCsI_camp5(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5));
   { KVIDSiLiCsI_camp5 *p; p=(KVIDSiLiCsI_camp5*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fGGgrid=",0,"! grid used for SiLi(GG)-CsI(R) charge & mass identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fPGgrid=",0,"! grid used for SiLi(PG)-CsI(R) charge & mass identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDetector),-1,-1,4,"fSiLi=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDetector),-1,-1,4,"fCsI=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSiCsI_e613 */
static void G__setup_memvarKVIDSiCsI_e613(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613));
   { KVIDSiCsI_e613 *p; p=(KVIDSiCsI_e613*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fGGgrid=",0,"! grid used for Si(GG)-CsI(TotLight) charge identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fPGgrid=",0,"! grid used for Si(PG)-CsI(TotLight) charge identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCutLine),-1,-1,4,"fPIEDESTAL=",0,"! Si pedestal zone in GG");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVSilicon),-1,-1,4,"fSi=",0,"! the si");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVCsI),-1,-1,4,"fCsI=",0,"! the csi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCsIRPedestal=",0,"!CsI Rapide pedestal for current run");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCsILPedestal=",0,"!CsI Lente pedestal for current run");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSiPGPedestal=",0,"!Silicon PG pedestal for current run");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSiGGPedestal=",0,"!Silicon GG pedestal for current run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDCsIRLLine */
static void G__setup_memvarKVIDCsIRLLine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine));
   { KVIDCsIRLLine *p; p=(KVIDCsIRLLine*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSiCsI5 */
static void G__setup_memvarKVIDSiCsI5(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5));
   { KVIDSiCsI5 *p; p=(KVIDSiCsI5*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVSilicon),-1,-1,4,"fSi=",0,"!the silicon");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVCsI),-1,-1,4,"fCsI=",0,"!the csi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCsIRPedestal=",0,"!CsI Rapide pedestal for current run");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCsILPedestal=",0,"!CsI Lente pedestal for current run");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSiPGPedestal=",0,"!Silicon PG pedestal for current run");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSiGGPedestal=",0,"!Silicon GG pedestal for current run");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSiGain=",0,"!Silicon ampli gain for current run");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,4,"kHasPG2=131072LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWhichGrid=",0,"!internal IdentifyZ status code, tells us which Z grid was last used");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,4,"k_GG=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,4,"k_PG1=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,4,"k_PG2=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_OK_GG=%lldLL",(long long)KVIDSiCsI5::k_OK_GG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_noTGID_GG=%lldLL",(long long)KVIDSiCsI5::k_noTGID_GG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_OutOfIDRange_GG=%lldLL",(long long)KVIDSiCsI5::k_OutOfIDRange_GG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_OK_PG1=%lldLL",(long long)KVIDSiCsI5::k_OK_PG1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_noTGID_PG1=%lldLL",(long long)KVIDSiCsI5::k_noTGID_PG1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_OutOfIDRange_PG1=%lldLL",(long long)KVIDSiCsI5::k_OutOfIDRange_PG1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_OK_PG2=%lldLL",(long long)KVIDSiCsI5::k_OK_PG2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_noTGID_PG2=%lldLL",(long long)KVIDSiCsI5::k_noTGID_PG2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k_OutOfIDRange_PG2=%lldLL",(long long)KVIDSiCsI5::k_OutOfIDRange_PG2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kZOK_AnoTGID=%lldLL",(long long)KVIDSiCsI5::kZOK_AnoTGID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kZOK_AOutOfIDRange=%lldLL",(long long)KVIDSiCsI5::kZOK_AOutOfIDRange).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kZOK_A_ZtooSmall=%lldLL",(long long)KVIDSiCsI5::kZOK_A_ZtooSmall).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kZOK_A_ZtooLarge=%lldLL",(long long)KVIDSiCsI5::kZOK_A_ZtooLarge).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSi75SiLi_camp5 */
static void G__setup_memvarKVIDSi75SiLi_camp5(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5));
   { KVIDSi75SiLi_camp5 *p; p=(KVIDSi75SiLi_camp5*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fGGgrid=",0,"! grid used for Si75(GG)-SiLi(PG) charge & mass identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fPGgrid=",0,"! grid used for Si75(PG)-SiLi(PG) charge & mass identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fPGZgrid=",0,"! grid used for Si75(PG)-SiLi(PG) charge identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDetector),-1,-1,4,"fSi75=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDetector),-1,-1,4,"fSiLi=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDP2toCsIGridConvertor */
static void G__setup_memvarKVDP2toCsIGridConvertor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor));
   { KVDP2toCsIGridConvertor *p; p=(KVDP2toCsIGridConvertor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoCorrCsI */
static void G__setup_memvarKVIDChIoCorrCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI));
   { KVIDChIoCorrCsI *p; p=(KVIDChIoCorrCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,2,"fGrid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVChIo),-1,-1,2,"fChIo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVCsI),-1,-1,2,"fCsI=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDCsI_e475s */
static void G__setup_memvarKVIDCsI_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s));
   { KVIDCsI_e475s *p; p=(KVIDCsI_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoSi75_e494s */
static void G__setup_memvarKVIDChIoSi75_e494s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s));
   { KVIDChIoSi75_e494s *p; p=(KVIDChIoSi75_e494s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoCorrCsI_e494s */
static void G__setup_memvarKVIDChIoCorrCsI_e494s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s));
   { KVIDChIoCorrCsI_e494s *p; p=(KVIDChIoCorrCsI_e494s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoSi_e475s */
static void G__setup_memvarKVIDChIoSi_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s));
   { KVIDChIoSi_e475s *p; p=(KVIDChIoSi_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoCsI_camp5 */
static void G__setup_memvarKVIDChIoCsI_camp5(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5));
   { KVIDChIoCsI_camp5 *p; p=(KVIDChIoCsI_camp5*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fGGgrid=",0,"! grid used for ChIo(GG)-CsI(R) charge identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fPGgrid=",0,"! grid used for ChIo(PG)-CsI(R) charge identification");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVChIo),-1,-1,4,"fChIo=",0,"!the chio");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVCsI),-1,-1,4,"fCsI=",0,"!the csi");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCsIRPedestal=",0,"!CsI Rapide pedestal for current run");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCsILPedestal=",0,"!CsI Lente pedestal for current run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSi150CsI_camp5 */
static void G__setup_memvarKVIDSi150CsI_camp5(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5));
   { KVIDSi150CsI_camp5 *p; p=(KVIDSi150CsI_camp5*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fZAGrid=",0,"! identification grid with isotopes (small Z)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fZGrid=",0,"! identification grid with 1 line per Z (large Z)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVSilicon),-1,-1,4,"fSi=",0,"! silicon detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVACQParam),-1,-1,4,"fSIPG=",0,"! silicon detector PG acquisition parameter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVCsI),-1,-1,4,"fCsI=",0,"! csi detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDPhoswich */
static void G__setup_memvarKVIDPhoswich(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich));
   { KVIDPhoswich *p; p=(KVIDPhoswich*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoCsI_e475s */
static void G__setup_memvarKVIDChIoCsI_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s));
   { KVIDChIoCsI_e475s *p; p=(KVIDChIoCsI_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fidgrid=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRARRMValidator */
static void G__setup_memvarKVINDRARRMValidator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRARRMValidator));
   { KVINDRARRMValidator *p; p=(KVINDRARRMValidator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVNumberList),-1,-1,4,"fRuns=",0,"list of valid runs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVNumberList),-1,-1,4,"fRings=",0,"list of valid rings");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVNumberList),-1,-1,4,"fModules=",0,"list of valid modules");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDChIoSi5 */
static void G__setup_memvarKVIDChIoSi5(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5));
   { KVIDChIoSi5 *p; p=(KVIDChIoSi5*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDSiCsI_e475s */
static void G__setup_memvarKVIDSiCsI_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s));
   { KVIDSiCsI_e475s *p; p=(KVIDSiCsI_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZAGrid),-1,-1,4,"fidgrid=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVIDBlocking */
static void G__setup_memvarKVIDBlocking(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking));
   { KVIDBlocking *p; p=(KVIDBlocking*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVIndraidentification() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVINDRAIDTelescope(void) {
   /* KVINDRAIDTelescope */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope));
   G__memfunc_setup("KVINDRAIDTelescope",1600,G__G__KVIndraidentification_378_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVIndraidentification_378_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetArrayName",1184,G__G__KVIndraidentification_378_0_4, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDCode",808,(G__InterfaceMethod) NULL,114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZminCode",1081,(G__InterfaceMethod) NULL,114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetECode",736,(G__InterfaceMethod) NULL,98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBadIDCode",1071,(G__InterfaceMethod) NULL,114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCoherencyIDCode",1736,(G__InterfaceMethod) NULL,114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMultiHitFirstStageIDCode",2644,(G__InterfaceMethod) NULL,114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSubCodeManager",1676,G__G__KVIndraidentification_378_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"b - 'UChar_t' 0 - n_bits b - 'UChar_t' 0 - most_significant_bit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIDCode",820,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVReconstructedNucleus' - 0 - - r - 'UShort_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_378_0_13, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAIDTelescope::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_378_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAIDTelescope::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_378_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAIDTelescope::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_378_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAIDTelescope::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_378_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_378_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAIDTelescope::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_378_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAIDTelescope::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_378_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAIDTelescope::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_378_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAIDTelescope::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRAIDTelescope", 1600, G__G__KVIndraidentification_378_0_25, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope), -1, 0, 1, 1, 1, 0, "u 'KVINDRAIDTelescope' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAIDTelescope", 1726, G__G__KVIndraidentification_378_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_378_0_27, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope), -1, 1, 1, 1, 1, 0, "u 'KVINDRAIDTelescope' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDGChIoSi(void) {
   /* KVIDGChIoSi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BackwardsCompatibilityFix",2579,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVIDGChIoSi",916,G__G__KVIndraidentification_706_0_3, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIDGChIoSi",916,G__G__KVIndraidentification_706_0_4, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeuilSiLine",1382,G__G__KVIndraidentification_706_0_5, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBraggLine",1163,G__G__KVIndraidentification_706_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPunchThroughLine",1927,G__G__KVIndraidentification_706_0_7, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEmaxSiLine",1263,G__G__KVIndraidentification_706_0_8, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIdentifiable",1404,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"U 'KVIdentificationResult' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_706_0_12, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDGChIoSi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_706_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDGChIoSi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_706_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDGChIoSi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_706_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDGChIoSi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_706_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_706_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDGChIoSi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_706_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDGChIoSi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_706_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDGChIoSi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_706_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDGChIoSi::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIDGChIoSi", 1042, G__G__KVIndraidentification_706_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoSi(void) {
   /* KVIDChIoSi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi));
   G__memfunc_setup("KVIDChIoSi",845,G__G__KVIndraidentification_708_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CanIdentify",1102,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_708_0_7, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoSi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_708_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_708_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoSi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_708_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoSi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_708_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_708_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_708_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_708_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_708_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoSi", 845, G__G__KVIndraidentification_708_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoSi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoSi", 971, G__G__KVIndraidentification_708_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_708_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoSi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDGChIoSi_e494s(void) {
   /* KVIDGChIoSi_e494s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIDGChIoSi_e494s",1388,G__G__KVIndraidentification_710_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"U 'KVIdentificationResult' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSeuilChIoLine",1549,G__G__KVIndraidentification_710_0_5, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_710_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDGChIoSi_e494s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_710_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDGChIoSi_e494s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_710_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDGChIoSi_e494s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_710_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDGChIoSi_e494s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_710_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_710_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDGChIoSi_e494s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_710_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDGChIoSi_e494s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_710_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDGChIoSi_e494s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_710_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDGChIoSi_e494s::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIDGChIoSi_e494s", 1514, G__G__KVIndraidentification_710_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoSiCorr(void) {
   /* KVIDChIoSiCorr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr));
   G__memfunc_setup("GetIDMapXY",892,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"U 'KVINDRADetector' - 0 - det C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIDChIoSiCorr",1251,G__G__KVIndraidentification_717_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_717_0_5, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoSiCorr::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_717_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSiCorr::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_717_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoSiCorr::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_717_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoSiCorr::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_717_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_717_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSiCorr::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_717_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSiCorr::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_717_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSiCorr::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_717_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSiCorr::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoSiCorr", 1251, G__G__KVIndraidentification_717_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoSiCorr' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoSiCorr", 1377, G__G__KVIndraidentification_717_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_717_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoSiCorr' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoSi75(void) {
   /* KVIDChIoSi75 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75));
   G__memfunc_setup("KVIDChIoSi75",953,G__G__KVIndraidentification_718_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_718_0_2, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoSi75::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_718_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi75::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_718_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoSi75::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_718_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoSi75::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_718_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_718_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi75::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_718_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi75::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_718_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi75::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_718_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi75::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoSi75", 953, G__G__KVIndraidentification_718_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoSi75' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoSi75", 1079, G__G__KVIndraidentification_718_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_718_0_16, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoSi75' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoSi75_camp5(void) {
   /* KVIDChIoSi75_camp5 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5));
   G__memfunc_setup("KVIDChIoSi75_camp5",1518,G__G__KVIndraidentification_719_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_719_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoSi75_camp5::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_719_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi75_camp5::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_719_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoSi75_camp5::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_719_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoSi75_camp5::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_719_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_719_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi75_camp5::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_719_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi75_camp5::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_719_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi75_camp5::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_719_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi75_camp5::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoSi75_camp5", 1518, G__G__KVIndraidentification_719_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoSi75_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoSi75_camp5", 1644, G__G__KVIndraidentification_719_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_719_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoSi75_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSiCsI(void) {
   /* KVIDSiCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI));
   G__memfunc_setup("KVIDSiCsI",745,G__G__KVIndraidentification_720_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_720_0_2, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSiCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_720_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_720_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSiCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_720_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSiCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_720_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_720_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_720_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_720_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_720_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCsI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDSiCsI", 745, G__G__KVIndraidentification_720_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI), -1, 0, 1, 1, 1, 0, "u 'KVIDSiCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSiCsI", 871, G__G__KVIndraidentification_720_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_720_0_16, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI), -1, 1, 1, 1, 1, 0, "u 'KVIDSiCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSiCorrCsI(void) {
   /* KVIDSiCorrCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI));
   G__memfunc_setup("KVIDSiCorrCsI",1151,G__G__KVIndraidentification_739_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - IDR d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIdentificationParameters",2794,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVMultiDetArray' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveIdentificationParameters",3116,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintFitParameters",1860,G__G__KVIndraidentification_739_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_739_0_9, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSiCorrCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_739_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCorrCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_739_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSiCorrCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_739_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSiCorrCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_739_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_739_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCorrCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_739_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCorrCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_739_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCorrCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_739_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCorrCsI::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSiCorrCsI", 1277, G__G__KVIndraidentification_739_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoCsI(void) {
   /* KVIDChIoCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI));
   G__memfunc_setup("KVIDChIoCsI",912,G__G__KVIndraidentification_740_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CanIdentify",1102,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_740_0_3, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_740_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_740_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_740_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_740_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_740_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_740_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_740_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_740_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCsI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoCsI", 912, G__G__KVIndraidentification_740_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoCsI", 1038, G__G__KVIndraidentification_740_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_740_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoSi_e613(void) {
   /* KVIDChIoSi_e613 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613));
   G__memfunc_setup("KVIDChIoSi_e613",1195,G__G__KVIndraidentification_741_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_741_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoSi_e613::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_741_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi_e613::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_741_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoSi_e613::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_741_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoSi_e613::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_741_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_741_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi_e613::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_741_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi_e613::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_741_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi_e613::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_741_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi_e613::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoSi_e613", 1195, G__G__KVIndraidentification_741_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoSi_e613' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoSi_e613", 1321, G__G__KVIndraidentification_741_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_741_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoSi_e613' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRACodeMask(void) {
   /* KVINDRACodeMask */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask));
   G__memfunc_setup("KVINDRACodeMask",1302,G__G__KVIndraidentification_744_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDMask",825,G__G__KVIndraidentification_744_0_2, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEMask",753,G__G__KVIndraidentification_744_0_3, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIDMask",837,G__G__KVIndraidentification_744_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - codes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestIDCode",936,G__G__KVIndraidentification_744_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestECode",864,G__G__KVIndraidentification_744_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEMask",765,G__G__KVIndraidentification_744_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - codes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator&",914,G__G__KVIndraidentification_744_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'KVINDRACodeMask' - 1 - msk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_744_0_10, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRACodeMask::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_744_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRACodeMask::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_744_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRACodeMask::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_744_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRACodeMask::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_744_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_744_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRACodeMask::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_744_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRACodeMask::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_744_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRACodeMask::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_744_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRACodeMask::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRACodeMask", 1302, G__G__KVIndraidentification_744_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask), -1, 0, 1, 1, 1, 0, "u 'KVINDRACodeMask' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRACodeMask", 1428, G__G__KVIndraidentification_744_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_744_0_24, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodeMask), -1, 1, 1, 1, 1, 0, "u 'KVINDRACodeMask' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSiLiCsI(void) {
   /* KVIDSiLiCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI));
   G__memfunc_setup("KVIDSiLiCsI",926,G__G__KVIndraidentification_745_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__G__KVIndraidentification_745_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVReconstructedNucleus' - 0 - part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_745_0_3, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSiLiCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_745_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiLiCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_745_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSiLiCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_745_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSiLiCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_745_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_745_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiLiCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_745_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiLiCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_745_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiLiCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_745_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiLiCsI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDSiLiCsI", 926, G__G__KVIndraidentification_745_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI), -1, 0, 1, 1, 1, 0, "u 'KVIDSiLiCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSiLiCsI", 1052, G__G__KVIndraidentification_745_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_745_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI), -1, 1, 1, 1, 1, 0, "u 'KVIDSiLiCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSiLiCsI_e494s(void) {
   /* KVIDSiLiCsI_e494s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s));
   G__memfunc_setup("KVIDSiLiCsI_e494s",1398,G__G__KVIndraidentification_746_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - IDR d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIdentificationParameters",2794,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVMultiDetArray' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveIdentificationParameters",3116,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_746_0_8, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSiLiCsI_e494s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_746_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiLiCsI_e494s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_746_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSiLiCsI_e494s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_746_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSiLiCsI_e494s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_746_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_746_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiLiCsI_e494s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_746_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiLiCsI_e494s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_746_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiLiCsI_e494s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_746_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiLiCsI_e494s::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSiLiCsI_e494s", 1524, G__G__KVIndraidentification_746_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSi75SiLi(void) {
   /* KVIDSi75SiLi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi));
   G__memfunc_setup("KVIDSi75SiLi",967,G__G__KVIndraidentification_747_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_747_0_2, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSi75SiLi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_747_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi75SiLi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_747_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSi75SiLi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_747_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSi75SiLi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_747_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_747_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi75SiLi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_747_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSi75SiLi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_747_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi75SiLi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_747_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSi75SiLi::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDSi75SiLi", 967, G__G__KVIndraidentification_747_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi), -1, 0, 1, 1, 1, 0, "u 'KVIDSi75SiLi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSi75SiLi", 1093, G__G__KVIndraidentification_747_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_747_0_16, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi), -1, 1, 1, 1, 1, 0, "u 'KVIDSi75SiLi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSi75SiLi_e494s(void) {
   /* KVIDSi75SiLi_e494s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s));
   G__memfunc_setup("GetIDMapXY",892,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"U 'KVINDRADetector' - 0 - det C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIDSi75SiLi_e494s",1439,G__G__KVIndraidentification_748_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - IDR d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIdentificationParameters",2794,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVMultiDetArray' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveIdentificationParameters",3116,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_748_0_9, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSi75SiLi_e494s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_748_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi75SiLi_e494s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_748_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSi75SiLi_e494s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_748_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSi75SiLi_e494s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_748_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_748_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi75SiLi_e494s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_748_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSi75SiLi_e494s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_748_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi75SiLi_e494s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_748_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSi75SiLi_e494s::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSi75SiLi_e494s", 1565, G__G__KVIndraidentification_748_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDGCsI(void) {
   /* KVIDGCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI));
   G__memfunc_setup("GetNearestIDLine",1543,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine), -1, 0, 5, 1, 2, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - 'Char_t' 10 - position i - 'Int_t' 1 - idx_min "
"i - 'Int_t' 1 - idx_max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BackwardsCompatibilityFix",2579,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVIDGCsI",628,G__G__KVIndraidentification_749_0_3, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIDGCsI",628,G__G__KVIndraidentification_749_0_4, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDGCsI), -1, 0, 1, 1, 1, 0, "u 'KVIDGCsI' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGammaLine",1163,G__G__KVIndraidentification_749_0_5, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIMFLine",900,G__G__KVIndraidentification_749_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDLine), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"U 'KVIdentificationResult' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsIdentifiable",1404,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZALine",835,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZALine), -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - z i - 'Int_t' 0 - a "
"i - 'Int_t' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZLine",770,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDZALine), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - z i - 'Int_t' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IdentZA",655,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"i - 'Int_t' 1 - Z d - 'Double_t' 1 - A", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefaultIDLineClass",1744,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_749_0_14, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDGCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_749_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDGCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_749_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDGCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_749_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDGCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_749_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_749_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDGCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_749_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDGCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_749_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDGCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_749_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDGCsI::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIDGCsI", 754, G__G__KVIndraidentification_749_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDCsI(void) {
   /* KVIDCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI));
   G__memfunc_setup("KVIDCsI",557,G__G__KVIndraidentification_750_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayName",1184,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CanIdentify",1102,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Z i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_750_0_8, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_750_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_750_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_750_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_750_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_750_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_750_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_750_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_750_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDCsI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDCsI", 557, G__G__KVIndraidentification_750_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI), -1, 0, 1, 1, 1, 0, "u 'KVIDCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDCsI", 683, G__G__KVIndraidentification_750_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_750_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI), -1, 1, 1, 1, 1, 0, "u 'KVIDCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRACodes(void) {
   /* KVINDRACodes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes));
   G__memfunc_setup("SetIsotopeResolve",1775,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - 'Bool_t' 0 'kTRUE' stat", "obsolete", (void*) NULL, 0);
   G__memfunc_setup("GetIsotopeResolve",1763,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", "obsolete", (void*) NULL, 0);
   G__memfunc_setup("GetSubCodes",1080,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_Binary_tlEunsignedsPshortgR), G__defined_typename("KVIDSubCode"), 1, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRACodes",1021,G__G__KVIndraidentification_751_0_4, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDStatus",1073,G__G__KVIndraidentification_751_0_5, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEStatus",1001,G__G__KVIndraidentification_751_0_6, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VedaIDCodeToBitmask",1814,G__G__KVIndraidentification_751_0_7, 114, -1, G__defined_typename("UShort_t"), 0, 1, 3, 1, 0, "b - 'UChar_t' 0 - veda_id_code", (char*)NULL, (void*) G__func2void( (UShort_t (*)(UChar_t))(&KVINDRACodes::VedaIDCodeToBitmask) ), 0);
   G__memfunc_setup("VedaECodeToBitmask",1742,G__G__KVIndraidentification_751_0_8, 98, -1, G__defined_typename("UChar_t"), 0, 1, 3, 1, 0, "b - 'UChar_t' 0 - veda_e_code", (char*)NULL, (void*) G__func2void( (UChar_t (*)(UChar_t))(&KVINDRACodes::VedaECodeToBitmask) ), 0);
   G__memfunc_setup("GetCodeIndex",1171,G__G__KVIndraidentification_751_0_9, 98, -1, G__defined_typename("UChar_t"), 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVedaIDCode",1192,G__G__KVIndraidentification_751_0_10, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVedaECode",1120,G__G__KVIndraidentification_751_0_11, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVedaIDCode",1204,G__G__KVIndraidentification_751_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVedaECode",1132,G__G__KVIndraidentification_751_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDCode",808,G__G__KVIndraidentification_751_0_14, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetECode",736,G__G__KVIndraidentification_751_0_15, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIDCode",820,G__G__KVIndraidentification_751_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetECode",748,G__G__KVIndraidentification_751_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_751_0_19, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRACodes::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_751_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRACodes::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_751_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRACodes::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_751_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRACodes::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_751_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_751_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRACodes::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_751_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRACodes::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_751_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRACodes::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_751_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRACodes::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRACodes", 1021, G__G__KVIndraidentification_751_0_31, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes), -1, 0, 1, 1, 1, 0, "u 'KVINDRACodes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRACodes", 1147, G__G__KVIndraidentification_751_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_751_0_33, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRACodes), -1, 1, 1, 1, 1, 0, "u 'KVINDRACodes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoSiLi(void) {
   /* KVIDChIoSiLi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi));
   G__memfunc_setup("KVIDChIoSiLi",1026,G__G__KVIndraidentification_754_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIDChIoSiLi",1026,G__G__KVIndraidentification_754_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoSiLi' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_754_0_4, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoSiLi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_754_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSiLi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_754_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoSiLi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_754_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoSiLi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_754_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_754_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSiLi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_754_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSiLi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_754_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSiLi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_754_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSiLi::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoSiLi", 1152, G__G__KVIndraidentification_754_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_754_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSiLi), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoSiLi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSiLiCsI_camp5(void) {
   /* KVIDSiLiCsI_camp5 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5));
   G__memfunc_setup("KVIDSiLiCsI_camp5",1491,G__G__KVIndraidentification_755_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_755_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSiLiCsI_camp5::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_755_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiLiCsI_camp5::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_755_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSiLiCsI_camp5::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_755_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSiLiCsI_camp5::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_755_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_755_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiLiCsI_camp5::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_755_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiLiCsI_camp5::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_755_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiLiCsI_camp5::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_755_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiLiCsI_camp5::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDSiLiCsI_camp5", 1491, G__G__KVIndraidentification_755_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5), -1, 0, 1, 1, 1, 0, "u 'KVIDSiLiCsI_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSiLiCsI_camp5", 1617, G__G__KVIndraidentification_755_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_755_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5), -1, 1, 1, 1, 1, 0, "u 'KVIDSiLiCsI_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSiCsI_e613(void) {
   /* KVIDSiCsI_e613 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613));
   G__memfunc_setup("KVIDSiCsI_e613",1095,G__G__KVIndraidentification_757_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPedestalX",1194,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPedestalY",1195,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_757_0_8, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSiCsI_e613::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_757_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI_e613::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_757_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSiCsI_e613::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_757_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSiCsI_e613::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_757_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_757_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI_e613::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_757_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCsI_e613::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_757_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI_e613::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_757_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCsI_e613::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDSiCsI_e613", 1095, G__G__KVIndraidentification_757_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613), -1, 0, 1, 1, 1, 0, "u 'KVIDSiCsI_e613' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSiCsI_e613", 1221, G__G__KVIndraidentification_757_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_757_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613), -1, 1, 1, 1, 1, 0, "u 'KVIDSiCsI_e613' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDCsIRLLine(void) {
   /* KVIDCsIRLLine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine));
   G__memfunc_setup("SetAsymWidth",1222,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"d - 'Double_t' 0 - d_l d - 'Double_t' 0 - d_r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVIDCsIRLLine",1107,G__G__KVIndraidentification_760_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVIDCsIRLLine",1107,G__G__KVIndraidentification_760_0_3, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsIRLLine), -1, 0, 1, 1, 1, 0, "u 'KVIDCsIRLLine' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_760_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDCsIRLLine::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_760_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDCsIRLLine::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_760_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDCsIRLLine::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_760_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDCsIRLLine::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_760_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_760_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDCsIRLLine::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_760_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDCsIRLLine::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_760_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDCsIRLLine::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_760_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDCsIRLLine::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIDCsIRLLine", 1233, G__G__KVIndraidentification_760_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSiCsI5(void) {
   /* KVIDSiCsI5 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5));
   G__memfunc_setup("KVIDSiCsI5",798,G__G__KVIndraidentification_761_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI5), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IdentifyZ",918,G__G__KVIndraidentification_761_0_2, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 1 - funLTG", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHasPG2",785,G__G__KVIndraidentification_761_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' yes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasPG2",485,G__G__KVIndraidentification_761_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPedestalX",1194,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPedestalY",1195,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIdentificationParameters",2794,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVMultiDetArray' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveIdentificationParameters",3116,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMeanDEFromID",1355,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 1 - status i - 'Int_t' 0 - Z "
"i - 'Int_t' 0 '-1' A d - 'Double_t' 0 '-1.' Eres", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_761_0_15, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSiCsI5::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_761_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI5::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_761_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSiCsI5::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_761_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSiCsI5::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_761_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_761_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI5::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_761_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCsI5::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_761_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI5::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_761_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCsI5::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSiCsI5", 924, G__G__KVIndraidentification_761_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSi75SiLi_camp5(void) {
   /* KVIDSi75SiLi_camp5 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5));
   G__memfunc_setup("KVIDSi75SiLi_camp5",1532,G__G__KVIndraidentification_763_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_763_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSi75SiLi_camp5::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_763_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi75SiLi_camp5::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_763_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSi75SiLi_camp5::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_763_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSi75SiLi_camp5::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_763_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_763_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi75SiLi_camp5::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_763_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSi75SiLi_camp5::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_763_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi75SiLi_camp5::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_763_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSi75SiLi_camp5::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDSi75SiLi_camp5", 1532, G__G__KVIndraidentification_763_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5), -1, 0, 1, 1, 1, 0, "u 'KVIDSi75SiLi_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSi75SiLi_camp5", 1658, G__G__KVIndraidentification_763_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_763_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5), -1, 1, 1, 1, 1, 0, "u 'KVIDSi75SiLi_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDP2toCsIGridConvertor(void) {
   /* KVDP2toCsIGridConvertor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor));
   G__memfunc_setup("ReadGammaFile",1247,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - gammafile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVDP2toCsIGridConvertor",2193,G__G__KVIndraidentification_765_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert",737,G__G__KVIndraidentification_765_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - id_and_imf_file C - 'Char_t' 10 - gamma_file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_765_0_4, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDP2toCsIGridConvertor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_765_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDP2toCsIGridConvertor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_765_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDP2toCsIGridConvertor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_765_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDP2toCsIGridConvertor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_765_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_765_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDP2toCsIGridConvertor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_765_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDP2toCsIGridConvertor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_765_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDP2toCsIGridConvertor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_765_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDP2toCsIGridConvertor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVDP2toCsIGridConvertor", 2193, G__G__KVIndraidentification_765_0_16, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor), -1, 0, 1, 1, 1, 0, "u 'KVDP2toCsIGridConvertor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVDP2toCsIGridConvertor", 2319, G__G__KVIndraidentification_765_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_765_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor), -1, 1, 1, 1, 1, 0, "u 'KVDP2toCsIGridConvertor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoCorrCsI(void) {
   /* KVIDChIoCorrCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI));
   G__memfunc_setup("KVIDChIoCorrCsI",1318,G__G__KVIndraidentification_766_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_766_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoCorrCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_766_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCorrCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_766_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoCorrCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_766_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoCorrCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_766_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_766_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCorrCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_766_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCorrCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_766_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCorrCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_766_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCorrCsI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoCorrCsI", 1318, G__G__KVIndraidentification_766_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoCorrCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoCorrCsI", 1444, G__G__KVIndraidentification_766_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_766_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoCorrCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDCsI_e475s(void) {
   /* KVIDCsI_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s));
   G__memfunc_setup("KVIDCsI_e475s",1028,G__G__KVIndraidentification_767_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateParticleEnergy",2348,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVReconstructedNucleus' - 0 - nuc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_767_0_3, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDCsI_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_767_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDCsI_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_767_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDCsI_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_767_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDCsI_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_767_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_767_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDCsI_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_767_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDCsI_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_767_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDCsI_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_767_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDCsI_e475s::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDCsI_e475s", 1028, G__G__KVIndraidentification_767_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s), -1, 0, 1, 1, 1, 0, "u 'KVIDCsI_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDCsI_e475s", 1154, G__G__KVIndraidentification_767_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_767_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDCsI_e475s), -1, 1, 1, 1, 1, 0, "u 'KVIDCsI_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoSi75_e494s(void) {
   /* KVIDChIoSi75_e494s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s));
   G__memfunc_setup("KVIDChIoSi75_e494s",1425,G__G__KVIndraidentification_768_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_768_0_4, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoSi75_e494s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_768_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi75_e494s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_768_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoSi75_e494s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_768_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoSi75_e494s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_768_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_768_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi75_e494s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_768_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi75_e494s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_768_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi75_e494s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_768_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi75_e494s::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoSi75_e494s", 1425, G__G__KVIndraidentification_768_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoSi75_e494s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoSi75_e494s", 1551, G__G__KVIndraidentification_768_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_768_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoSi75_e494s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoCorrCsI_e494s(void) {
   /* KVIDChIoCorrCsI_e494s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s));
   G__memfunc_setup("KVIDChIoCorrCsI_e494s",1790,G__G__KVIndraidentification_769_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_769_0_3, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoCorrCsI_e494s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_769_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCorrCsI_e494s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_769_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoCorrCsI_e494s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_769_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoCorrCsI_e494s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_769_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_769_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCorrCsI_e494s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_769_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCorrCsI_e494s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_769_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCorrCsI_e494s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_769_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCorrCsI_e494s::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoCorrCsI_e494s", 1790, G__G__KVIndraidentification_769_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoCorrCsI_e494s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoCorrCsI_e494s", 1916, G__G__KVIndraidentification_769_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_769_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoCorrCsI_e494s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoSi_e475s(void) {
   /* KVIDChIoSi_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s));
   G__memfunc_setup("KVIDChIoSi_e475s",1316,G__G__KVIndraidentification_770_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_770_0_4, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoSi_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_770_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_770_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoSi_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_770_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoSi_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_770_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_770_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_770_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_770_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_770_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi_e475s::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoSi_e475s", 1316, G__G__KVIndraidentification_770_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoSi_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoSi_e475s", 1442, G__G__KVIndraidentification_770_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_770_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoSi_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoCsI_camp5(void) {
   /* KVIDChIoCsI_camp5 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5));
   G__memfunc_setup("KVIDChIoCsI_camp5",1477,G__G__KVIndraidentification_771_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_771_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoCsI_camp5::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_771_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCsI_camp5::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_771_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoCsI_camp5::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_771_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoCsI_camp5::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_771_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_771_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCsI_camp5::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_771_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCsI_camp5::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_771_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCsI_camp5::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_771_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCsI_camp5::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoCsI_camp5", 1477, G__G__KVIndraidentification_771_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoCsI_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoCsI_camp5", 1603, G__G__KVIndraidentification_771_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_771_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoCsI_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSi150CsI_camp5(void) {
   /* KVIDSi150CsI_camp5 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5));
   G__memfunc_setup("KVIDSi150CsI_camp5",1460,G__G__KVIndraidentification_772_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPedestalY",1195,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_772_0_7, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSi150CsI_camp5::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_772_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi150CsI_camp5::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_772_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSi150CsI_camp5::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_772_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSi150CsI_camp5::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_772_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_772_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi150CsI_camp5::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_772_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSi150CsI_camp5::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_772_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSi150CsI_camp5::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_772_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSi150CsI_camp5::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDSi150CsI_camp5", 1460, G__G__KVIndraidentification_772_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5), -1, 0, 1, 1, 1, 0, "u 'KVIDSi150CsI_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSi150CsI_camp5", 1586, G__G__KVIndraidentification_772_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_772_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5), -1, 1, 1, 1, 1, 0, "u 'KVIDSi150CsI_camp5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDPhoswich(void) {
   /* KVIDPhoswich */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich));
   G__memfunc_setup("KVIDPhoswich",1139,G__G__KVIndraidentification_773_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayName",1184,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_773_0_3, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDPhoswich::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_773_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDPhoswich::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_773_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDPhoswich::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_773_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDPhoswich::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_773_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_773_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDPhoswich::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_773_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDPhoswich::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_773_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDPhoswich::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_773_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDPhoswich::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDPhoswich", 1139, G__G__KVIndraidentification_773_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich), -1, 0, 1, 1, 1, 0, "u 'KVIDPhoswich' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDPhoswich", 1265, G__G__KVIndraidentification_773_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_773_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDPhoswich), -1, 1, 1, 1, 1, 0, "u 'KVIDPhoswich' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoCsI_e475s(void) {
   /* KVIDChIoCsI_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s));
   G__memfunc_setup("KVIDChIoCsI_e475s",1383,G__G__KVIndraidentification_774_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculateParticleEnergy",2348,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVReconstructedNucleus' - 0 - nuc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_774_0_7, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoCsI_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_774_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCsI_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_774_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoCsI_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_774_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoCsI_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_774_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_774_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCsI_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_774_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCsI_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_774_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoCsI_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_774_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoCsI_e475s::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoCsI_e475s", 1383, G__G__KVIndraidentification_774_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoCsI_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoCsI_e475s", 1509, G__G__KVIndraidentification_774_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_774_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoCsI_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRARRMValidator(void) {
   /* KVINDRARRMValidator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRARRMValidator));
   G__memfunc_setup("KVINDRARRMValidator",1702,G__G__KVIndraidentification_775_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRARRMValidator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunList",1009,G__G__KVIndraidentification_775_0_2, 117, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVNumberList), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingList",1100,G__G__KVIndraidentification_775_0_3, 117, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVNumberList), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleList",1314,G__G__KVIndraidentification_775_0_4, 117, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVNumberList), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunList",1021,G__G__KVIndraidentification_775_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModuleList",1326,G__G__KVIndraidentification_775_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRingList",1112,G__G__KVIndraidentification_775_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunList",1021,G__G__KVIndraidentification_775_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModuleList",1326,G__G__KVIndraidentification_775_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRingList",1112,G__G__KVIndraidentification_775_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_775_0_11, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRARRMValidator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_775_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARRMValidator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_775_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRARRMValidator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_775_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRARRMValidator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__KVIndraidentification_775_0_15, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__KVIndraidentification_775_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__KVIndraidentification_775_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_775_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_775_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARRMValidator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_775_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARRMValidator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_775_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARRMValidator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_775_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARRMValidator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRARRMValidator", 1702, G__G__KVIndraidentification_775_0_23, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRARRMValidator), -1, 0, 1, 1, 1, 0, "u 'KVINDRARRMValidator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRARRMValidator", 1828, G__G__KVIndraidentification_775_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_775_0_25, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVINDRARRMValidator), -1, 1, 1, 1, 1, 0, "u 'KVINDRARRMValidator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDChIoSi5(void) {
   /* KVIDChIoSi5 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5));
   G__memfunc_setup("KVIDChIoSi5",898,G__G__KVIndraidentification_776_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_776_0_4, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDChIoSi5::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_776_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi5::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_776_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDChIoSi5::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_776_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDChIoSi5::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_776_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_776_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi5::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_776_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi5::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_776_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDChIoSi5::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_776_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDChIoSi5::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDChIoSi5", 898, G__G__KVIndraidentification_776_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5), -1, 0, 1, 1, 1, 0, "u 'KVIDChIoSi5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDChIoSi5", 1024, G__G__KVIndraidentification_776_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_776_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDChIoSi5), -1, 1, 1, 1, 1, 0, "u 'KVIDChIoSi5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDSiCsI_e475s(void) {
   /* KVIDSiCsI_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s));
   G__memfunc_setup("KVIDSiCsI_e475s",1216,G__G__KVIndraidentification_777_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'KVIdentificationResult' - 0 - - d - 'Double_t' 0 '-1.' x "
"d - 'Double_t' 0 '-1.' y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculateParticleEnergy",2348,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVReconstructedNucleus' - 0 - nuc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_777_0_7, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDSiCsI_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_777_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_777_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDSiCsI_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_777_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDSiCsI_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_777_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_777_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_777_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCsI_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_777_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDSiCsI_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_777_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDSiCsI_e475s::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDSiCsI_e475s", 1216, G__G__KVIndraidentification_777_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s), -1, 0, 1, 1, 1, 0, "u 'KVIDSiCsI_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDSiCsI_e475s", 1342, G__G__KVIndraidentification_777_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_777_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s), -1, 1, 1, 1, 1, 0, "u 'KVIDSiCsI_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVIDBlocking(void) {
   /* KVIDBlocking */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking));
   G__memfunc_setup("KVIDBlocking",1111,G__G__KVIndraidentification_778_0_1, 105, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIDGrid",831,G__G__KVIndraidentification_778_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'KVIDGrid' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDMapX",803,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDMapY",804,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraidentification_778_0_5, 85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVIDBlocking::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraidentification_778_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDBlocking::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraidentification_778_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVIDBlocking::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraidentification_778_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVIDBlocking::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraidentificationLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraidentification_778_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraidentification_778_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDBlocking::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraidentification_778_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDBlocking::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraidentification_778_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVIDBlocking::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraidentification_778_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVIDBlocking::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVIDBlocking", 1111, G__G__KVIndraidentification_778_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking), -1, 0, 1, 1, 1, 0, "u 'KVIDBlocking' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVIDBlocking", 1237, G__G__KVIndraidentification_778_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraidentification_778_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraidentificationLN_KVIDBlocking), -1, 1, 1, 1, 1, 0, "u 'KVIDBlocking' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVIndraidentification() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode0=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode1=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode2=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode3=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode4=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode5=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode6=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode7=128",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode8=256",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode9=512",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode10=1024",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode11=2048",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode14=4096",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kIDCode15=8192",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kECode0=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kECode1=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kECode2=4",0,(char*)NULL);
}

static void G__cpp_setup_global5() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kECode3=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kECode11=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kECode15=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kECode4=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EVedaCodes),-1,-1,1,"kECode5=128",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_Gamma=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_Neutron=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_CsI=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_Phoswich=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_SiCsI=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_SiLiCsI=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_Si75SiLi=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_ChIoSi=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_ChIoCsI=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_ChIoSi75=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_Bragg=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_Zmin=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_ZminCsI=512",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_ArretChIo=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_ArretSi=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraidentificationLN_EIDCodes),-1,-1,1,"kIDCode_MultihitChIo=256",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVIndraidentification() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVIndraidentification() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVIndraidentificationLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVNumberList = { "KVNumberList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVDetector = { "KVDetector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVACQParam = { "KVACQParam" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVReconstructedNucleus = { "KVReconstructedNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDGraph = { "KVIDGraph" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDGrid = { "KVIDGrid" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVMultiDetArray = { "KVMultiDetArray" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIdentificationResult = { "KVIdentificationResult" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDTelescope = { "KVIDTelescope" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSubCodeManager = { "KVIDSubCodeManager" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVINDRAIDTelescope = { "KVINDRAIDTelescope" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDentifier = { "KVIDentifier" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDLine = { "KVIDLine" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDZALine = { "KVIDZALine" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDZAGrid = { "KVIDZAGrid" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDGChIoSi = { "KVIDGChIoSi" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDGChIoSicLcLdA = { "KVIDGChIoSi::$" , 101 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoSi = { "KVIDChIoSi" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s = { "KVIDGChIoSi_e494s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDGChIoSi_e494scLcLdA = { "KVIDGChIoSi_e494s::$" , 101 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVINDRADetector = { "KVINDRADetector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoSiCorr = { "KVIDChIoSiCorr" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoSi75 = { "KVIDChIoSi75" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5 = { "KVIDChIoSi75_camp5" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSiCsI = { "KVIDSiCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVTGIDManager = { "KVTGIDManager" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVRTGIDManager = { "KVRTGIDManager" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVChIo = { "KVChIo" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVSilicon = { "KVSilicon" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVCsI = { "KVCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSiCorrCsI = { "KVIDSiCorrCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoCsI = { "KVIDChIoCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoSi_e613 = { "KVIDChIoSi_e613" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_EVedaCodes = { "EVedaCodes" , 101 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_EIDCodes = { "EIDCodes" , 101 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVINDRACodeMask = { "KVINDRACodeMask" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSiLiCsI = { "KVIDSiLiCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s = { "KVIDSiLiCsI_e494s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSi75SiLi = { "KVIDSi75SiLi" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s = { "KVIDSi75SiLi_e494s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDGCsI = { "KVIDGCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDCsI = { "KVIDCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVINDRACodes = { "KVINDRACodes" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVINDRACodescLcLdA = { "KVINDRACodes::$" , 101 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoSiLi = { "KVIDChIoSiLi" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5 = { "KVIDSiLiCsI_camp5" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDCutLine = { "KVIDCutLine" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSiCsI_e613 = { "KVIDSiCsI_e613" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDCsIRLLine = { "KVIDCsIRLLine" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSiCsI5 = { "KVIDSiCsI5" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA = { "KVIDSiCsI5::$" , 101 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5 = { "KVIDSi75SiLi_camp5" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVDP2toIDGridConvertor = { "KVDP2toIDGridConvertor" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor = { "KVDP2toCsIGridConvertor" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoCorrCsI = { "KVIDChIoCorrCsI" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDCsI_e475s = { "KVIDCsI_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s = { "KVIDChIoSi75_e494s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s = { "KVIDChIoCorrCsI_e494s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoSi_e475s = { "KVIDChIoSi_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5 = { "KVIDChIoCsI_camp5" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5 = { "KVIDSi150CsI_camp5" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDPhoswich = { "KVIDPhoswich" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s = { "KVIDChIoCsI_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVINDRARRMValidator = { "KVINDRARRMValidator" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDChIoSi5 = { "KVIDChIoSi5" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDSiCsI_e475s = { "KVIDSiCsI_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndraidentificationLN_KVIDBlocking = { "KVIDBlocking" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVIndraidentification() {
  G__G__KVIndraidentificationLN_TClass.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TBuffer.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMemberInspector.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TObject.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TNamed.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TString.tagnum = -1 ;
  G__G__KVIndraidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVBase.tagnum = -1 ;
  G__G__KVIndraidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TAttLine.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TAttFill.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TAttMarker.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVNumberList.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVDetector.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVACQParam.tagnum = -1 ;
  G__G__KVIndraidentificationLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TGraph.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVReconstructedNucleus.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDGraph.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDGrid.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVMultiDetArray.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIdentificationResult.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDTelescope.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSubCodeManager.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVINDRAIDTelescope.tagnum = -1 ;
  G__G__KVIndraidentificationLN_TCutG.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDentifier.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDLine.tagnum = -1 ;
  G__G__KVIndraidentificationLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDZALine.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDZAGrid.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDGChIoSi.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDGChIoSicLcLdA.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoSi.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDGChIoSi_e494scLcLdA.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVINDRADetector.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoSiCorr.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoSi75.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSiCsI.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVTGIDManager.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVRTGIDManager.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVChIo.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVSilicon.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVCsI.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSiCorrCsI.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoCsI.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoSi_e613.tagnum = -1 ;
  G__G__KVIndraidentificationLN_EVedaCodes.tagnum = -1 ;
  G__G__KVIndraidentificationLN_EIDCodes.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVINDRACodeMask.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSiLiCsI.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSi75SiLi.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDGCsI.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDCsI.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVINDRACodes.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVINDRACodescLcLdA.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoSiLi.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDCutLine.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSiCsI_e613.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDCsIRLLine.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSiCsI5.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVDP2toIDGridConvertor.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoCorrCsI.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDCsI_e475s.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoSi_e475s.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDPhoswich.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVINDRARRMValidator.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDChIoSi5.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDSiCsI_e475s.tagnum = -1 ;
  G__G__KVIndraidentificationLN_KVIDBlocking.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVIndraidentification() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVNumberList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVDetector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVACQParam);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TGraph);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVReconstructedNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDGraph);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDGrid);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVMultiDetArray);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIdentificationResult);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDTelescope);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSubCodeManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVINDRAIDTelescope),sizeof(KVINDRAIDTelescope),-1,324864,"A delta-E - E identification telescope in INDRA",G__setup_memvarKVINDRAIDTelescope,G__setup_memfuncKVINDRAIDTelescope);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_TCutG);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDentifier);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDLine);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDZALine);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDZAGrid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDGChIoSi),sizeof(KVIDGChIoSi),-1,128256,"ChIo-Si dE-E Z-identification grid",G__setup_memvarKVIDGChIoSi,G__setup_memfuncKVIDGChIoSi);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDGChIoSicLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoSi),sizeof(KVIDChIoSi),-1,324864,"INDRA identification using ChIo-Si matrices",G__setup_memvarKVIDChIoSi,G__setup_memfuncKVIDChIoSi);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494s),sizeof(KVIDGChIoSi_e494s),-1,324864,"Specific identification grid for e494s",G__setup_memvarKVIDGChIoSi_e494s,G__setup_memfuncKVIDGChIoSi_e494s);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDGChIoSi_e494scLcLdA);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVINDRADetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoSiCorr),sizeof(KVIDChIoSiCorr),-1,324864,"INDRA E503/E494s ChIo-Si identification",G__setup_memvarKVIDChIoSiCorr,G__setup_memfuncKVIDChIoSiCorr);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoSi75),sizeof(KVIDChIoSi75),-1,324864,"INDRA identification using ChIo-Si75 matrices",G__setup_memvarKVIDChIoSi75,G__setup_memfuncKVIDChIoSi75);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoSi75_camp5),sizeof(KVIDChIoSi75_camp5),-1,324864,"ChIo-Si(75) identification for INDRA 5th campaign data",G__setup_memvarKVIDChIoSi75_camp5,G__setup_memfuncKVIDChIoSi75_camp5);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSiCsI),sizeof(KVIDSiCsI),-1,324864,"INDRA identification using Si-CsI matrices",G__setup_memvarKVIDSiCsI,G__setup_memfuncKVIDSiCsI);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVTGIDManager);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVRTGIDManager);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVChIo);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVSilicon);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVCsI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSiCorrCsI),sizeof(KVIDSiCorrCsI),-1,324864,"Si-CsI identification with TGID functions for E494S/E503  ",G__setup_memvarKVIDSiCorrCsI,G__setup_memfuncKVIDSiCorrCsI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoCsI),sizeof(KVIDChIoCsI),-1,324864,"INDRA identification using ChIo-CsI matrices",G__setup_memvarKVIDChIoCsI,G__setup_memfuncKVIDChIoCsI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoSi_e613),sizeof(KVIDChIoSi_e613),-1,324864,"modification of the sequence of identification for e613",G__setup_memvarKVIDChIoSi_e613,G__setup_memfuncKVIDChIoSi_e613);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_EVedaCodes),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_EIDCodes),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVINDRACodeMask),sizeof(KVINDRACodeMask),-1,292096,"Handles setting and testing code masks for particle calibration quality control",G__setup_memvarKVINDRACodeMask,G__setup_memfuncKVINDRACodeMask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSiLiCsI),sizeof(KVIDSiLiCsI),-1,324864,"INDRA identification using SiLi-CsI matrices",G__setup_memvarKVIDSiLiCsI,G__setup_memfuncKVIDSiLiCsI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_e494s),sizeof(KVIDSiLiCsI_e494s),-1,324864,"E503/E494S experiment INDRA identification using SiLi-CsI matrices",G__setup_memvarKVIDSiLiCsI_e494s,G__setup_memfuncKVIDSiLiCsI_e494s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSi75SiLi),sizeof(KVIDSi75SiLi),-1,324864,"INDRA identification using Si75-Si(Li) matrices",G__setup_memvarKVIDSi75SiLi,G__setup_memfuncKVIDSi75SiLi);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_e494s),sizeof(KVIDSi75SiLi_e494s),-1,324864,"E503/E494S experiment INDRA identification using Si75-SiLi matrices",G__setup_memvarKVIDSi75SiLi_e494s,G__setup_memfuncKVIDSi75SiLi_e494s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDGCsI),sizeof(KVIDGCsI),-1,325376,"CsI Rapide-Lente grid & identification",G__setup_memvarKVIDGCsI,G__setup_memfuncKVIDGCsI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDCsI),sizeof(KVIDCsI),-1,324864,"INDRA identification using CsI R-L matrices",G__setup_memvarKVIDCsI,G__setup_memfuncKVIDCsI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVINDRACodes),sizeof(KVINDRACodes),-1,292096,"Particle identification and calibration status (Veda6)",G__setup_memvarKVINDRACodes,G__setup_memfuncKVINDRACodes);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVINDRACodescLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoSiLi),sizeof(KVIDChIoSiLi),-1,325376,"Identification in ChIo-SiLi matrices of INDRA",G__setup_memvarKVIDChIoSiLi,G__setup_memfuncKVIDChIoSiLi);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSiLiCsI_camp5),sizeof(KVIDSiLiCsI_camp5),-1,324864,"SiLi-CsI identification for INDRA_camp5 dataset",G__setup_memvarKVIDSiLiCsI_camp5,G__setup_memfuncKVIDSiLiCsI_camp5);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDCutLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSiCsI_e613),sizeof(KVIDSiCsI_e613),-1,324864,"Si-CsI id with grids for INDRA_e613",G__setup_memvarKVIDSiCsI_e613,G__setup_memfuncKVIDSiCsI_e613);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDCsIRLLine),sizeof(KVIDCsIRLLine),-1,325376,"Base class for CsI R-L identification lines",G__setup_memvarKVIDCsIRLLine,G__setup_memfuncKVIDCsIRLLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSiCsI5),sizeof(KVIDSiCsI5),-1,324864,"5th campaign INDRA identification using Si-CsI matrices",G__setup_memvarKVIDSiCsI5,G__setup_memfuncKVIDSiCsI5);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSiCsI5cLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSi75SiLi_camp5),sizeof(KVIDSi75SiLi_camp5),-1,324864,"Identification in Si75-SiLi telescopes for INDRA_camp5 dataset",G__setup_memvarKVIDSi75SiLi_camp5,G__setup_memfuncKVIDSi75SiLi_camp5);
   G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVDP2toIDGridConvertor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVDP2toCsIGridConvertor),sizeof(KVDP2toCsIGridConvertor),-1,263424,"Converts dp2-format CsI R-L grids to KVIDGrids",G__setup_memvarKVDP2toCsIGridConvertor,G__setup_memfuncKVDP2toCsIGridConvertor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI),sizeof(KVIDChIoCorrCsI),-1,324864,"ChIo-CsI identification with grids for E503",G__setup_memvarKVIDChIoCorrCsI,G__setup_memfuncKVIDChIoCorrCsI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDCsI_e475s),sizeof(KVIDCsI_e475s),-1,324864,"derivation of KVIDCsI class for E475s experiment",G__setup_memvarKVIDCsI_e475s,G__setup_memfuncKVIDCsI_e475s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoSi75_e494s),sizeof(KVIDChIoSi75_e494s),-1,324864,"E503/E494S experiment INDRA identification using ChIo-Si75 matrices",G__setup_memvarKVIDChIoSi75_e494s,G__setup_memfuncKVIDChIoSi75_e494s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoCorrCsI_e494s),sizeof(KVIDChIoCorrCsI_e494s),-1,324864,"ChIo-CsI identification with grids for E494S",G__setup_memvarKVIDChIoCorrCsI_e494s,G__setup_memfuncKVIDChIoCorrCsI_e494s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoSi_e475s),sizeof(KVIDChIoSi_e475s),-1,324864,"derivation of KVIDChIoSi class for E475s experiment",G__setup_memvarKVIDChIoSi_e475s,G__setup_memfuncKVIDChIoSi_e475s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoCsI_camp5),sizeof(KVIDChIoCsI_camp5),-1,324864,"ChIo-CsI id with grids for INDRA_camp5",G__setup_memvarKVIDChIoCsI_camp5,G__setup_memfuncKVIDChIoCsI_camp5);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSi150CsI_camp5),sizeof(KVIDSi150CsI_camp5),-1,324864,"Si(150)-CsI identifications for 5th campaign INDRA data",G__setup_memvarKVIDSi150CsI_camp5,G__setup_memfuncKVIDSi150CsI_camp5);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDPhoswich),sizeof(KVIDPhoswich),-1,324864,"INDRA identification using Phoswich R-L matrices",G__setup_memvarKVIDPhoswich,G__setup_memfuncKVIDPhoswich);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoCsI_e475s),sizeof(KVIDChIoCsI_e475s),-1,324864,"derivation of KVIDChIoCsI class for E475s experiment",G__setup_memvarKVIDChIoCsI_e475s,G__setup_memfuncKVIDChIoCsI_e475s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVINDRARRMValidator),sizeof(KVINDRARRMValidator),-1,263424,"Defines validity of e.g. an ID grid in terms of lists of runs, rings and modules (INDRA detectors)",G__setup_memvarKVINDRARRMValidator,G__setup_memfuncKVINDRARRMValidator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDChIoSi5),sizeof(KVIDChIoSi5),-1,324864,"INDRA 5th campaign ChIo-Si identification",G__setup_memvarKVIDChIoSi5,G__setup_memfuncKVIDChIoSi5);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDSiCsI_e475s),sizeof(KVIDSiCsI_e475s),-1,324864,"derivation of KVIDSiCsI class for E475s experiment",G__setup_memvarKVIDSiCsI_e475s,G__setup_memfuncKVIDSiCsI_e475s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraidentificationLN_KVIDBlocking),sizeof(KVIDBlocking),-1,324864,"Identification in FNL blocking telescopes BIC-SiB",G__setup_memvarKVIDBlocking,G__setup_memfuncKVIDBlocking);
}
extern "C" void G__cpp_setupG__KVIndraidentification(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVIndraidentification()");
  G__set_cpp_environmentG__KVIndraidentification();
  G__cpp_setup_tagtableG__KVIndraidentification();

  G__cpp_setup_inheritanceG__KVIndraidentification();

  G__cpp_setup_typetableG__KVIndraidentification();

  G__cpp_setup_memvarG__KVIndraidentification();

  G__cpp_setup_memfuncG__KVIndraidentification();
  G__cpp_setup_globalG__KVIndraidentification();
  G__cpp_setup_funcG__KVIndraidentification();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVIndraidentification();
  return;
}
class G__cpp_setup_initG__KVIndraidentification {
  public:
    G__cpp_setup_initG__KVIndraidentification() { G__add_setup_func("G__KVIndraidentification",(G__incsetup)(&G__cpp_setupG__KVIndraidentification)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVIndraidentification() { G__remove_setup_func("G__KVIndraidentification"); }
};
G__cpp_setup_initG__KVIndraidentification G__cpp_setup_initializerG__KVIndraidentification;

