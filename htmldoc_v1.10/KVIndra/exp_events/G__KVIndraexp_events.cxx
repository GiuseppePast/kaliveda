//
// File generated by rootcint at Fri Jul 17 15:53:08 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVIndraexp_events
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVIndraexp_events.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVINDRAReconNuc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAReconNuc(void *p = 0);
   static void *newArray_KVINDRAReconNuc(Long_t size, void *p);
   static void delete_KVINDRAReconNuc(void *p);
   static void deleteArray_KVINDRAReconNuc(void *p);
   static void destruct_KVINDRAReconNuc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAReconNuc*)
   {
      ::KVINDRAReconNuc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAReconNuc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAReconNuc", ::KVINDRAReconNuc::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/exp_events/KVINDRAReconNuc.h", 36,
                  typeid(::KVINDRAReconNuc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAReconNuc::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAReconNuc) );
      instance.SetNew(&new_KVINDRAReconNuc);
      instance.SetNewArray(&newArray_KVINDRAReconNuc);
      instance.SetDelete(&delete_KVINDRAReconNuc);
      instance.SetDeleteArray(&deleteArray_KVINDRAReconNuc);
      instance.SetDestructor(&destruct_KVINDRAReconNuc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAReconNuc*)
   {
      return GenerateInitInstanceLocal((::KVINDRAReconNuc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAReconNuc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAReconEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAReconEvent(void *p = 0);
   static void *newArray_KVINDRAReconEvent(Long_t size, void *p);
   static void delete_KVINDRAReconEvent(void *p);
   static void deleteArray_KVINDRAReconEvent(void *p);
   static void destruct_KVINDRAReconEvent(void *p);
   static void streamer_KVINDRAReconEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAReconEvent*)
   {
      ::KVINDRAReconEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAReconEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAReconEvent", ::KVINDRAReconEvent::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/exp_events/KVINDRAReconEvent.h", 32,
                  typeid(::KVINDRAReconEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAReconEvent::Dictionary, isa_proxy, 1,
                  sizeof(::KVINDRAReconEvent) );
      instance.SetNew(&new_KVINDRAReconEvent);
      instance.SetNewArray(&newArray_KVINDRAReconEvent);
      instance.SetDelete(&delete_KVINDRAReconEvent);
      instance.SetDeleteArray(&deleteArray_KVINDRAReconEvent);
      instance.SetDestructor(&destruct_KVINDRAReconEvent);
      instance.SetStreamerFunc(&streamer_KVINDRAReconEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAReconEvent*)
   {
      return GenerateInitInstanceLocal((::KVINDRAReconEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAReconEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void INDRAGeometryBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_INDRAGeometryBuilder(void *p = 0);
   static void *newArray_INDRAGeometryBuilder(Long_t size, void *p);
   static void delete_INDRAGeometryBuilder(void *p);
   static void deleteArray_INDRAGeometryBuilder(void *p);
   static void destruct_INDRAGeometryBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::INDRAGeometryBuilder*)
   {
      ::INDRAGeometryBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::INDRAGeometryBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("INDRAGeometryBuilder", ::INDRAGeometryBuilder::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/exp_events/INDRAGeometryBuilder.h", 17,
                  typeid(::INDRAGeometryBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::INDRAGeometryBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::INDRAGeometryBuilder) );
      instance.SetNew(&new_INDRAGeometryBuilder);
      instance.SetNewArray(&newArray_INDRAGeometryBuilder);
      instance.SetDelete(&delete_INDRAGeometryBuilder);
      instance.SetDeleteArray(&deleteArray_INDRAGeometryBuilder);
      instance.SetDestructor(&destruct_INDRAGeometryBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::INDRAGeometryBuilder*)
   {
      return GenerateInitInstanceLocal((::INDRAGeometryBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::INDRAGeometryBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRA(void *p = 0);
   static void *newArray_KVINDRA(Long_t size, void *p);
   static void delete_KVINDRA(void *p);
   static void deleteArray_KVINDRA(void *p);
   static void destruct_KVINDRA(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRA*)
   {
      ::KVINDRA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRA", ::KVINDRA::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/exp_events/KVINDRA.h", 65,
                  typeid(::KVINDRA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRA::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRA) );
      instance.SetNew(&new_KVINDRA);
      instance.SetNewArray(&newArray_KVINDRA);
      instance.SetDelete(&delete_KVINDRA);
      instance.SetDeleteArray(&deleteArray_KVINDRA);
      instance.SetDestructor(&destruct_KVINDRA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRA*)
   {
      return GenerateInitInstanceLocal((::KVINDRA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAe503_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAe503(void *p = 0);
   static void *newArray_KVINDRAe503(Long_t size, void *p);
   static void delete_KVINDRAe503(void *p);
   static void deleteArray_KVINDRAe503(void *p);
   static void destruct_KVINDRAe503(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAe503*)
   {
      ::KVINDRAe503 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAe503 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAe503", ::KVINDRAe503::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/exp_events/KVINDRAe503.h", 9,
                  typeid(::KVINDRAe503), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAe503::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAe503) );
      instance.SetNew(&new_KVINDRAe503);
      instance.SetNewArray(&newArray_KVINDRAe503);
      instance.SetDelete(&delete_KVINDRAe503);
      instance.SetDeleteArray(&deleteArray_KVINDRAe503);
      instance.SetDestructor(&destruct_KVINDRAe503);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAe503*)
   {
      return GenerateInitInstanceLocal((::KVINDRAe503*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAe503*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAReconNuc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAReconNuc::Class_Name()
{
   return "KVINDRAReconNuc";
}

//______________________________________________________________________________
const char *KVINDRAReconNuc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconNuc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAReconNuc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconNuc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAReconNuc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconNuc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAReconNuc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconNuc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAReconEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAReconEvent::Class_Name()
{
   return "KVINDRAReconEvent";
}

//______________________________________________________________________________
const char *KVINDRAReconEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAReconEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAReconEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAReconEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAReconEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr INDRAGeometryBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *INDRAGeometryBuilder::Class_Name()
{
   return "INDRAGeometryBuilder";
}

//______________________________________________________________________________
const char *INDRAGeometryBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::INDRAGeometryBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int INDRAGeometryBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::INDRAGeometryBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void INDRAGeometryBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::INDRAGeometryBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *INDRAGeometryBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::INDRAGeometryBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRA::Class_Name()
{
   return "KVINDRA";
}

//______________________________________________________________________________
const char *KVINDRA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAe503::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAe503::Class_Name()
{
   return "KVINDRAe503";
}

//______________________________________________________________________________
const char *KVINDRAe503::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAe503*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAe503::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAe503*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAe503::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAe503*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAe503::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAe503*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVINDRA::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRA::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRA::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRA.
      TClass *R__cl = ::KVINDRA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigger", &fTrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChIo", &fChIo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSi", &fSi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsI", &fCsI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhoswich", &fPhoswich);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPHDSet", &fPHDSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSelecteur", &fSelecteur);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStrucInfos", &fStrucInfos);
      R__insp.InspectMember(fStrucInfos, "fStrucInfos.");
      KVASMultiDetArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRA(void *p) {
      return  p ? new(p) ::KVINDRA : new ::KVINDRA;
   }
   static void *newArray_KVINDRA(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRA[nElements] : new ::KVINDRA[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRA(void *p) {
      delete ((::KVINDRA*)p);
   }
   static void deleteArray_KVINDRA(void *p) {
      delete [] ((::KVINDRA*)p);
   }
   static void destruct_KVINDRA(void *p) {
      typedef ::KVINDRA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRA

//______________________________________________________________________________
void KVINDRAe503::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAe503.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAe503::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAe503::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAe503::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAe503.
      TClass *R__cl = ::KVINDRAe503::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRA::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAe503(void *p) {
      return  p ? new(p) ::KVINDRAe503 : new ::KVINDRAe503;
   }
   static void *newArray_KVINDRAe503(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAe503[nElements] : new ::KVINDRAe503[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAe503(void *p) {
      delete ((::KVINDRAe503*)p);
   }
   static void deleteArray_KVINDRAe503(void *p) {
      delete [] ((::KVINDRAe503*)p);
   }
   static void destruct_KVINDRAe503(void *p) {
      typedef ::KVINDRAe503 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAe503

//______________________________________________________________________________
void INDRAGeometryBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class INDRAGeometryBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(INDRAGeometryBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(INDRAGeometryBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void INDRAGeometryBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class INDRAGeometryBuilder.
      TClass *R__cl = ::INDRAGeometryBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetName", &fDetName);
      R__insp.InspectMember(fDetName, "fDetName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInnerFront[4]", fInnerFront);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOuterFront[4]", fOuterFront);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrameFront[4]", fFrameFront);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLayers", &fLayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fActiveLayer", &fActiveLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrameMat", &fFrameMat);
      R__insp.InspectMember(fFrameMat, "fFrameMat.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalThickness", &fTotalThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInnerCentre", &fInnerCentre);
      R__insp.InspectMember(fInnerCentre, "fInnerCentre.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOuterCentre", &fOuterCentre);
      R__insp.InspectMember(fOuterCentre, "fOuterCentre.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrameCentre", &fFrameCentre);
      R__insp.InspectMember(fFrameCentre, "fFrameCentre.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ndets", &Ndets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaMin", &thetaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaMax", &thetaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaPhi", &deltaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi0", &phi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFrameVolume", &fFrameVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetVolume", &fDetVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInnerPads", &fInnerPads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOuterPads", &fOuterPads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInnerRing", &fInnerRing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOuterRing", &fOuterRing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInnerDmod", &fInnerDmod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOuterDmod", &fOuterDmod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInnerModmin", &fInnerModmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOuterModmin", &fOuterModmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModmax", &fModmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingCentreDistance", &fRingCentreDistance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetectorPosition", &fDetectorPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEtalonVol", &fEtalonVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEtalonTheta[10]", fEtalonTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEtalonPhi[10]", fEtalonPhi);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_INDRAGeometryBuilder(void *p) {
      return  p ? new(p) ::INDRAGeometryBuilder : new ::INDRAGeometryBuilder;
   }
   static void *newArray_INDRAGeometryBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::INDRAGeometryBuilder[nElements] : new ::INDRAGeometryBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_INDRAGeometryBuilder(void *p) {
      delete ((::INDRAGeometryBuilder*)p);
   }
   static void deleteArray_INDRAGeometryBuilder(void *p) {
      delete [] ((::INDRAGeometryBuilder*)p);
   }
   static void destruct_INDRAGeometryBuilder(void *p) {
      typedef ::INDRAGeometryBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::INDRAGeometryBuilder

//______________________________________________________________________________
void KVINDRAReconEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAReconEvent.
      TClass *R__cl = ::KVINDRAReconEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCodeMask", &fCodeMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitGroups", &fHitGroups);
      KVReconstructedEvent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAReconEvent(void *p) {
      return  p ? new(p) ::KVINDRAReconEvent : new ::KVINDRAReconEvent;
   }
   static void *newArray_KVINDRAReconEvent(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAReconEvent[nElements] : new ::KVINDRAReconEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAReconEvent(void *p) {
      delete ((::KVINDRAReconEvent*)p);
   }
   static void deleteArray_KVINDRAReconEvent(void *p) {
      delete [] ((::KVINDRAReconEvent*)p);
   }
   static void destruct_KVINDRAReconEvent(void *p) {
      typedef ::KVINDRAReconEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRAReconEvent(TBuffer &buf, void *obj) {
      ((::KVINDRAReconEvent*)obj)->::KVINDRAReconEvent::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRAReconEvent

//______________________________________________________________________________
void KVINDRAReconNuc::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAReconNuc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAReconNuc::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAReconNuc::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAReconNuc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAReconNuc.
      TClass *R__cl = ::KVINDRAReconNuc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCodes", &fCodes);
      R__insp.InspectMember(fCodes, "fCodes.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoherent", &fCoherent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPileup", &fPileup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseFullChIoEnergyForCalib", &fUseFullChIoEnergyForCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECsI", &fECsI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fESi", &fESi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEChIo", &fEChIo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fESi75", &fESi75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fESiLi", &fESiLi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorrectCalib", &fCorrectCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoherentSi75SiLiCsI", &fCoherentSi75SiLiCsI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPileupChIo", &fPileupChIo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPileupSiLi", &fPileupSiLi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPileupSi75", &fPileupSi75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIncludeEtalonsInCalibration", &fIncludeEtalonsInCalibration);
      KVReconstructedNucleus::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAReconNuc(void *p) {
      return  p ? new(p) ::KVINDRAReconNuc : new ::KVINDRAReconNuc;
   }
   static void *newArray_KVINDRAReconNuc(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAReconNuc[nElements] : new ::KVINDRAReconNuc[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAReconNuc(void *p) {
      delete ((::KVINDRAReconNuc*)p);
   }
   static void deleteArray_KVINDRAReconNuc(void *p) {
      delete [] ((::KVINDRAReconNuc*)p);
   }
   static void destruct_KVINDRAReconNuc(void *p) {
      typedef ::KVINDRAReconNuc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAReconNuc

/********************************************************
* G__KVIndraexp_events.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVIndraexp_events();

extern "C" void G__set_cpp_environmentG__KVIndraexp_events() {
  G__cpp_reset_tagtableG__KVIndraexp_events();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVIndraexp_events() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVINDRAReconNuc */
static int G__G__KVIndraexp_events_706_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->AreSiCsICoherent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->IsSiPileup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->IsSi75Pileup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->IsSiLiPileup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->IsChIoPileup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->UseFullChIoEnergyForCalib());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAReconNuc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconNuc[n];
     } else {
       p = new((void*) gvp) KVINDRAReconNuc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconNuc;
     } else {
       p = new((void*) gvp) KVINDRAReconNuc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAReconNuc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVINDRAReconNuc(*(KVINDRAReconNuc*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVINDRAReconNuc(*(KVINDRAReconNuc*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconNuc*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->GetTimeMarker());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->GetRingNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->GetModuleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconNuc*) G__getstructoffset())->CoherencySiCsI(*(KVIdentificationResult*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconNuc*) G__getstructoffset())->CoherencyChIoCsI(*(KVIdentificationResult*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconNuc*) G__getstructoffset())->CoherencyEtalons(*(KVIdentificationResult*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconNuc*) G__getstructoffset())->CoherencyChIoSiCsI(*((KVIdentificationResult*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconNuc*) G__getstructoffset())->CalibrateRings1To9();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconNuc*) G__getstructoffset())->CalibrateRings10To17();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRAReconNuc*) G__getstructoffset())->GetEnergyChIo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRAReconNuc*) G__getstructoffset())->GetEnergySi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRAReconNuc*) G__getstructoffset())->GetEnergySi75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRAReconNuc*) G__getstructoffset())->GetEnergySiLi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRAReconNuc*) G__getstructoffset())->GetEnergyCsI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRAReconNuc*) G__getstructoffset())->GetChIo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRAReconNuc*) G__getstructoffset())->GetSi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRAReconNuc*) G__getstructoffset())->GetSi75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRAReconNuc*) G__getstructoffset())->GetSiLi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRAReconNuc*) G__getstructoffset())->GetCsI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconNuc*) G__getstructoffset())->StoppedInChIo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconNuc*) G__getstructoffset())->StoppedInSi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconNuc*) G__getstructoffset())->StoppedInSi75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconNuc*) G__getstructoffset())->StoppedInSiLi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconNuc*) G__getstructoffset())->StoppedInCsI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVINDRACodes& obj = ((KVINDRAReconNuc*) G__getstructoffset())->GetCodes();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->GetIDSubCode((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->GetIDSubCode());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->GetIDSubCodeString((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->GetIDSubCodeString());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRAReconNuc*) G__getstructoffset())->GetTelescope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAReconNuc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconNuc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAReconNuc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAReconNuc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconNuc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconNuc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconNuc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconNuc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_706_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconNuc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAReconNuc G__TKVINDRAReconNuc;
static int G__G__KVIndraexp_events_706_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAReconNuc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAReconNuc*) (soff+(sizeof(KVINDRAReconNuc)*i)))->~G__TKVINDRAReconNuc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAReconNuc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAReconNuc*) (soff))->~G__TKVINDRAReconNuc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAReconEvent */
static int G__G__KVIndraexp_events_708_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAReconEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconEvent((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVINDRAReconEvent((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAReconEvent((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVINDRAReconEvent((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVINDRAReconEvent[n];
       } else {
         p = new((void*) gvp) KVINDRAReconEvent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVINDRAReconEvent;
       } else {
         p = new((void*) gvp) KVINDRAReconEvent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconEvent*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRAReconEvent*) G__getstructoffset())->AddParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRAReconEvent*) G__getstructoffset())->GetParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((KVINDRAReconEvent*) G__getstructoffset())->GetNextParticle((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((KVINDRAReconEvent*) G__getstructoffset())->GetNextParticle());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRAReconEvent*) G__getstructoffset())->CheckCodes(*(KVINDRACodeMask*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconEvent*) G__getstructoffset())->AcceptIDCodes((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconEvent*) G__getstructoffset())->AcceptECodes((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconEvent*) G__getstructoffset())->ChangeFragmentMasses((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconEvent*) G__getstructoffset())->SecondaryAnalyseGroup((KVGroup*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAReconEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAReconEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAReconEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAReconEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAReconEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_708_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAReconEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAReconEvent G__TKVINDRAReconEvent;
static int G__G__KVIndraexp_events_708_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAReconEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAReconEvent*) (soff+(sizeof(KVINDRAReconEvent)*i)))->~G__TKVINDRAReconEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAReconEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAReconEvent*) (soff))->~G__TKVINDRAReconEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* INDRAGeometryBuilder */
static int G__G__KVIndraexp_events_709_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   INDRAGeometryBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new INDRAGeometryBuilder[n];
     } else {
       p = new((void*) gvp) INDRAGeometryBuilder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new INDRAGeometryBuilder;
     } else {
       p = new((void*) gvp) INDRAGeometryBuilder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   INDRAGeometryBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new INDRAGeometryBuilder(*(INDRAGeometryBuilder*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) INDRAGeometryBuilder(*(INDRAGeometryBuilder*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->ReadDetCAO((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->CalculateBackPlaneCoordinates((TVector3*) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2]), (TVector3*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->CalculateCentre((TVector3*) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->CalculateCornersInPlane((TVector3*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (TVector3*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->MakeFrame(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->MakeDetector((const Char_t*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, *((TVector3*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->PlaceFrame((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->PlaceDetector();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->MakeRing((const Char_t*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->MakeEtalon((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->ReflectPad((TVector3*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (TVector3*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->CloseAndDraw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((INDRAGeometryBuilder*) G__getstructoffset())->Build((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((INDRAGeometryBuilder*) G__getstructoffset())->Build((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((INDRAGeometryBuilder*) G__getstructoffset())->Build());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->BuildTarget();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->Build(*(KVNumberList*) libp->para[0].ref, *(KVNameValueList*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->TransformToOwnFrame((TVector3*) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref
, (TVector3*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) INDRAGeometryBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) INDRAGeometryBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) INDRAGeometryBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      INDRAGeometryBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) INDRAGeometryBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) INDRAGeometryBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) INDRAGeometryBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) INDRAGeometryBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((INDRAGeometryBuilder*) G__getstructoffset())->BuildEtalonVolumes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_709_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((INDRAGeometryBuilder*) G__getstructoffset())->CheckDetectorPresent(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef INDRAGeometryBuilder G__TINDRAGeometryBuilder;
static int G__G__KVIndraexp_events_709_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (INDRAGeometryBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((INDRAGeometryBuilder*) (soff+(sizeof(INDRAGeometryBuilder)*i)))->~G__TINDRAGeometryBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (INDRAGeometryBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((INDRAGeometryBuilder*) (soff))->~G__TINDRAGeometryBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndraexp_events_709_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   INDRAGeometryBuilder* dest = (INDRAGeometryBuilder*) G__getstructoffset();
   *dest = *(INDRAGeometryBuilder*) libp->para[0].ref;
   const INDRAGeometryBuilder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRA */
static int G__G__KVIndraexp_events_774_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRA[n];
     } else {
       p = new((void*) gvp) KVINDRA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRA;
     } else {
       p = new((void*) gvp) KVINDRA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVINDRA*) G__getstructoffset())->ArePHDSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVINDRA*) G__getstructoffset())->PHDSet((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVINDRA*) G__getstructoffset())->PHDSet();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRA*) G__getstructoffset())->UpdateArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRA*) G__getstructoffset())->GetChIoLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRA*) G__getstructoffset())->GetListOfChIo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRA*) G__getstructoffset())->GetListOfSi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRA*) G__getstructoffset())->GetListOfCsI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRA*) G__getstructoffset())->GetListOfPhoswich());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRA*) G__getstructoffset())->GetChIoOf((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVINDRA*) G__getstructoffset())->cd((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVINDRA*) G__getstructoffset())->cd();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRA*) G__getstructoffset())->GetDetectorByType((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRA*) G__getstructoffset())->SetTrigger((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const KVINDRA*) G__getstructoffset())->GetTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRA*) G__getstructoffset())->SetPinLasersForCsI();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((KVINDRA*) G__getstructoffset())->GetPedestals((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((KVINDRA*) G__getstructoffset())->GetPedestals((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRA*) G__getstructoffset())->GetTriggerInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRA*) G__getstructoffset())->GetListOfDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_774_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRA G__TKVINDRA;
static int G__G__KVIndraexp_events_774_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRA*) (soff+(sizeof(KVINDRA)*i)))->~G__TKVINDRA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRA*) (soff))->~G__TKVINDRA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAe503 */
static int G__G__KVIndraexp_events_775_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAe503* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAe503[n];
     } else {
       p = new((void*) gvp) KVINDRAe503[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAe503;
     } else {
       p = new((void*) gvp) KVINDRAe503;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAe503*) G__getstructoffset())->SetDataSet((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAe503::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAe503::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAe503::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAe503::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAe503*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAe503::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAe503::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAe503::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndraexp_events_775_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAe503::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAe503 G__TKVINDRAe503;
static int G__G__KVIndraexp_events_775_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAe503*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAe503*) (soff+(sizeof(KVINDRAe503)*i)))->~G__TKVINDRAe503();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAe503*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAe503*) (soff))->~G__TKVINDRAe503();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVINDRAReconNuc */

/* KVINDRAReconEvent */

/* INDRAGeometryBuilder */

/* KVINDRA */

/* KVINDRAe503 */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVIndraexp_events {
 public:
  G__Sizep2memfuncG__KVIndraexp_events(): p(&G__Sizep2memfuncG__KVIndraexp_events::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVIndraexp_events::*p)();
};

size_t G__get_sizep2memfuncG__KVIndraexp_events()
{
  G__Sizep2memfuncG__KVIndraexp_events a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVIndraexp_events() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc))) {
     KVINDRAReconNuc *G__Lderived;
     G__Lderived=(KVINDRAReconNuc*)0x1000;
     {
       KVReconstructedNucleus *G__Lpbase=(KVReconstructedNucleus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVReconstructedNucleus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVNucleus *G__Lpbase=(KVNucleus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVNucleus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVParticle *G__Lpbase=(KVParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent))) {
     KVINDRAReconEvent *G__Lderived;
     G__Lderived=(KVINDRAReconEvent*)0x1000;
     {
       KVReconstructedEvent *G__Lpbase=(KVReconstructedEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVReconstructedEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVEvent *G__Lpbase=(KVEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVEvent),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder))) {
     INDRAGeometryBuilder *G__Lderived;
     G__Lderived=(INDRAGeometryBuilder*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA))) {
     KVINDRA *G__Lderived;
     G__Lderived=(KVINDRA*)0x1000;
     {
       KVASMultiDetArray *G__Lpbase=(KVASMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVASMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVMultiDetArray *G__Lpbase=(KVMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503))) {
     KVINDRAe503 *G__Lderived;
     G__Lderived=(KVINDRAe503*)0x1000;
     {
       KVINDRA *G__Lpbase=(KVINDRA*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVASMultiDetArray *G__Lpbase=(KVASMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVASMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVMultiDetArray *G__Lpbase=(KVMultiDetArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVMultiDetArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVGeoStrucElement *G__Lpbase=(KVGeoStrucElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVGeoStrucElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503),G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVIndraexp_events() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*,less<long> >",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,Int_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVINDRAReconNuc */
static void G__setup_memvarKVINDRAReconNuc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc));
   { KVINDRAReconNuc *p; p=(KVINDRAReconNuc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRACodes),-1,-1,4,"fCodes=",0,"VEDA6-style calibration and identification codes");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCoherent=",0,"coherency of CsI & Si-CsI identifications");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPileup=",0,"apparent pileup in Si, revealed by inconsistency between CsI & Si-CsI identifications");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseFullChIoEnergyForCalib=",0,"decided by coherency analysis");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fECsI=",0,"csi contribution to energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fESi=",0,"si contribution to energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fEChIo=",0,"chio contribution to energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fESi75=",0,"si75 contribution to energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fESiLi=",0,"sili contribution to energy");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCorrectCalib=",0,"!set to kTRUE in Streamer if calibration needs correction");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCoherentSi75SiLiCsI=",0,"coherency of Si75-SiLi and SiLi-CsI/CsI identifications");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPileupChIo=",0,"apparent pileup in ChIo, revealed by inconsistency between CsI & ChIo-CsI identifications");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPileupSiLi=",0,"apparent pileup in SiLi, revealed by inconsistency between CsI & Si75-SiLi identifications");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPileupSi75=",0,"apparent pileup in Si75, revealed by inconsistency between CsI/SiLi-CsI & ChIo-Si75 identifications");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIncludeEtalonsInCalibration=",0,"for etalon modules:particle passed through Si75/SiLi");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAReconEvent */
static void G__setup_memvarKVINDRAReconEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent));
   { KVINDRAReconEvent *p; p=(KVINDRAReconEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRACodeMask),-1,-1,4,"fCodeMask=",0,"!VEDA codes accepted for \"good\" particles (IsOK)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVUniqueNameList),-1,-1,4,"fHitGroups=",0,"! non-persistent pointer to list of hit groups used in SecondaryIdentAndCalib()");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* INDRAGeometryBuilder */
static void G__setup_memvarINDRAGeometryBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder));
   { INDRAGeometryBuilder *p; p=(INDRAGeometryBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TString),-1,-1,4,"fDetName=",0,"!name of detector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TVector3),-1,-1,4,"fInnerFront[4]=",0,"!coords of inner front face");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TVector3),-1,-1,4,"fOuterFront[4]=",0,"!coords of outer front face");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TVector3),-1,-1,4,"fFrameFront[4]=",0,"!coords of outer front face");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVList),-1,-1,4,"fLayers=",0,"!list of materials making up layers of current detector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fActiveLayer=",0,"!index of active layer of current detector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVMaterial),-1,-1,4,"fFrameMat=",0,"!material of outer frame");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTotalThickness=",0,"!sum of thicknesses of layers of current detector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TVector3),-1,-1,4,"fInnerCentre=",0,"!centre of inner face");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TVector3),-1,-1,4,"fOuterCentre=",0,"!centre of outer face");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TVector3),-1,-1,4,"fFrameCentre=",0,"!centre of frame");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Ndets=",0,"!number of detectors in ring");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"thetaMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"thetaMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"deltaPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"phi0=",0,"!theoretical geometry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TGeoVolume),-1,-1,4,"fFrameVolume=",0,"!geo volume representing frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TGeoVolume),-1,-1,4,"fDetVolume=",0,"!geo volume representing frame");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fInnerPads=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOuterPads=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fInnerRing=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOuterRing=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fInnerDmod=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOuterDmod=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fInnerModmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOuterModmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fModmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRingCentreDistance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TGeoTranslation),-1,-1,4,"fDetectorPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TGeoVolumeAssembly),-1,-1,4,"fEtalonVol=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEtalonTheta[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEtalonPhi[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRA */
static void G__setup_memvarKVINDRA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA));
   { KVINDRA *p; p=(KVINDRA*)0x1000; if (p) { }
   G__memvar_setup((void*)(&KVINDRA::SignalTypes),99,0,0,-1,G__defined_typename("Char_t"),-2,1,"SignalTypes[16][3]=",0,"Use this static array to translate EBaseIndra_type signal type to a string giving the signal type");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"fTrigger=",0,"multiplicity trigger used for acquisition");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVHashList),-1,-1,2,"fChIo=",0,"->List Of ChIo of INDRA");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVHashList),-1,-1,2,"fSi=",0,"->List of Si detectors of INDRA");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVHashList),-1,-1,2,"fCsI=",0,"->List of CsI detectors of INDRA");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVHashList),-1,-1,2,"fPhoswich=",0,"->List of NE102/NE115 detectors of INDRA");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPHDSet=",0,"set to kTRUE if pulse height defect parameters are set");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRATriggerInfo),-1,-1,2,"fSelecteur=",0,"infos from DAQ trigger (le Selecteur)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TEnv),-1,-1,2,"fStrucInfos=",0,"! file containing structure of array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAe503 */
static void G__setup_memvarKVINDRAe503(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503));
   { KVINDRAe503 *p; p=(KVINDRAe503*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVIndraexp_events() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVINDRAReconNuc(void) {
   /* KVINDRAReconNuc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc));
   G__memfunc_setup("CheckCsIEnergy",1351,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDSubCode",1106,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 8, 
"C - 'Char_t' 10 - id_tel_type u 'Binary_t<unsigned short>' 'KVIDSubCode' 1 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDSubCodeString",1737,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 4, 9, 
"C - 'Char_t' 10 - id_tel_type u 'Binary_t<unsigned short>' 'KVIDSubCode' 1 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBadCalibrationStatus",2335,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNoCalibrationStatus",2261,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoNeutronCalibration",2054,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoBeryllium8Calibration",2312,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoGammaCalibration",1790,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateSiliconDEFromResidualEnergy",3615,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateSiLiDEFromResidualEnergy",3263,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 0 - ERES", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateSi75DEFromResidualEnergy",3190,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 0 - ERES", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateChIoDEFromResidualEnergy",3249,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 0 - ERES", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AreSiCsICoherent",1547,G__G__KVIndraexp_events_706_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSiPileup",999,G__G__KVIndraexp_events_706_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSi75Pileup",1107,G__G__KVIndraexp_events_706_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSiLiPileup",1180,G__G__KVIndraexp_events_706_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsChIoPileup",1166,G__G__KVIndraexp_events_706_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseFullChIoEnergyForCalib",2447,G__G__KVIndraexp_events_706_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRAReconNuc",1324,G__G__KVIndraexp_events_706_0_19, 105, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRAReconNuc",1324,G__G__KVIndraexp_events_706_0_20, 105, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc), -1, 0, 1, 1, 1, 0, "u 'KVINDRAReconNuc' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVIndraexp_events_706_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimeMarker",1297,G__G__KVIndraexp_events_706_0_25, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingNumber",1305,G__G__KVIndraexp_events_706_0_26, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleNumber",1519,G__G__KVIndraexp_events_706_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Identify",828,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoherencySiCsI",1371,G__G__KVIndraexp_events_706_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'KVIdentificationResult' - 1 - theID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoherencyChIoCsI",1538,G__G__KVIndraexp_events_706_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'KVIdentificationResult' - 1 - theID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoherencyEtalons",1654,G__G__KVIndraexp_events_706_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'KVIdentificationResult' - 1 - theID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoherencyChIoSiCsI",1726,G__G__KVIndraexp_events_706_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'KVIdentificationResult' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalibrateRings1To9",1719,G__G__KVIndraexp_events_706_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalibrateRings10To17",1814,G__G__KVIndraexp_events_706_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calibrate",903,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyChIo",1261,G__G__KVIndraexp_events_706_0_36, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergySi",1094,G__G__KVIndraexp_events_706_0_37, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergySi75",1202,G__G__KVIndraexp_events_706_0_38, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergySiLi",1275,G__G__KVIndraexp_events_706_0_39, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyCsI",1161,G__G__KVIndraexp_events_706_0_40, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChIo",643,G__G__KVIndraexp_events_706_0_41, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVChIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSi",476,G__G__KVIndraexp_events_706_0_42, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVSilicon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSi75",584,G__G__KVIndraexp_events_706_0_43, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVSi75), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiLi",657,G__G__KVIndraexp_events_706_0_44, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVSiLi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCsI",543,G__G__KVIndraexp_events_706_0_45, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoppedInChIo",1273,G__G__KVIndraexp_events_706_0_46, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoppedInSi",1106,G__G__KVIndraexp_events_706_0_47, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoppedInSi75",1214,G__G__KVIndraexp_events_706_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoppedInSiLi",1287,G__G__KVIndraexp_events_706_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoppedInCsI",1173,G__G__KVIndraexp_events_706_0_50, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCodes",782,G__G__KVIndraexp_events_706_0_51, 117, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRACodes), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIDCode",820,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - code_mask", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetECode",748,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - code_mask", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDCode",808,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetECode",736,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDSubCode",1106,G__G__KVIndraexp_events_706_0_56, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "C - 'Char_t' 10 '\"\"' id_tel_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIDSubCodeString",1737,G__G__KVIndraexp_events_706_0_57, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 9, "C - 'Char_t' 10 '\"\"' id_tel_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTelescope",1220,G__G__KVIndraexp_events_706_0_58, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRATelescope), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraexp_events_706_0_59, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAReconNuc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraexp_events_706_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconNuc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraexp_events_706_0_61, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAReconNuc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraexp_events_706_0_62, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAReconNuc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraexp_events_706_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraexp_events_706_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconNuc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraexp_events_706_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconNuc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraexp_events_706_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconNuc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraexp_events_706_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconNuc::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAReconNuc", 1450, G__G__KVIndraexp_events_706_0_71, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAReconEvent(void) {
   /* KVINDRAReconEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent));
   G__memfunc_setup("GetCodeMask",1063,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRACodeMask), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRAReconEvent",1544,G__G__KVIndraexp_events_708_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '50' mult C - - 10 '\"KVINDRAReconNuc\"' classname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVIndraexp_events_708_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__G__KVIndraexp_events_708_0_4, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__G__KVIndraexp_events_708_0_5, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - npart", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextParticle",1523,G__G__KVIndraexp_events_708_0_6, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckCodes",972,G__G__KVIndraexp_events_708_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'KVINDRACodeMask' - 1 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcceptIDCodes",1227,G__G__KVIndraexp_events_708_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcceptECodes",1155,G__G__KVIndraexp_events_708_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOK",342,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IdentifyEvent",1342,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangeFragmentMasses",2022,G__G__KVIndraexp_events_708_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - mass_formula", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SecondaryIdentCalib",1911,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SecondaryAnalyseGroup",2178,G__G__KVIndraexp_events_708_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVGroup' - 0 - grp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraexp_events_708_0_16, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAReconEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraexp_events_708_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraexp_events_708_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAReconEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraexp_events_708_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAReconEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraexp_events_708_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraexp_events_708_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraexp_events_708_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraexp_events_708_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAReconEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraexp_events_708_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAReconEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAReconEvent", 1670, G__G__KVIndraexp_events_708_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncINDRAGeometryBuilder(void) {
   /* INDRAGeometryBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder));
   G__memfunc_setup("CorrectCoordinates",1869,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"D - 'Double_t' 0 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("INDRAGeometryBuilder",1921,G__G__KVIndraexp_events_709_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("INDRAGeometryBuilder",1921,G__G__KVIndraexp_events_709_0_3, 105, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder), -1, 0, 1, 1, 1, 0, "u 'INDRAGeometryBuilder' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDetCAO",876,G__G__KVIndraexp_events_709_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - detname i - 'Int_t' 0 - ring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateBackPlaneCoordinates",2922,G__G__KVIndraexp_events_709_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TVector3' - 0 - frontcoords u 'TVector3' - 0 - centre "
"d - 'Double_t' 0 - depth U 'TVector3' - 0 - backcoords", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateCentre",1519,G__G__KVIndraexp_events_709_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TVector3' - 0 - corners u 'TVector3' - 1 - centre", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateCornersInPlane",2321,G__G__KVIndraexp_events_709_0_8, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TVector3' - 0 - plane d - 'Double_t' 0 - thetamin "
"d - 'Double_t' 0 - thetamax d - 'Double_t' 0 - phimin "
"d - 'Double_t' 0 - phimax U 'TVector3' - 0 - corners", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeFrame",873,G__G__KVIndraexp_events_709_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - det_type i - 'Int_t' 0 - ring_num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeDetector",1208,G__G__KVIndraexp_events_709_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - det U 'TVector3' - 0 - som "
"u 'TVector3' - 0 - cen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlaceFrame",976,G__G__KVIndraexp_events_709_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - phi i - 'Int_t' 0 - copy_no", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlaceDetector",1311,G__G__KVIndraexp_events_709_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeRing",782,G__G__KVIndraexp_events_709_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - det i - - 0 - ring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeEtalon",993,G__G__KVIndraexp_events_709_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - RING", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReflectPad",986,G__G__KVIndraexp_events_709_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TVector3' - 0 - orig d - 'Double_t' 0 - phicentre "
"U 'TVector3' - 0 - newpad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseAndDraw",1175,G__G__KVIndraexp_events_709_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__KVIndraexp_events_709_0_18, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TGeoManager), -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' withTarget g - 'Bool_t' 0 'kTRUE' closeGeometry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildTarget",1111,G__G__KVIndraexp_events_709_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__KVIndraexp_events_709_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'KVNumberList' - 1 - rings u 'KVNameValueList' - 1 - detectors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransformToOwnFrame",1950,G__G__KVIndraexp_events_709_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TVector3' - 0 - orig u 'TVector3' - 1 - centre "
"U 'TVector3' - 0 - ownframe", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraexp_events_709_0_22, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&INDRAGeometryBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraexp_events_709_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&INDRAGeometryBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraexp_events_709_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&INDRAGeometryBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraexp_events_709_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&INDRAGeometryBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraexp_events_709_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraexp_events_709_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&INDRAGeometryBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraexp_events_709_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&INDRAGeometryBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraexp_events_709_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&INDRAGeometryBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraexp_events_709_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&INDRAGeometryBuilder::DeclFileLine) ), 0);
   G__memfunc_setup("BuildEtalonVolumes",1854,G__G__KVIndraexp_events_709_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckDetectorPresent",2041,G__G__KVIndraexp_events_709_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - detname", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~INDRAGeometryBuilder", 2047, G__G__KVIndraexp_events_709_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndraexp_events_709_0_37, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder), -1, 1, 1, 1, 1, 0, "u 'INDRAGeometryBuilder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRA(void) {
   /* KVINDRA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA));
   G__memfunc_setup("MakeListOfDetectors",1916,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildGeometry",1340,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGroupsAndIDTelescopes",2403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillListsOfDetectorsByType",2645,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGGtoPGConversionFactors",2604,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LinkToCodeurs",1318,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildLayer",1005,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildRing",896,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVRing), -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - number C - 'Char_t' 10 - prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildTelescope",1428,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRATelescope), -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - prefix i - 'Int_t' 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRA",527,G__G__KVIndraexp_events_774_0_10, 105, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ArePHDSet",800,G__G__KVIndraexp_events_774_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PHDSet",520,G__G__KVIndraexp_events_774_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' yes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateArray",1122,G__G__KVIndraexp_events_774_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIDTelescopes",1476,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'KVDetector' - 0 - - U 'KVDetector' - 0 - - "
"U 'TCollection' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChIoLayer",1152,G__G__KVIndraexp_events_774_0_16, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVLayer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfChIo",1236,G__G__KVIndraexp_events_774_0_17, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVHashList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfSi",1069,G__G__KVIndraexp_events_774_0_18, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVHashList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfCsI",1136,G__G__KVIndraexp_events_774_0_19, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVHashList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfPhoswich",1718,G__G__KVIndraexp_events_774_0_20, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVHashList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChIoOf",824,G__G__KVIndraexp_events_774_0_21, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVChIo), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - detname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,G__G__KVIndraexp_events_774_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetectorByType",1719,G__G__KVIndraexp_events_774_0_23, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRADetector), -1, 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - cou h - 'UInt_t' 0 - mod "
"h - 'UInt_t' 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrigger",1024,G__G__KVIndraexp_events_774_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - trig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigger",1012,G__G__KVIndraexp_events_774_0_25, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPinLasersForCsI",1763,G__G__KVIndraexp_events_774_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestals",1221,G__G__KVIndraexp_events_774_0_27, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TGraph), -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - det_signal C - 'Char_t' 10 - det_type "
"i - 'Int_t' 0 - ring_number i - 'Int_t' 0 '-1' run_number", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetArrayACQParams",1636,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetectorEvent",1628,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'KVDetectorEvent' - 0 - detev U 'TSeqCollection' - 0 '0' fired_params", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTriggerInfo",1408,G__G__KVIndraexp_events_774_0_30, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRATriggerInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateGeoManager",1578,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TGeoManager), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 '500' - d - 'Double_t' 0 '500' - "
"d - 'Double_t' 0 '500' - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfDetectors",1822,G__G__KVIndraexp_events_774_0_32, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVSeqCollection), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetROOTGeometry",1468,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndraexp_events_774_0_34, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraexp_events_774_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraexp_events_774_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraexp_events_774_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraexp_events_774_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraexp_events_774_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraexp_events_774_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraexp_events_774_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraexp_events_774_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRA::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRA", 653, G__G__KVIndraexp_events_774_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAe503(void) {
   /* KVINDRAe503 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503));
   G__memfunc_setup("SetGroupsAndIDTelescopes",2403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVINDRAe503",780,G__G__KVIndraexp_events_775_0_2, 105, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRAe503), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataSet",978,G__G__KVIndraexp_events_775_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndraexp_events_775_0_4, 85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAe503::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndraexp_events_775_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAe503::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndraexp_events_775_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAe503::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndraexp_events_775_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAe503::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndraexp_events_775_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndraexp_events_775_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAe503::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndraexp_events_775_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAe503::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndraexp_events_775_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAe503::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndraexp_events_775_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAe503::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAe503", 906, G__G__KVIndraexp_events_775_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVIndraexp_events() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"ChIo_GG=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"ChIo_PG=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"ChIo_T=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"Si_GG=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"Si_PG=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"Si_T=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"CsI_R=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"CsI_L=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"CsI_T=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"Si75_GG=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"Si75_PG=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"Si75_T=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"SiLi_GG=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"SiLi_PG=14",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),-1,-1,1,"SiLi_T=15",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_typePhos),-1,-1,1,"Phos_R=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_typePhos),-1,-1,1,"Phos_L=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_EBaseIndra_typePhos),-1,-1,1,"Phos_T=3",0,(char*)NULL);
   G__memvar_setup((void*)(&gIndra),85,0,0,G__get_linked_tagnum(&G__G__KVIndraexp_eventsLN_KVINDRA),-1,-1,1,"gIndra=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVIndraexp_events() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVIndraexp_events() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVIndraexp_eventsLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVSeqCollection = { "KVSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVList = { "KVList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVHashList = { "KVHashList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVUniqueNameList = { "KVUniqueNameList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVNameValueList = { "KVNameValueList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVParticle = { "KVParticle" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVNumberList = { "KVNumberList" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVNucleus = { "KVNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVEvent = { "KVEvent" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVMaterial = { "KVMaterial" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVDetector = { "KVDetector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVGeoStrucElement = { "KVGeoStrucElement" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVGroup = { "KVGroup" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVReconstructedNucleus = { "KVReconstructedNucleus" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVMultiDetArray = { "KVMultiDetArray" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVIdentificationResult = { "KVIdentificationResult" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVDetectorEvent = { "KVDetectorEvent" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVReconstructedEvent = { "KVReconstructedEvent" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR = { "map<long,int,less<long>,allocator<pair<const long,int> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TGeoManager = { "TGeoManager" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TGeoVolumeAssembly = { "TGeoVolumeAssembly" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_TGeoTranslation = { "TGeoTranslation" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR = { "map<long,TGeoNavigatorArray*,less<long>,allocator<pair<const long,TGeoNavigatorArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVINDRACodeMask = { "KVINDRACodeMask" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVINDRACodes = { "KVINDRACodes" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVINDRAReconNuc = { "KVINDRAReconNuc" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVINDRAReconEvent = { "KVINDRAReconEvent" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder = { "INDRAGeometryBuilder" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVLayer = { "KVLayer" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVRing = { "KVRing" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVASMultiDetArray = { "KVASMultiDetArray" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVINDRATriggerInfo = { "KVINDRATriggerInfo" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVINDRATelescope = { "KVINDRATelescope" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVINDRADetector = { "KVINDRADetector" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVChIo = { "KVChIo" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_EBaseIndra_type = { "EBaseIndra_type" , 101 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_EBaseIndra_typePhos = { "EBaseIndra_typePhos" , 101 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVINDRA = { "KVINDRA" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVINDRAe503 = { "KVINDRAe503" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVSilicon = { "KVSilicon" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVSi75 = { "KVSi75" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVSiLi = { "KVSiLi" , 99 , -1 };
G__linked_taginfo G__G__KVIndraexp_eventsLN_KVCsI = { "KVCsI" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVIndraexp_events() {
  G__G__KVIndraexp_eventsLN_TClass.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TBuffer.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMemberInspector.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TObject.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TNamed.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TCollection.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TString.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TVector3.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TSeqCollection.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TEnv.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TLorentzVector.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVBase.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVSeqCollection.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVList.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVHashList.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVUniqueNameList.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVNameValueList.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVParticle.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVNumberList.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVNucleus.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVEvent.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TGeoVolume.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVMaterial.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVDetector.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVGeoStrucElement.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVGroup.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TGraph.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVReconstructedNucleus.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVMultiDetArray.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVIdentificationResult.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVDetectorEvent.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVReconstructedEvent.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TGeoManager.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TGeoVolumeAssembly.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_TGeoTranslation.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVINDRACodeMask.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVINDRACodes.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVINDRAReconNuc.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVINDRAReconEvent.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVLayer.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVRing.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVASMultiDetArray.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVINDRATriggerInfo.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVINDRATelescope.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVINDRADetector.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVChIo.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_EBaseIndra_type.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_EBaseIndra_typePhos.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVINDRA.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVINDRAe503.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVSilicon.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVSi75.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVSiLi.tagnum = -1 ;
  G__G__KVIndraexp_eventsLN_KVCsI.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVIndraexp_events() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TCollection);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TVector3);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TEnv);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVHashList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVUniqueNameList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVNameValueList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVParticle);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVNumberList);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVEvent);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVMaterial);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVDetector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVGeoStrucElement);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVGroup);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TGraph);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVReconstructedNucleus);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVMultiDetArray);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVIdentificationResult);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVDetectorEvent);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVReconstructedEvent);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TGeoManager);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TGeoVolumeAssembly);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_TGeoTranslation);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVINDRACodeMask);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVINDRACodes);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVINDRAReconNuc),sizeof(KVINDRAReconNuc),-1,325376,"Nucleus identified by INDRA array",G__setup_memvarKVINDRAReconNuc,G__setup_memfuncKVINDRAReconNuc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVINDRAReconEvent),sizeof(KVINDRAReconEvent),-1,128256,"Event reconstructed from energy losses in INDRA array",G__setup_memvarKVINDRAReconEvent,G__setup_memfuncKVINDRAReconEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_INDRAGeometryBuilder),sizeof(INDRAGeometryBuilder),-1,325376,"Build INDRA geometry from Huguet CAO infos",G__setup_memvarINDRAGeometryBuilder,G__setup_memfuncINDRAGeometryBuilder);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVLayer);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVRing);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVASMultiDetArray);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVINDRATriggerInfo);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVINDRATelescope);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVINDRADetector);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVChIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_EBaseIndra_type),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_EBaseIndra_typePhos),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVINDRA),sizeof(KVINDRA),-1,324864,"class describing the materials and detectors etc. to build an INDRA multidetector array",G__setup_memvarKVINDRA,G__setup_memfuncKVINDRA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVINDRAe503),sizeof(KVINDRAe503),-1,324864,"Experimental configuration for INDRA-VAMOS experiments",G__setup_memvarKVINDRAe503,G__setup_memfuncKVINDRAe503);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVSilicon);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVSi75);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVSiLi);
   G__get_linked_tagnum_fwd(&G__G__KVIndraexp_eventsLN_KVCsI);
}
extern "C" void G__cpp_setupG__KVIndraexp_events(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVIndraexp_events()");
  G__set_cpp_environmentG__KVIndraexp_events();
  G__cpp_setup_tagtableG__KVIndraexp_events();

  G__cpp_setup_inheritanceG__KVIndraexp_events();

  G__cpp_setup_typetableG__KVIndraexp_events();

  G__cpp_setup_memvarG__KVIndraexp_events();

  G__cpp_setup_memfuncG__KVIndraexp_events();
  G__cpp_setup_globalG__KVIndraexp_events();
  G__cpp_setup_funcG__KVIndraexp_events();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVIndraexp_events();
  return;
}
class G__cpp_setup_initG__KVIndraexp_events {
  public:
    G__cpp_setup_initG__KVIndraexp_events() { G__add_setup_func("G__KVIndraexp_events",(G__incsetup)(&G__cpp_setupG__KVIndraexp_events)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVIndraexp_events() { G__remove_setup_func("G__KVIndraexp_events"); }
};
G__cpp_setup_initG__KVIndraexp_events G__cpp_setup_initializerG__KVIndraexp_events;

