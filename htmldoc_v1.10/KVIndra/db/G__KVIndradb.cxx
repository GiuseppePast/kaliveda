//
// File generated by rootcint at Fri Jul 17 15:53:19 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__KVIndradb
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__KVIndradb.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KVDBPeak_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBPeak(void *p = 0);
   static void *newArray_KVDBPeak(Long_t size, void *p);
   static void delete_KVDBPeak(void *p);
   static void deleteArray_KVDBPeak(void *p);
   static void destruct_KVDBPeak(void *p);
   static void streamer_KVDBPeak(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBPeak*)
   {
      ::KVDBPeak *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBPeak >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBPeak", ::KVDBPeak::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVDBPeak.h", 26,
                  typeid(::KVDBPeak), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBPeak::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBPeak) );
      instance.SetNew(&new_KVDBPeak);
      instance.SetNewArray(&newArray_KVDBPeak);
      instance.SetDelete(&delete_KVDBPeak);
      instance.SetDeleteArray(&deleteArray_KVDBPeak);
      instance.SetDestructor(&destruct_KVDBPeak);
      instance.SetStreamerFunc(&streamer_KVDBPeak);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBPeak*)
   {
      return GenerateInitInstanceLocal((::KVDBPeak*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBPeak*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDBElasticPeak_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBElasticPeak(void *p = 0);
   static void *newArray_KVDBElasticPeak(Long_t size, void *p);
   static void delete_KVDBElasticPeak(void *p);
   static void deleteArray_KVDBElasticPeak(void *p);
   static void destruct_KVDBElasticPeak(void *p);
   static void streamer_KVDBElasticPeak(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBElasticPeak*)
   {
      ::KVDBElasticPeak *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBElasticPeak >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBElasticPeak", ::KVDBElasticPeak::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVDBElasticPeak.h", 23,
                  typeid(::KVDBElasticPeak), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBElasticPeak::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBElasticPeak) );
      instance.SetNew(&new_KVDBElasticPeak);
      instance.SetNewArray(&newArray_KVDBElasticPeak);
      instance.SetDelete(&delete_KVDBElasticPeak);
      instance.SetDeleteArray(&deleteArray_KVDBElasticPeak);
      instance.SetDestructor(&destruct_KVDBElasticPeak);
      instance.SetStreamerFunc(&streamer_KVDBElasticPeak);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBElasticPeak*)
   {
      return GenerateInitInstanceLocal((::KVDBElasticPeak*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBElasticPeak*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAUpDater_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAUpDater(void *p = 0);
   static void *newArray_KVINDRAUpDater(Long_t size, void *p);
   static void delete_KVINDRAUpDater(void *p);
   static void deleteArray_KVINDRAUpDater(void *p);
   static void destruct_KVINDRAUpDater(void *p);
   static void streamer_KVINDRAUpDater(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAUpDater*)
   {
      ::KVINDRAUpDater *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAUpDater >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAUpDater", ::KVINDRAUpDater::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRAUpDater.h", 15,
                  typeid(::KVINDRAUpDater), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAUpDater::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRAUpDater) );
      instance.SetNew(&new_KVINDRAUpDater);
      instance.SetNewArray(&newArray_KVINDRAUpDater);
      instance.SetDelete(&delete_KVINDRAUpDater);
      instance.SetDeleteArray(&deleteArray_KVINDRAUpDater);
      instance.SetDestructor(&destruct_KVINDRAUpDater);
      instance.SetStreamerFunc(&streamer_KVINDRAUpDater);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAUpDater*)
   {
      return GenerateInitInstanceLocal((::KVINDRAUpDater*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAUpDater*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAUpDater_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAUpDater_e475s(void *p = 0);
   static void *newArray_KVINDRAUpDater_e475s(Long_t size, void *p);
   static void delete_KVINDRAUpDater_e475s(void *p);
   static void deleteArray_KVINDRAUpDater_e475s(void *p);
   static void destruct_KVINDRAUpDater_e475s(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAUpDater_e475s*)
   {
      ::KVINDRAUpDater_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAUpDater_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAUpDater_e475s", ::KVINDRAUpDater_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRAUpDater_e475s.h", 17,
                  typeid(::KVINDRAUpDater_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAUpDater_e475s::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAUpDater_e475s) );
      instance.SetNew(&new_KVINDRAUpDater_e475s);
      instance.SetNewArray(&newArray_KVINDRAUpDater_e475s);
      instance.SetDelete(&delete_KVINDRAUpDater_e475s);
      instance.SetDeleteArray(&deleteArray_KVINDRAUpDater_e475s);
      instance.SetDestructor(&destruct_KVINDRAUpDater_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAUpDater_e475s*)
   {
      return GenerateInitInstanceLocal((::KVINDRAUpDater_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAUpDater_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDBTape_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBTape(void *p = 0);
   static void *newArray_KVDBTape(Long_t size, void *p);
   static void delete_KVDBTape(void *p);
   static void deleteArray_KVDBTape(void *p);
   static void destruct_KVDBTape(void *p);
   static void streamer_KVDBTape(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBTape*)
   {
      ::KVDBTape *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBTape >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBTape", ::KVDBTape::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVDBTape.h", 17,
                  typeid(::KVDBTape), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBTape::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBTape) );
      instance.SetNew(&new_KVDBTape);
      instance.SetNewArray(&newArray_KVDBTape);
      instance.SetDelete(&delete_KVDBTape);
      instance.SetDeleteArray(&deleteArray_KVDBTape);
      instance.SetDestructor(&destruct_KVDBTape);
      instance.SetStreamerFunc(&streamer_KVDBTape);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBTape*)
   {
      return GenerateInitInstanceLocal((::KVDBTape*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBTape*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADBRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADBRun(void *p = 0);
   static void *newArray_KVINDRADBRun(Long_t size, void *p);
   static void delete_KVINDRADBRun(void *p);
   static void deleteArray_KVINDRADBRun(void *p);
   static void destruct_KVINDRADBRun(void *p);
   static void streamer_KVINDRADBRun(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADBRun*)
   {
      ::KVINDRADBRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADBRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADBRun", ::KVINDRADBRun::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRADBRun.h", 15,
                  typeid(::KVINDRADBRun), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADBRun::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADBRun) );
      instance.SetNew(&new_KVINDRADBRun);
      instance.SetNewArray(&newArray_KVINDRADBRun);
      instance.SetDelete(&delete_KVINDRADBRun);
      instance.SetDeleteArray(&deleteArray_KVINDRADBRun);
      instance.SetDestructor(&destruct_KVINDRADBRun);
      instance.SetStreamerFunc(&streamer_KVINDRADBRun);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADBRun*)
   {
      return GenerateInitInstanceLocal((::KVINDRADBRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADBRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRARunListReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRARunListReader(void *p = 0);
   static void *newArray_KVINDRARunListReader(Long_t size, void *p);
   static void delete_KVINDRARunListReader(void *p);
   static void deleteArray_KVINDRARunListReader(void *p);
   static void destruct_KVINDRARunListReader(void *p);
   static void streamer_KVINDRARunListReader(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRARunListReader*)
   {
      ::KVINDRARunListReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRARunListReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRARunListReader", ::KVINDRARunListReader::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRARunListReader.h", 8,
                  typeid(::KVINDRARunListReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRARunListReader::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRARunListReader) );
      instance.SetNew(&new_KVINDRARunListReader);
      instance.SetNewArray(&newArray_KVINDRARunListReader);
      instance.SetDelete(&delete_KVINDRARunListReader);
      instance.SetDeleteArray(&deleteArray_KVINDRARunListReader);
      instance.SetDestructor(&destruct_KVINDRARunListReader);
      instance.SetStreamerFunc(&streamer_KVINDRARunListReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRARunListReader*)
   {
      return GenerateInitInstanceLocal((::KVINDRARunListReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRARunListReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAPulserDataTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAPulserDataTree(void *p = 0);
   static void *newArray_KVINDRAPulserDataTree(Long_t size, void *p);
   static void delete_KVINDRAPulserDataTree(void *p);
   static void deleteArray_KVINDRAPulserDataTree(void *p);
   static void destruct_KVINDRAPulserDataTree(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAPulserDataTree*)
   {
      ::KVINDRAPulserDataTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAPulserDataTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAPulserDataTree", ::KVINDRAPulserDataTree::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRAPulserDataTree.h", 23,
                  typeid(::KVINDRAPulserDataTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAPulserDataTree::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAPulserDataTree) );
      instance.SetNew(&new_KVINDRAPulserDataTree);
      instance.SetNewArray(&newArray_KVINDRAPulserDataTree);
      instance.SetDelete(&delete_KVINDRAPulserDataTree);
      instance.SetDeleteArray(&deleteArray_KVINDRAPulserDataTree);
      instance.SetDestructor(&destruct_KVINDRAPulserDataTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAPulserDataTree*)
   {
      return GenerateInitInstanceLocal((::KVINDRAPulserDataTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAPulserDataTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADB(void *p = 0);
   static void *newArray_KVINDRADB(Long_t size, void *p);
   static void delete_KVINDRADB(void *p);
   static void deleteArray_KVINDRADB(void *p);
   static void destruct_KVINDRADB(void *p);
   static void streamer_KVINDRADB(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADB*)
   {
      ::KVINDRADB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADB", ::KVINDRADB::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRADB.h", 38,
                  typeid(::KVINDRADB), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADB::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADB) );
      instance.SetNew(&new_KVINDRADB);
      instance.SetNewArray(&newArray_KVINDRADB);
      instance.SetDelete(&delete_KVINDRADB);
      instance.SetDeleteArray(&deleteArray_KVINDRADB);
      instance.SetDestructor(&destruct_KVINDRADB);
      instance.SetStreamerFunc(&streamer_KVINDRADB);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADB*)
   {
      return GenerateInitInstanceLocal((::KVINDRADB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADB_e503_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADB_e503(void *p = 0);
   static void *newArray_KVINDRADB_e503(Long_t size, void *p);
   static void delete_KVINDRADB_e503(void *p);
   static void deleteArray_KVINDRADB_e503(void *p);
   static void destruct_KVINDRADB_e503(void *p);
   static void streamer_KVINDRADB_e503(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADB_e503*)
   {
      ::KVINDRADB_e503 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADB_e503 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADB_e503", ::KVINDRADB_e503::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRADB_e503.h", 17,
                  typeid(::KVINDRADB_e503), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADB_e503::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADB_e503) );
      instance.SetNew(&new_KVINDRADB_e503);
      instance.SetNewArray(&newArray_KVINDRADB_e503);
      instance.SetDelete(&delete_KVINDRADB_e503);
      instance.SetDeleteArray(&deleteArray_KVINDRADB_e503);
      instance.SetDestructor(&destruct_KVINDRADB_e503);
      instance.SetStreamerFunc(&streamer_KVINDRADB_e503);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADB_e503*)
   {
      return GenerateInitInstanceLocal((::KVINDRADB_e503*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADB_e503*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDBChIoPressures_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBChIoPressures(void *p = 0);
   static void *newArray_KVDBChIoPressures(Long_t size, void *p);
   static void delete_KVDBChIoPressures(void *p);
   static void deleteArray_KVDBChIoPressures(void *p);
   static void destruct_KVDBChIoPressures(void *p);
   static void streamer_KVDBChIoPressures(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBChIoPressures*)
   {
      ::KVDBChIoPressures *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBChIoPressures >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBChIoPressures", ::KVDBChIoPressures::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVDBChIoPressures.h", 31,
                  typeid(::KVDBChIoPressures), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBChIoPressures::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBChIoPressures) );
      instance.SetNew(&new_KVDBChIoPressures);
      instance.SetNewArray(&newArray_KVDBChIoPressures);
      instance.SetDelete(&delete_KVDBChIoPressures);
      instance.SetDeleteArray(&deleteArray_KVDBChIoPressures);
      instance.SetDestructor(&destruct_KVDBChIoPressures);
      instance.SetStreamerFunc(&streamer_KVDBChIoPressures);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBChIoPressures*)
   {
      return GenerateInitInstanceLocal((::KVDBChIoPressures*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBChIoPressures*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDB_BIC_Pressures_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDB_BIC_Pressures(void *p = 0);
   static void *newArray_KVDB_BIC_Pressures(Long_t size, void *p);
   static void delete_KVDB_BIC_Pressures(void *p);
   static void deleteArray_KVDB_BIC_Pressures(void *p);
   static void destruct_KVDB_BIC_Pressures(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDB_BIC_Pressures*)
   {
      ::KVDB_BIC_Pressures *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDB_BIC_Pressures >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDB_BIC_Pressures", ::KVDB_BIC_Pressures::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVDB_BIC_Pressures.h", 20,
                  typeid(::KVDB_BIC_Pressures), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDB_BIC_Pressures::Dictionary, isa_proxy, 4,
                  sizeof(::KVDB_BIC_Pressures) );
      instance.SetNew(&new_KVDB_BIC_Pressures);
      instance.SetNewArray(&newArray_KVDB_BIC_Pressures);
      instance.SetDelete(&delete_KVDB_BIC_Pressures);
      instance.SetDeleteArray(&deleteArray_KVDB_BIC_Pressures);
      instance.SetDestructor(&destruct_KVDB_BIC_Pressures);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDB_BIC_Pressures*)
   {
      return GenerateInitInstanceLocal((::KVDB_BIC_Pressures*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDB_BIC_Pressures*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADB_e416a_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADB_e416a(void *p = 0);
   static void *newArray_KVINDRADB_e416a(Long_t size, void *p);
   static void delete_KVINDRADB_e416a(void *p);
   static void deleteArray_KVINDRADB_e416a(void *p);
   static void destruct_KVINDRADB_e416a(void *p);
   static void streamer_KVINDRADB_e416a(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADB_e416a*)
   {
      ::KVINDRADB_e416a *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADB_e416a >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADB_e416a", ::KVINDRADB_e416a::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRADB_e416a.h", 16,
                  typeid(::KVINDRADB_e416a), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADB_e416a::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADB_e416a) );
      instance.SetNew(&new_KVINDRADB_e416a);
      instance.SetNewArray(&newArray_KVINDRADB_e416a);
      instance.SetDelete(&delete_KVINDRADB_e416a);
      instance.SetDeleteArray(&deleteArray_KVINDRADB_e416a);
      instance.SetDestructor(&destruct_KVINDRADB_e416a);
      instance.SetStreamerFunc(&streamer_KVINDRADB_e416a);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADB_e416a*)
   {
      return GenerateInitInstanceLocal((::KVINDRADB_e416a*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADB_e416a*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRARunSheetReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRARunSheetReader(void *p = 0);
   static void *newArray_KVINDRARunSheetReader(Long_t size, void *p);
   static void delete_KVINDRARunSheetReader(void *p);
   static void deleteArray_KVINDRARunSheetReader(void *p);
   static void destruct_KVINDRARunSheetReader(void *p);
   static void streamer_KVINDRARunSheetReader(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRARunSheetReader*)
   {
      ::KVINDRARunSheetReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRARunSheetReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRARunSheetReader", ::KVINDRARunSheetReader::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRARunSheetReader.h", 17,
                  typeid(::KVINDRARunSheetReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRARunSheetReader::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRARunSheetReader) );
      instance.SetNew(&new_KVINDRARunSheetReader);
      instance.SetNewArray(&newArray_KVINDRARunSheetReader);
      instance.SetDelete(&delete_KVINDRARunSheetReader);
      instance.SetDeleteArray(&deleteArray_KVINDRARunSheetReader);
      instance.SetDestructor(&destruct_KVINDRARunSheetReader);
      instance.SetStreamerFunc(&streamer_KVINDRARunSheetReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRARunSheetReader*)
   {
      return GenerateInitInstanceLocal((::KVINDRARunSheetReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRARunSheetReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVDBAlphaPeak_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVDBAlphaPeak(void *p = 0);
   static void *newArray_KVDBAlphaPeak(Long_t size, void *p);
   static void delete_KVDBAlphaPeak(void *p);
   static void deleteArray_KVDBAlphaPeak(void *p);
   static void destruct_KVDBAlphaPeak(void *p);
   static void streamer_KVDBAlphaPeak(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVDBAlphaPeak*)
   {
      ::KVDBAlphaPeak *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVDBAlphaPeak >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVDBAlphaPeak", ::KVDBAlphaPeak::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVDBAlphaPeak.h", 26,
                  typeid(::KVDBAlphaPeak), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVDBAlphaPeak::Dictionary, isa_proxy, 0,
                  sizeof(::KVDBAlphaPeak) );
      instance.SetNew(&new_KVDBAlphaPeak);
      instance.SetNewArray(&newArray_KVDBAlphaPeak);
      instance.SetDelete(&delete_KVDBAlphaPeak);
      instance.SetDeleteArray(&deleteArray_KVDBAlphaPeak);
      instance.SetDestructor(&destruct_KVDBAlphaPeak);
      instance.SetStreamerFunc(&streamer_KVDBAlphaPeak);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVDBAlphaPeak*)
   {
      return GenerateInitInstanceLocal((::KVDBAlphaPeak*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVDBAlphaPeak*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAUpDater_e613_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAUpDater_e613(void *p = 0);
   static void *newArray_KVINDRAUpDater_e613(Long_t size, void *p);
   static void delete_KVINDRAUpDater_e613(void *p);
   static void deleteArray_KVINDRAUpDater_e613(void *p);
   static void destruct_KVINDRAUpDater_e613(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAUpDater_e613*)
   {
      ::KVINDRAUpDater_e613 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAUpDater_e613 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAUpDater_e613", ::KVINDRAUpDater_e613::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRAUpDater_e613.h", 10,
                  typeid(::KVINDRAUpDater_e613), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAUpDater_e613::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAUpDater_e613) );
      instance.SetNew(&new_KVINDRAUpDater_e613);
      instance.SetNewArray(&newArray_KVINDRAUpDater_e613);
      instance.SetDelete(&delete_KVINDRAUpDater_e613);
      instance.SetDeleteArray(&deleteArray_KVINDRAUpDater_e613);
      instance.SetDestructor(&destruct_KVINDRAUpDater_e613);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAUpDater_e613*)
   {
      return GenerateInitInstanceLocal((::KVINDRAUpDater_e613*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAUpDater_e613*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADB4_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADB4(void *p = 0);
   static void *newArray_KVINDRADB4(Long_t size, void *p);
   static void delete_KVINDRADB4(void *p);
   static void deleteArray_KVINDRADB4(void *p);
   static void destruct_KVINDRADB4(void *p);
   static void streamer_KVINDRADB4(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADB4*)
   {
      ::KVINDRADB4 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADB4 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADB4", ::KVINDRADB4::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRADB4.h", 27,
                  typeid(::KVINDRADB4), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADB4::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADB4) );
      instance.SetNew(&new_KVINDRADB4);
      instance.SetNewArray(&newArray_KVINDRADB4);
      instance.SetDelete(&delete_KVINDRADB4);
      instance.SetDeleteArray(&deleteArray_KVINDRADB4);
      instance.SetDestructor(&destruct_KVINDRADB4);
      instance.SetStreamerFunc(&streamer_KVINDRADB4);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADB4*)
   {
      return GenerateInitInstanceLocal((::KVINDRADB4*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADB4*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRAUpDater_e416a_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRAUpDater_e416a(void *p = 0);
   static void *newArray_KVINDRAUpDater_e416a(Long_t size, void *p);
   static void delete_KVINDRAUpDater_e416a(void *p);
   static void deleteArray_KVINDRAUpDater_e416a(void *p);
   static void destruct_KVINDRAUpDater_e416a(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRAUpDater_e416a*)
   {
      ::KVINDRAUpDater_e416a *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRAUpDater_e416a >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRAUpDater_e416a", ::KVINDRAUpDater_e416a::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRAUpDater_e416a.h", 16,
                  typeid(::KVINDRAUpDater_e416a), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRAUpDater_e416a::Dictionary, isa_proxy, 4,
                  sizeof(::KVINDRAUpDater_e416a) );
      instance.SetNew(&new_KVINDRAUpDater_e416a);
      instance.SetNewArray(&newArray_KVINDRAUpDater_e416a);
      instance.SetDelete(&delete_KVINDRAUpDater_e416a);
      instance.SetDeleteArray(&deleteArray_KVINDRAUpDater_e416a);
      instance.SetDestructor(&destruct_KVINDRAUpDater_e416a);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRAUpDater_e416a*)
   {
      return GenerateInitInstanceLocal((::KVINDRAUpDater_e416a*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRAUpDater_e416a*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADB2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADB2(void *p = 0);
   static void *newArray_KVINDRADB2(Long_t size, void *p);
   static void delete_KVINDRADB2(void *p);
   static void deleteArray_KVINDRADB2(void *p);
   static void destruct_KVINDRADB2(void *p);
   static void streamer_KVINDRADB2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADB2*)
   {
      ::KVINDRADB2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADB2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADB2", ::KVINDRADB2::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRADB2.h", 26,
                  typeid(::KVINDRADB2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADB2::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADB2) );
      instance.SetNew(&new_KVINDRADB2);
      instance.SetNewArray(&newArray_KVINDRADB2);
      instance.SetDelete(&delete_KVINDRADB2);
      instance.SetDeleteArray(&deleteArray_KVINDRADB2);
      instance.SetDestructor(&destruct_KVINDRADB2);
      instance.SetStreamerFunc(&streamer_KVINDRADB2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADB2*)
   {
      return GenerateInitInstanceLocal((::KVINDRADB2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADB2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADB_e475s_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADB_e475s(void *p = 0);
   static void *newArray_KVINDRADB_e475s(Long_t size, void *p);
   static void delete_KVINDRADB_e475s(void *p);
   static void deleteArray_KVINDRADB_e475s(void *p);
   static void destruct_KVINDRADB_e475s(void *p);
   static void streamer_KVINDRADB_e475s(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADB_e475s*)
   {
      ::KVINDRADB_e475s *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADB_e475s >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADB_e475s", ::KVINDRADB_e475s::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRADB_e475s.h", 20,
                  typeid(::KVINDRADB_e475s), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADB_e475s::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADB_e475s) );
      instance.SetNew(&new_KVINDRADB_e475s);
      instance.SetNewArray(&newArray_KVINDRADB_e475s);
      instance.SetDelete(&delete_KVINDRADB_e475s);
      instance.SetDeleteArray(&deleteArray_KVINDRADB_e475s);
      instance.SetDestructor(&destruct_KVINDRADB_e475s);
      instance.SetStreamerFunc(&streamer_KVINDRADB_e475s);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADB_e475s*)
   {
      return GenerateInitInstanceLocal((::KVINDRADB_e475s*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADB_e475s*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADB_e613_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADB_e613(void *p = 0);
   static void *newArray_KVINDRADB_e613(Long_t size, void *p);
   static void delete_KVINDRADB_e613(void *p);
   static void deleteArray_KVINDRADB_e613(void *p);
   static void destruct_KVINDRADB_e613(void *p);
   static void streamer_KVINDRADB_e613(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADB_e613*)
   {
      ::KVINDRADB_e613 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADB_e613 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADB_e613", ::KVINDRADB_e613::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRADB_e613.h", 10,
                  typeid(::KVINDRADB_e613), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADB_e613::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADB_e613) );
      instance.SetNew(&new_KVINDRADB_e613);
      instance.SetNewArray(&newArray_KVINDRADB_e613);
      instance.SetDelete(&delete_KVINDRADB_e613);
      instance.SetDeleteArray(&deleteArray_KVINDRADB_e613);
      instance.SetDestructor(&destruct_KVINDRADB_e613);
      instance.SetStreamerFunc(&streamer_KVINDRADB_e613);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADB_e613*)
   {
      return GenerateInitInstanceLocal((::KVINDRADB_e613*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADB_e613*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KVINDRADB1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KVINDRADB1(void *p = 0);
   static void *newArray_KVINDRADB1(Long_t size, void *p);
   static void delete_KVINDRADB1(void *p);
   static void deleteArray_KVINDRADB1(void *p);
   static void destruct_KVINDRADB1(void *p);
   static void streamer_KVINDRADB1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KVINDRADB1*)
   {
      ::KVINDRADB1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KVINDRADB1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KVINDRADB1", ::KVINDRADB1::Class_Version(), "/home/john/software/sources/kaliveda.git/KVIndra/db/KVINDRADB1.h", 26,
                  typeid(::KVINDRADB1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KVINDRADB1::Dictionary, isa_proxy, 0,
                  sizeof(::KVINDRADB1) );
      instance.SetNew(&new_KVINDRADB1);
      instance.SetNewArray(&newArray_KVINDRADB1);
      instance.SetDelete(&delete_KVINDRADB1);
      instance.SetDeleteArray(&deleteArray_KVINDRADB1);
      instance.SetDestructor(&destruct_KVINDRADB1);
      instance.SetStreamerFunc(&streamer_KVINDRADB1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KVINDRADB1*)
   {
      return GenerateInitInstanceLocal((::KVINDRADB1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KVINDRADB1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KVDBPeak::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBPeak::Class_Name()
{
   return "KVDBPeak";
}

//______________________________________________________________________________
const char *KVDBPeak::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBPeak*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBPeak::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBPeak*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBPeak::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBPeak*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBPeak::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBPeak*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDBElasticPeak::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBElasticPeak::Class_Name()
{
   return "KVDBElasticPeak";
}

//______________________________________________________________________________
const char *KVDBElasticPeak::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBElasticPeak*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBElasticPeak::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBElasticPeak*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBElasticPeak::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBElasticPeak*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBElasticPeak::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBElasticPeak*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAUpDater::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAUpDater::Class_Name()
{
   return "KVINDRAUpDater";
}

//______________________________________________________________________________
const char *KVINDRAUpDater::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAUpDater::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAUpDater::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAUpDater::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAUpDater_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAUpDater_e475s::Class_Name()
{
   return "KVINDRAUpDater_e475s";
}

//______________________________________________________________________________
const char *KVINDRAUpDater_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAUpDater_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAUpDater_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAUpDater_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDBTape::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBTape::Class_Name()
{
   return "KVDBTape";
}

//______________________________________________________________________________
const char *KVDBTape::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBTape*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBTape::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBTape*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBTape::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBTape*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBTape::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBTape*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADBRun::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADBRun::Class_Name()
{
   return "KVINDRADBRun";
}

//______________________________________________________________________________
const char *KVINDRADBRun::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADBRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADBRun::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADBRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADBRun::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADBRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADBRun::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADBRun*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRARunListReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRARunListReader::Class_Name()
{
   return "KVINDRARunListReader";
}

//______________________________________________________________________________
const char *KVINDRARunListReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARunListReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRARunListReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARunListReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRARunListReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARunListReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRARunListReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARunListReader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAPulserDataTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAPulserDataTree::Class_Name()
{
   return "KVINDRAPulserDataTree";
}

//______________________________________________________________________________
const char *KVINDRAPulserDataTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAPulserDataTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAPulserDataTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAPulserDataTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAPulserDataTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAPulserDataTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAPulserDataTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAPulserDataTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADB::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADB::Class_Name()
{
   return "KVINDRADB";
}

//______________________________________________________________________________
const char *KVINDRADB::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADB::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADB::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADB::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADB_e503::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADB_e503::Class_Name()
{
   return "KVINDRADB_e503";
}

//______________________________________________________________________________
const char *KVINDRADB_e503::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e503*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADB_e503::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e503*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADB_e503::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e503*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADB_e503::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e503*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDBChIoPressures::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBChIoPressures::Class_Name()
{
   return "KVDBChIoPressures";
}

//______________________________________________________________________________
const char *KVDBChIoPressures::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBChIoPressures*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBChIoPressures::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBChIoPressures*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBChIoPressures::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBChIoPressures*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBChIoPressures::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBChIoPressures*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDB_BIC_Pressures::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDB_BIC_Pressures::Class_Name()
{
   return "KVDB_BIC_Pressures";
}

//______________________________________________________________________________
const char *KVDB_BIC_Pressures::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDB_BIC_Pressures*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDB_BIC_Pressures::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDB_BIC_Pressures*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDB_BIC_Pressures::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDB_BIC_Pressures*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDB_BIC_Pressures::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDB_BIC_Pressures*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADB_e416a::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADB_e416a::Class_Name()
{
   return "KVINDRADB_e416a";
}

//______________________________________________________________________________
const char *KVINDRADB_e416a::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e416a*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADB_e416a::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e416a*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADB_e416a::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e416a*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADB_e416a::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e416a*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRARunSheetReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRARunSheetReader::Class_Name()
{
   return "KVINDRARunSheetReader";
}

//______________________________________________________________________________
const char *KVINDRARunSheetReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARunSheetReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRARunSheetReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARunSheetReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRARunSheetReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARunSheetReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRARunSheetReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRARunSheetReader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVDBAlphaPeak::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVDBAlphaPeak::Class_Name()
{
   return "KVDBAlphaPeak";
}

//______________________________________________________________________________
const char *KVDBAlphaPeak::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBAlphaPeak*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVDBAlphaPeak::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBAlphaPeak*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVDBAlphaPeak::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBAlphaPeak*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVDBAlphaPeak::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVDBAlphaPeak*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAUpDater_e613::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAUpDater_e613::Class_Name()
{
   return "KVINDRAUpDater_e613";
}

//______________________________________________________________________________
const char *KVINDRAUpDater_e613::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e613*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAUpDater_e613::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e613*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAUpDater_e613::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e613*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAUpDater_e613::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e613*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADB4::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADB4::Class_Name()
{
   return "KVINDRADB4";
}

//______________________________________________________________________________
const char *KVINDRADB4::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB4*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADB4::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB4*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADB4::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB4*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADB4::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB4*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRAUpDater_e416a::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRAUpDater_e416a::Class_Name()
{
   return "KVINDRAUpDater_e416a";
}

//______________________________________________________________________________
const char *KVINDRAUpDater_e416a::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e416a*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRAUpDater_e416a::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e416a*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRAUpDater_e416a::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e416a*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRAUpDater_e416a::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRAUpDater_e416a*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADB2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADB2::Class_Name()
{
   return "KVINDRADB2";
}

//______________________________________________________________________________
const char *KVINDRADB2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADB2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADB2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADB2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADB_e475s::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADB_e475s::Class_Name()
{
   return "KVINDRADB_e475s";
}

//______________________________________________________________________________
const char *KVINDRADB_e475s::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e475s*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADB_e475s::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e475s*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADB_e475s::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e475s*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADB_e475s::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e475s*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADB_e613::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADB_e613::Class_Name()
{
   return "KVINDRADB_e613";
}

//______________________________________________________________________________
const char *KVINDRADB_e613::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e613*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADB_e613::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e613*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADB_e613::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e613*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADB_e613::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB_e613*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KVINDRADB1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KVINDRADB1::Class_Name()
{
   return "KVINDRADB1";
}

//______________________________________________________________________________
const char *KVINDRADB1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KVINDRADB1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KVINDRADB1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KVINDRADB1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KVINDRADB1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KVINDRADB::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADB.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDataBase::Streamer(R__b);
      KVINDRARunListReader::Streamer(R__b);
      R__b >> kFirstRun;
      R__b >> kLastRun;
      R__b >> fRuns;
      R__b >> fSystems;
      R__b >> fChIoPressures;
      R__b >> fGains;
      R__b >> fTapes;
      R__b >> fCsILumCorr;
      R__b >> fPedestals;
      R__b >> fChanVolt;
      R__b >> fVoltMeVChIoSi;
      R__b >> fLitEnerCsI;
      R__b >> fLitEnerCsIZ1;
      R__b >> fAbsentDet;
      R__b >> fOoODet;
      R__b >> fOoOACQPar;
      R__b.CheckByteCount(R__s, R__c, KVINDRADB::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADB::IsA(), kTRUE);
      KVDataBase::Streamer(R__b);
      KVINDRARunListReader::Streamer(R__b);
      R__b << kFirstRun;
      R__b << kLastRun;
      R__b << fRuns;
      R__b << fSystems;
      R__b << fChIoPressures;
      R__b << fGains;
      R__b << fTapes;
      R__b << fCsILumCorr;
      R__b << fPedestals;
      R__b << fChanVolt;
      R__b << fVoltMeVChIoSi;
      R__b << fLitEnerCsI;
      R__b << fLitEnerCsIZ1;
      R__b << fAbsentDet;
      R__b << fOoODet;
      R__b << fOoOACQPar;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADB.
      TClass *R__cl = ::KVINDRADB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "__ifpeaks", (void*)&__ifpeaks);
      R__insp.InspectMember("ifstream", (void*)&__ifpeaks, "__ifpeaks.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kFirstRun", &kFirstRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kLastRun", &kLastRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRuns", &fRuns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSystems", &fSystems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChIoPressures", &fChIoPressures);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGains", &fGains);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTapes", &fTapes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCsILumCorr", &fCsILumCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedestals", &fPedestals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChanVolt", &fChanVolt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVoltMeVChIoSi", &fVoltMeVChIoSi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitEnerCsI", &fLitEnerCsI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLitEnerCsIZ1", &fLitEnerCsIZ1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAbsentDet", &fAbsentDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOoODet", &fOoODet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOoOACQPar", &fOoOACQPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPulserData", &fPulserData);
      KVDataBase::ShowMembers(R__insp);
      KVINDRARunListReader::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADB(void *p) {
      return  p ? new(p) ::KVINDRADB : new ::KVINDRADB;
   }
   static void *newArray_KVINDRADB(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADB[nElements] : new ::KVINDRADB[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADB(void *p) {
      delete ((::KVINDRADB*)p);
   }
   static void deleteArray_KVINDRADB(void *p) {
      delete [] ((::KVINDRADB*)p);
   }
   static void destruct_KVINDRADB(void *p) {
      typedef ::KVINDRADB current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADB(TBuffer &buf, void *obj) {
      ((::KVINDRADB*)obj)->::KVINDRADB::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADB

//______________________________________________________________________________
void KVINDRARunListReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRARunListReader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, KVINDRARunListReader::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRARunListReader::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRARunListReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRARunListReader.
      TClass *R__cl = ::KVINDRARunListReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunsFile", &fRunsFile);
      R__insp.InspectMember(fRunsFile, "fRunsFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunsStream", (void*)&fRunsStream);
      R__insp.InspectMember("ifstream", (void*)&fRunsStream, "fRunsStream.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLineReader", &fLineReader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLine", &fLine);
      R__insp.InspectMember(fLine, "fLine.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComment", &fComment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeparator", &fSeparator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentLine", &fCurrentLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigger", &fTrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewRunList", &fNewRunList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVersion", &fVersion);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRARunListReader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRARunListReader : new ::KVINDRARunListReader;
   }
   static void *newArray_KVINDRARunListReader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRARunListReader[nElements] : new ::KVINDRARunListReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRARunListReader(void *p) {
      delete ((::KVINDRARunListReader*)p);
   }
   static void deleteArray_KVINDRARunListReader(void *p) {
      delete [] ((::KVINDRARunListReader*)p);
   }
   static void destruct_KVINDRARunListReader(void *p) {
      typedef ::KVINDRARunListReader current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRARunListReader(TBuffer &buf, void *obj) {
      ((::KVINDRARunListReader*)obj)->::KVINDRARunListReader::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRARunListReader

//______________________________________________________________________________
void KVINDRARunSheetReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRARunSheetReader.

   ::Error("KVINDRARunSheetReader::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void KVINDRARunSheetReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRARunSheetReader.
      TClass *R__cl = ::KVINDRARunSheetReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunSheetDir", &fRunSheetDir);
      R__insp.InspectMember(fRunSheetDir, "fRunSheetDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileFormat", &fFileFormat);
      R__insp.InspectMember(fFileFormat, "fFileFormat.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilePath", &fFilePath);
      R__insp.InspectMember(fFilePath, "fFilePath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMakeTree", &fMakeTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "start_run", &start_run);
      R__insp.InspectMember(start_run, "start_run.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endrun", &endrun);
      R__insp.InspectMember(endrun, "endrun.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "len_run", &len_run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "size", &size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data_rate", &data_rate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "acq_rate", &acq_rate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trait_rate", &trait_rate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctrl_rate", &ctrl_rate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rempli_dlt_pc", &rempli_dlt_pc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "temps_mort", &temps_mort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_num", &run_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "buf_sav", &buf_sav);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eve_sav", &eve_sav);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eve_lus", &eve_lus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "buf_ctrl", &buf_ctrl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eve_ctrl", &eve_ctrl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rempli_dlt_blocs", &rempli_dlt_blocs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "istart", &istart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iend", &iend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalers[1024]", fScalers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stat_eve", &stat_eve);
      R__insp.InspectMember(stat_eve, "stat_eve.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTIME_START", &fTIME_START);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRARunSheetReader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRARunSheetReader : new ::KVINDRARunSheetReader;
   }
   static void *newArray_KVINDRARunSheetReader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRARunSheetReader[nElements] : new ::KVINDRARunSheetReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRARunSheetReader(void *p) {
      delete ((::KVINDRARunSheetReader*)p);
   }
   static void deleteArray_KVINDRARunSheetReader(void *p) {
      delete [] ((::KVINDRARunSheetReader*)p);
   }
   static void destruct_KVINDRARunSheetReader(void *p) {
      typedef ::KVINDRARunSheetReader current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRARunSheetReader(TBuffer &buf, void *obj) {
      ((::KVINDRARunSheetReader*)obj)->::KVINDRARunSheetReader::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRARunSheetReader

//______________________________________________________________________________
void KVINDRADBRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADBRun.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDBRun::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVINDRADBRun::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADBRun::IsA(), kTRUE);
      KVDBRun::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADBRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADBRun.
      TClass *R__cl = ::KVINDRADBRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartEndDate", &fStartEndDate);
      R__insp.InspectMember(fStartEndDate, "fStartEndDate.");
      KVDBRun::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADBRun(void *p) {
      return  p ? new(p) ::KVINDRADBRun : new ::KVINDRADBRun;
   }
   static void *newArray_KVINDRADBRun(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADBRun[nElements] : new ::KVINDRADBRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADBRun(void *p) {
      delete ((::KVINDRADBRun*)p);
   }
   static void deleteArray_KVINDRADBRun(void *p) {
      delete [] ((::KVINDRADBRun*)p);
   }
   static void destruct_KVINDRADBRun(void *p) {
      typedef ::KVINDRADBRun current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADBRun(TBuffer &buf, void *obj) {
      ((::KVINDRADBRun*)obj)->::KVINDRADBRun::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADBRun

//______________________________________________________________________________
void KVDBChIoPressures::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBChIoPressures.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDBRecord::Streamer(R__b);
      R__b.ReadStaticArray((float*)fPressures);
      R__b.CheckByteCount(R__s, R__c, KVDBChIoPressures::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBChIoPressures::IsA(), kTRUE);
      KVDBRecord::Streamer(R__b);
      R__b.WriteArray(fPressures, 5);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBChIoPressures::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBChIoPressures.
      TClass *R__cl = ::KVDBChIoPressures::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPressures[5]", fPressures);
      KVDBRecord::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBChIoPressures(void *p) {
      return  p ? new(p) ::KVDBChIoPressures : new ::KVDBChIoPressures;
   }
   static void *newArray_KVDBChIoPressures(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBChIoPressures[nElements] : new ::KVDBChIoPressures[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBChIoPressures(void *p) {
      delete ((::KVDBChIoPressures*)p);
   }
   static void deleteArray_KVDBChIoPressures(void *p) {
      delete [] ((::KVDBChIoPressures*)p);
   }
   static void destruct_KVDBChIoPressures(void *p) {
      typedef ::KVDBChIoPressures current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBChIoPressures(TBuffer &buf, void *obj) {
      ((::KVDBChIoPressures*)obj)->::KVDBChIoPressures::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBChIoPressures

//______________________________________________________________________________
void KVDBTape::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBTape.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDBRecord::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVDBTape::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBTape::IsA(), kTRUE);
      KVDBRecord::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBTape::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBTape.
      TClass *R__cl = ::KVDBTape::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDBRecord::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBTape(void *p) {
      return  p ? new(p) ::KVDBTape : new ::KVDBTape;
   }
   static void *newArray_KVDBTape(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBTape[nElements] : new ::KVDBTape[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBTape(void *p) {
      delete ((::KVDBTape*)p);
   }
   static void deleteArray_KVDBTape(void *p) {
      delete [] ((::KVDBTape*)p);
   }
   static void destruct_KVDBTape(void *p) {
      typedef ::KVDBTape current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBTape(TBuffer &buf, void *obj) {
      ((::KVDBTape*)obj)->::KVDBTape::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBTape

//______________________________________________________________________________
void KVDBPeak::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBPeak.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDBParameterSet::Streamer(R__b);
      KVINDRARRMValidator::Streamer(R__b);
      R__b >> fAvecGaz;
      fDetector.Streamer(R__b);
      fSignal.Streamer(R__b);
      R__b >> fGain;
      R__b >> fEnergy;
      R__b >> fRing;
      R__b >> fModule;
      R__b.CheckByteCount(R__s, R__c, KVDBPeak::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBPeak::IsA(), kTRUE);
      KVDBParameterSet::Streamer(R__b);
      KVINDRARRMValidator::Streamer(R__b);
      R__b << fAvecGaz;
      fDetector.Streamer(R__b);
      fSignal.Streamer(R__b);
      R__b << fGain;
      R__b << fEnergy;
      R__b << fRing;
      R__b << fModule;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBPeak::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBPeak.
      TClass *R__cl = ::KVDBPeak::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAvecGaz", &fAvecGaz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetector", &fDetector);
      R__insp.InspectMember(fDetector, "fDetector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignal", &fSignal);
      R__insp.InspectMember(fSignal, "fSignal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGain", &fGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRing", &fRing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModule", &fModule);
      KVDBParameterSet::ShowMembers(R__insp);
      KVINDRARRMValidator::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBPeak(void *p) {
      return  p ? new(p) ::KVDBPeak : new ::KVDBPeak;
   }
   static void *newArray_KVDBPeak(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBPeak[nElements] : new ::KVDBPeak[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBPeak(void *p) {
      delete ((::KVDBPeak*)p);
   }
   static void deleteArray_KVDBPeak(void *p) {
      delete [] ((::KVDBPeak*)p);
   }
   static void destruct_KVDBPeak(void *p) {
      typedef ::KVDBPeak current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBPeak(TBuffer &buf, void *obj) {
      ((::KVDBPeak*)obj)->::KVDBPeak::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBPeak

//______________________________________________________________________________
void KVDBAlphaPeak::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBAlphaPeak.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDBPeak::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVDBAlphaPeak::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBAlphaPeak::IsA(), kTRUE);
      KVDBPeak::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBAlphaPeak::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBAlphaPeak.
      TClass *R__cl = ::KVDBAlphaPeak::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDBPeak::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBAlphaPeak(void *p) {
      return  p ? new(p) ::KVDBAlphaPeak : new ::KVDBAlphaPeak;
   }
   static void *newArray_KVDBAlphaPeak(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBAlphaPeak[nElements] : new ::KVDBAlphaPeak[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBAlphaPeak(void *p) {
      delete ((::KVDBAlphaPeak*)p);
   }
   static void deleteArray_KVDBAlphaPeak(void *p) {
      delete [] ((::KVDBAlphaPeak*)p);
   }
   static void destruct_KVDBAlphaPeak(void *p) {
      typedef ::KVDBAlphaPeak current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBAlphaPeak(TBuffer &buf, void *obj) {
      ((::KVDBAlphaPeak*)obj)->::KVDBAlphaPeak::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBAlphaPeak

//______________________________________________________________________________
void KVDBElasticPeak::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDBElasticPeak.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVDBPeak::Streamer(R__b);
      R__b >> fZbeam;
      R__b >> fAbeam;
      R__b.CheckByteCount(R__s, R__c, KVDBElasticPeak::IsA());
   } else {
      R__c = R__b.WriteVersion(KVDBElasticPeak::IsA(), kTRUE);
      KVDBPeak::Streamer(R__b);
      R__b << fZbeam;
      R__b << fAbeam;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVDBElasticPeak::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDBElasticPeak.
      TClass *R__cl = ::KVDBElasticPeak::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZbeam", &fZbeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbeam", &fAbeam);
      KVDBPeak::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDBElasticPeak(void *p) {
      return  p ? new(p) ::KVDBElasticPeak : new ::KVDBElasticPeak;
   }
   static void *newArray_KVDBElasticPeak(Long_t nElements, void *p) {
      return p ? new(p) ::KVDBElasticPeak[nElements] : new ::KVDBElasticPeak[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDBElasticPeak(void *p) {
      delete ((::KVDBElasticPeak*)p);
   }
   static void deleteArray_KVDBElasticPeak(void *p) {
      delete [] ((::KVDBElasticPeak*)p);
   }
   static void destruct_KVDBElasticPeak(void *p) {
      typedef ::KVDBElasticPeak current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVDBElasticPeak(TBuffer &buf, void *obj) {
      ((::KVDBElasticPeak*)obj)->::KVDBElasticPeak::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVDBElasticPeak

//______________________________________________________________________________
void KVINDRADB1::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADB1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVINDRADB::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVINDRADB1::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADB1::IsA(), kTRUE);
      KVINDRADB::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADB1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADB1.
      TClass *R__cl = ::KVINDRADB1::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRADB::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADB1(void *p) {
      return  p ? new(p) ::KVINDRADB1 : new ::KVINDRADB1;
   }
   static void *newArray_KVINDRADB1(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADB1[nElements] : new ::KVINDRADB1[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADB1(void *p) {
      delete ((::KVINDRADB1*)p);
   }
   static void deleteArray_KVINDRADB1(void *p) {
      delete [] ((::KVINDRADB1*)p);
   }
   static void destruct_KVINDRADB1(void *p) {
      typedef ::KVINDRADB1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADB1(TBuffer &buf, void *obj) {
      ((::KVINDRADB1*)obj)->::KVINDRADB1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADB1

//______________________________________________________________________________
void KVINDRADB2::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADB2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVINDRADB::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVINDRADB2::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADB2::IsA(), kTRUE);
      KVINDRADB::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADB2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADB2.
      TClass *R__cl = ::KVINDRADB2::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRADB::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADB2(void *p) {
      return  p ? new(p) ::KVINDRADB2 : new ::KVINDRADB2;
   }
   static void *newArray_KVINDRADB2(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADB2[nElements] : new ::KVINDRADB2[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADB2(void *p) {
      delete ((::KVINDRADB2*)p);
   }
   static void deleteArray_KVINDRADB2(void *p) {
      delete [] ((::KVINDRADB2*)p);
   }
   static void destruct_KVINDRADB2(void *p) {
      typedef ::KVINDRADB2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADB2(TBuffer &buf, void *obj) {
      ((::KVINDRADB2*)obj)->::KVINDRADB2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADB2

//______________________________________________________________________________
void KVINDRADB4::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADB4.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVINDRADB::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVINDRADB4::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADB4::IsA(), kTRUE);
      KVINDRADB::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADB4::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADB4.
      TClass *R__cl = ::KVINDRADB4::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRADB::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADB4(void *p) {
      return  p ? new(p) ::KVINDRADB4 : new ::KVINDRADB4;
   }
   static void *newArray_KVINDRADB4(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADB4[nElements] : new ::KVINDRADB4[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADB4(void *p) {
      delete ((::KVINDRADB4*)p);
   }
   static void deleteArray_KVINDRADB4(void *p) {
      delete [] ((::KVINDRADB4*)p);
   }
   static void destruct_KVINDRADB4(void *p) {
      typedef ::KVINDRADB4 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADB4(TBuffer &buf, void *obj) {
      ((::KVINDRADB4*)obj)->::KVINDRADB4::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADB4

//______________________________________________________________________________
void KVINDRADB_e475s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADB_e475s.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVINDRADB::Streamer(R__b);
      R__b >> fCalibrations;
      R__b.CheckByteCount(R__s, R__c, KVINDRADB_e475s::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADB_e475s::IsA(), kTRUE);
      KVINDRADB::Streamer(R__b);
      R__b << fCalibrations;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADB_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADB_e475s.
      TClass *R__cl = ::KVINDRADB_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibrations", &fCalibrations);
      KVINDRADB::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADB_e475s(void *p) {
      return  p ? new(p) ::KVINDRADB_e475s : new ::KVINDRADB_e475s;
   }
   static void *newArray_KVINDRADB_e475s(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADB_e475s[nElements] : new ::KVINDRADB_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADB_e475s(void *p) {
      delete ((::KVINDRADB_e475s*)p);
   }
   static void deleteArray_KVINDRADB_e475s(void *p) {
      delete [] ((::KVINDRADB_e475s*)p);
   }
   static void destruct_KVINDRADB_e475s(void *p) {
      typedef ::KVINDRADB_e475s current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADB_e475s(TBuffer &buf, void *obj) {
      ((::KVINDRADB_e475s*)obj)->::KVINDRADB_e475s::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADB_e475s

//______________________________________________________________________________
void KVINDRADB_e503::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADB_e503.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVINDRADB::Streamer(R__b);
      R__b >> fDeltaPed;
      R__b.CheckByteCount(R__s, R__c, KVINDRADB_e503::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADB_e503::IsA(), kTRUE);
      KVINDRADB::Streamer(R__b);
      R__b << fDeltaPed;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADB_e503::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADB_e503.
      TClass *R__cl = ::KVINDRADB_e503::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaPed", &fDeltaPed);
      KVINDRADB::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADB_e503(void *p) {
      return  p ? new(p) ::KVINDRADB_e503 : new ::KVINDRADB_e503;
   }
   static void *newArray_KVINDRADB_e503(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADB_e503[nElements] : new ::KVINDRADB_e503[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADB_e503(void *p) {
      delete ((::KVINDRADB_e503*)p);
   }
   static void deleteArray_KVINDRADB_e503(void *p) {
      delete [] ((::KVINDRADB_e503*)p);
   }
   static void destruct_KVINDRADB_e503(void *p) {
      typedef ::KVINDRADB_e503 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADB_e503(TBuffer &buf, void *obj) {
      ((::KVINDRADB_e503*)obj)->::KVINDRADB_e503::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADB_e503

//______________________________________________________________________________
void KVINDRADB_e613::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADB_e613.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVINDRADB::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, KVINDRADB_e613::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADB_e613::IsA(), kTRUE);
      KVINDRADB::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADB_e613::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADB_e613.
      TClass *R__cl = ::KVINDRADB_e613::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRADB::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADB_e613(void *p) {
      return  p ? new(p) ::KVINDRADB_e613 : new ::KVINDRADB_e613;
   }
   static void *newArray_KVINDRADB_e613(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADB_e613[nElements] : new ::KVINDRADB_e613[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADB_e613(void *p) {
      delete ((::KVINDRADB_e613*)p);
   }
   static void deleteArray_KVINDRADB_e613(void *p) {
      delete [] ((::KVINDRADB_e613*)p);
   }
   static void destruct_KVINDRADB_e613(void *p) {
      typedef ::KVINDRADB_e613 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADB_e613(TBuffer &buf, void *obj) {
      ((::KVINDRADB_e613*)obj)->::KVINDRADB_e613::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADB_e613

//______________________________________________________________________________
void KVINDRAPulserDataTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAPulserDataTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAPulserDataTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAPulserDataTree::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAPulserDataTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAPulserDataTree.
      TClass *R__cl = ::KVINDRAPulserDataTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArb", &fArb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeneDir", &fGeneDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPinDir", &fPinDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVal", &fVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTab_siz", &fTab_siz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunlist", &fRunlist);
      KVBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAPulserDataTree(void *p) {
      return  p ? new(p) ::KVINDRAPulserDataTree : new ::KVINDRAPulserDataTree;
   }
   static void *newArray_KVINDRAPulserDataTree(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRAPulserDataTree[nElements] : new ::KVINDRAPulserDataTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAPulserDataTree(void *p) {
      delete ((::KVINDRAPulserDataTree*)p);
   }
   static void deleteArray_KVINDRAPulserDataTree(void *p) {
      delete [] ((::KVINDRAPulserDataTree*)p);
   }
   static void destruct_KVINDRAPulserDataTree(void *p) {
      typedef ::KVINDRAPulserDataTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAPulserDataTree

//______________________________________________________________________________
void KVINDRAUpDater::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAUpDater.

   KVUpDater::Streamer(R__b);
}

//______________________________________________________________________________
void KVINDRAUpDater::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAUpDater.
      TClass *R__cl = ::KVINDRAUpDater::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVUpDater::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAUpDater(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRAUpDater : new ::KVINDRAUpDater;
   }
   static void *newArray_KVINDRAUpDater(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRAUpDater[nElements] : new ::KVINDRAUpDater[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAUpDater(void *p) {
      delete ((::KVINDRAUpDater*)p);
   }
   static void deleteArray_KVINDRAUpDater(void *p) {
      delete [] ((::KVINDRAUpDater*)p);
   }
   static void destruct_KVINDRAUpDater(void *p) {
      typedef ::KVINDRAUpDater current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRAUpDater(TBuffer &buf, void *obj) {
      ((::KVINDRAUpDater*)obj)->::KVINDRAUpDater::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRAUpDater

//______________________________________________________________________________
void KVINDRAUpDater_e475s::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAUpDater_e475s.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAUpDater_e475s::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAUpDater_e475s::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAUpDater_e475s::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAUpDater_e475s.
      TClass *R__cl = ::KVINDRAUpDater_e475s::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRAUpDater::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAUpDater_e475s(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRAUpDater_e475s : new ::KVINDRAUpDater_e475s;
   }
   static void *newArray_KVINDRAUpDater_e475s(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRAUpDater_e475s[nElements] : new ::KVINDRAUpDater_e475s[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAUpDater_e475s(void *p) {
      delete ((::KVINDRAUpDater_e475s*)p);
   }
   static void deleteArray_KVINDRAUpDater_e475s(void *p) {
      delete [] ((::KVINDRAUpDater_e475s*)p);
   }
   static void destruct_KVINDRAUpDater_e475s(void *p) {
      typedef ::KVINDRAUpDater_e475s current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAUpDater_e475s

//______________________________________________________________________________
void KVDB_BIC_Pressures::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVDB_BIC_Pressures.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVDB_BIC_Pressures::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVDB_BIC_Pressures::Class(),this);
   }
}

//______________________________________________________________________________
void KVDB_BIC_Pressures::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVDB_BIC_Pressures.
      TClass *R__cl = ::KVDB_BIC_Pressures::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVDBChIoPressures::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVDB_BIC_Pressures(void *p) {
      return  p ? new(p) ::KVDB_BIC_Pressures : new ::KVDB_BIC_Pressures;
   }
   static void *newArray_KVDB_BIC_Pressures(Long_t nElements, void *p) {
      return p ? new(p) ::KVDB_BIC_Pressures[nElements] : new ::KVDB_BIC_Pressures[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVDB_BIC_Pressures(void *p) {
      delete ((::KVDB_BIC_Pressures*)p);
   }
   static void deleteArray_KVDB_BIC_Pressures(void *p) {
      delete [] ((::KVDB_BIC_Pressures*)p);
   }
   static void destruct_KVDB_BIC_Pressures(void *p) {
      typedef ::KVDB_BIC_Pressures current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVDB_BIC_Pressures

//______________________________________________________________________________
void KVINDRADB_e416a::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRADB_e416a.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      KVINDRADB::Streamer(R__b);
      R__b >> fBICPressures;
      R__b.CheckByteCount(R__s, R__c, KVINDRADB_e416a::IsA());
   } else {
      R__c = R__b.WriteVersion(KVINDRADB_e416a::IsA(), kTRUE);
      KVINDRADB::Streamer(R__b);
      R__b << fBICPressures;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void KVINDRADB_e416a::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRADB_e416a.
      TClass *R__cl = ::KVINDRADB_e416a::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBICPressures", &fBICPressures);
      KVINDRADB::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRADB_e416a(void *p) {
      return  p ? new(p) ::KVINDRADB_e416a : new ::KVINDRADB_e416a;
   }
   static void *newArray_KVINDRADB_e416a(Long_t nElements, void *p) {
      return p ? new(p) ::KVINDRADB_e416a[nElements] : new ::KVINDRADB_e416a[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRADB_e416a(void *p) {
      delete ((::KVINDRADB_e416a*)p);
   }
   static void deleteArray_KVINDRADB_e416a(void *p) {
      delete [] ((::KVINDRADB_e416a*)p);
   }
   static void destruct_KVINDRADB_e416a(void *p) {
      typedef ::KVINDRADB_e416a current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_KVINDRADB_e416a(TBuffer &buf, void *obj) {
      ((::KVINDRADB_e416a*)obj)->::KVINDRADB_e416a::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::KVINDRADB_e416a

//______________________________________________________________________________
void KVINDRAUpDater_e416a::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAUpDater_e416a.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAUpDater_e416a::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAUpDater_e416a::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAUpDater_e416a::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAUpDater_e416a.
      TClass *R__cl = ::KVINDRAUpDater_e416a::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRAUpDater::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAUpDater_e416a(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRAUpDater_e416a : new ::KVINDRAUpDater_e416a;
   }
   static void *newArray_KVINDRAUpDater_e416a(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRAUpDater_e416a[nElements] : new ::KVINDRAUpDater_e416a[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAUpDater_e416a(void *p) {
      delete ((::KVINDRAUpDater_e416a*)p);
   }
   static void deleteArray_KVINDRAUpDater_e416a(void *p) {
      delete [] ((::KVINDRAUpDater_e416a*)p);
   }
   static void destruct_KVINDRAUpDater_e416a(void *p) {
      typedef ::KVINDRAUpDater_e416a current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAUpDater_e416a

//______________________________________________________________________________
void KVINDRAUpDater_e613::Streamer(TBuffer &R__b)
{
   // Stream an object of class KVINDRAUpDater_e613.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KVINDRAUpDater_e613::Class(),this);
   } else {
      R__b.WriteClassBuffer(KVINDRAUpDater_e613::Class(),this);
   }
}

//______________________________________________________________________________
void KVINDRAUpDater_e613::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KVINDRAUpDater_e613.
      TClass *R__cl = ::KVINDRAUpDater_e613::IsA();
      if (R__cl || R__insp.IsA()) { }
      KVINDRAUpDater::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KVINDRAUpDater_e613(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRAUpDater_e613 : new ::KVINDRAUpDater_e613;
   }
   static void *newArray_KVINDRAUpDater_e613(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::KVINDRAUpDater_e613[nElements] : new ::KVINDRAUpDater_e613[nElements];
   }
   // Wrapper around operator delete
   static void delete_KVINDRAUpDater_e613(void *p) {
      delete ((::KVINDRAUpDater_e613*)p);
   }
   static void deleteArray_KVINDRAUpDater_e613(void *p) {
      delete [] ((::KVINDRAUpDater_e613*)p);
   }
   static void destruct_KVINDRAUpDater_e613(void *p) {
      typedef ::KVINDRAUpDater_e613 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KVINDRAUpDater_e613

/********************************************************
* G__KVIndradb.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__KVIndradb();

extern "C" void G__set_cpp_environmentG__KVIndradb() {
  G__cpp_reset_tagtableG__KVIndradb();
}
#include <new>
extern "C" int G__cpp_dllrevG__KVIndradb() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KVDBPeak */
static int G__G__KVIndradb_219_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBPeak* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBPeak[n];
     } else {
       p = new((void*) gvp) KVDBPeak[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBPeak;
     } else {
       p = new((void*) gvp) KVDBPeak;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBPeak* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBPeak(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) KVDBPeak(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBPeak*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVDBPeak*) G__getstructoffset())->SetGas((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDBPeak*) G__getstructoffset())->SetGas();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVDBPeak*) G__getstructoffset())->WithGas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBPeak*) G__getstructoffset())->SetDetector((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBPeak*) G__getstructoffset())->GetDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBPeak*) G__getstructoffset())->SetSigType((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVDBPeak*) G__getstructoffset())->GetSigType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBPeak*) G__getstructoffset())->SetGain((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVDBPeak*) G__getstructoffset())->GetGain());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBPeak*) G__getstructoffset())->SetEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KVDBPeak*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBPeak*) G__getstructoffset())->SetRing((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const KVDBPeak*) G__getstructoffset())->GetRing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBPeak*) G__getstructoffset())->SetModule((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const KVDBPeak*) G__getstructoffset())->GetModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVDBPeak*) G__getstructoffset())->GetCentroid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVDBPeak*) G__getstructoffset())->GetError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KVDBPeak*) G__getstructoffset())->GetPeakWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBPeak::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBPeak::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBPeak::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBPeak::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBPeak*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBPeak::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBPeak::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBPeak::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_219_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBPeak::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBPeak G__TKVDBPeak;
static int G__G__KVIndradb_219_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBPeak*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBPeak*) (soff+(sizeof(KVDBPeak)*i)))->~G__TKVDBPeak();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBPeak*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBPeak*) (soff))->~G__TKVDBPeak();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDBElasticPeak */
static int G__G__KVIndradb_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBElasticPeak* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBElasticPeak[n];
     } else {
       p = new((void*) gvp) KVDBElasticPeak[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBElasticPeak;
     } else {
       p = new((void*) gvp) KVDBElasticPeak;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBElasticPeak* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBElasticPeak((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVDBElasticPeak((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBElasticPeak*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBElasticPeak*) G__getstructoffset())->SetZproj((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const KVDBElasticPeak*) G__getstructoffset())->GetZproj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBElasticPeak*) G__getstructoffset())->SetAproj((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const KVDBElasticPeak*) G__getstructoffset())->GetAproj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBElasticPeak::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBElasticPeak::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBElasticPeak::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBElasticPeak::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBElasticPeak*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBElasticPeak::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBElasticPeak::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBElasticPeak::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_220_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBElasticPeak::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBElasticPeak G__TKVDBElasticPeak;
static int G__G__KVIndradb_220_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBElasticPeak*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBElasticPeak*) (soff+(sizeof(KVDBElasticPeak)*i)))->~G__TKVDBElasticPeak();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBElasticPeak*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBElasticPeak*) (soff))->~G__TKVDBElasticPeak();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAUpDater */
static int G__G__KVIndradb_363_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAUpDater* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAUpDater[n];
     } else {
       p = new((void*) gvp) KVINDRAUpDater[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAUpDater;
     } else {
       p = new((void*) gvp) KVINDRAUpDater;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetTrigger((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetGains((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->CheckStatusOfDetectors((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetChIoPressures((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetPedestals((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetChVoltParameters((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetLitEnergyCsIParameters((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetCsIGainCorrectionParameters((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetVoltEnergyChIoSiParameters((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetPHDs((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetChIoSiPedestals((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->SetCsIPedestals((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAUpDater::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAUpDater::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAUpDater::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAUpDater::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_363_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAUpDater::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndradb_363_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRAUpDater* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRAUpDater(*(KVINDRAUpDater*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAUpDater G__TKVINDRAUpDater;
static int G__G__KVIndradb_363_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAUpDater*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAUpDater*) (soff+(sizeof(KVINDRAUpDater)*i)))->~G__TKVINDRAUpDater();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAUpDater*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAUpDater*) (soff))->~G__TKVINDRAUpDater();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndradb_363_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAUpDater* dest = (KVINDRAUpDater*) G__getstructoffset();
   *dest = *(KVINDRAUpDater*) libp->para[0].ref;
   const KVINDRAUpDater& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAUpDater_e475s */
static int G__G__KVIndradb_364_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAUpDater_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAUpDater_e475s[n];
     } else {
       p = new((void*) gvp) KVINDRAUpDater_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAUpDater_e475s;
     } else {
       p = new((void*) gvp) KVINDRAUpDater_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_364_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAUpDater_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_364_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_364_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAUpDater_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_364_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAUpDater_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_364_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_364_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_364_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAUpDater_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_364_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_364_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAUpDater_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndradb_364_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRAUpDater_e475s* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRAUpDater_e475s(*(KVINDRAUpDater_e475s*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAUpDater_e475s G__TKVINDRAUpDater_e475s;
static int G__G__KVIndradb_364_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAUpDater_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAUpDater_e475s*) (soff+(sizeof(KVINDRAUpDater_e475s)*i)))->~G__TKVINDRAUpDater_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAUpDater_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAUpDater_e475s*) (soff))->~G__TKVINDRAUpDater_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndradb_364_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAUpDater_e475s* dest = (KVINDRAUpDater_e475s*) G__getstructoffset();
   *dest = *(KVINDRAUpDater_e475s*) libp->para[0].ref;
   const KVINDRAUpDater_e475s& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDBTape */
static int G__G__KVIndradb_408_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBTape* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBTape[n];
     } else {
       p = new((void*) gvp) KVDBTape[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBTape;
     } else {
       p = new((void*) gvp) KVDBTape;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBTape* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBTape((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVDBTape((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVDBTape*) G__getstructoffset())->GetRuns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBTape*) G__getstructoffset())->AddRun((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBTape::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBTape::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBTape::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBTape::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBTape*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBTape::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBTape::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBTape::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_408_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBTape::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBTape G__TKVDBTape;
static int G__G__KVIndradb_408_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBTape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBTape*) (soff+(sizeof(KVDBTape)*i)))->~G__TKVDBTape();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBTape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBTape*) (soff))->~G__TKVDBTape();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADBRun */
static int G__G__KVIndradb_411_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADBRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADBRun[n];
     } else {
       p = new((void*) gvp) KVINDRADBRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADBRun;
     } else {
       p = new((void*) gvp) KVINDRADBRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADBRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADBRun((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) KVINDRADBRun((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADBRun((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVINDRADBRun((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADBRun*) G__getstructoffset())->GetTape());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVINDRADBRun*) G__getstructoffset())->GetTapeNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetTMpercent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVINDRADBRun*) G__getstructoffset())->GetTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVINDRADBRun*) G__getstructoffset())->GetTriggerString());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVINDRADBRun*) G__getstructoffset())->GetCahier());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVINDRADBRun*) G__getstructoffset())->GetLogbook());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADBRun*) G__getstructoffset())->SetTMpercent((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADBRun*) G__getstructoffset())->SetTrigger((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADBRun*) G__getstructoffset())->SetCahier((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADBRun*) G__getstructoffset())->SetLogbook((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetEventCrossSection((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetEventCrossSection((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetTotalCrossSection((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetTotalCrossSection((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetTempsMort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetDeadTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetNIncidentIons((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetNIncidentIons((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetGeneDirectTime((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const KVINDRADBRun*) G__getstructoffset())->GetGeneDirectTime());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVDatime& obj = ((KVINDRADBRun*) G__getstructoffset())->GetStartDatime();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KVDatime& obj = ((KVINDRADBRun*) G__getstructoffset())->GetEndDatime();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRADBRun*) G__getstructoffset())->GetMeanPulser((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADBRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADBRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADBRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADBRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADBRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADBRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADBRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADBRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_411_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADBRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADBRun G__TKVINDRADBRun;
static int G__G__KVIndradb_411_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADBRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADBRun*) (soff+(sizeof(KVINDRADBRun)*i)))->~G__TKVINDRADBRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADBRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADBRun*) (soff))->~G__TKVINDRADBRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRARunListReader */
static int G__G__KVIndradb_430_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVINDRARunListReader*) G__getstructoffset())->IsNewRunList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRARunListReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRARunListReader[n];
     } else {
       p = new((void*) gvp) KVINDRARunListReader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRARunListReader;
     } else {
       p = new((void*) gvp) KVINDRARunListReader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRARunListReader*) G__getstructoffset())->OpenRLFile((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunListReader*) G__getstructoffset())->CloseRLFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRARunListReader*) G__getstructoffset())->ReadRLLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunListReader*) G__getstructoffset())->SetRLCommentChar((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunListReader*) G__getstructoffset())->SetRLSeparatorChar((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVINDRARunListReader*) G__getstructoffset())->ReadRunList((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVINDRARunListReader*) G__getstructoffset())->ReadRunList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunListReader*) G__getstructoffset())->GoodRunLine();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRARunListReader*) G__getstructoffset())->GetLineReader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KVINDRARunListReader*) G__getstructoffset())->GetRunListTrigger((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVINDRARunListReader*) G__getstructoffset())->GetRLLineNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRARunListReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARunListReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRARunListReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRARunListReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRARunListReader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunListReader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunListReader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunListReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARunListReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARunListReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARunListReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_430_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARunListReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRARunListReader G__TKVINDRARunListReader;
static int G__G__KVIndradb_430_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRARunListReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRARunListReader*) (soff+(sizeof(KVINDRARunListReader)*i)))->~G__TKVINDRARunListReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRARunListReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRARunListReader*) (soff))->~G__TKVINDRARunListReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAPulserDataTree */
static int G__G__KVIndradb_698_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAPulserDataTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAPulserDataTree[n];
     } else {
       p = new((void*) gvp) KVINDRAPulserDataTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAPulserDataTree;
     } else {
       p = new((void*) gvp) KVINDRAPulserDataTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAPulserDataTree*) G__getstructoffset())->Build();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRAPulserDataTree*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAPulserDataTree*) G__getstructoffset())->ReadTree((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAPulserDataTree*) G__getstructoffset())->WriteTree((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KVINDRAPulserDataTree*) G__getstructoffset())->GetIndex((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAPulserDataTree*) G__getstructoffset())->SetRunList((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVINDRAPulserDataTree*) G__getstructoffset())->GetMean((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAPulserDataTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAPulserDataTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAPulserDataTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAPulserDataTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAPulserDataTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAPulserDataTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAPulserDataTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAPulserDataTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_698_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAPulserDataTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndradb_698_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRAPulserDataTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRAPulserDataTree(*(KVINDRAPulserDataTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAPulserDataTree G__TKVINDRAPulserDataTree;
static int G__G__KVIndradb_698_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAPulserDataTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAPulserDataTree*) (soff+(sizeof(KVINDRAPulserDataTree)*i)))->~G__TKVINDRAPulserDataTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAPulserDataTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAPulserDataTree*) (soff))->~G__TKVINDRAPulserDataTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndradb_698_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAPulserDataTree* dest = (KVINDRAPulserDataTree*) G__getstructoffset();
   *dest = *(KVINDRAPulserDataTree*) libp->para[0].ref;
   const KVINDRAPulserDataTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADB */
static int G__G__KVIndradb_699_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB[n];
     } else {
       p = new((void*) gvp) KVINDRADB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB;
     } else {
       p = new((void*) gvp) KVINDRADB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVINDRADB((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVINDRADB((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB*) G__getstructoffset())->AddRun((KVDBRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB*) G__getstructoffset())->AddTape((KVDBTape*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB*) G__getstructoffset())->AddSystem((KVDBSystem*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADB*) G__getstructoffset())->GetRun((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADB*) G__getstructoffset())->GetRun((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADB*) G__getstructoffset())->GetRuns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADB*) G__getstructoffset())->GetSystem((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADB*) G__getstructoffset())->GetSystems());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADB*) G__getstructoffset())->GetTape((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRADB*) G__getstructoffset())->GetTapes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((KVINDRADB*) G__getstructoffset())->GetCalibrationPeaks((Int_t) G__int(libp->para[0]), (KVDetector*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((KVINDRADB*) G__getstructoffset())->GetCalibrationPeaks((Int_t) G__int(libp->para[0]), (KVDetector*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((KVINDRADB*) G__getstructoffset())->GetCalibrationPeaks((Int_t) G__int(libp->para[0]), (KVDetector*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((KVINDRADB*) G__getstructoffset())->GetCalibrationPeaks((Int_t) G__int(libp->para[0]), (KVDetector*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((KVINDRADB*) G__getstructoffset())->GetCalibrationPeaks((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetEventCrossSection((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetEventCrossSection((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetTotalCrossSection((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetTotalCrossSection((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetEventCrossSection((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetEventCrossSection((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetTotalCrossSection((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetTotalCrossSection((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetEventCrossSection(*((KVNumberList*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetEventCrossSection(*((KVNumberList*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetTotalCrossSection(*((KVNumberList*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetTotalCrossSection(*((KVNumberList*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetEventCrossSection((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetEventCrossSection((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetTotalCrossSection((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const KVINDRADB*) G__getstructoffset())->GetTotalCrossSection((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((KVINDRADB*) G__getstructoffset())->GetTotalCrossSection((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((KVINDRADB*) G__getstructoffset())->GetTotalCrossSection((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVINDRADB*) G__getstructoffset())->WriteRunListFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB*) G__getstructoffset())->ReadNewRunList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVINDRADB*) G__getstructoffset())->WriteSystemsFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVINDRADB*) G__getstructoffset())->GetDBEnv((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const KVINDRADB*) G__getstructoffset())->GetCalibFileName((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((KVINDRADB*) G__getstructoffset())->GetPulserData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVINDRADB*) G__getstructoffset())->PrintRuns(*(KVNumberList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_699_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADB G__TKVINDRADB;
static int G__G__KVIndradb_699_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADB*) (soff+(sizeof(KVINDRADB)*i)))->~G__TKVINDRADB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADB*) (soff))->~G__TKVINDRADB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADB_e503 */
static int G__G__KVIndradb_700_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB_e503* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB_e503[n];
     } else {
       p = new((void*) gvp) KVINDRADB_e503[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB_e503;
     } else {
       p = new((void*) gvp) KVINDRADB_e503;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB_e503* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVINDRADB_e503((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVINDRADB_e503((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADB_e503::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e503::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADB_e503::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADB_e503::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB_e503*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e503::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB_e503::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e503::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_700_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB_e503::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADB_e503 G__TKVINDRADB_e503;
static int G__G__KVIndradb_700_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADB_e503*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADB_e503*) (soff+(sizeof(KVINDRADB_e503)*i)))->~G__TKVINDRADB_e503();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADB_e503*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADB_e503*) (soff))->~G__TKVINDRADB_e503();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDBChIoPressures */
static int G__G__KVIndradb_701_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBChIoPressures* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBChIoPressures[n];
     } else {
       p = new((void*) gvp) KVDBChIoPressures[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBChIoPressures;
     } else {
       p = new((void*) gvp) KVDBChIoPressures;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBChIoPressures* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBChIoPressures(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) KVDBChIoPressures(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBChIoPressures* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBChIoPressures((Float_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVDBChIoPressures((Float_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBChIoPressures* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBChIoPressures(*(KVDBChIoPressures*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) KVDBChIoPressures(*(KVDBChIoPressures*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVDBChIoPressures*) G__getstructoffset())->GetChIoPressures((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((KVDBChIoPressures*) G__getstructoffset())->GetChIoPressures());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((KVDBChIoPressures*) G__getstructoffset())->GetPressure((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((KVDBChIoPressures*) G__getstructoffset())->GetPressures());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((KVDBChIoPressures*) G__getstructoffset())->SetPressures((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((KVDBChIoPressures*) G__getstructoffset())->SetPressures((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((KVDBChIoPressures*) G__getstructoffset())->SetPressures((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((KVDBChIoPressures*) G__getstructoffset())->SetPressures((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((KVDBChIoPressures*) G__getstructoffset())->SetPressures((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVDBChIoPressures*) G__getstructoffset())->SetPressures();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBChIoPressures*) G__getstructoffset())->SetPressures((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBChIoPressures*) G__getstructoffset())->SetPressure((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBChIoPressures::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBChIoPressures::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBChIoPressures::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBChIoPressures::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBChIoPressures*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBChIoPressures::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBChIoPressures::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBChIoPressures::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_701_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBChIoPressures::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBChIoPressures G__TKVDBChIoPressures;
static int G__G__KVIndradb_701_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBChIoPressures*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBChIoPressures*) (soff+(sizeof(KVDBChIoPressures)*i)))->~G__TKVDBChIoPressures();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBChIoPressures*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBChIoPressures*) (soff))->~G__TKVDBChIoPressures();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDB_BIC_Pressures */
static int G__G__KVIndradb_702_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDB_BIC_Pressures* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDB_BIC_Pressures[n];
     } else {
       p = new((void*) gvp) KVDB_BIC_Pressures[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDB_BIC_Pressures;
     } else {
       p = new((void*) gvp) KVDB_BIC_Pressures;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDB_BIC_Pressures* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDB_BIC_Pressures((Float_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVDB_BIC_Pressures((Float_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDB_BIC_Pressures*) G__getstructoffset())->SetPressures((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDB_BIC_Pressures::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDB_BIC_Pressures::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDB_BIC_Pressures::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDB_BIC_Pressures::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDB_BIC_Pressures*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDB_BIC_Pressures::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDB_BIC_Pressures::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDB_BIC_Pressures::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_702_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDB_BIC_Pressures::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDB_BIC_Pressures G__TKVDB_BIC_Pressures;
static int G__G__KVIndradb_702_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDB_BIC_Pressures*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDB_BIC_Pressures*) (soff+(sizeof(KVDB_BIC_Pressures)*i)))->~G__TKVDB_BIC_Pressures();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDB_BIC_Pressures*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDB_BIC_Pressures*) (soff))->~G__TKVDB_BIC_Pressures();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADB_e416a */
static int G__G__KVIndradb_703_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB_e416a* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB_e416a[n];
     } else {
       p = new((void*) gvp) KVINDRADB_e416a[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB_e416a;
     } else {
       p = new((void*) gvp) KVINDRADB_e416a;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB_e416a* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVINDRADB_e416a((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVINDRADB_e416a((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB_e416a*) G__getstructoffset())->ReadBICPressures();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADB_e416a::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e416a::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADB_e416a::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADB_e416a::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB_e416a*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e416a::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB_e416a::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e416a::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_703_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB_e416a::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADB_e416a G__TKVINDRADB_e416a;
static int G__G__KVIndradb_703_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADB_e416a*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADB_e416a*) (soff+(sizeof(KVINDRADB_e416a)*i)))->~G__TKVINDRADB_e416a();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADB_e416a*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADB_e416a*) (soff))->~G__TKVINDRADB_e416a();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRARunSheetReader */
static int G__G__KVIndradb_704_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRARunSheetReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRARunSheetReader((Bool_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) KVINDRARunSheetReader((Bool_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVINDRARunSheetReader[n];
       } else {
         p = new((void*) gvp) KVINDRARunSheetReader[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new KVINDRARunSheetReader;
       } else {
         p = new((void*) gvp) KVINDRARunSheetReader;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunSheetReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->GetRunSheetDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunSheetReader*) G__getstructoffset())->SetRunSheetDir((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->GetFileFormat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunSheetReader*) G__getstructoffset())->SetFileFormat((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->GetRunSheetFileName((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((KVINDRARunSheetReader*) G__getstructoffset())->GetNumberField(*(TString*) libp->para[0].ref, (const Char_t*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((KVINDRARunSheetReader*) G__getstructoffset())->GetNumberField(*(TString*) libp->para[0].ref, (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((KVINDRARunSheetReader*) G__getstructoffset())->GetNumberField(*(TString*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 67, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->GetStringField(*(TString*) libp->para[0].ref, (const Char_t*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->GetStringField(*(TString*) libp->para[0].ref, (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->GetStringField(*(TString*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 67, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->GetDateField(*(TString*) libp->para[0].ref, (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->GetDateField(*(TString*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KVINDRARunSheetReader*) G__getstructoffset())->IsMakeTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((KVINDRARunSheetReader*) G__getstructoffset())->SetMakeTree((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((KVINDRARunSheetReader*) G__getstructoffset())->SetMakeTree();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunSheetReader*) G__getstructoffset())->CreateTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRARunSheetReader*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const KVINDRARunSheetReader*) G__getstructoffset())->StartTreeViewer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->ReadRunSheet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->ReadAllRunSheets((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->ReadAllRunSheets((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((KVINDRARunSheetReader*) G__getstructoffset())->ReadAllRunSheets());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRARunSheetReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARunSheetReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRARunSheetReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRARunSheetReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KVINDRARunSheetReader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunSheetReader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunSheetReader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRARunSheetReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARunSheetReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARunSheetReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRARunSheetReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_704_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRARunSheetReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndradb_704_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRARunSheetReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRARunSheetReader(*(KVINDRARunSheetReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunSheetReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRARunSheetReader G__TKVINDRARunSheetReader;
static int G__G__KVIndradb_704_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRARunSheetReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRARunSheetReader*) (soff+(sizeof(KVINDRARunSheetReader)*i)))->~G__TKVINDRARunSheetReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRARunSheetReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRARunSheetReader*) (soff))->~G__TKVINDRARunSheetReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndradb_704_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRARunSheetReader* dest = (KVINDRARunSheetReader*) G__getstructoffset();
   *dest = *(KVINDRARunSheetReader*) libp->para[0].ref;
   const KVINDRARunSheetReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVDBAlphaPeak */
static int G__G__KVIndradb_705_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBAlphaPeak* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBAlphaPeak[n];
     } else {
       p = new((void*) gvp) KVDBAlphaPeak[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVDBAlphaPeak;
     } else {
       p = new((void*) gvp) KVDBAlphaPeak;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVDBAlphaPeak* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVDBAlphaPeak((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVDBAlphaPeak((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVDBAlphaPeak::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBAlphaPeak::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVDBAlphaPeak::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVDBAlphaPeak::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVDBAlphaPeak*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBAlphaPeak::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBAlphaPeak::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVDBAlphaPeak::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_705_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVDBAlphaPeak::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVDBAlphaPeak G__TKVDBAlphaPeak;
static int G__G__KVIndradb_705_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVDBAlphaPeak*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVDBAlphaPeak*) (soff+(sizeof(KVDBAlphaPeak)*i)))->~G__TKVDBAlphaPeak();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVDBAlphaPeak*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVDBAlphaPeak*) (soff))->~G__TKVDBAlphaPeak();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAUpDater_e613 */
static int G__G__KVIndradb_706_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAUpDater_e613* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAUpDater_e613[n];
     } else {
       p = new((void*) gvp) KVINDRAUpDater_e613[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAUpDater_e613;
     } else {
       p = new((void*) gvp) KVINDRAUpDater_e613;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_706_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAUpDater_e613::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_706_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater_e613::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_706_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAUpDater_e613::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_706_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAUpDater_e613::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_706_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater_e613*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_706_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater_e613::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_706_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAUpDater_e613::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_706_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater_e613::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_706_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAUpDater_e613::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndradb_706_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRAUpDater_e613* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRAUpDater_e613(*(KVINDRAUpDater_e613*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAUpDater_e613 G__TKVINDRAUpDater_e613;
static int G__G__KVIndradb_706_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAUpDater_e613*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAUpDater_e613*) (soff+(sizeof(KVINDRAUpDater_e613)*i)))->~G__TKVINDRAUpDater_e613();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAUpDater_e613*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAUpDater_e613*) (soff))->~G__TKVINDRAUpDater_e613();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndradb_706_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAUpDater_e613* dest = (KVINDRAUpDater_e613*) G__getstructoffset();
   *dest = *(KVINDRAUpDater_e613*) libp->para[0].ref;
   const KVINDRAUpDater_e613& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADB4 */
static int G__G__KVIndradb_707_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB4* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB4[n];
     } else {
       p = new((void*) gvp) KVINDRADB4[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB4;
     } else {
       p = new((void*) gvp) KVINDRADB4;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB4* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVINDRADB4((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVINDRADB4((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADB4::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB4::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADB4::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADB4::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB4*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB4::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB4::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB4::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_707_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB4::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADB4 G__TKVINDRADB4;
static int G__G__KVIndradb_707_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADB4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADB4*) (soff+(sizeof(KVINDRADB4)*i)))->~G__TKVINDRADB4();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADB4*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADB4*) (soff))->~G__TKVINDRADB4();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRAUpDater_e416a */
static int G__G__KVIndradb_708_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAUpDater_e416a* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAUpDater_e416a[n];
     } else {
       p = new((void*) gvp) KVINDRAUpDater_e416a[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRAUpDater_e416a;
     } else {
       p = new((void*) gvp) KVINDRAUpDater_e416a;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_708_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRAUpDater_e416a::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_708_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater_e416a::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_708_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRAUpDater_e416a::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_708_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRAUpDater_e416a::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_708_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRAUpDater_e416a*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_708_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater_e416a::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_708_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAUpDater_e416a::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_708_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRAUpDater_e416a::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_708_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRAUpDater_e416a::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__KVIndradb_708_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KVINDRAUpDater_e416a* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KVINDRAUpDater_e416a(*(KVINDRAUpDater_e416a*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRAUpDater_e416a G__TKVINDRAUpDater_e416a;
static int G__G__KVIndradb_708_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRAUpDater_e416a*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRAUpDater_e416a*) (soff+(sizeof(KVINDRAUpDater_e416a)*i)))->~G__TKVINDRAUpDater_e416a();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRAUpDater_e416a*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRAUpDater_e416a*) (soff))->~G__TKVINDRAUpDater_e416a();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__KVIndradb_708_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRAUpDater_e416a* dest = (KVINDRAUpDater_e416a*) G__getstructoffset();
   *dest = *(KVINDRAUpDater_e416a*) libp->para[0].ref;
   const KVINDRAUpDater_e416a& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADB2 */
static int G__G__KVIndradb_709_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB2[n];
     } else {
       p = new((void*) gvp) KVINDRADB2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB2;
     } else {
       p = new((void*) gvp) KVINDRADB2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVINDRADB2((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVINDRADB2((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADB2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADB2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADB2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_709_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADB2 G__TKVINDRADB2;
static int G__G__KVIndradb_709_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADB2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADB2*) (soff+(sizeof(KVINDRADB2)*i)))->~G__TKVINDRADB2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADB2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADB2*) (soff))->~G__TKVINDRADB2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADB_e475s */
static int G__G__KVIndradb_710_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB_e475s[n];
     } else {
       p = new((void*) gvp) KVINDRADB_e475s[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB_e475s;
     } else {
       p = new((void*) gvp) KVINDRADB_e475s;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB_e475s* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVINDRADB_e475s((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVINDRADB_e475s((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB_e475s*) G__getstructoffset())->ReadCalibrations();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB_e475s*) G__getstructoffset())->ReadCalibFile(*(ifstream*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB_e475s*) G__getstructoffset())->ReadPedestalFile(*(ifstream*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADB_e475s::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e475s::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADB_e475s::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADB_e475s::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB_e475s*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e475s::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB_e475s::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e475s::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_710_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB_e475s::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADB_e475s G__TKVINDRADB_e475s;
static int G__G__KVIndradb_710_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADB_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADB_e475s*) (soff+(sizeof(KVINDRADB_e475s)*i)))->~G__TKVINDRADB_e475s();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADB_e475s*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADB_e475s*) (soff))->~G__TKVINDRADB_e475s();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADB_e613 */
static int G__G__KVIndradb_711_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB_e613* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB_e613[n];
     } else {
       p = new((void*) gvp) KVINDRADB_e613[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB_e613;
     } else {
       p = new((void*) gvp) KVINDRADB_e613;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB_e613* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVINDRADB_e613((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVINDRADB_e613((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADB_e613::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e613::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADB_e613::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADB_e613::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB_e613*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e613::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB_e613::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB_e613::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_711_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB_e613::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADB_e613 G__TKVINDRADB_e613;
static int G__G__KVIndradb_711_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADB_e613*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADB_e613*) (soff+(sizeof(KVINDRADB_e613)*i)))->~G__TKVINDRADB_e613();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADB_e613*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADB_e613*) (soff))->~G__TKVINDRADB_e613();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KVINDRADB1 */
static int G__G__KVIndradb_712_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB1[n];
     } else {
       p = new((void*) gvp) KVINDRADB1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KVINDRADB1;
     } else {
       p = new((void*) gvp) KVINDRADB1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KVINDRADB1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KVINDRADB1((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) KVINDRADB1((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KVINDRADB1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KVINDRADB1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KVINDRADB1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KVINDRADB1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KVINDRADB1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__KVIndradb_712_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KVINDRADB1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KVINDRADB1 G__TKVINDRADB1;
static int G__G__KVIndradb_712_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KVINDRADB1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KVINDRADB1*) (soff+(sizeof(KVINDRADB1)*i)))->~G__TKVINDRADB1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KVINDRADB1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KVINDRADB1*) (soff))->~G__TKVINDRADB1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KVDBPeak */

/* KVDBElasticPeak */

/* KVINDRAUpDater */

/* KVINDRAUpDater_e475s */

/* KVDBTape */

/* KVINDRADBRun */

/* KVINDRARunListReader */

/* KVINDRAPulserDataTree */

/* KVINDRADB */

/* KVINDRADB_e503 */

/* KVDBChIoPressures */

/* KVDB_BIC_Pressures */

/* KVINDRADB_e416a */

/* KVINDRARunSheetReader */

/* KVDBAlphaPeak */

/* KVINDRAUpDater_e613 */

/* KVINDRADB4 */

/* KVINDRAUpDater_e416a */

/* KVINDRADB2 */

/* KVINDRADB_e475s */

/* KVINDRADB_e613 */

/* KVINDRADB1 */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__KVIndradb {
 public:
  G__Sizep2memfuncG__KVIndradb(): p(&G__Sizep2memfuncG__KVIndradb::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__KVIndradb::*p)();
};

size_t G__get_sizep2memfuncG__KVIndradb()
{
  G__Sizep2memfuncG__KVIndradb a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__KVIndradb() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak))) {
     KVDBPeak *G__Lderived;
     G__Lderived=(KVDBPeak*)0x1000;
     {
       KVDBParameterSet *G__Lpbase=(KVDBParameterSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBParameterSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARRMValidator *G__Lpbase=(KVINDRARRMValidator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARRMValidator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak))) {
     KVDBElasticPeak *G__Lderived;
     G__Lderived=(KVDBElasticPeak*)0x1000;
     {
       KVDBPeak *G__Lpbase=(KVDBPeak*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDBParameterSet *G__Lpbase=(KVDBParameterSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBParameterSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARRMValidator *G__Lpbase=(KVINDRARRMValidator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARRMValidator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater))) {
     KVINDRAUpDater *G__Lderived;
     G__Lderived=(KVINDRAUpDater*)0x1000;
     {
       KVUpDater *G__Lpbase=(KVUpDater*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater),G__get_linked_tagnum(&G__G__KVIndradbLN_KVUpDater),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s))) {
     KVINDRAUpDater_e475s *G__Lderived;
     G__Lderived=(KVINDRAUpDater_e475s*)0x1000;
     {
       KVINDRAUpDater *G__Lpbase=(KVINDRAUpDater*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVUpDater *G__Lpbase=(KVUpDater*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s),G__get_linked_tagnum(&G__G__KVIndradbLN_KVUpDater),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape))) {
     KVDBTape *G__Lderived;
     G__Lderived=(KVDBTape*)0x1000;
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun))) {
     KVINDRADBRun *G__Lderived;
     G__Lderived=(KVINDRADBRun*)0x1000;
     {
       KVDBRun *G__Lpbase=(KVDBRun*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBRun),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree))) {
     KVINDRAPulserDataTree *G__Lderived;
     G__Lderived=(KVINDRAPulserDataTree*)0x1000;
     {
       KVBase *G__Lpbase=(KVBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree),G__get_linked_tagnum(&G__G__KVIndradbLN_KVBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB))) {
     KVINDRADB *G__Lderived;
     G__Lderived=(KVINDRADB*)0x1000;
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARunListReader *G__Lpbase=(KVINDRARunListReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503))) {
     KVINDRADB_e503 *G__Lderived;
     G__Lderived=(KVINDRADB_e503*)0x1000;
     {
       KVINDRADB *G__Lpbase=(KVINDRADB*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARunListReader *G__Lpbase=(KVINDRARunListReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures))) {
     KVDBChIoPressures *G__Lderived;
     G__Lderived=(KVDBChIoPressures*)0x1000;
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures))) {
     KVDB_BIC_Pressures *G__Lderived;
     G__Lderived=(KVDB_BIC_Pressures*)0x1000;
     {
       KVDBChIoPressures *G__Lpbase=(KVDBChIoPressures*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a))) {
     KVINDRADB_e416a *G__Lderived;
     G__Lderived=(KVINDRADB_e416a*)0x1000;
     {
       KVINDRADB *G__Lpbase=(KVINDRADB*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARunListReader *G__Lpbase=(KVINDRARunListReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak))) {
     KVDBAlphaPeak *G__Lderived;
     G__Lderived=(KVDBAlphaPeak*)0x1000;
     {
       KVDBPeak *G__Lpbase=(KVDBPeak*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDBParameterSet *G__Lpbase=(KVDBParameterSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBParameterSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVDBRecord *G__Lpbase=(KVDBRecord*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBRecord),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARRMValidator *G__Lpbase=(KVINDRARRMValidator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARRMValidator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613))) {
     KVINDRAUpDater_e613 *G__Lderived;
     G__Lderived=(KVINDRAUpDater_e613*)0x1000;
     {
       KVINDRAUpDater *G__Lpbase=(KVINDRAUpDater*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVUpDater *G__Lpbase=(KVUpDater*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613),G__get_linked_tagnum(&G__G__KVIndradbLN_KVUpDater),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4))) {
     KVINDRADB4 *G__Lderived;
     G__Lderived=(KVINDRADB4*)0x1000;
     {
       KVINDRADB *G__Lpbase=(KVINDRADB*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARunListReader *G__Lpbase=(KVINDRARunListReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a))) {
     KVINDRAUpDater_e416a *G__Lderived;
     G__Lderived=(KVINDRAUpDater_e416a*)0x1000;
     {
       KVINDRAUpDater *G__Lpbase=(KVINDRAUpDater*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVUpDater *G__Lpbase=(KVUpDater*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a),G__get_linked_tagnum(&G__G__KVIndradbLN_KVUpDater),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2))) {
     KVINDRADB2 *G__Lderived;
     G__Lderived=(KVINDRADB2*)0x1000;
     {
       KVINDRADB *G__Lpbase=(KVINDRADB*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARunListReader *G__Lpbase=(KVINDRARunListReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s))) {
     KVINDRADB_e475s *G__Lderived;
     G__Lderived=(KVINDRADB_e475s*)0x1000;
     {
       KVINDRADB *G__Lpbase=(KVINDRADB*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARunListReader *G__Lpbase=(KVINDRARunListReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613))) {
     KVINDRADB_e613 *G__Lderived;
     G__Lderived=(KVINDRADB_e613*)0x1000;
     {
       KVINDRADB *G__Lpbase=(KVINDRADB*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARunListReader *G__Lpbase=(KVINDRARunListReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1))) {
     KVINDRADB1 *G__Lderived;
     G__Lderived=(KVINDRADB1*)0x1000;
     {
       KVINDRADB *G__Lpbase=(KVINDRADB*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       KVDataBase *G__Lpbase=(KVDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1),G__get_linked_tagnum(&G__G__KVIndradbLN_KVDataBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TFolder *G__Lpbase=(TFolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1),G__get_linked_tagnum(&G__G__KVIndradbLN_TFolder),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1),G__get_linked_tagnum(&G__G__KVIndradbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1),G__get_linked_tagnum(&G__G__KVIndradbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       KVINDRARunListReader *G__Lpbase=(KVINDRARunListReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1),G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__KVIndradb() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__KVIndradbLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UChar_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_Binary_tlEunsignedsPchargR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UShort_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_Binary_tlEunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<UInt_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_Binary_tlEunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Binary_t<Long64_t>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_Binary_tlElongsPlonggR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__KVIndradbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__KVIndradbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KVDBPeak */
static void G__setup_memvarKVDBPeak(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak));
   { KVDBPeak *p; p=(KVDBPeak*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAvecGaz=",0,"=kTRUE if gaz present in chio");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TString),-1,-1,4,"fDetector=",0,"name of detector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TString),-1,-1,4,"fSignal=",0,"=signal type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fGain=",0,"gain of ampli for Si = 1.00 or 1.41");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fEnergy=",0,"theoretical energy of peak");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"fRing=",0,"ring number of Si or CsI (in coinc with ChIo if peak is in ChIo)");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"fModule=",0,"module number of Si or CsI (in coinc with ChIo if peak is in ChIo)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDBElasticPeak */
static void G__setup_memvarKVDBElasticPeak(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak));
   { KVDBElasticPeak *p; p=(KVDBElasticPeak*)0x1000; if (p) { }
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"fZbeam=",0,"Z of projectile");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"fAbeam=",0,"A of projectile");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAUpDater */
static void G__setup_memvarKVINDRAUpDater(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater));
   { KVINDRAUpDater *p; p=(KVINDRAUpDater*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAUpDater_e475s */
static void G__setup_memvarKVINDRAUpDater_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s));
   { KVINDRAUpDater_e475s *p; p=(KVINDRAUpDater_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDBTape */
static void G__setup_memvarKVDBTape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape));
   { KVDBTape *p; p=(KVDBTape*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADBRun */
static void G__setup_memvarKVINDRADBRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun));
   { KVINDRADBRun *p; p=(KVINDRADBRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDatime),-1,-1,4,"fStartEndDate=",0,"! used by GetStartDatime and GetEndDatime methods");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRARunListReader */
static void G__setup_memvarKVINDRARunListReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader));
   { KVINDRARunListReader *p; p=(KVINDRARunListReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TString),-1,-1,4,"fRunsFile=",0,"!name of file to read");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"fRunsStream=",0,"!input file stream");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVRunListLine),-1,-1,4,"fLineReader=",0,"!object used to analyse lines in file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TString),-1,-1,4,"fLine=",0,"!last line read from file");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fComment=",0,"!character placed at beginning of comment lines");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fSeparator=",0,"!character used to separate fields on each line of file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentLine=",0,"!number of line in runlist file we are currently analysing");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrigger=",0,"!last multiplicity trigger read from file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fNewRunList=",0,"!flag set when reading new (\"Version=10\") runlist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVersion=",0,"!version number of new runlist");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAPulserDataTree */
static void G__setup_memvarKVINDRAPulserDataTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree));
   { KVINDRAPulserDataTree *p; p=(KVINDRAPulserDataTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TTree),-1,-1,2,"fArb=",0,"!tree containing pulser data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVTarArchive),-1,-1,2,"fGeneDir=",0,"directory/archive containing gene data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVTarArchive),-1,-1,2,"fPinDir=",0,"directory/archive containing pin data");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRun=",0,"!run number used to build tree");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fVal=",0,"!array of floats used to fill tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTab_siz=",0,"!size of array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_THashTable),-1,-1,2,"fIndex=",0,"!associate name of branch to index in fVal");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TList),-1,-1,2,"fRunlist=",0,"!list of runs given by database");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADB */
static void G__setup_memvarKVINDRADB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB));
   { KVINDRADB *p; p=(KVINDRADB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"__ifpeaks=",0,"!ifstream for calibration peaks file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kFirstRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"kLastRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fRuns=",0,"-> table of runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fSystems=",0,"-> table of systems");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fChIoPressures=",0,"-> table of chio pressures");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fGains=",0,"(optional) table of detector gains, in case they change from run to run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fTapes=",0,"-> table of data tapes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fCsILumCorr=",0,"-> table of CsI gain corrections for total light output");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fPedestals=",0,"-> table of pedestal files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fChanVolt=",0,"-> ChIo/Si channel-volt calibration parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fVoltMeVChIoSi=",0,"-> ChIo/Si volt-energy calibration");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fLitEnerCsI=",0,"->CsI light-energy calibration for Z>1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fLitEnerCsIZ1=",0,"->CsI light-energy calibration for Z=1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fAbsentDet=",0,"(optional) Liste les detecteurs absents ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fOoODet=",0,"(optional) Liste les detecteurs hors service");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fOoOACQPar=",0,"(optional) Liste des parametres d acquisition ne marchant pas");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree),-1,-1,2,"fPulserData=",0,"! mean values of pulsers for all detectors & runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADB_e503 */
static void G__setup_memvarKVINDRADB_e503(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503));
   { KVINDRADB_e503 *p; p=(KVINDRADB_e503*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fDeltaPed=",0,"-> table of pedestal corrections");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDBChIoPressures */
static void G__setup_memvarKVDBChIoPressures(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures));
   { KVDBChIoPressures *p; p=(KVDBChIoPressures*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-2,4,"fSetNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPressures[5]=",0,"[5]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDB_BIC_Pressures */
static void G__setup_memvarKVDB_BIC_Pressures(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures));
   { KVDB_BIC_Pressures *p; p=(KVDB_BIC_Pressures*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADB_e416a */
static void G__setup_memvarKVINDRADB_e416a(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a));
   { KVINDRADB_e416a *p; p=(KVINDRADB_e416a*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,4,"fBICPressures=",0,"-> table of BIC pressures");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRARunSheetReader */
static void G__setup_memvarKVINDRARunSheetReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunSheetReader));
   { KVINDRARunSheetReader *p; p=(KVINDRARunSheetReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TString),-1,-1,4,"fRunSheetDir=",0,"full path to directory holding run sheets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TString),-1,-1,4,"fFileFormat=",0,"format string for run sheet file names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TString),-1,-1,4,"fFilePath=",0,"temporary string holding full filename of current runsheet");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMakeTree=",0,"set to kTRUE if TTree is to be filled");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TTree),-1,-1,4,"fTree=",0,"TTree can be made and filled from info");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDatime),-1,-1,4,"start_run=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDatime),-1,-1,4,"endrun=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"len_run=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"size=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"data_rate=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"acq_rate=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"trait_rate=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ctrl_rate=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rempli_dlt_pc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"temps_mort=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"run_num=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"buf_sav=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eve_sav=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eve_lus=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"buf_ctrl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eve_ctrl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rempli_dlt_blocs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"istart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iend=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fScalers[1024]=",0,"scalers for tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TString),-1,-1,4,"stat_eve=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fTIME_START=",0,"zero-time for all run start/stop times");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVDBAlphaPeak */
static void G__setup_memvarKVDBAlphaPeak(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak));
   { KVDBAlphaPeak *p; p=(KVDBAlphaPeak*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAUpDater_e613 */
static void G__setup_memvarKVINDRAUpDater_e613(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613));
   { KVINDRAUpDater_e613 *p; p=(KVINDRAUpDater_e613*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADB4 */
static void G__setup_memvarKVINDRADB4(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4));
   { KVINDRADB4 *p; p=(KVINDRADB4*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRAUpDater_e416a */
static void G__setup_memvarKVINDRAUpDater_e416a(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a));
   { KVINDRAUpDater_e416a *p; p=(KVINDRAUpDater_e416a*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADB2 */
static void G__setup_memvarKVINDRADB2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2));
   { KVINDRADB2 *p; p=(KVINDRADB2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADB_e475s */
static void G__setup_memvarKVINDRADB_e475s(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s));
   { KVINDRADB_e475s *p; p=(KVINDRADB_e475s*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTable),-1,-1,2,"fCalibrations=",0,"-> table of calibrations");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADB_e613 */
static void G__setup_memvarKVINDRADB_e613(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613));
   { KVINDRADB_e613 *p; p=(KVINDRADB_e613*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KVINDRADB1 */
static void G__setup_memvarKVINDRADB1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1));
   { KVINDRADB1 *p; p=(KVINDRADB1*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__KVIndradb() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKVDBPeak(void) {
   /* KVDBPeak */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak));
   G__memfunc_setup("KVDBPeak",680,G__G__KVIndradb_219_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBPeak",680,G__G__KVIndradb_219_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBPeak), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - detname C - 'Char_t' 10 - type "
"r - 'UShort_t' 0 - pnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVIndradb_219_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGas",583,G__G__KVIndradb_219_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' avec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WithGas",695,G__G__KVIndradb_219_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__G__KVIndradb_219_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__G__KVIndradb_219_0_7, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigType",1009,G__G__KVIndradb_219_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - sig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigType",997,G__G__KVIndradb_219_0_9, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGain",683,G__G__KVIndradb_219_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - gain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__G__KVIndradb_219_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__G__KVIndradb_219_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__KVIndradb_219_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRing",700,G__G__KVIndradb_219_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - ring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRing",688,G__G__KVIndradb_219_0_15, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModule",914,G__G__KVIndradb_219_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModule",902,G__G__KVIndradb_219_0_17, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentroid",1112,G__G__KVIndradb_219_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetError",810,G__G__KVIndradb_219_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakWidth",1185,G__G__KVIndradb_219_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndradb_219_0_21, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBPeak::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_219_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBPeak::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_219_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBPeak::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_219_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBPeak::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_219_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_219_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBPeak::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_219_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBPeak::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_219_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBPeak::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_219_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBPeak::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBPeak", 806, G__G__KVIndradb_219_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDBElasticPeak(void) {
   /* KVDBElasticPeak */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak));
   G__memfunc_setup("KVDBElasticPeak",1389,G__G__KVIndradb_220_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBElasticPeak",1389,G__G__KVIndradb_220_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBElasticPeak), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - detname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__KVIndradb_220_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZproj",833,G__G__KVIndradb_220_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZproj",821,G__G__KVIndradb_220_0_5, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAproj",808,G__G__KVIndradb_220_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAproj",796,G__G__KVIndradb_220_0_7, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndradb_220_0_8, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBElasticPeak::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_220_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBElasticPeak::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_220_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBElasticPeak::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_220_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBElasticPeak::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_220_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_220_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBElasticPeak::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_220_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBElasticPeak::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_220_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBElasticPeak::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_220_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBElasticPeak::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBElasticPeak", 1515, G__G__KVIndradb_220_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAUpDater(void) {
   /* KVINDRAUpDater */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater));
   G__memfunc_setup("KVINDRAUpDater",1220,G__G__KVIndradb_363_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIdentificationParameters",2794,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibrationParameters",2472,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrigger",1024,G__G__KVIndradb_363_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGains",798,G__G__KVIndradb_363_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckStatusOfDetectors",2244,G__G__KVIndradb_363_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibParameters",1819,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChIoPressures",1627,G__G__KVIndradb_363_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPedestals",1233,G__G__KVIndradb_363_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChVoltParameters",1936,G__G__KVIndradb_363_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLitEnergyCsIParameters",2514,G__G__KVIndradb_363_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCsIGainCorrectionParameters",3030,G__G__KVIndradb_363_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVoltEnergyChIoSiParameters",2926,G__G__KVIndradb_363_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPHDs",635,G__G__KVIndradb_363_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChIoSiPedestals",1776,G__G__KVIndradb_363_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCsIPedestals",1488,G__G__KVIndradb_363_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_363_0_18, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAUpDater::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_363_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_363_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAUpDater::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_363_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAUpDater::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_363_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_363_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_363_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAUpDater::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_363_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_363_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAUpDater::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRAUpDater", 1220, G__G__KVIndradb_363_0_30, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater), -1, 0, 1, 1, 1, 0, "u 'KVINDRAUpDater' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAUpDater", 1346, G__G__KVIndradb_363_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndradb_363_0_32, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater), -1, 1, 1, 1, 1, 0, "u 'KVINDRAUpDater' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAUpDater_e475s(void) {
   /* KVINDRAUpDater_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s));
   G__memfunc_setup("KVINDRAUpDater_e475s",1691,G__G__KVIndradb_364_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalibrationParameters",2472,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCalibParameters",1819,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPedestals",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_364_0_5, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAUpDater_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_364_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_364_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAUpDater_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_364_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAUpDater_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_364_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_364_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_364_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAUpDater_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_364_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_364_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAUpDater_e475s::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRAUpDater_e475s", 1691, G__G__KVIndradb_364_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s), -1, 0, 1, 1, 1, 0, "u 'KVINDRAUpDater_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAUpDater_e475s", 1817, G__G__KVIndradb_364_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndradb_364_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e475s), -1, 1, 1, 1, 1, 0, "u 'KVINDRAUpDater_e475s' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDBTape(void) {
   /* KVDBTape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape));
   G__memfunc_setup("KVDBTape",689,G__G__KVIndradb_408_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBTape",689,G__G__KVIndradb_408_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tape_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRuns",712,G__G__KVIndradb_408_0_3, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_KVRList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddRun",574,G__G__KVIndradb_408_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndradb_408_0_5, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBTape::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_408_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBTape::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_408_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBTape::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_408_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBTape::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_408_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_408_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBTape::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_408_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBTape::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_408_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBTape::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_408_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBTape::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBTape", 815, G__G__KVIndradb_408_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADBRun(void) {
   /* KVINDRADBRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun));
   G__memfunc_setup("KVINDRADBRun",970,G__G__KVIndradb_411_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADBRun",970,G__G__KVIndradb_411_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - number C - 'Char_t' 10 '\"INDRA Run\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTape",682,G__G__KVIndradb_411_0_3, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTapeNumber",1299,G__G__KVIndradb_411_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTMpercent",1202,G__G__KVIndradb_411_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigger",1012,G__G__KVIndradb_411_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerString",1643,G__G__KVIndradb_411_0_7, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCahier",876,G__G__KVIndradb_411_0_8, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogbook",1005,G__G__KVIndradb_411_0_9, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTMpercent",1214,G__G__KVIndradb_411_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrigger",1024,G__G__KVIndradb_411_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - trig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCahier",888,G__G__KVIndradb_411_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogbook",1017,G__G__KVIndradb_411_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventCrossSection",2049,G__G__KVIndradb_411_0_14, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - Q_apres_cible d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCrossSection",2051,G__G__KVIndradb_411_0_15, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - Q_apres_cible d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTempsMort",1227,G__G__KVIndradb_411_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeadTime",1053,G__G__KVIndradb_411_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNIncidentIons",1589,G__G__KVIndradb_411_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - Q_apres_cible d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeneDirectTime",1673,G__G__KVIndradb_411_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 '185.0' average_gene_dir_frequency", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UnsetSystem",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartDatime",1410,G__G__KVIndradb_411_0_21, 117, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDatime), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndDatime",1163,G__G__KVIndradb_411_0_22, 117, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDatime), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanPulser",1308,G__G__KVIndradb_411_0_23, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndradb_411_0_24, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADBRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_411_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADBRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_411_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADBRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_411_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADBRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_411_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_411_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADBRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_411_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADBRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_411_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADBRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_411_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADBRun::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADBRun", 1096, G__G__KVIndradb_411_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRARunListReader(void) {
   /* KVINDRARunListReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader));
   G__memfunc_setup("IsNewRunList",1207,G__G__KVIndradb_430_0_1, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRARunListReader",1843,G__G__KVIndradb_430_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunListReader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenRLFile",944,G__G__KVIndradb_430_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseRLFile",1044,G__G__KVIndradb_430_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadRLLine",930,G__G__KVIndradb_430_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRLCommentChar",1563,G__G__KVIndradb_430_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "c - 'Char_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRLSeparatorChar",1785,G__G__KVIndradb_430_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "c - 'Char_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadRunList",1101,G__G__KVIndradb_430_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoodRunLine",1094,G__G__KVIndradb_430_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLineReader",1275,G__G__KVIndradb_430_0_10, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_KVRunListLine), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunListTrigger",1733,G__G__KVIndradb_430_0_11, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - field C - 'Char_t' 10 - fmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRLLineNumber",1455,G__G__KVIndradb_430_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndradb_430_0_13, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRARunListReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_430_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARunListReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_430_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRARunListReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_430_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRARunListReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__KVIndradb_430_0_17, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__KVIndradb_430_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__KVIndradb_430_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_430_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_430_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARunListReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_430_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARunListReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_430_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARunListReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_430_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARunListReader::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRARunListReader", 1969, G__G__KVIndradb_430_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAPulserDataTree(void) {
   /* KVINDRAPulserDataTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree));
   G__memfunc_setup("GetDirectoryName",1622,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__KVIndradbLN_TString), -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateTree",996,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadData",758,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadData",758,(G__InterfaceMethod) NULL, 98, -1, G__defined_typename("UChar_t"), 0, 1, 1, 2, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenGeneData",1163,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - - u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenPinData",1075,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - - u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRAPulserDataTree",1940,G__G__KVIndradb_698_0_8, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__KVIndradb_698_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTree",688,G__G__KVIndradb_698_0_10, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTree",780,G__G__KVIndradb_698_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTree",923,G__G__KVIndradb_698_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__G__KVIndradb_698_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "C - 'Char_t' 10 - branchname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunList",1021,G__G__KVIndradb_698_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - runs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMean",673,G__G__KVIndradb_698_0_15, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndradb_698_0_16, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAPulserDataTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_698_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAPulserDataTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_698_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAPulserDataTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_698_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAPulserDataTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_698_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_698_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAPulserDataTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_698_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAPulserDataTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_698_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAPulserDataTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_698_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAPulserDataTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRAPulserDataTree", 1940, G__G__KVIndradb_698_0_28, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree), -1, 0, 1, 1, 1, 0, "u 'KVINDRAPulserDataTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAPulserDataTree", 2066, G__G__KVIndradb_698_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndradb_698_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree), -1, 1, 1, 1, 1, 0, "u 'KVINDRAPulserDataTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADB(void) {
   /* KVINDRADB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB));
   G__memfunc_setup("OpenCalibFile",1261,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 8, 
"C - 'Char_t' 10 - type u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - fs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LinkListToRunRanges",1922,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'TList' - 0 - list h - 'UInt_t' 0 - rr_number "
"h - 'UInt_t' 0 - run_ranges[][2]", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkRecordToRunRanges",2117,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'KVDBRecord' - 0 - rec h - 'UInt_t' 0 - rr_number "
"h - 'UInt_t' 0 - run_ranges[][2]", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkRecordToRunRange",2002,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'KVDBRecord' - 0 - rec h - 'UInt_t' 0 - first_run "
"h - 'UInt_t' 0 - last_run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkListToRunRange",1807,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TList' - 0 - list u 'KVNumberList' - 0 - nl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkRecordToRunRange",2002,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVDBRecord' - 0 - rec u 'KVNumberList' - 0 - nl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkRecordToRun",1509,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'KVDBRecord' - 0 - rec i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadSystemList",1437,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadGainList",1175,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadChIoPressures",1707,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadCsITotalLightGainCorrections",3201,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadChannelVolt",1498,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadVoltEnergyChIoSi",1962,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadLightEnergyCsI",1757,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - - U 'KVDBTable' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadCalibCsI",1110,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadPedestalList",1610,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadAbsentDetectors",1926,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadOoODetectors",1590,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadOoOACQParams",1474,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenCalibrationPeakFile",2299,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseCalibrationPeakFile",2399,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakFileStream",1677,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__KVIndradbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ifstream"), 1, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB",661,G__G__KVIndradb_699_0_24, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB",661,G__G__KVIndradb_699_0_25, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GoodRunLine",1094,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddRun",574,G__G__KVIndradb_699_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTape",659,G__G__KVIndradb_699_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBTape' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSystem",910,G__G__KVIndradb_699_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBSystem' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Save",399,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRun",597,G__G__KVIndradb_699_0_32, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__G__KVIndradb_699_0_33, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADBRun), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRuns",712,G__G__KVIndradb_699_0_34, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSystem",933,G__G__KVIndradb_699_0_35, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBSystem), -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - system", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSystems",1048,G__G__KVIndradb_699_0_36, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTape",682,G__G__KVIndradb_699_0_37, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBTape), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - tape", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTapes",797,G__G__KVIndradb_699_0_38, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalibrationPeaks",1916,G__G__KVIndradb_699_0_39, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_KVList), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - run U 'KVDetector' - 0 '0' detector "
"i - 'Int_t' 0 '-1' peak_type i - 'Int_t' 0 '0' signal_type "
"d - 'Double_t' 0 '-1.0' peak_energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventCrossSection",2049,G__G__KVIndradb_699_0_40, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - run d - 'Double_t' 0 - Q_apres_cible "
"d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCrossSection",2051,G__G__KVIndradb_699_0_41, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - run d - 'Double_t' 0 - Q_apres_cible "
"d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventCrossSection",2049,G__G__KVIndradb_699_0_42, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - run1 i - 'Int_t' 0 - run2 "
"d - 'Double_t' 0 - Q_apres_cible d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCrossSection",2051,G__G__KVIndradb_699_0_43, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - run1 i - 'Int_t' 0 - run2 "
"d - 'Double_t' 0 - Q_apres_cible d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventCrossSection",2049,G__G__KVIndradb_699_0_44, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"u 'KVNumberList' - 0 - runs d - 'Double_t' 0 - Q_apres_cible "
"d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCrossSection",2051,G__G__KVIndradb_699_0_45, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"u 'KVNumberList' - 0 - runs d - 'Double_t' 0 - Q_apres_cible "
"d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventCrossSection",2049,G__G__KVIndradb_699_0_46, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"C - 'Char_t' 10 - system i - 'Int_t' 0 - Mult_trigger "
"d - 'Double_t' 0 - Q_apres_cible d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCrossSection",2051,G__G__KVIndradb_699_0_47, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"C - 'Char_t' 10 - system i - 'Int_t' 0 - Mult_trigger "
"d - 'Double_t' 0 - Q_apres_cible d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCrossSection",2051,G__G__KVIndradb_699_0_48, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - events_histo d - 'Double_t' 0 - Q_apres_cible "
"d - 'Double_t' 0 '1.e-10' Coul_par_top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteRunListFile",1628,G__G__KVIndradb_699_0_49, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadNewRunList",1399,G__G__KVIndradb_699_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteSystemsFile",1667,G__G__KVIndradb_699_0_51, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDBEnv",719,G__G__KVIndradb_699_0_52, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 9, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibFileName",1532,G__G__KVIndradb_699_0_53, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 9, "C - 'Char_t' 10 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cd",199,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteObjects",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadObjects",1094,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPulserData",1301,G__G__KVIndradb_699_0_57, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAPulserDataTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRuns",949,G__G__KVIndradb_699_0_58, 121, -1, -1, 0, 1, 1, 1, 8, "u 'KVNumberList' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_699_0_59, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_699_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_699_0_61, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_699_0_62, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_699_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_699_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_699_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_699_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_699_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADB", 787, G__G__KVIndradb_699_0_71, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADB_e503(void) {
   /* KVINDRADB_e503 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPedestalCorrection",2246,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDeltaPedestal",1688,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - ifile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadVamosScalers",1615,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadVamosBrhoAndAngle",2055,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadPedestalList",1610,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVINDRADB_e503",1009,G__G__KVIndradb_700_0_7, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB_e503",1009,G__G__KVIndradb_700_0_8, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e503), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_700_0_10, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADB_e503::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_700_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e503::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_700_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADB_e503::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_700_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADB_e503::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_700_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_700_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e503::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_700_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB_e503::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_700_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e503::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_700_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB_e503::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADB_e503", 1135, G__G__KVIndradb_700_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDBChIoPressures(void) {
   /* KVDBChIoPressures */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures));
   G__memfunc_setup("InitCommon",1021,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBChIoPressures",1622,G__G__KVIndradb_701_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBChIoPressures",1622,G__G__KVIndradb_701_0_3, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures), -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - p1 f - 'Float_t' 0 - p2 "
"f - 'Float_t' 0 - p3 f - 'Float_t' 0 - p4 "
"f - 'Float_t' 0 - p5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBChIoPressures",1622,G__G__KVIndradb_701_0_4, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures), -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - pressures", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBChIoPressures",1622,G__G__KVIndradb_701_0_5, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBChIoPressures), -1, 0, 1, 1, 1, 0, "u 'KVDBChIoPressures' - 1 - chiopres", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChIoPressures",1615,G__G__KVIndradb_701_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - chio_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChIoPressures",1615,G__G__KVIndradb_701_0_7, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPressure",1145,G__G__KVIndradb_701_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - chio_number", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPressures",1260,G__G__KVIndradb_701_0_9, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPressures",1272,G__G__KVIndradb_701_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 '0' p1 f - 'Float_t' 0 '0' p2 "
"f - 'Float_t' 0 '0' p3 f - 'Float_t' 0 '0' p4 "
"f - 'Float_t' 0 '0' p5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPressures",1272,G__G__KVIndradb_701_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - pressures", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPressure",1157,G__G__KVIndradb_701_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n f - 'Float_t' 0 - pressure", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_701_0_14, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBChIoPressures::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_701_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBChIoPressures::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_701_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBChIoPressures::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_701_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBChIoPressures::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_701_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_701_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBChIoPressures::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_701_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBChIoPressures::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_701_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBChIoPressures::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_701_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBChIoPressures::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBChIoPressures", 1748, G__G__KVIndradb_701_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDB_BIC_Pressures(void) {
   /* KVDB_BIC_Pressures */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDB_BIC_Pressures",1663,G__G__KVIndradb_702_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDB_BIC_Pressures",1663,G__G__KVIndradb_702_0_3, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDB_BIC_Pressures), -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPressures",1272,G__G__KVIndradb_702_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - pressures", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_702_0_6, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDB_BIC_Pressures::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_702_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDB_BIC_Pressures::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_702_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDB_BIC_Pressures::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_702_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDB_BIC_Pressures::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_702_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_702_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDB_BIC_Pressures::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_702_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDB_BIC_Pressures::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_702_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDB_BIC_Pressures::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_702_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDB_BIC_Pressures::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDB_BIC_Pressures", 1789, G__G__KVIndradb_702_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADB_e416a(void) {
   /* KVINDRADB_e416a */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a));
   G__memfunc_setup("KVINDRADB_e416a",1109,G__G__KVIndradb_703_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB_e416a",1109,G__G__KVIndradb_703_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e416a), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBICPressures",1558,G__G__KVIndradb_703_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_703_0_5, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADB_e416a::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_703_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e416a::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_703_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADB_e416a::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_703_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADB_e416a::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_703_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_703_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e416a::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_703_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB_e416a::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_703_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e416a::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_703_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB_e416a::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADB_e416a", 1235, G__G__KVIndradb_703_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRARunSheetReader(void) {
   /* KVINDRARunSheetReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunSheetReader));
   G__memfunc_setup("init_vars",975,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRARunSheetReader",1936,G__G__KVIndradb_704_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunSheetReader), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' make_tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunSheetDir",1389,G__G__KVIndradb_704_0_3, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunSheetDir",1401,G__G__KVIndradb_704_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileFormat",1289,G__G__KVIndradb_704_0_5, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileFormat",1301,G__G__KVIndradb_704_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - fmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunSheetFileName",1871,G__G__KVIndradb_704_0_7, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 1, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberField",1389,G__G__KVIndradb_704_0_8, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'TString' - 1 - - C - 'Char_t' 10 '\":\"' delim "
"i - - 0 '1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStringField",1403,G__G__KVIndradb_704_0_9, 67, -1, G__defined_typename("Char_t"), 0, 3, 1, 1, 1, 
"u 'TString' - 1 - - C - 'Char_t' 10 '\":\"' delim "
"i - - 0 '1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDateField",1154,G__G__KVIndradb_704_0_10, 67, -1, G__defined_typename("Char_t"), 0, 2, 1, 1, 1, 
"u 'TString' - 1 - - C - 'Char_t' 10 '\":\"' delim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMakeTree",970,G__G__KVIndradb_704_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMakeTree",1082,G__G__KVIndradb_704_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' yes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateTree",996,G__G__KVIndradb_704_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__G__KVIndradb_704_0_14, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartTreeViewer",1552,G__G__KVIndradb_704_0_15, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadRunSheet",1194,G__G__KVIndradb_704_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadAllRunSheets",1590,G__G__KVIndradb_704_0_17, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '1' first i - 'Int_t' 0 '9999' last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndradb_704_0_18, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRARunSheetReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_704_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARunSheetReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_704_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRARunSheetReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_704_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRARunSheetReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__KVIndradb_704_0_22, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__KVIndradb_704_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__KVIndradb_704_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_704_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_704_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARunSheetReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_704_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARunSheetReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_704_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRARunSheetReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_704_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRARunSheetReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRARunSheetReader", 1936, G__G__KVIndradb_704_0_30, (int) ('i'), 
G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunSheetReader), -1, 0, 1, 1, 1, 0, "u 'KVINDRARunSheetReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRARunSheetReader", 2062, G__G__KVIndradb_704_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndradb_704_0_32, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRARunSheetReader), -1, 1, 1, 1, 1, 0, "u 'KVINDRARunSheetReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVDBAlphaPeak(void) {
   /* KVDBAlphaPeak */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak));
   G__memfunc_setup("KVDBAlphaPeak",1166,G__G__KVIndradb_705_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVDBAlphaPeak",1166,G__G__KVIndradb_705_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVDBAlphaPeak), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - detname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndradb_705_0_3, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVDBAlphaPeak::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_705_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBAlphaPeak::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_705_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVDBAlphaPeak::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_705_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVDBAlphaPeak::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_705_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_705_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBAlphaPeak::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_705_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBAlphaPeak::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_705_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVDBAlphaPeak::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_705_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVDBAlphaPeak::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVDBAlphaPeak", 1292, G__G__KVIndradb_705_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAUpDater_e613(void) {
   /* KVINDRAUpDater_e613 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613));
   G__memfunc_setup("KVINDRAUpDater_e613",1570,G__G__KVIndradb_706_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGains",798,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPedestals",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChVoltParameters",1936,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_706_0_6, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAUpDater_e613::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_706_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater_e613::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_706_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAUpDater_e613::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_706_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAUpDater_e613::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_706_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_706_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater_e613::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_706_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAUpDater_e613::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_706_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater_e613::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_706_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAUpDater_e613::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRAUpDater_e613", 1570, G__G__KVIndradb_706_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613), -1, 0, 1, 1, 1, 0, "u 'KVINDRAUpDater_e613' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAUpDater_e613", 1696, G__G__KVIndradb_706_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndradb_706_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e613), -1, 1, 1, 1, 1, 0, "u 'KVINDRAUpDater_e613' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADB4(void) {
   /* KVINDRADB4 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4));
   G__memfunc_setup("KVINDRADB4",713,G__G__KVIndradb_707_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB4",713,G__G__KVIndradb_707_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB4), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GoodRunLine",1094,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_707_0_5, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADB4::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_707_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB4::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_707_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADB4::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_707_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADB4::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_707_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_707_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB4::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_707_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB4::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_707_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB4::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_707_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB4::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADB4", 839, G__G__KVIndradb_707_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRAUpDater_e416a(void) {
   /* KVINDRAUpDater_e416a */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a));
   G__memfunc_setup("KVINDRAUpDater_e416a",1668,G__G__KVIndradb_708_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChIoPressures",1627,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'KVDBRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_708_0_3, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRAUpDater_e416a::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_708_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater_e416a::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_708_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRAUpDater_e416a::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_708_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRAUpDater_e416a::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_708_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_708_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater_e416a::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_708_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAUpDater_e416a::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_708_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRAUpDater_e416a::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_708_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRAUpDater_e416a::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KVINDRAUpDater_e416a", 1668, G__G__KVIndradb_708_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a), -1, 0, 1, 1, 1, 0, "u 'KVINDRAUpDater_e416a' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRAUpDater_e416a", 1794, G__G__KVIndradb_708_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__KVIndradb_708_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRAUpDater_e416a), -1, 1, 1, 1, 1, 0, "u 'KVINDRAUpDater_e416a' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADB2(void) {
   /* KVINDRADB2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2));
   G__memfunc_setup("KVINDRADB2",711,G__G__KVIndradb_709_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB2",711,G__G__KVIndradb_709_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB2), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GoodRunLine",1094,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_709_0_5, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADB2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_709_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_709_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADB2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_709_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADB2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_709_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_709_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_709_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_709_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_709_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB2::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADB2", 837, G__G__KVIndradb_709_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADB_e475s(void) {
   /* KVINDRADB_e475s */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s));
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB_e475s",1132,G__G__KVIndradb_710_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB_e475s",1132,G__G__KVIndradb_710_0_3, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e475s), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadCalibrations",1623,G__G__KVIndradb_710_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadCalibFile",1239,G__G__KVIndradb_710_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - fin u 'TString' - 0 - - "
"u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPedestalList",1610,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadPedestalFile",1582,G__G__KVIndradb_710_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - fin u 'TString' - 0 - - "
"u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__KVIndradb_710_0_9, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADB_e475s::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_710_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e475s::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_710_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADB_e475s::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_710_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADB_e475s::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_710_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_710_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e475s::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_710_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB_e475s::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_710_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e475s::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_710_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB_e475s::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADB_e475s", 1258, G__G__KVIndradb_710_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADB_e613(void) {
   /* KVINDRADB_e613 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613));
   G__memfunc_setup("ReadChIoPressures",1707,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadGainList",1175,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadPedestalList",1610,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadChannelVolt",1498,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadVoltEnergyChIoSi",1962,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("KVINDRADB_e613",1011,G__G__KVIndradb_711_0_6, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB_e613",1011,G__G__KVIndradb_711_0_7, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB_e613), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_711_0_9, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADB_e613::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_711_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e613::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_711_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADB_e613::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_711_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADB_e613::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_711_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_711_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e613::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_711_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB_e613::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_711_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB_e613::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_711_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB_e613::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADB_e613", 1137, G__G__KVIndradb_711_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKVINDRADB1(void) {
   /* KVINDRADB1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1));
   G__memfunc_setup("KVINDRADB1",710,G__G__KVIndradb_712_0_1, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KVINDRADB1",710,G__G__KVIndradb_712_0_2, 105, G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB1), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GoodRunLine",1094,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__KVIndradb_712_0_5, 85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KVINDRADB1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__KVIndradb_712_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__KVIndradb_712_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KVINDRADB1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__KVIndradb_712_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KVINDRADB1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__KVIndradbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__KVIndradb_712_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__KVIndradb_712_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__KVIndradb_712_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__KVIndradb_712_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KVINDRADB1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__KVIndradb_712_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KVINDRADB1::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~KVINDRADB1", 836, G__G__KVIndradb_712_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__KVIndradb() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)(&gIndraDB),85,0,0,G__get_linked_tagnum(&G__G__KVIndradbLN_KVINDRADB),-1,-1,1,"gIndraDB=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__KVIndradb() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__KVIndradb() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__KVIndradbLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TFolder = { "TFolder" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBRecord = { "KVDBRecord" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBTable = { "KVDBTable" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVBase = { "KVBase" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVRList = { "KVRList" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBParameterSet = { "KVDBParameterSet" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVNumberList = { "KVNumberList" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRARRMValidator = { "KVINDRARRMValidator" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBPeak = { "KVDBPeak" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBElasticPeak = { "KVDBElasticPeak" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_THashTable = { "THashTable" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVList = { "KVList" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDataBase = { "KVDataBase" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBSystem = { "KVDBSystem" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBRun = { "KVDBRun" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVUpDater = { "KVUpDater" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRAUpDater = { "KVINDRAUpDater" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRAUpDater_e475s = { "KVINDRAUpDater_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBTape = { "KVDBTape" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDatime = { "KVDatime" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRADBRun = { "KVINDRADBRun" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDetector = { "KVDetector" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_Binary_tlEunsignedsPchargR = { "Binary_t<unsigned char>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_Binary_tlEunsignedsPshortgR = { "Binary_t<unsigned short>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_Binary_tlEunsignedsPintgR = { "Binary_t<unsigned int>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_Binary_tlElongsPlonggR = { "Binary_t<long long>" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVRunListLine = { "KVRunListLine" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRARunListReader = { "KVINDRARunListReader" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVTarArchive = { "KVTarArchive" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRAPulserDataTree = { "KVINDRAPulserDataTree" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRADB = { "KVINDRADB" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRADB_e503 = { "KVINDRADB_e503" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBChIoPressures = { "KVDBChIoPressures" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDB_BIC_Pressures = { "KVDB_BIC_Pressures" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRADB_e416a = { "KVINDRADB_e416a" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRARunSheetReader = { "KVINDRARunSheetReader" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVDBAlphaPeak = { "KVDBAlphaPeak" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRAUpDater_e613 = { "KVINDRAUpDater_e613" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRADB4 = { "KVINDRADB4" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRAUpDater_e416a = { "KVINDRAUpDater_e416a" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRADB2 = { "KVINDRADB2" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRADB_e475s = { "KVINDRADB_e475s" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRADB_e613 = { "KVINDRADB_e613" , 99 , -1 };
G__linked_taginfo G__G__KVIndradbLN_KVINDRADB1 = { "KVINDRADB1" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__KVIndradb() {
  G__G__KVIndradbLN_TClass.tagnum = -1 ;
  G__G__KVIndradbLN_TBuffer.tagnum = -1 ;
  G__G__KVIndradbLN_TMemberInspector.tagnum = -1 ;
  G__G__KVIndradbLN_TObject.tagnum = -1 ;
  G__G__KVIndradbLN_TNamed.tagnum = -1 ;
  G__G__KVIndradbLN_TString.tagnum = -1 ;
  G__G__KVIndradbLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__KVIndradbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__KVIndradbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__KVIndradbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndradbLN_TList.tagnum = -1 ;
  G__G__KVIndradbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__KVIndradbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndradbLN_TFolder.tagnum = -1 ;
  G__G__KVIndradbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__KVIndradbLN_TFile.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBRecord.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBTable.tagnum = -1 ;
  G__G__KVIndradbLN_KVBase.tagnum = -1 ;
  G__G__KVIndradbLN_KVRList.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBParameterSet.tagnum = -1 ;
  G__G__KVIndradbLN_KVNumberList.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRARRMValidator.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBPeak.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBElasticPeak.tagnum = -1 ;
  G__G__KVIndradbLN_THashTable.tagnum = -1 ;
  G__G__KVIndradbLN_KVList.tagnum = -1 ;
  G__G__KVIndradbLN_KVDataBase.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__KVIndradbLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__KVIndradbLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__KVIndradbLN_TH1.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBSystem.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBRun.tagnum = -1 ;
  G__G__KVIndradbLN_KVUpDater.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRAUpDater.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRAUpDater_e475s.tagnum = -1 ;
  G__G__KVIndradbLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__KVIndradbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBTape.tagnum = -1 ;
  G__G__KVIndradbLN_KVDatime.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRADBRun.tagnum = -1 ;
  G__G__KVIndradbLN_KVDetector.tagnum = -1 ;
  G__G__KVIndradbLN_Binary_tlEunsignedsPchargR.tagnum = -1 ;
  G__G__KVIndradbLN_Binary_tlEunsignedsPshortgR.tagnum = -1 ;
  G__G__KVIndradbLN_Binary_tlEunsignedsPintgR.tagnum = -1 ;
  G__G__KVIndradbLN_Binary_tlElongsPlonggR.tagnum = -1 ;
  G__G__KVIndradbLN_TTree.tagnum = -1 ;
  G__G__KVIndradbLN_KVRunListLine.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRARunListReader.tagnum = -1 ;
  G__G__KVIndradbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__KVIndradbLN_KVTarArchive.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRAPulserDataTree.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRADB.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRADB_e503.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBChIoPressures.tagnum = -1 ;
  G__G__KVIndradbLN_KVDB_BIC_Pressures.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRADB_e416a.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRARunSheetReader.tagnum = -1 ;
  G__G__KVIndradbLN_KVDBAlphaPeak.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRAUpDater_e613.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRADB4.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRAUpDater_e416a.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRADB2.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRADB_e475s.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRADB_e613.tagnum = -1 ;
  G__G__KVIndradbLN_KVINDRADB1.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__KVIndradb() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TString);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TList);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TFolder);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBRecord);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBTable);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVBase);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVRList);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBParameterSet);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVNumberList);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRARRMValidator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBPeak),sizeof(KVDBPeak),-1,62720,"calibration points such as alpha, elastic, Brho",G__setup_memvarKVDBPeak,G__setup_memfuncKVDBPeak);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBElasticPeak),sizeof(KVDBElasticPeak),-1,62720,"elastic peaks for calibration",G__setup_memvarKVDBElasticPeak,G__setup_memfuncKVDBElasticPeak);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_THashTable);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVList);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDataBase);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBSystem);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBRun);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVUpDater);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRAUpDater),sizeof(KVINDRAUpDater),-1,1280,"Class handling setting of INDRA parameters for each run",G__setup_memvarKVINDRAUpDater,G__setup_memfuncKVINDRAUpDater);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRAUpDater_e475s),sizeof(KVINDRAUpDater_e475s),-1,263424,"Sets run parameters for INDRA_e475s dataset",G__setup_memvarKVINDRAUpDater_e475s,G__setup_memfuncKVINDRAUpDater_e475s);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBTape),sizeof(KVDBTape),-1,62720,"Class describing a DLT tape",G__setup_memvarKVDBTape,G__setup_memfuncKVDBTape);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDatime);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRADBRun),sizeof(KVINDRADBRun),-1,62720,"Class for storing information on INDRA runs",G__setup_memvarKVINDRADBRun,G__setup_memfuncKVINDRADBRun);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDetector);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_Binary_tlEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_Binary_tlEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_Binary_tlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_Binary_tlElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVRunListLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRARunListReader),sizeof(KVINDRARunListReader),-1,1280,"Utility base class for reading INDRA runlists",G__setup_memvarKVINDRARunListReader,G__setup_memfuncKVINDRARunListReader);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVTarArchive);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRAPulserDataTree),sizeof(KVINDRAPulserDataTree),-1,324864,"Handles TTree with mean pulser data for every run",G__setup_memvarKVINDRAPulserDataTree,G__setup_memfuncKVINDRAPulserDataTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRADB),sizeof(KVINDRADB),-1,62720,"DataBase of parameters for an INDRA campaign",G__setup_memvarKVINDRADB,G__setup_memfuncKVINDRADB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRADB_e503),sizeof(KVINDRADB_e503),-1,62720,"Database for e503 & e494s experiments with VAMOS",G__setup_memvarKVINDRADB_e503,G__setup_memfuncKVINDRADB_e503);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBChIoPressures),sizeof(KVDBChIoPressures),-1,63232,"Database record with INDRA ChIo pressures for a set of runs",G__setup_memvarKVDBChIoPressures,G__setup_memfuncKVDBChIoPressures);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDB_BIC_Pressures),sizeof(KVDB_BIC_Pressures),-1,324864,"Database entry for BIC pressures (experiment E416A)",G__setup_memvarKVDB_BIC_Pressures,G__setup_memfuncKVDB_BIC_Pressures);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRADB_e416a),sizeof(KVINDRADB_e416a),-1,62720,"Database for E416a experiment",G__setup_memvarKVINDRADB_e416a,G__setup_memfuncKVINDRADB_e416a);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRARunSheetReader),sizeof(KVINDRARunSheetReader),-1,1280,"For reading run sheets of INDRA experiments",G__setup_memvarKVINDRARunSheetReader,G__setup_memfuncKVINDRARunSheetReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVDBAlphaPeak),sizeof(KVDBAlphaPeak),-1,62720,"alpha peaks for calibration",G__setup_memvarKVDBAlphaPeak,G__setup_memfuncKVDBAlphaPeak);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRAUpDater_e613),sizeof(KVINDRAUpDater_e613),-1,263424,"Sets run parameters for INDRA_e613 dataset",G__setup_memvarKVINDRAUpDater_e613,G__setup_memfuncKVINDRAUpDater_e613);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRADB4),sizeof(KVINDRADB4),-1,62720,"DataBase of parameters for 4th campaign of Indra",G__setup_memvarKVINDRADB4,G__setup_memfuncKVINDRADB4);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRAUpDater_e416a),sizeof(KVINDRAUpDater_e416a),-1,263424,"Sets run parameters for INDRA_e416a dataset",G__setup_memvarKVINDRAUpDater_e416a,G__setup_memfuncKVINDRAUpDater_e416a);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRADB2),sizeof(KVINDRADB2),-1,62720,"DataBase of parameters for 2nd campaign of Indra",G__setup_memvarKVINDRADB2,G__setup_memfuncKVINDRADB2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRADB_e475s),sizeof(KVINDRADB_e475s),-1,62720,"Database for E475s experiment",G__setup_memvarKVINDRADB_e475s,G__setup_memfuncKVINDRADB_e475s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRADB_e613),sizeof(KVINDRADB_e613),-1,62720,"Child class for e613 experiment",G__setup_memvarKVINDRADB_e613,G__setup_memfuncKVINDRADB_e613);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__KVIndradbLN_KVINDRADB1),sizeof(KVINDRADB1),-1,62720,"DataBase of parameters for 1st campaign of Indra",G__setup_memvarKVINDRADB1,G__setup_memfuncKVINDRADB1);
}
extern "C" void G__cpp_setupG__KVIndradb(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__KVIndradb()");
  G__set_cpp_environmentG__KVIndradb();
  G__cpp_setup_tagtableG__KVIndradb();

  G__cpp_setup_inheritanceG__KVIndradb();

  G__cpp_setup_typetableG__KVIndradb();

  G__cpp_setup_memvarG__KVIndradb();

  G__cpp_setup_memfuncG__KVIndradb();
  G__cpp_setup_globalG__KVIndradb();
  G__cpp_setup_funcG__KVIndradb();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__KVIndradb();
  return;
}
class G__cpp_setup_initG__KVIndradb {
  public:
    G__cpp_setup_initG__KVIndradb() { G__add_setup_func("G__KVIndradb",(G__incsetup)(&G__cpp_setupG__KVIndradb)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__KVIndradb() { G__remove_setup_func("G__KVIndradb"); }
};
G__cpp_setup_initG__KVIndradb G__cpp_setup_initializerG__KVIndradb;

